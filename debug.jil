_i_first = {};
flatten_fun_j_81 = fun expr_b_12 -> (
    bool_j_16 = false;
    lst_fail_b_13 = bool_j_16;
    var_j_17 = expr_b_12;
    m_match_bool_j_19 = var_j_17 ~ any;
    m_match_bool_j_22 = var_j_17 ~ {_j_head, _j_tail, _};
    m_match_bool_j_78 = var_j_17 ~ {_j_empty, _};
    m_match_cond_j_79 = m_match_bool_j_78 ? (
            bool_j_80 = true
        ) : (
            m_match_cond_j_23 = m_match_bool_j_22 ? (
                    tildeunderscore = var_j_17._j_head;
                    tildeunderscore2 = var_j_17._j_tail;
                    flatten_fun_j_71 = fun test_fun_b_9_j_0 -> (
                        flatten_fun_j_70 = fun test_list_b_10 -> (
                            var_j_24 = test_fun_b_9_j_0;
                            var_j_25 = test_fun_b_9_j_0;
                            appl_j_26 = var_j_24 var_j_25;
                            test_fun_b_9 = appl_j_26;
                            var_j_27 = test_list_b_10;
                            m_match_bool_j_29 = var_j_27 ~ {_j_head, _j_tail, _};
                            m_match_bool_j_67 = var_j_27 ~ {_j_empty, _};
                            m_match_cond_j_68 = m_match_bool_j_67 ? (
                                    bool_j_69 = true
                                ) : (
                                    m_match_cond_j_30 = m_match_bool_j_29 ? (
                                            hd = var_j_27._j_head;
                                            tl = var_j_27._j_tail;
                                            bool_j_31 = false;
                                            fail_b_6 = bool_j_31;
                                            flatten_fun_j_47 = fun expr_b_7 -> (
                                                var_j_32 = expr_b_7;
                                                m_match_bool_j_34 = var_j_32 ~ any;
                                                m_match_bool_j_37 = var_j_32 ~ 
                                                    {tildeuntouched, _};
                                                m_match_cond_j_38 = m_match_bool_j_37 ? (
                                                        tildepoly_var_b_8 = var_j_32.tildeuntouched;
                                                        var_j_39 = tildepoly_var_b_8;
                                                        m_match_bool_j_41 = var_j_39 ~ any;
                                                        m_match_bool_j_44 = var_j_39 ~ 
                                                            {tildeticka, _};
                                                        m_match_cond_j_45 = m_match_bool_j_44 ? (
                                                                bool_j_46 = true
                                                            ) : (
                                                                m_match_cond_j_42 = m_match_bool_j_41 ? (
                                                                        
                                                                    var_j_43 = fail_b_6
                                                                    ) : (
                                                                        
                                                                    void_j_40 = 
                                                                    {}
                                                                    )
                                                            )
                                                    ) : (
                                                        m_match_cond_j_35 = m_match_bool_j_34 ? (
                                                                var_j_36 = fail_b_6
                                                            ) : (
                                                                void_j_33 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_51 = fun tildenull -> (
                                                record_j_48 = {};
                                                record_j_49 = {tildeticka = record_j_48};
                                                record_j_50 = {tildeuntouched = record_j_49});
                                            record_j_52 = {checker = flatten_fun_j_47, generator = flatten_fun_j_51};
                                            record_j_53 = {};
                                            record_j_54 = {};
                                            record_j_55 = {checker = record_j_53, generator = record_j_54};
                                            record_j_56 = {tildeactual_rec = record_j_52, tildedecl_lbls = record_j_55};
                                            proj_j_57 = record_j_56.tildeactual_rec;
                                            proj_j_58 = proj_j_57.checker;
                                            var_j_59 = hd;
                                            appl_j_60 = proj_j_58 var_j_59;
                                            elm_check_b_11 = appl_j_60;
                                            var_j_61 = elm_check_b_11;
                                            if_j_66 = var_j_61 ? (
                                                    var_j_62 = test_fun_b_9;
                                                    var_j_63 = tl;
                                                    appl_j_64 = var_j_62 var_j_63
                                                ) : (
                                                    var_j_65 = elm_check_b_11
                                                )
                                        ) : (
                                            void_j_28 = {}
                                        )
                                )));
                    test_fun_b_9_j_0_j_3 = flatten_fun_j_71;
                    var_j_72 = test_fun_b_9_j_0_j_3;
                    var_j_73 = test_fun_b_9_j_0_j_3;
                    appl_j_74 = var_j_72 var_j_73;
                    test_fun_b_9_j_2 = appl_j_74;
                    var_j_75 = test_fun_b_9_j_2;
                    var_j_76 = expr_b_12;
                    appl_j_77 = var_j_75 var_j_76
                ) : (
                    m_match_cond_j_20 = m_match_bool_j_19 ? (
                            var_j_21 = lst_fail_b_13
                        ) : (
                            void_j_18 = {}
                        )
                )
        ));
flatten_fun_j_144 = fun tildenull_j_8 -> (
    flatten_fun_j_130 = fun list_maker_b_4_j_1 -> (
        flatten_fun_j_129 = fun len_b_3 -> (
            var_j_82 = list_maker_b_4_j_1;
            var_j_83 = list_maker_b_4_j_1;
            appl_j_84 = var_j_82 var_j_83;
            list_maker_b_4 = appl_j_84;
            var_j_85 = len_b_3;
            int_j_86 = 0;
            binop_j_87 = var_j_85 == int_j_86;
            if_j_128 = binop_j_87 ? (
                    record_j_88 = {};
                    record_j_89 = {_j_empty = record_j_88}
                ) : (
                    bool_j_90 = false;
                    fail_b_0 = bool_j_90;
                    flatten_fun_j_106 = fun expr_b_1 -> (
                        var_j_91 = expr_b_1;
                        m_match_bool_j_93 = var_j_91 ~ any;
                        m_match_bool_j_96 = var_j_91 ~ {tildeuntouched, _};
                        m_match_cond_j_97 = m_match_bool_j_96 ? (
                                tildepoly_var_b_2 = var_j_91.tildeuntouched;
                                var_j_98 = tildepoly_var_b_2;
                                m_match_bool_j_100 = var_j_98 ~ any;
                                m_match_bool_j_103 = var_j_98 ~ {tildeticka, _};
                                m_match_cond_j_104 = m_match_bool_j_103 ? (
                                        bool_j_105 = true
                                    ) : (
                                        m_match_cond_j_101 = m_match_bool_j_100 ? (
                                                var_j_102 = fail_b_0
                                            ) : (
                                                void_j_99 = {}
                                            )
                                    )
                            ) : (
                                m_match_cond_j_94 = m_match_bool_j_93 ? (
                                        var_j_95 = fail_b_0
                                    ) : (
                                        void_j_92 = {}
                                    )
                            ));
                    flatten_fun_j_110 = fun tildenull_j_4 -> (
                        record_j_107 = {};
                        record_j_108 = {tildeticka = record_j_107};
                        record_j_109 = {tildeuntouched = record_j_108});
                    record_j_111 = {checker = flatten_fun_j_106, generator = flatten_fun_j_110};
                    record_j_112 = {};
                    record_j_113 = {};
                    record_j_114 = {checker = record_j_112, generator = record_j_113};
                    record_j_115 = {tildeactual_rec = record_j_111, tildedecl_lbls = record_j_114};
                    proj_j_116 = record_j_115.tildeactual_rec;
                    proj_j_117 = proj_j_116.generator;
                    int_j_118 = 0;
                    appl_j_119 = proj_j_117 int_j_118;
                    elm_b_5 = appl_j_119;
                    record_j_120 = {};
                    var_j_121 = elm_b_5;
                    var_j_122 = list_maker_b_4;
                    var_j_123 = len_b_3;
                    int_j_124 = 1;
                    binop_j_125 = var_j_123 - int_j_124;
                    appl_j_126 = var_j_122 binop_j_125;
                    record_j_127 = {_j_cons = record_j_120, _j_head = var_j_121, _j_tail = appl_j_126}
                )));
    list_maker_b_4_j_1_j_7 = flatten_fun_j_130;
    var_j_131 = list_maker_b_4_j_1_j_7;
    var_j_132 = list_maker_b_4_j_1_j_7;
    appl_j_133 = var_j_131 var_j_132;
    list_maker_b_4_j_6 = appl_j_133;
    input_j_134 = input;
    len_b_3_j_5 = input_j_134;
    int_j_135 = 0;
    var_j_136 = len_b_3_j_5;
    binop_j_137 = int_j_135 <= var_j_136;
    if_j_143 = binop_j_137 ? (
            var_j_138 = list_maker_b_4_j_6;
            var_j_139 = len_b_3_j_5;
            appl_j_140 = var_j_138 var_j_139
        ) : (
            bool_j_141 = false;
            assume_j_142 = assume bool_j_141
        ));
record_j_145 = {checker = flatten_fun_j_81, generator = flatten_fun_j_144};
record_j_146 = {};
record_j_147 = {};
record_j_148 = {checker = record_j_146, generator = record_j_147};
record_j_149 = {tildeactual_rec = record_j_145, tildedecl_lbls = record_j_148};
t = record_j_149;
flatten_fun_j_266 = fun expr_b_28 -> (
    bool_j_150 = false;
    rec_fail_b_27 = bool_j_150;
    var_j_151 = expr_b_28;
    m_match_bool_j_153 = var_j_151 ~ any;
    m_match_bool_j_156 = var_j_151 ~ {tildeactual_rec, _};
    m_match_cond_j_157 = m_match_bool_j_156 ? (
            var_j_158 = expr_b_28;
            proj_j_159 = var_j_158.tildeactual_rec;
            m_match_bool_j_161 = proj_j_159 ~ any;
            m_match_bool_j_164 = proj_j_159 ~ {add, emptyset, _};
            m_match_cond_j_165 = m_match_bool_j_164 ? (
                    add = proj_j_159.add;
                    emptyset = proj_j_159.emptyset;
                    flatten_fun_j_204 = fun expr_b_38 -> (
                        bool_j_166 = false;
                        fail_b_35 = bool_j_166;
                        flatten_fun_j_182 = fun expr_b_36 -> (
                            var_j_167 = expr_b_36;
                            m_match_bool_j_169 = var_j_167 ~ any;
                            m_match_bool_j_172 = var_j_167 ~ {tildeuntouched, _};
                            m_match_cond_j_173 = m_match_bool_j_172 ? (
                                    tildepoly_var_b_37 = var_j_167.tildeuntouched;
                                    var_j_174 = tildepoly_var_b_37;
                                    m_match_bool_j_176 = var_j_174 ~ any;
                                    m_match_bool_j_179 = var_j_174 ~ 
                                        {tildeticka, _};
                                    m_match_cond_j_180 = m_match_bool_j_179 ? (
                                            bool_j_181 = true
                                        ) : (
                                            m_match_cond_j_177 = m_match_bool_j_176 ? (
                                                    var_j_178 = fail_b_35
                                                ) : (
                                                    void_j_175 = {}
                                                )
                                        )
                                ) : (
                                    m_match_cond_j_170 = m_match_bool_j_169 ? (
                                            var_j_171 = fail_b_35
                                        ) : (
                                            void_j_168 = {}
                                        )
                                ));
                        flatten_fun_j_186 = fun tildenull_j_9 -> (
                            record_j_183 = {};
                            record_j_184 = {tildeticka = record_j_183};
                            record_j_185 = {tildeuntouched = record_j_184});
                        record_j_187 = {checker = flatten_fun_j_182, generator = flatten_fun_j_186};
                        record_j_188 = {};
                        record_j_189 = {};
                        record_j_190 = {checker = record_j_188, generator = record_j_189};
                        record_j_191 = {tildeactual_rec = record_j_187, tildedecl_lbls = record_j_190};
                        proj_j_192 = record_j_191.tildeactual_rec;
                        proj_j_193 = proj_j_192.generator;
                        int_j_194 = 0;
                        appl_j_195 = proj_j_193 int_j_194;
                        arg_assert_b_39 = appl_j_195;
                        var_j_196 = expr_b_38;
                        var_j_197 = arg_assert_b_39;
                        appl_j_198 = var_j_196 var_j_197;
                        fun_ret_b_40 = appl_j_198;
                        var_j_199 = t;
                        proj_j_200 = var_j_199.tildeactual_rec;
                        proj_j_201 = proj_j_200.checker;
                        var_j_202 = fun_ret_b_40;
                        appl_j_203 = proj_j_201 var_j_202);
                    flatten_fun_j_248 = fun tildenull_j_11 -> (
                        flatten_fun_j_247 = fun arg_assume_b_33 -> (
                            bool_j_205 = false;
                            fail_b_30 = bool_j_205;
                            flatten_fun_j_221 = fun expr_b_31 -> (
                                var_j_206 = expr_b_31;
                                m_match_bool_j_208 = var_j_206 ~ any;
                                m_match_bool_j_211 = var_j_206 ~ {tildeuntouched, _};
                                m_match_cond_j_212 = m_match_bool_j_211 ? (
                                        tildepoly_var_b_32 = var_j_206.tildeuntouched;
                                        var_j_213 = tildepoly_var_b_32;
                                        m_match_bool_j_215 = var_j_213 ~ any;
                                        m_match_bool_j_218 = var_j_213 ~ 
                                            {tildeticka, _};
                                        m_match_cond_j_219 = m_match_bool_j_218 ? (
                                                bool_j_220 = true
                                            ) : (
                                                m_match_cond_j_216 = m_match_bool_j_215 ? (
                                                        var_j_217 = fail_b_30
                                                    ) : (
                                                        void_j_214 = 
                                                            {}
                                                    )
                                            )
                                    ) : (
                                        m_match_cond_j_209 = m_match_bool_j_208 ? (
                                                var_j_210 = fail_b_30
                                            ) : (
                                                void_j_207 = {}
                                            )
                                    ));
                            flatten_fun_j_225 = fun tildenull_j_10 -> (
                                record_j_222 = {};
                                record_j_223 = {tildeticka = record_j_222};
                                record_j_224 = {tildeuntouched = record_j_223});
                            record_j_226 = {checker = flatten_fun_j_221, generator = flatten_fun_j_225};
                            record_j_227 = {};
                            record_j_228 = {};
                            record_j_229 = {checker = record_j_227, generator = record_j_228};
                            record_j_230 = {tildeactual_rec = record_j_226, tildedecl_lbls = record_j_229};
                            proj_j_231 = record_j_230.tildeactual_rec;
                            proj_j_232 = proj_j_231.checker;
                            var_j_233 = arg_assume_b_33;
                            appl_j_234 = proj_j_232 var_j_233;
                            if_j_246 = appl_j_234 ? (
                                    var_j_235 = t;
                                    proj_j_236 = var_j_235.tildeactual_rec;
                                    proj_j_237 = proj_j_236.generator;
                                    int_j_238 = 0;
                                    appl_j_239 = proj_j_237 int_j_238
                                ) : (
                                    bool_j_240 = false;
                                    fail_b_34 = bool_j_240;
                                    var_j_241 = fail_b_34;
                                    assert_pred_j_242 = var_j_241;
                                    assert_res_j_243 = assert_pred_j_242 ? (
                                            assert_res_true_j_244 = {}
                                        ) : (
                                            ab_j_245 = abort
                                        )
                                )));
                    record_j_249 = {checker = flatten_fun_j_204, generator = flatten_fun_j_248};
                    record_j_250 = {};
                    record_j_251 = {};
                    record_j_252 = {checker = record_j_250, generator = record_j_251};
                    record_j_253 = {tildeactual_rec = record_j_249, tildedecl_lbls = record_j_252};
                    proj_j_254 = record_j_253.tildeactual_rec;
                    proj_j_255 = proj_j_254.checker;
                    var_j_256 = add;
                    appl_j_257 = proj_j_255 var_j_256;
                    lbl_check_b_29 = appl_j_257;
                    var_j_258 = lbl_check_b_29;
                    if_j_265 = var_j_258 ? (
                            var_j_259 = t;
                            proj_j_260 = var_j_259.tildeactual_rec;
                            proj_j_261 = proj_j_260.checker;
                            var_j_262 = emptyset;
                            appl_j_263 = proj_j_261 var_j_262
                        ) : (
                            var_j_264 = lbl_check_b_29
                        )
                ) : (
                    m_match_cond_j_162 = m_match_bool_j_161 ? (
                            var_j_163 = rec_fail_b_27
                        ) : (
                            void_j_160 = {}
                        )
                )
        ) : (
            m_match_cond_j_154 = m_match_bool_j_153 ? (
                    var_j_155 = rec_fail_b_27
                ) : (
                    void_j_152 = {}
                )
        ));
flatten_fun_j_371 = fun tildenull_j_15 -> (
    var_j_267 = t;
    proj_j_268 = var_j_267.tildeactual_rec;
    proj_j_269 = proj_j_268.generator;
    int_j_270 = 0;
    appl_j_271 = proj_j_269 int_j_270;
    emptyset_b_15 = appl_j_271;
    flatten_fun_j_310 = fun expr_b_24 -> (
        bool_j_272 = false;
        fail_b_21 = bool_j_272;
        flatten_fun_j_288 = fun expr_b_22 -> (
            var_j_273 = expr_b_22;
            m_match_bool_j_275 = var_j_273 ~ any;
            m_match_bool_j_278 = var_j_273 ~ {tildeuntouched, _};
            m_match_cond_j_279 = m_match_bool_j_278 ? (
                    tildepoly_var_b_23 = var_j_273.tildeuntouched;
                    var_j_280 = tildepoly_var_b_23;
                    m_match_bool_j_282 = var_j_280 ~ any;
                    m_match_bool_j_285 = var_j_280 ~ {tildeticka, _};
                    m_match_cond_j_286 = m_match_bool_j_285 ? (
                            bool_j_287 = true
                        ) : (
                            m_match_cond_j_283 = m_match_bool_j_282 ? (
                                    var_j_284 = fail_b_21
                                ) : (
                                    void_j_281 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_276 = m_match_bool_j_275 ? (
                            var_j_277 = fail_b_21
                        ) : (
                            void_j_274 = {}
                        )
                ));
        flatten_fun_j_292 = fun tildenull_j_12 -> (
            record_j_289 = {};
            record_j_290 = {tildeticka = record_j_289};
            record_j_291 = {tildeuntouched = record_j_290});
        record_j_293 = {checker = flatten_fun_j_288, generator = flatten_fun_j_292};
        record_j_294 = {};
        record_j_295 = {};
        record_j_296 = {checker = record_j_294, generator = record_j_295};
        record_j_297 = {tildeactual_rec = record_j_293, tildedecl_lbls = record_j_296};
        proj_j_298 = record_j_297.tildeactual_rec;
        proj_j_299 = proj_j_298.generator;
        int_j_300 = 0;
        appl_j_301 = proj_j_299 int_j_300;
        arg_assert_b_25 = appl_j_301;
        var_j_302 = expr_b_24;
        var_j_303 = arg_assert_b_25;
        appl_j_304 = var_j_302 var_j_303;
        fun_ret_b_26 = appl_j_304;
        var_j_305 = t;
        proj_j_306 = var_j_305.tildeactual_rec;
        proj_j_307 = proj_j_306.checker;
        var_j_308 = fun_ret_b_26;
        appl_j_309 = proj_j_307 var_j_308);
    flatten_fun_j_354 = fun tildenull_j_14 -> (
        flatten_fun_j_353 = fun arg_assume_b_19 -> (
            bool_j_311 = false;
            fail_b_16 = bool_j_311;
            flatten_fun_j_327 = fun expr_b_17 -> (
                var_j_312 = expr_b_17;
                m_match_bool_j_314 = var_j_312 ~ any;
                m_match_bool_j_317 = var_j_312 ~ {tildeuntouched, _};
                m_match_cond_j_318 = m_match_bool_j_317 ? (
                        tildepoly_var_b_18 = var_j_312.tildeuntouched;
                        var_j_319 = tildepoly_var_b_18;
                        m_match_bool_j_321 = var_j_319 ~ any;
                        m_match_bool_j_324 = var_j_319 ~ {tildeticka, _};
                        m_match_cond_j_325 = m_match_bool_j_324 ? (
                                bool_j_326 = true
                            ) : (
                                m_match_cond_j_322 = m_match_bool_j_321 ? (
                                        var_j_323 = fail_b_16
                                    ) : (
                                        void_j_320 = {}
                                    )
                            )
                    ) : (
                        m_match_cond_j_315 = m_match_bool_j_314 ? (
                                var_j_316 = fail_b_16
                            ) : (
                                void_j_313 = {}
                            )
                    ));
            flatten_fun_j_331 = fun tildenull_j_13 -> (
                record_j_328 = {};
                record_j_329 = {tildeticka = record_j_328};
                record_j_330 = {tildeuntouched = record_j_329});
            record_j_332 = {checker = flatten_fun_j_327, generator = flatten_fun_j_331};
            record_j_333 = {};
            record_j_334 = {};
            record_j_335 = {checker = record_j_333, generator = record_j_334};
            record_j_336 = {tildeactual_rec = record_j_332, tildedecl_lbls = record_j_335};
            proj_j_337 = record_j_336.tildeactual_rec;
            proj_j_338 = proj_j_337.checker;
            var_j_339 = arg_assume_b_19;
            appl_j_340 = proj_j_338 var_j_339;
            if_j_352 = appl_j_340 ? (
                    var_j_341 = t;
                    proj_j_342 = var_j_341.tildeactual_rec;
                    proj_j_343 = proj_j_342.generator;
                    int_j_344 = 0;
                    appl_j_345 = proj_j_343 int_j_344
                ) : (
                    bool_j_346 = false;
                    fail_b_20 = bool_j_346;
                    var_j_347 = fail_b_20;
                    assert_pred_j_348 = var_j_347;
                    assert_res_j_349 = assert_pred_j_348 ? (
                            assert_res_true_j_350 = {}
                        ) : (
                            ab_j_351 = abort
                        )
                )));
    record_j_355 = {checker = flatten_fun_j_310, generator = flatten_fun_j_354};
    record_j_356 = {};
    record_j_357 = {};
    record_j_358 = {checker = record_j_356, generator = record_j_357};
    record_j_359 = {tildeactual_rec = record_j_355, tildedecl_lbls = record_j_358};
    proj_j_360 = record_j_359.tildeactual_rec;
    proj_j_361 = proj_j_360.generator;
    int_j_362 = 0;
    appl_j_363 = proj_j_361 int_j_362;
    add_b_14 = appl_j_363;
    var_j_364 = add_b_14;
    var_j_365 = emptyset_b_15;
    record_j_366 = {add = var_j_364, emptyset = var_j_365};
    record_j_367 = {};
    record_j_368 = {};
    record_j_369 = {add = record_j_367, emptyset = record_j_368};
    record_j_370 = {tildeactual_rec = record_j_366, tildedecl_lbls = record_j_369});
record_j_372 = {checker = flatten_fun_j_266, generator = flatten_fun_j_371};
record_j_373 = {};
record_j_374 = {};
record_j_375 = {checker = record_j_373, generator = record_j_374};
record_j_376 = {tildeactual_rec = record_j_372, tildedecl_lbls = record_j_375};
set_m_type = record_j_376;
flatten_fun_j_379 = fun x -> (
    record_j_377 = {};
    record_j_378 = {_j_empty = record_j_377});
record_j_380 = {};
record_j_381 = {_j_empty = record_j_380};
record_j_382 = {add = flatten_fun_j_379, emptyset = record_j_381};
record_j_383 = {};
record_j_384 = {};
record_j_385 = {add = record_j_383, emptyset = record_j_384};
record_j_386 = {tildeactual_rec = record_j_382, tildedecl_lbls = record_j_385};
set_m = record_j_386;
check_type = set_m;
proj_j_389 = set_m_type.tildeactual_rec;
proj_j_390 = proj_j_389.checker;
appl_j_392 = proj_j_390 check_type;
if_j_400 = appl_j_392 ? (
        var_j_394 = check_type
    ) : (
        error_var_j_395 = appl_j_392;
        assert_pred_j_396 = error_var_j_395;
        assert_res_j_397 = assert_pred_j_396 ? (
                assert_res_true_j_398 = {}
            ) : (
                ab_j_399 = abort
            )
    );