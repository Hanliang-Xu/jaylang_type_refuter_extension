# EXPECT-WELL-FORMED
# EXPECT-EVALUATE
# EXPECT-ANALYSIS-STACK-IS 1ddpa
# EXPECT-ANALYSIS-LOOKUP-FROM-END r {int}
# EXPECT-ANALYSIS-NO-INCONSISTENCIES

# (define (tak x y z)
#   (if (not (< y x))
#       z
#       (tak (tak (- x 1) y z)
#            (tak (- y 1) z x)
#            (tak (- z 1) x y))))
#
# (tak 32 15 8)

ycombinator = fun ycombinatorf -> (
  ycombinatorfx1 = fun ycombinatorx1 -> (
    ycombinatorfv1 = fun ycombinatorv1 -> (
      ycombinatorxx1 = ycombinatorx1 ycombinatorx1;
      ycombinatorfv1r = ycombinatorxx1 ycombinatorv1;
    );
    ycombinatorfx1r = ycombinatorf ycombinatorfv1;
  );

  ycombinatorfx2 = fun ycombinatorx2 -> (
    ycombinatorfv2 = fun ycombinatorv2 -> (
      ycombinatorxx2 = ycombinatorx2 ycombinatorx2;
      ycombinatorfv2r = ycombinatorxx2 ycombinatorv2;
    );
    ycombinatorfx2r = ycombinatorf ycombinatorfv2;
  );

  ycombinatorr = ycombinatorfx1 ycombinatorfx2;
);

true = {};
false = 0;

not = fun notp -> (
  notr = notp ~ {}
              ? fun notm -> (
                notmr = false;
              )
              : fun nota -> (
                notar = true;
              );
);

one = 1;
thirtytwo = 32;
fifteen = 15;
eight = 8;

takp = fun takr -> (
  takpr = fun x -> (
    xr = fun y -> (
      yr = fun z -> (
        yx = y < x;
        notyx = not yx;
        zr = notyx ~ {}
                   ? fun notyxm -> (
                     notyxmr = z;
                   )
                   : fun notyxa -> (
                     x1 = x - 1;
                     takx1 = takr x1;
                     takx1y = takx1 y;
                     takx1yz = takx1y z;
                     y1 = y - 1;
                     taky1 = takr y1;
                     taky1z = taky1 z;
                     taky1zx = taky1z x;
                     z1 = z - 1;
                     takz1 = takr z1;
                     takz1x = takz1 x;
                     takz1xy = takz1x y;
                     taktakx1yz = tak takx1yz;
                     taktakx1yztaky1zx = taktakx1yz taky1zx;
                     taktakx1yztaky1zxtakz1xy = taktakx1yztaky1zx takz1xy;
                   );
      );
    );
  );
);

tak = ycombinator takp;

tak32 = tak thirtytwo;
tak3215 = tak32 fifteen;
r = tak3215 eight; # => 15
