# EXPECT-WELL-FORMED
# EXPECT-EVALUATE
# EXPECT-ANALYSIS-STACK-IS 1ddpa
# EXPECT-ANALYSIS-LOOKUP-FROM-END lp13 {int}
# EXPECT-ANALYSIS-NO-INCONSISTENCIES

# (letrec ((lp1 (lambda (i x)
#                 (if (= 0 i)
#                     x
#                     (letrec ((lp2 (lambda (j f y)
#                                     (if (= 0 j)
#                                         (lp1 (- i 1) y)
#                                         (lp2 (- j 1) f (f y))))))
#                       (lp2 10 (lambda (n) (+ n i)) x))))))
#   (lp1 10 0))

ycombinator = fun ycombinatorf -> (
  ycombinatorfx1 = fun ycombinatorx1 -> (
    ycombinatorfv1 = fun ycombinatorv1 -> (
      ycombinatorxx1 = ycombinatorx1 ycombinatorx1;
      ycombinatorfv1r = ycombinatorxx1 ycombinatorv1;
    );
    ycombinatorfx1r = ycombinatorf ycombinatorfv1;
  );

  ycombinatorfx2 = fun ycombinatorx2 -> (
    ycombinatorfv2 = fun ycombinatorv2 -> (
      ycombinatorxx2 = ycombinatorx2 ycombinatorx2;
      ycombinatorfv2r = ycombinatorxx2 ycombinatorv2;
    );
    ycombinatorfx2r = ycombinatorf ycombinatorfv2;
  );

  ycombinatorr = ycombinatorfx1 ycombinatorfx2;
);

zero = 0;
one = 1;
ten = 10;

lp1p = fun lp1r -> (
  fun i -> (
    lp1r = fun x -> (
      izero = zero = i;
      xr = izero ~ {}
           ? fun izerom -> (
             izeromr = x;
           )
           : fun izeroa -> (
             lp2p = fun lp2r -> (
               lp2r = fun j -> (
                 jr = fun f -> (
                   fr = fun y -> (
                     jzero = zero = j;
                     yr = jzero ~ {}
                                ? fun yrm -> (
                                  i1 = i - one;
                                  yrm1 = lp1r i1;
                                  yrm2 = yrm1 y;
                                )
                                : fun yra -> (
                                  j1 = j - one;
                                  fy = f y;
                                  yrm1 = lp1r j1;
                                  yrm2 = yrm1 f;
                                  yrm3 = yrm2 f y;
                                );
                   );
                 );
               );
             );
             lp2 = ycombinator lp2p;
             fn = fun n -> (
               ni = n + i;
             );
             lp22 = lp2 ten;
             lp23 = lp22 fn;
             lp24 = lp23 x;
           );
    );
  );
);

lp1 = ycombinator lp1p;

lp12 = lp1 ten;
lp13 = lp12 zero; # => 550
