pred = fun n -> (
  nr = fun rf -> (
    rfr = fun rx -> (
      gh = fun g -> (
        ghr = fun h -> (
          grf = g rf;
          hr = h grf;
        );
      );

      ignoredf = fun ignored -> (
        ignoredr = rx;
      );

      idf = fun id -> (
        idr = id;
      );

      ngh = n gh;
      nghignored = ngh ignoredf;
      rxr = nghignored idf;
    );
  );
);

church1 = fun f1 -> (
  f1r = fun x1 -> (
    x1r = f1 x1;
  );
);

church0huh = fun z -> (
  zxf = fun zx -> (
    zxr = false;
  );
  zxtrue = true;
  zzx = z zxf;
  zr = zzx zxtrue;
);

churchEqualHuh = fun e1 -> (
  churchEqualHuh2 = churchEqualHuh;
  e1r = fun e2 -> (
    church0huhe1 = church0huh e1;
    e2r = church0huhe1 ~ true ? fun church0huhe1truem -> (
      church0huhe1truemr = church0huh e2;
    ) : fun church0huhe1trueam -> (
      church0huhe1trueamr = church0huhe1 ~ false ? fun church0huhe1falsematch -> (
        church0huhe2 = church0huh e2;
        church0huhe1amr = church0huhe2 ~ true ? fun church0huhe2truematch -> (
          church0huhe2truematchr = false;
        ) : fun church0huhe2trueantimatch -> (
          church0huhe2trueantimatchr = church0huhe2 ~ false ? fun church0huhe2falsematch -> (
            prede1 = pred e1;
            prede2 = pred e2;
            churchEqualHuh2prede1 = churchEqualHuh2 prede1;
            church0huhe2falsematchr = churchEqualHuh2prede1 prede2;
          ) : fun church0huhe2falseantimatch -> (
            church0huhe2falseantimatchBogusFunction = {};
            church0huhe2falseantimatchr = church0huhe2falseantimatchBogusFunction church0huhe2falseantimatchBogusFunction;
          );
        );
      ) : fun church0huhe1falseantimatch -> (
        church0huhe1falseantimatchBogusFunction = {};
        church0huhe1falseantimatchr = church0huhe1falseantimatchBogusFunction church0huhe1falseantimatchBogusFunction;
      );
    );
  );
);

churchEqualHuhchurch1 = churchEqualHuh church1;
churchEqualHuhchurch1church1 = churchEqualHuhchurch1 church1;
