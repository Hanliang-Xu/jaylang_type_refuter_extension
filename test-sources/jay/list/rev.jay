# Std.List - start

let rec append l1 l2 =
  match l1 with
  | x :: xs -> x :: (append xs l2)
  | [] -> l2
  end
in

let rec rev lst =
  match lst with
  | x :: xs -> append (rev xs) [x]
  | [] -> lst
  end
in

let hd l = 
  match l with
  | x :: xs -> x
  | [] -> (0 0)
  end
in

# Std.List - end

let x1 = input in
let s = rev [101,102,103] in

if hd s == x1 then
  let target = 1 in 1
else
  0