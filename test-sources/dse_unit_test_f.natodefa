# EXPECT-WELL-FORMED
# EXPECT-INPUT-SEQUENCES-REACH target [ 43, 2 ]
# EXPECT-REQUIRED-INPUT-SEQUENCE-GENERATION-STEPS 250000
## It takes 102399 steps to compute when i at line 25 is 1.
## Changing first input value 43 (the value for m), the step number remains the same.
## However, increasing i at line 25 will make the steps to generate the first input grow very fast (over 1000000 for i = 2).

#void f(int m, int n) {
#    int i, a, sum=0;
#    for (i=0;i<6;i++) {
#        a = n%2;
#        if (a) sum += a+1;
#        n/=2;
#    }
#}
#    while (1) {
#        if (sum==0 && m==43) failure();
#    }
#}
##

let assert_false = 0
in let f m n =
  let rec f_loop n sum i =
    if i == 1
    then sum
    else (
        let a = n % 2
        in let sum_next = 
                sum + (if a == 0 then 0 else (a + 1))
        in let n_next = n / 2
        in f_loop n_next sum_next (i+1)
    )
  in let loop_result = f_loop n 0 0
  in let rec f_while c =
    if (loop_result == 0) and (m == 43)
    then let target = assert_false in target
    else (
      if c
      then f_while c
      else 0
    )
  in f_while true

in let m = input
in let n = input
in f m n

