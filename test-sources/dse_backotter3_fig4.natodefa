# EXPECT-WELL-FORMED
# EXPECT-INPUT-SEQUENCES-REACH target [ 2 ]
## `main_loop` is a heavy task to generate a result.
## If we remove the main_loop and check i at line 24 for 1, it can generate [2] in 91505 steps.

##
#void f(int m, int n) {
#    int i, a, sum=0;
#    for (i=0;i<6;i++) {
#        a = n%2;
#        if (a) sum += a+1;
#        n/=2;
#    }
#}
#    while (1) {
#        if (sum==0 && m==7) failure();
#    }
#}
##
let assert_false = false
in let f m n =
  let rec f_loop n sum i =
  #if i == 6
  if i == 1
  then sum
  else (
      let a = n % 2
      in let sum_next = 
              sum + (if a == 0 then 0 else (a + 1))
      in f_loop (n/2) sum_next (i+1)
  )
  in let loop_result = f_loop n 0 0
  in let rec f_while c =
    if (loop_result == 0) and (m == 7)
    then let target = assert_false in target
    else (
      if c
      then f_while c
      else 0
    )
  in f_while true

in let m = 7
in let n = input
##
# for (i=0;i<1000;i++)
#     if (m == i) f(m, n);
##
in let rec main_loop i = 
    if i == 2
    then 0
    else (
      let ignored = 
        if m == i
        then f m n
        else 0
      in main_loop (i+1)
    )
in main_loop 0