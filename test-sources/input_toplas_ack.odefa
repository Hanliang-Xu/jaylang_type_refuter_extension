# EXPECT-WELL-FORMED
# EXPECT-INPUT-SEQUENCES-REACH r_m_0 [ 0 ]

ack = fun ack_clone -> (
  dummy_0 = 0;
  r_2 = fun m -> (
    dummy_1 = 0;
    r_0 = fun n -> (
      dummy_2 = 0;
      zero = 0;
      is_m_zero = m == zero;
      variable4 = is_m_zero ?
      (
        dummy_3 = 0;
        one_c = 1;
        r_m_0 = n + one_c;
      ) : (
        dummy_4 = 0;
        zero_b = 0;
        is_n_zero = n == zero_b;
        r_n_0 = is_n_zero ?
        (
          dummy_5 = 0;
          one_b = 1;
          variable23 = m - one_b;
          ack_1 = ack_clone ack_clone;
          i_0 = ack_1 variable23;
          r_3 = i_0 one_b;
        ) : (
          dummy_6 = 0;
          one = 1;
          m_pred = m - one;
          n_pred = n - one;
          ack_2 = ack_clone ack_clone;
          ack_m_ = ack_2 m;
          ack_m_np = ack_m_ n_pred;

          ack_3 = ack_clone ack_clone;
          ack_mp_ = ack_3 m_pred;
          r_4 = ack_mp_ ack_m_np;
        );    
      );
    );
  );
);

# x1 = 0;
x1 = input;
x2 = 0;
ack_4 = ack ack;
ack_x1_ = ack_4 x1;
result = ack_x1_ x2;
