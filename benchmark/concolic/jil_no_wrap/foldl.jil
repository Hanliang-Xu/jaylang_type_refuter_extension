i_first = {};
flatten_fun_j_59 = fun foldl_j_2 -> (
    flatten_fun_j_58 = fun f -> (
        flatten_fun_j_57 = fun z -> (
            flatten_fun_j_56 = fun xs -> (
                var_j_27 = foldl_j_2;
                var_j_28 = foldl_j_2;
                appl_j_29 = var_j_27 var_j_28;
                foldl = appl_j_29;
                bool_j_30 = false;
                fail_b_109 = bool_j_30;
                var_j_31 = xs;
                m_match_bool_j_33 = var_j_31 ~ {j_head, j_tail, _};
                m_match_bool_j_46 = var_j_31 ~ {j_empty, _};
                m_match_bool_j_49 = var_j_31 ~ {bj_untouched, _};
                m_match_cond_j_50 = m_match_bool_j_49 ? (
                        var_j_51 = fail_b_109;
                        assert_pred_j_52 = var_j_51;
                        assert_res_j_53 = assert_pred_j_52 ? (
                                assert_res_true_j_54 = {}
                            ) : (
                                ab_j_55 = abort
                            )
                    ) : (
                        m_match_cond_j_47 = m_match_bool_j_46 ? (
                                var_j_48 = z
                            ) : (
                                m_match_cond_j_34 = m_match_bool_j_33 ? (
                                        x = var_j_31.j_head;
                                        rest = var_j_31.j_tail;
                                        var_j_35 = foldl;
                                        var_j_36 = f;
                                        m_i_445 = var_j_35 ~ fun;
                                        appl_j_37 = m_i_445 ? (
                                                c_appl_i_446 = var_j_35 var_j_36
                                            ) : (
                                                ab_i_447 = abort
                                            );
                                        var_j_38 = f;
                                        var_j_39 = z;
                                        m_i_448 = var_j_38 ~ fun;
                                        appl_j_40 = m_i_448 ? (
                                                c_appl_i_449 = var_j_38 var_j_39
                                            ) : (
                                                ab_i_450 = abort
                                            );
                                        var_j_41 = x;
                                        m_i_451 = appl_j_40 ~ fun;
                                        appl_j_42 = m_i_451 ? (
                                                c_appl_i_452 = appl_j_40 var_j_41
                                            ) : (
                                                ab_i_453 = abort
                                            );
                                        m_i_454 = appl_j_37 ~ fun;
                                        appl_j_43 = m_i_454 ? (
                                                c_appl_i_455 = appl_j_37 appl_j_42
                                            ) : (
                                                ab_i_456 = abort
                                            );
                                        var_j_44 = rest;
                                        m_i_457 = appl_j_43 ~ fun;
                                        appl_j_45 = m_i_457 ? (
                                                c_appl_i_458 = appl_j_43 var_j_44
                                            ) : (
                                                ab_i_459 = abort
                                            )
                                    ) : (
                                        ab_j_32 = abort
                                    )
                            )
                    )))));
appl_j_62 = flatten_fun_j_59 flatten_fun_j_59;
flatten_fun_j_171 = fun expr_b_58 -> (
    bool_j_63 = false;
    fail_b_31 = bool_j_63;
    flatten_fun_j_72 = fun expr_b_30 -> (
        var_j_64 = expr_b_30;
        m_match_bool_j_66 = var_j_64 ~ any;
        m_match_bool_j_69 = var_j_64 ~ int;
        m_match_cond_j_70 = m_match_bool_j_69 ? (
                bool_j_71 = true
            ) : (
                m_match_cond_j_67 = m_match_bool_j_66 ? (
                        var_j_68 = fail_b_31
                    ) : (
                        void_j_65 = {}
                    )
            ));
    flatten_fun_j_74 = fun bj_null -> (
        input_j_73 = input);
    record_j_75 = {checker = flatten_fun_j_72, generator = flatten_fun_j_74};
    proj_j_76 = record_j_75.generator;
    int_j_77 = 0;
    appl_j_78 = proj_j_76 int_j_77;
    arg_assert_b_59 = appl_j_78;
    var_j_79 = expr_b_58;
    var_j_80 = arg_assert_b_59;
    appl_j_81 = var_j_79 var_j_80;
    fun_ret_b_60 = appl_j_81;
    flatten_fun_j_121 = fun expr_b_47 -> (
        bool_j_82 = false;
        fail_b_42 = bool_j_82;
        flatten_fun_j_91 = fun expr_b_41 -> (
            var_j_83 = expr_b_41;
            m_match_bool_j_85 = var_j_83 ~ any;
            m_match_bool_j_88 = var_j_83 ~ bool;
            m_match_cond_j_89 = m_match_bool_j_88 ? (
                    bool_j_90 = true
                ) : (
                    m_match_cond_j_86 = m_match_bool_j_85 ? (
                            var_j_87 = fail_b_42
                        ) : (
                            void_j_84 = {}
                        )
                ));
        flatten_fun_j_95 = fun bj_null_j_3 -> (
            int_j_92 = 0;
            input_j_93 = input;
            m_bl_i_460 = int_j_92 ~ int;
            m_br_i_461 = input_j_93 ~ int;
            m_b_i_462 = m_bl_i_460 and m_br_i_461;
            binop_j_94 = m_b_i_462 ? (
                    c_binop_i_463 = int_j_92 <= input_j_93
                ) : (
                    ab_i_464 = abort
                ));
        record_j_96 = {checker = flatten_fun_j_91, generator = flatten_fun_j_95};
        proj_j_97 = record_j_96.generator;
        int_j_98 = 0;
        appl_j_99 = proj_j_97 int_j_98;
        arg_assert_b_48 = appl_j_99;
        var_j_100 = expr_b_47;
        var_j_101 = arg_assert_b_48;
        appl_j_102 = var_j_100 var_j_101;
        fun_ret_b_49 = appl_j_102;
        bool_j_103 = false;
        fail_b_45 = bool_j_103;
        flatten_fun_j_112 = fun expr_b_44 -> (
            var_j_104 = expr_b_44;
            m_match_bool_j_106 = var_j_104 ~ any;
            m_match_bool_j_109 = var_j_104 ~ bool;
            m_match_cond_j_110 = m_match_bool_j_109 ? (
                    bool_j_111 = true
                ) : (
                    m_match_cond_j_107 = m_match_bool_j_106 ? (
                            var_j_108 = fail_b_45
                        ) : (
                            void_j_105 = {}
                        )
                ));
        flatten_fun_j_116 = fun bj_null_j_4 -> (
            int_j_113 = 0;
            input_j_114 = input;
            m_bl_i_465 = int_j_113 ~ int;
            m_br_i_466 = input_j_114 ~ int;
            m_b_i_467 = m_bl_i_465 and m_br_i_466;
            binop_j_115 = m_b_i_467 ? (
                    c_binop_i_468 = int_j_113 <= input_j_114
                ) : (
                    ab_i_469 = abort
                ));
        record_j_117 = {checker = flatten_fun_j_112, generator = flatten_fun_j_116};
        proj_j_118 = record_j_117.checker;
        var_j_119 = fun_ret_b_49;
        appl_j_120 = proj_j_118 var_j_119);
    flatten_fun_j_166 = fun bj_null_j_7 -> (
        flatten_fun_j_165 = fun arg_assume_b_39 -> (
            bool_j_122 = false;
            fail_b_34 = bool_j_122;
            flatten_fun_j_131 = fun expr_b_33 -> (
                var_j_123 = expr_b_33;
                m_match_bool_j_125 = var_j_123 ~ any;
                m_match_bool_j_128 = var_j_123 ~ bool;
                m_match_cond_j_129 = m_match_bool_j_128 ? (
                        bool_j_130 = true
                    ) : (
                        m_match_cond_j_126 = m_match_bool_j_125 ? (
                                var_j_127 = fail_b_34
                            ) : (
                                void_j_124 = {}
                            )
                    ));
            flatten_fun_j_135 = fun bj_null_j_5 -> (
                int_j_132 = 0;
                input_j_133 = input;
                m_bl_i_470 = int_j_132 ~ int;
                m_br_i_471 = input_j_133 ~ int;
                m_b_i_472 = m_bl_i_470 and m_br_i_471;
                binop_j_134 = m_b_i_472 ? (
                        c_binop_i_473 = int_j_132 <= input_j_133
                    ) : (
                        ab_i_474 = abort
                    ));
            record_j_136 = {checker = flatten_fun_j_131, generator = flatten_fun_j_135};
            proj_j_137 = record_j_136.checker;
            var_j_138 = arg_assume_b_39;
            appl_j_139 = proj_j_137 var_j_138;
            if_j_164 = appl_j_139 ? (
                    bool_j_140 = false;
                    fail_b_37 = bool_j_140;
                    flatten_fun_j_149 = fun expr_b_36 -> (
                        var_j_141 = expr_b_36;
                        m_match_bool_j_143 = var_j_141 ~ any;
                        m_match_bool_j_146 = var_j_141 ~ bool;
                        m_match_cond_j_147 = m_match_bool_j_146 ? (
                                bool_j_148 = true
                            ) : (
                                m_match_cond_j_144 = m_match_bool_j_143 ? (
                                        var_j_145 = fail_b_37
                                    ) : (
                                        void_j_142 = {}
                                    )
                            ));
                    flatten_fun_j_153 = fun bj_null_j_6 -> (
                        int_j_150 = 0;
                        input_j_151 = input;
                        m_bl_i_475 = int_j_150 ~ int;
                        m_br_i_476 = input_j_151 ~ int;
                        m_b_i_477 = m_bl_i_475 and m_br_i_476;
                        binop_j_152 = m_b_i_477 ? (
                                c_binop_i_478 = int_j_150 <= input_j_151
                            ) : (
                                ab_i_479 = abort
                            ));
                    record_j_154 = {checker = flatten_fun_j_149, generator = flatten_fun_j_153};
                    proj_j_155 = record_j_154.generator;
                    int_j_156 = 0;
                    appl_j_157 = proj_j_155 int_j_156
                ) : (
                    bool_j_158 = false;
                    fail_b_40 = bool_j_158;
                    var_j_159 = fail_b_40;
                    assert_pred_j_160 = var_j_159;
                    assert_res_j_161 = assert_pred_j_160 ? (
                            assert_res_true_j_162 = {}
                        ) : (
                            ab_j_163 = abort
                        )
                )));
    record_j_167 = {checker = flatten_fun_j_121, generator = flatten_fun_j_166};
    proj_j_168 = record_j_167.checker;
    var_j_169 = fun_ret_b_60;
    appl_j_170 = proj_j_168 var_j_169);
flatten_fun_j_285 = fun bj_null_j_14 -> (
    flatten_fun_j_284 = fun arg_assume_b_28 -> (
        bool_j_172 = false;
        fail_b_1 = bool_j_172;
        flatten_fun_j_181 = fun expr_b_0 -> (
            var_j_173 = expr_b_0;
            m_match_bool_j_175 = var_j_173 ~ any;
            m_match_bool_j_178 = var_j_173 ~ int;
            m_match_cond_j_179 = m_match_bool_j_178 ? (
                    bool_j_180 = true
                ) : (
                    m_match_cond_j_176 = m_match_bool_j_175 ? (
                            var_j_177 = fail_b_1
                        ) : (
                            void_j_174 = {}
                        )
                ));
        flatten_fun_j_183 = fun bj_null_j_8 -> (
            input_j_182 = input);
        record_j_184 = {checker = flatten_fun_j_181, generator = flatten_fun_j_183};
        proj_j_185 = record_j_184.checker;
        var_j_186 = arg_assume_b_28;
        appl_j_187 = proj_j_185 var_j_186;
        if_j_283 = appl_j_187 ? (
                flatten_fun_j_227 = fun expr_b_17 -> (
                    bool_j_188 = false;
                    fail_b_12 = bool_j_188;
                    flatten_fun_j_197 = fun expr_b_11 -> (
                        var_j_189 = expr_b_11;
                        m_match_bool_j_191 = var_j_189 ~ any;
                        m_match_bool_j_194 = var_j_189 ~ bool;
                        m_match_cond_j_195 = m_match_bool_j_194 ? (
                                bool_j_196 = true
                            ) : (
                                m_match_cond_j_192 = m_match_bool_j_191 ? (
                                        var_j_193 = fail_b_12
                                    ) : (
                                        void_j_190 = {}
                                    )
                            ));
                    flatten_fun_j_201 = fun bj_null_j_9 -> (
                        int_j_198 = 0;
                        input_j_199 = input;
                        m_bl_i_480 = int_j_198 ~ int;
                        m_br_i_481 = input_j_199 ~ int;
                        m_b_i_482 = m_bl_i_480 and m_br_i_481;
                        binop_j_200 = m_b_i_482 ? (
                                c_binop_i_483 = int_j_198 <= input_j_199
                            ) : (
                                ab_i_484 = abort
                            ));
                    record_j_202 = {checker = flatten_fun_j_197, generator = flatten_fun_j_201};
                    proj_j_203 = record_j_202.generator;
                    int_j_204 = 0;
                    appl_j_205 = proj_j_203 int_j_204;
                    arg_assert_b_18 = appl_j_205;
                    var_j_206 = expr_b_17;
                    var_j_207 = arg_assert_b_18;
                    appl_j_208 = var_j_206 var_j_207;
                    fun_ret_b_19 = appl_j_208;
                    bool_j_209 = false;
                    fail_b_15 = bool_j_209;
                    flatten_fun_j_218 = fun expr_b_14 -> (
                        var_j_210 = expr_b_14;
                        m_match_bool_j_212 = var_j_210 ~ any;
                        m_match_bool_j_215 = var_j_210 ~ bool;
                        m_match_cond_j_216 = m_match_bool_j_215 ? (
                                bool_j_217 = true
                            ) : (
                                m_match_cond_j_213 = m_match_bool_j_212 ? (
                                        var_j_214 = fail_b_15
                                    ) : (
                                        void_j_211 = {}
                                    )
                            ));
                    flatten_fun_j_222 = fun bj_null_j_10 -> (
                        int_j_219 = 0;
                        input_j_220 = input;
                        m_bl_i_485 = int_j_219 ~ int;
                        m_br_i_486 = input_j_220 ~ int;
                        m_b_i_487 = m_bl_i_485 and m_br_i_486;
                        binop_j_221 = m_b_i_487 ? (
                                c_binop_i_488 = int_j_219 <= input_j_220
                            ) : (
                                ab_i_489 = abort
                            ));
                    record_j_223 = {checker = flatten_fun_j_218, generator = flatten_fun_j_222};
                    proj_j_224 = record_j_223.checker;
                    var_j_225 = fun_ret_b_19;
                    appl_j_226 = proj_j_224 var_j_225);
                flatten_fun_j_272 = fun bj_null_j_13 -> (
                    flatten_fun_j_271 = fun arg_assume_b_9 -> (
                        bool_j_228 = false;
                        fail_b_4 = bool_j_228;
                        flatten_fun_j_237 = fun expr_b_3 -> (
                            var_j_229 = expr_b_3;
                            m_match_bool_j_231 = var_j_229 ~ any;
                            m_match_bool_j_234 = var_j_229 ~ bool;
                            m_match_cond_j_235 = m_match_bool_j_234 ? (
                                    bool_j_236 = true
                                ) : (
                                    m_match_cond_j_232 = m_match_bool_j_231 ? (
                                            var_j_233 = fail_b_4
                                        ) : (
                                            void_j_230 = {}
                                        )
                                ));
                        flatten_fun_j_241 = fun bj_null_j_11 -> (
                            int_j_238 = 0;
                            input_j_239 = input;
                            m_bl_i_490 = int_j_238 ~ int;
                            m_br_i_491 = input_j_239 ~ int;
                            m_b_i_492 = m_bl_i_490 and m_br_i_491;
                            binop_j_240 = m_b_i_492 ? (
                                    c_binop_i_493 = int_j_238 <= input_j_239
                                ) : (
                                    ab_i_494 = abort
                                ));
                        record_j_242 = {checker = flatten_fun_j_237, generator = flatten_fun_j_241};
                        proj_j_243 = record_j_242.checker;
                        var_j_244 = arg_assume_b_9;
                        appl_j_245 = proj_j_243 var_j_244;
                        if_j_270 = appl_j_245 ? (
                                bool_j_246 = false;
                                fail_b_7 = bool_j_246;
                                flatten_fun_j_255 = fun expr_b_6 -> (
                                    var_j_247 = expr_b_6;
                                    m_match_bool_j_249 = var_j_247 ~ any;
                                    m_match_bool_j_252 = var_j_247 ~ bool;
                                    m_match_cond_j_253 = m_match_bool_j_252 ? (
                                            bool_j_254 = true
                                        ) : (
                                            m_match_cond_j_250 = m_match_bool_j_249 ? (
                                                    var_j_251 = fail_b_7
                                                ) : (
                                                    void_j_248 = {}
                                                )
                                        ));
                                flatten_fun_j_259 = fun bj_null_j_12 -> (
                                    int_j_256 = 0;
                                    input_j_257 = input;
                                    m_bl_i_495 = int_j_256 ~ int;
                                    m_br_i_496 = input_j_257 ~ int;
                                    m_b_i_497 = m_bl_i_495 and m_br_i_496;
                                    binop_j_258 = m_b_i_497 ? (
                                            c_binop_i_498 = int_j_256 <= input_j_257
                                        ) : (
                                            ab_i_499 = abort
                                        ));
                                record_j_260 = {checker = flatten_fun_j_255, generator = flatten_fun_j_259};
                                proj_j_261 = record_j_260.generator;
                                int_j_262 = 0;
                                appl_j_263 = proj_j_261 int_j_262
                            ) : (
                                bool_j_264 = false;
                                fail_b_10 = bool_j_264;
                                var_j_265 = fail_b_10;
                                assert_pred_j_266 = var_j_265;
                                assert_res_j_267 = assert_pred_j_266 ? (
                                        assert_res_true_j_268 = {}
                                    ) : (
                                        ab_j_269 = abort
                                    )
                            )));
                record_j_273 = {checker = flatten_fun_j_227, generator = flatten_fun_j_272};
                proj_j_274 = record_j_273.generator;
                int_j_275 = 0;
                appl_j_276 = proj_j_274 int_j_275
            ) : (
                bool_j_277 = false;
                fail_b_29 = bool_j_277;
                var_j_278 = fail_b_29;
                assert_pred_j_279 = var_j_278;
                assert_res_j_280 = assert_pred_j_279 ? (
                        assert_res_true_j_281 = {}
                    ) : (
                        ab_j_282 = abort
                    )
            )));
record_j_286 = {checker = flatten_fun_j_171, generator = flatten_fun_j_285};
proj_j_287 = record_j_286.generator;
int_j_288 = 0;
appl_j_289 = proj_j_287 int_j_288;
f_b_116 = appl_j_289;
bool_j_290 = false;
fail_b_92 = bool_j_290;
flatten_fun_j_299 = fun expr_b_91 -> (
    var_j_291 = expr_b_91;
    m_match_bool_j_293 = var_j_291 ~ any;
    m_match_bool_j_296 = var_j_291 ~ bool;
    m_match_cond_j_297 = m_match_bool_j_296 ? (
            bool_j_298 = true
        ) : (
            m_match_cond_j_294 = m_match_bool_j_293 ? (
                    var_j_295 = fail_b_92
                ) : (
                    void_j_292 = {}
                )
        ));
flatten_fun_j_303 = fun bj_null_j_15 -> (
    int_j_300 = 0;
    input_j_301 = input;
    m_bl_i_500 = int_j_300 ~ int;
    m_br_i_501 = input_j_301 ~ int;
    m_b_i_502 = m_bl_i_500 and m_br_i_501;
    binop_j_302 = m_b_i_502 ? (
            c_binop_i_503 = int_j_300 <= input_j_301
        ) : (
            ab_i_504 = abort
        ));
record_j_304 = {checker = flatten_fun_j_299, generator = flatten_fun_j_303};
proj_j_305 = record_j_304.generator;
int_j_306 = 0;
appl_j_307 = proj_j_305 int_j_306;
z_b_115 = appl_j_307;
flatten_fun_j_359 = fun expr_b_106 -> (
    bool_j_308 = false;
    lst_fail_b_107 = bool_j_308;
    var_j_309 = expr_b_106;
    m_match_bool_j_311 = var_j_309 ~ any;
    m_match_bool_j_314 = var_j_309 ~ {j_head, j_tail, _};
    m_match_bool_j_356 = var_j_309 ~ {j_empty, _};
    m_match_cond_j_357 = m_match_bool_j_356 ? (
            bool_j_358 = true
        ) : (
            m_match_cond_j_315 = m_match_bool_j_314 ? (
                    bj_underscore = var_j_309.j_head;
                    bj_underscore2 = var_j_309.j_tail;
                    flatten_fun_j_349 = fun test_fun_b_103_j_0 -> (
                        flatten_fun_j_348 = fun test_list_b_104 -> (
                            var_j_316 = test_fun_b_103_j_0;
                            var_j_317 = test_fun_b_103_j_0;
                            appl_j_318 = var_j_316 var_j_317;
                            test_fun_b_103 = appl_j_318;
                            var_j_319 = test_list_b_104;
                            m_match_bool_j_321 = var_j_319 ~ {j_head, j_tail, _};
                            m_match_bool_j_345 = var_j_319 ~ {j_empty, _};
                            m_match_cond_j_346 = m_match_bool_j_345 ? (
                                    bool_j_347 = true
                                ) : (
                                    m_match_cond_j_322 = m_match_bool_j_321 ? (
                                            hd = var_j_319.j_head;
                                            tl = var_j_319.j_tail;
                                            bool_j_323 = false;
                                            fail_b_101 = bool_j_323;
                                            flatten_fun_j_332 = fun expr_b_100 -> (
                                                var_j_324 = expr_b_100;
                                                m_match_bool_j_326 = var_j_324 ~ any;
                                                m_match_bool_j_329 = var_j_324 ~ int;
                                                m_match_cond_j_330 = m_match_bool_j_329 ? (
                                                        bool_j_331 = true
                                                    ) : (
                                                        m_match_cond_j_327 = m_match_bool_j_326 ? (
                                                                var_j_328 = fail_b_101
                                                            ) : (
                                                                void_j_325 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_334 = fun bj_null_j_16 -> (
                                                input_j_333 = input);
                                            record_j_335 = {checker = flatten_fun_j_332, generator = flatten_fun_j_334};
                                            proj_j_336 = record_j_335.checker;
                                            var_j_337 = hd;
                                            appl_j_338 = proj_j_336 var_j_337;
                                            elm_check_b_105 = appl_j_338;
                                            var_j_339 = elm_check_b_105;
                                            if_j_344 = var_j_339 ? (
                                                    var_j_340 = test_fun_b_103;
                                                    var_j_341 = tl;
                                                    appl_j_342 = var_j_340 var_j_341
                                                ) : (
                                                    var_j_343 = elm_check_b_105
                                                )
                                        ) : (
                                            void_j_320 = {}
                                        )
                                )));
                    test_fun_b_103_j_0_j_18 = flatten_fun_j_349;
                    var_j_350 = test_fun_b_103_j_0_j_18;
                    var_j_351 = test_fun_b_103_j_0_j_18;
                    appl_j_352 = var_j_350 var_j_351;
                    test_fun_b_103_j_17 = appl_j_352;
                    var_j_353 = test_fun_b_103_j_17;
                    var_j_354 = expr_b_106;
                    appl_j_355 = var_j_353 var_j_354
                ) : (
                    m_match_cond_j_312 = m_match_bool_j_311 ? (
                            var_j_313 = lst_fail_b_107
                        ) : (
                            void_j_310 = {}
                        )
                )
        ));
flatten_fun_j_408 = fun bj_null_j_23 -> (
    flatten_fun_j_394 = fun list_maker_b_98_j_1 -> (
        flatten_fun_j_393 = fun len_b_97 -> (
            var_j_360 = list_maker_b_98_j_1;
            var_j_361 = list_maker_b_98_j_1;
            appl_j_362 = var_j_360 var_j_361;
            list_maker_b_98 = appl_j_362;
            var_j_363 = len_b_97;
            int_j_364 = 0;
            binop_j_365 = var_j_363 == int_j_364;
            if_j_392 = binop_j_365 ? (
                    record_j_366 = {};
                    record_j_367 = {j_empty = record_j_366}
                ) : (
                    bool_j_368 = false;
                    fail_b_95 = bool_j_368;
                    flatten_fun_j_377 = fun expr_b_94 -> (
                        var_j_369 = expr_b_94;
                        m_match_bool_j_371 = var_j_369 ~ any;
                        m_match_bool_j_374 = var_j_369 ~ int;
                        m_match_cond_j_375 = m_match_bool_j_374 ? (
                                bool_j_376 = true
                            ) : (
                                m_match_cond_j_372 = m_match_bool_j_371 ? (
                                        var_j_373 = fail_b_95
                                    ) : (
                                        void_j_370 = {}
                                    )
                            ));
                    flatten_fun_j_379 = fun bj_null_j_19 -> (
                        input_j_378 = input);
                    record_j_380 = {checker = flatten_fun_j_377, generator = flatten_fun_j_379};
                    proj_j_381 = record_j_380.generator;
                    int_j_382 = 0;
                    appl_j_383 = proj_j_381 int_j_382;
                    elm_b_99 = appl_j_383;
                    record_j_384 = {};
                    var_j_385 = elm_b_99;
                    var_j_386 = list_maker_b_98;
                    var_j_387 = len_b_97;
                    int_j_388 = 1;
                    binop_j_389 = var_j_387 - int_j_388;
                    appl_j_390 = var_j_386 binop_j_389;
                    record_j_391 = {j_cons = record_j_384, j_head = var_j_385, j_tail = appl_j_390}
                )));
    list_maker_b_98_j_1_j_22 = flatten_fun_j_394;
    var_j_395 = list_maker_b_98_j_1_j_22;
    var_j_396 = list_maker_b_98_j_1_j_22;
    appl_j_397 = var_j_395 var_j_396;
    list_maker_b_98_j_21 = appl_j_397;
    input_j_398 = input;
    len_b_97_j_20 = input_j_398;
    int_j_399 = 0;
    var_j_400 = len_b_97_j_20;
    binop_j_401 = int_j_399 <= var_j_400;
    if_j_407 = binop_j_401 ? (
            var_j_402 = list_maker_b_98_j_21;
            var_j_403 = len_b_97_j_20;
            appl_j_404 = var_j_402 var_j_403
        ) : (
            bool_j_405 = false;
            assume_j_406 = assume bool_j_405
        ));
record_j_409 = {checker = flatten_fun_j_359, generator = flatten_fun_j_408};
proj_j_410 = record_j_409.generator;
int_j_411 = 0;
appl_j_412 = proj_j_410 int_j_411;
xs_b_114 = appl_j_412;
bool_j_413 = false;
fail_b_111 = bool_j_413;
flatten_fun_j_422 = fun expr_b_110 -> (
    var_j_414 = expr_b_110;
    m_match_bool_j_416 = var_j_414 ~ any;
    m_match_bool_j_419 = var_j_414 ~ bool;
    m_match_cond_j_420 = m_match_bool_j_419 ? (
            bool_j_421 = true
        ) : (
            m_match_cond_j_417 = m_match_bool_j_416 ? (
                    var_j_418 = fail_b_111
                ) : (
                    void_j_415 = {}
                )
        ));
flatten_fun_j_426 = fun bj_null_j_24 -> (
    int_j_423 = 0;
    input_j_424 = input;
    m_bl_i_505 = int_j_423 ~ int;
    m_br_i_506 = input_j_424 ~ int;
    m_b_i_507 = m_bl_i_505 and m_br_i_506;
    binop_j_425 = m_b_i_507 ? (
            c_binop_i_508 = int_j_423 <= input_j_424
        ) : (
            ab_i_509 = abort
        ));
record_j_427 = {checker = flatten_fun_j_422, generator = flatten_fun_j_426};
proj_j_428 = record_j_427.checker;
appl_j_431 = appl_j_62 f_b_116;
appl_j_433 = appl_j_431 z_b_115;
appl_j_435 = appl_j_433 xs_b_114;
appl_j_436 = proj_j_428 appl_j_435;
check_res_b_113 = appl_j_436;
if_j_444 = check_res_b_113 ? (
        var_j_438 = appl_j_62
    ) : (
        error_var_j_439 = check_res_b_113;
        assert_pred_j_440 = error_var_j_439;
        assert_res_j_441 = assert_pred_j_440 ? (
                assert_res_true_j_442 = {}
            ) : (
                ab_j_443 = abort
            )
    );
i_result = if_j_444