i_first = {};
is_10000_j_13 = fun x_j_9 -> (
    var_j_10 = x_j_9;
    int_j_11 = 10000;
    m_bl_i_160 = var_j_10 ~ int;
    m_br_i_161 = int_j_11 ~ int;
    m_b_i_162 = m_bl_i_160 and m_br_i_161;
    binop_j_12 = m_b_i_162 ? (
            c_binop_i_163 = var_j_10 == int_j_11
        ) : (
            ab_i_164 = abort
        ));
is_10000 = is_10000_j_13;
f_j_76 = fun x_j_8 -> (
    flatten_fun_j_28 = fun g_j_0 -> (
        flatten_fun_j_27 = fun x -> (
            var_j_14 = g_j_0;
            var_j_15 = g_j_0;
            appl_j_16 = var_j_14 var_j_15;
            g = appl_j_16;
            var_j_17 = x;
            int_j_18 = 0;
            m_bl_i_165 = var_j_17 ~ int;
            m_br_i_166 = int_j_18 ~ int;
            m_b_i_167 = m_bl_i_165 and m_br_i_166;
            binop_j_19 = m_b_i_167 ? (
                    c_binop_i_168 = var_j_17 == int_j_18
                ) : (
                    ab_i_169 = abort
                );
            m_i_170 = binop_j_19 ~ bool;
            if_j_26 = m_i_170 ? (
                    c_cond_i_179 = binop_j_19 ? (
                            int_j_20 = 0
                        ) : (
                            var_j_21 = g;
                            var_j_22 = x;
                            int_j_23 = 1;
                            m_bl_i_171 = var_j_22 ~ int;
                            m_br_i_172 = int_j_23 ~ int;
                            m_b_i_173 = m_bl_i_171 and m_br_i_172;
                            binop_j_24 = m_b_i_173 ? (
                                    c_binop_i_174 = var_j_22 - int_j_23
                                ) : (
                                    ab_i_175 = abort
                                );
                            m_i_176 = var_j_21 ~ fun;
                            appl_j_25 = m_i_176 ? (
                                    c_appl_i_177 = var_j_21 binop_j_24
                                ) : (
                                    ab_i_178 = abort
                                )
                        )
                ) : (
                    ab_i_180 = abort
                )));
    g_j_0_j_7 = flatten_fun_j_28;
    var_j_29 = g_j_0_j_7;
    var_j_30 = g_j_0_j_7;
    appl_j_31 = var_j_29 var_j_30;
    g_j_6 = appl_j_31;
    bool_j_32 = false;
    fail_b_12 = bool_j_32;
    flatten_fun_j_41 = fun expr_b_11 -> (
        var_j_33 = expr_b_11;
        m_match_bool_j_35 = var_j_33 ~ any;
        m_match_bool_j_38 = var_j_33 ~ int;
        m_match_cond_j_39 = m_match_bool_j_38 ? (
                bool_j_40 = true
            ) : (
                m_match_cond_j_36 = m_match_bool_j_35 ? (
                        var_j_37 = fail_b_12
                    ) : (
                        void_j_34 = {}
                    )
            ));
    flatten_fun_j_43 = fun bj_null_j_4 -> (
        input_j_42 = input);
    record_j_44 = {checker = flatten_fun_j_41, generator = flatten_fun_j_43};
    proj_j_45 = record_j_44.generator;
    int_j_46 = 0;
    appl_j_47 = proj_j_45 int_j_46;
    x_b_23 = appl_j_47;
    bool_j_48 = false;
    fail_b_15 = bool_j_48;
    flatten_fun_j_57 = fun expr_b_14 -> (
        var_j_49 = expr_b_14;
        m_match_bool_j_51 = var_j_49 ~ any;
        m_match_bool_j_54 = var_j_49 ~ int;
        m_match_cond_j_55 = m_match_bool_j_54 ? (
                bool_j_56 = true
            ) : (
                m_match_cond_j_52 = m_match_bool_j_51 ? (
                        var_j_53 = fail_b_15
                    ) : (
                        void_j_50 = {}
                    )
            ));
    flatten_fun_j_59 = fun bj_null_j_5 -> (
        input_j_58 = input);
    record_j_60 = {checker = flatten_fun_j_57, generator = flatten_fun_j_59};
    proj_j_61 = record_j_60.checker;
    var_j_62 = g_j_6;
    var_j_63 = x_b_23;
    appl_j_64 = var_j_62 var_j_63;
    appl_j_65 = proj_j_61 appl_j_64;
    check_res_b_22 = appl_j_65;
    var_j_66 = check_res_b_22;
    if_j_75 = var_j_66 ? (
            var_j_67 = g_j_6;
            var_j_68 = x_j_8;
            m_i_181 = var_j_67 ~ fun;
            appl_j_69 = m_i_181 ? (
                    c_appl_i_182 = var_j_67 var_j_68
                ) : (
                    ab_i_183 = abort
                )
        ) : (
            error_var_j_70 = check_res_b_22;
            assert_pred_j_71 = error_var_j_70;
            assert_res_j_72 = assert_pred_j_71 ? (
                    assert_res_true_j_73 = {}
                ) : (
                    ab_j_74 = abort
                )
        ));
f = f_j_76;
flatten_fun_j_103 = fun expr_b_7 -> (
    bool_j_77 = false;
    fail_b_5 = bool_j_77;
    flatten_fun_j_86 = fun expr_b_4 -> (
        var_j_78 = expr_b_4;
        m_match_bool_j_80 = var_j_78 ~ any;
        m_match_bool_j_83 = var_j_78 ~ int;
        m_match_cond_j_84 = m_match_bool_j_83 ? (
                bool_j_85 = true
            ) : (
                m_match_cond_j_81 = m_match_bool_j_80 ? (
                        var_j_82 = fail_b_5
                    ) : (
                        void_j_79 = {}
                    )
            ));
    flatten_fun_j_88 = fun bj_null -> (
        input_j_87 = input);
    record_j_89 = {checker = flatten_fun_j_86, generator = flatten_fun_j_88};
    proj_j_90 = record_j_89.checker;
    var_j_91 = expr_b_7;
    appl_j_92 = proj_j_90 var_j_91;
    t_check_b_8 = appl_j_92;
    var_j_93 = t_check_b_8;
    if_j_102 = var_j_93 ? (
            bool_j_94 = false;
            pred_check_b_9 = bool_j_94;
            var_j_95 = is_10000;
            var_j_96 = expr_b_7;
            appl_j_97 = var_j_95 var_j_96;
            if_j_100 = appl_j_97 ? (
                    bool_j_98 = true
                ) : (
                    var_j_99 = pred_check_b_9
                )
        ) : (
            var_j_101 = t_check_b_8
        ));
flatten_fun_j_127 = fun bj_null_j_2 -> (
    bool_j_104 = false;
    fail_b_1 = bool_j_104;
    flatten_fun_j_113 = fun expr_b_0 -> (
        var_j_105 = expr_b_0;
        m_match_bool_j_107 = var_j_105 ~ any;
        m_match_bool_j_110 = var_j_105 ~ int;
        m_match_cond_j_111 = m_match_bool_j_110 ? (
                bool_j_112 = true
            ) : (
                m_match_cond_j_108 = m_match_bool_j_107 ? (
                        var_j_109 = fail_b_1
                    ) : (
                        void_j_106 = {}
                    )
            ));
    flatten_fun_j_115 = fun bj_null_j_1 -> (
        input_j_114 = input);
    record_j_116 = {checker = flatten_fun_j_113, generator = flatten_fun_j_115};
    proj_j_117 = record_j_116.generator;
    int_j_118 = 0;
    appl_j_119 = proj_j_117 int_j_118;
    candidate_b_3 = appl_j_119;
    var_j_120 = is_10000;
    var_j_121 = candidate_b_3;
    appl_j_122 = var_j_120 var_j_121;
    if_j_126 = appl_j_122 ? (
            var_j_123 = candidate_b_3
        ) : (
            bool_j_124 = false;
            assume_j_125 = assume bool_j_124
        ));
record_j_128 = {checker = flatten_fun_j_103, generator = flatten_fun_j_127};
proj_j_129 = record_j_128.generator;
int_j_130 = 0;
appl_j_131 = proj_j_129 int_j_130;
x_b_20 = appl_j_131;
bool_j_132 = false;
fail_b_18 = bool_j_132;
flatten_fun_j_141 = fun expr_b_17 -> (
    var_j_133 = expr_b_17;
    m_match_bool_j_135 = var_j_133 ~ any;
    m_match_bool_j_138 = var_j_133 ~ bool;
    m_match_cond_j_139 = m_match_bool_j_138 ? (
            bool_j_140 = true
        ) : (
            m_match_cond_j_136 = m_match_bool_j_135 ? (
                    var_j_137 = fail_b_18
                ) : (
                    void_j_134 = {}
                )
        ));
flatten_fun_j_145 = fun bj_null_j_3 -> (
    int_j_142 = 0;
    input_j_143 = input;
    m_bl_i_184 = int_j_142 ~ int;
    m_br_i_185 = input_j_143 ~ int;
    m_b_i_186 = m_bl_i_184 and m_br_i_185;
    binop_j_144 = m_b_i_186 ? (
            c_binop_i_187 = int_j_142 <= input_j_143
        ) : (
            ab_i_188 = abort
        ));
record_j_146 = {checker = flatten_fun_j_141, generator = flatten_fun_j_145};
proj_j_147 = record_j_146.checker;
appl_j_150 = f x_b_20;
appl_j_151 = proj_j_147 appl_j_150;
check_res_b_21 = appl_j_151;
if_j_159 = check_res_b_21 ? (
        var_j_153 = f
    ) : (
        error_var_j_154 = check_res_b_21;
        assert_pred_j_155 = error_var_j_154;
        assert_res_j_156 = assert_pred_j_155 ? (
                assert_res_true_j_157 = {}
            ) : (
                ab_j_158 = abort
            )
    );
i_result = if_j_159