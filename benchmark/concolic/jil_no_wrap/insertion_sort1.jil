i_first = {};
is_nonempty_j_73 = fun lst_j_56 -> (
    bool_j_57 = false;
    fail_b_0 = bool_j_57;
    var_j_58 = lst_j_56;
    m_match_bool_j_60 = var_j_58 ~ any;
    m_match_bool_j_63 = var_j_58 ~ {j_empty, _};
    m_match_bool_j_66 = var_j_58 ~ {bj_untouched, _};
    m_match_cond_j_67 = m_match_bool_j_66 ? (
            var_j_68 = fail_b_0;
            assert_pred_j_69 = var_j_68;
            assert_res_j_70 = assert_pred_j_69 ? (
                    assert_res_true_j_71 = {}
                ) : (
                    ab_j_72 = abort
                )
        ) : (
            m_match_cond_j_64 = m_match_bool_j_63 ? (
                    bool_j_65 = false
                ) : (
                    m_match_cond_j_61 = m_match_bool_j_60 ? (
                            bool_j_62 = true
                        ) : (
                            ab_j_59 = abort
                        )
                )
        ));
is_nonempty = is_nonempty_j_73;
flatten_fun_j_115 = fun ne_sorted_j_8 -> (
    flatten_fun_j_114 = fun lst -> (
        var_j_74 = ne_sorted_j_8;
        var_j_75 = ne_sorted_j_8;
        appl_j_76 = var_j_74 var_j_75;
        ne_sorted = appl_j_76;
        bool_j_77 = false;
        fail_b_1 = bool_j_77;
        var_j_78 = lst;
        m_match_bool_j_80 = var_j_78 ~ {j_head, j_tail, _};
        m_match_bool_j_104 = var_j_78 ~ {j_empty, _};
        m_match_bool_j_107 = var_j_78 ~ {bj_untouched, _};
        m_match_cond_j_108 = m_match_bool_j_107 ? (
                var_j_109 = fail_b_1;
                assert_pred_j_110 = var_j_109;
                assert_res_j_111 = assert_pred_j_110 ? (
                        assert_res_true_j_112 = {}
                    ) : (
                        ab_j_113 = abort
                    )
            ) : (
                m_match_cond_j_105 = m_match_bool_j_104 ? (
                        bool_j_106 = true
                    ) : (
                        m_match_cond_j_81 = m_match_bool_j_80 ? (
                                a = var_j_78.j_head;
                                tl = var_j_78.j_tail;
                                bool_j_82 = false;
                                fail_b_2 = bool_j_82;
                                var_j_83 = tl;
                                m_match_bool_j_85 = var_j_83 ~ {j_head, j_tail, _};
                                m_match_bool_j_94 = var_j_83 ~ {j_empty, _};
                                m_match_bool_j_97 = var_j_83 ~ {bj_untouched, _};
                                m_match_cond_j_98 = m_match_bool_j_97 ? (
                                        var_j_99 = fail_b_2;
                                        assert_pred_j_100 = var_j_99;
                                        assert_res_j_101 = assert_pred_j_100 ? (
                                                assert_res_true_j_102 = 
                                                    {}
                                            ) : (
                                                ab_j_103 = abort
                                            )
                                    ) : (
                                        m_match_cond_j_95 = m_match_bool_j_94 ? (
                                                bool_j_96 = true
                                            ) : (
                                                m_match_cond_j_86 = m_match_bool_j_85 ? (
                                                        b = var_j_83.j_head;
                                                        tll = var_j_83.j_tail;
                                                        var_j_87 = a;
                                                        var_j_88 = b;
                                                        m_bl_i_592 = var_j_87 ~ int;
                                                        m_br_i_593 = var_j_88 ~ int;
                                                        m_b_i_594 = m_bl_i_592 and m_br_i_593;
                                                        binop_j_89 = m_b_i_594 ? (
                                                                c_binop_i_595 = var_j_87 <= var_j_88
                                                            ) : (
                                                                ab_i_596 = abort
                                                            );
                                                        var_j_90 = ne_sorted;
                                                        var_j_91 = tl;
                                                        m_i_597 = var_j_90 ~ fun;
                                                        appl_j_92 = m_i_597 ? (
                                                                c_appl_i_598 = var_j_90 var_j_91
                                                            ) : (
                                                                ab_i_599 = abort
                                                            );
                                                        m_bl_i_600 = binop_j_89 ~ bool;
                                                        m_br_i_601 = appl_j_92 ~ bool;
                                                        m_b_i_602 = m_bl_i_600 and m_br_i_601;
                                                        binop_j_93 = m_b_i_602 ? (
                                                                c_binop_i_603 = binop_j_89 and appl_j_92
                                                            ) : (
                                                                ab_i_604 = abort
                                                            )
                                                    ) : (
                                                        ab_j_84 = abort
                                                    )
                                            )
                                    )
                            ) : (
                                ab_j_79 = abort
                            )
                    )
            )));
appl_j_118 = flatten_fun_j_115 flatten_fun_j_115;
flatten_fun_j_151 = fun foldl_j_7 -> (
    flatten_fun_j_150 = fun f -> (
        flatten_fun_j_149 = fun b_j_9 -> (
            flatten_fun_j_148 = fun l -> (
                var_j_119 = foldl_j_7;
                var_j_120 = foldl_j_7;
                appl_j_121 = var_j_119 var_j_120;
                foldl = appl_j_121;
                bool_j_122 = false;
                fail_b_3 = bool_j_122;
                var_j_123 = l;
                m_match_bool_j_125 = var_j_123 ~ {j_head, j_tail, _};
                m_match_bool_j_138 = var_j_123 ~ {j_empty, _};
                m_match_bool_j_141 = var_j_123 ~ {bj_untouched, _};
                m_match_cond_j_142 = m_match_bool_j_141 ? (
                        var_j_143 = fail_b_3;
                        assert_pred_j_144 = var_j_143;
                        assert_res_j_145 = assert_pred_j_144 ? (
                                assert_res_true_j_146 = {}
                            ) : (
                                ab_j_147 = abort
                            )
                    ) : (
                        m_match_cond_j_139 = m_match_bool_j_138 ? (
                                var_j_140 = b_j_9
                            ) : (
                                m_match_cond_j_126 = m_match_bool_j_125 ? (
                                        x = var_j_123.j_head;
                                        xs = var_j_123.j_tail;
                                        var_j_127 = foldl;
                                        var_j_128 = f;
                                        m_i_605 = var_j_127 ~ fun;
                                        appl_j_129 = m_i_605 ? (
                                                c_appl_i_606 = var_j_127 var_j_128
                                            ) : (
                                                ab_i_607 = abort
                                            );
                                        var_j_130 = f;
                                        var_j_131 = x;
                                        m_i_608 = var_j_130 ~ fun;
                                        appl_j_132 = m_i_608 ? (
                                                c_appl_i_609 = var_j_130 var_j_131
                                            ) : (
                                                ab_i_610 = abort
                                            );
                                        var_j_133 = b_j_9;
                                        m_i_611 = appl_j_132 ~ fun;
                                        appl_j_134 = m_i_611 ? (
                                                c_appl_i_612 = appl_j_132 var_j_133
                                            ) : (
                                                ab_i_613 = abort
                                            );
                                        m_i_614 = appl_j_129 ~ fun;
                                        appl_j_135 = m_i_614 ? (
                                                c_appl_i_615 = appl_j_129 appl_j_134
                                            ) : (
                                                ab_i_616 = abort
                                            );
                                        var_j_136 = xs;
                                        m_i_617 = appl_j_135 ~ fun;
                                        appl_j_137 = m_i_617 ? (
                                                c_appl_i_618 = appl_j_135 var_j_136
                                            ) : (
                                                ab_i_619 = abort
                                            )
                                    ) : (
                                        ab_j_124 = abort
                                    )
                            )
                    )))));
appl_j_154 = flatten_fun_j_151 flatten_fun_j_151;
flatten_fun_j_194 = fun insert_j_6 -> (
    flatten_fun_j_193 = fun x_j_11 -> (
        flatten_fun_j_192 = fun l_j_10 -> (
            var_j_155 = insert_j_6;
            var_j_156 = insert_j_6;
            appl_j_157 = var_j_155 var_j_156;
            insert = appl_j_157;
            bool_j_158 = false;
            fail_b_4 = bool_j_158;
            var_j_159 = l_j_10;
            m_match_bool_j_161 = var_j_159 ~ {j_head, j_tail, _};
            m_match_bool_j_179 = var_j_159 ~ {j_empty, _};
            m_match_bool_j_185 = var_j_159 ~ {bj_untouched, _};
            m_match_cond_j_186 = m_match_bool_j_185 ? (
                    var_j_187 = fail_b_4;
                    assert_pred_j_188 = var_j_187;
                    assert_res_j_189 = assert_pred_j_188 ? (
                            assert_res_true_j_190 = {}
                        ) : (
                            ab_j_191 = abort
                        )
                ) : (
                    m_match_cond_j_180 = m_match_bool_j_179 ? (
                            var_j_181 = x_j_11;
                            record_j_182 = {};
                            record_j_183 = {j_empty = record_j_182};
                            record_j_184 = {j_head = var_j_181, j_tail = record_j_183}
                        ) : (
                            m_match_cond_j_162 = m_match_bool_j_161 ? (
                                    h = var_j_159.j_head;
                                    t = var_j_159.j_tail;
                                    var_j_163 = x_j_11;
                                    var_j_164 = h;
                                    m_bl_i_620 = var_j_163 ~ int;
                                    m_br_i_621 = var_j_164 ~ int;
                                    m_b_i_622 = m_bl_i_620 and m_br_i_621;
                                    binop_j_165 = m_b_i_622 ? (
                                            c_binop_i_623 = var_j_163 <= var_j_164
                                        ) : (
                                            ab_i_624 = abort
                                        );
                                    m_i_625 = binop_j_165 ~ bool;
                                    if_j_178 = m_i_625 ? (
                                            c_cond_i_632 = binop_j_165 ? (
                                                    record_j_166 = {};
                                                    var_j_167 = h;
                                                    var_j_168 = insert;
                                                    var_j_169 = x_j_11;
                                                    m_i_626 = var_j_168 ~ fun;
                                                    appl_j_170 = m_i_626 ? (
                                                            c_appl_i_627 = var_j_168 var_j_169
                                                        ) : (
                                                            ab_i_628 = abort
                                                        );
                                                    var_j_171 = t;
                                                    m_i_629 = appl_j_170 ~ fun;
                                                    appl_j_172 = m_i_629 ? (
                                                            c_appl_i_630 = appl_j_170 var_j_171
                                                        ) : (
                                                            ab_i_631 = abort
                                                        );
                                                    record_j_173 = {j_cons = record_j_166, j_head = var_j_167, j_tail = appl_j_172}
                                                ) : (
                                                    record_j_174 = {};
                                                    var_j_175 = x_j_11;
                                                    var_j_176 = l_j_10;
                                                    record_j_177 = {j_cons = record_j_174, j_head = var_j_175, j_tail = var_j_176}
                                                )
                                        ) : (
                                            ab_i_633 = abort
                                        )
                                ) : (
                                    ab_j_160 = abort
                                )
                        )
                ))));
appl_j_197 = flatten_fun_j_194 flatten_fun_j_194;
ret_type_j_458 = fun xs_j_49 -> (
    flatten_fun_j_328 = fun expr_b_36 -> (
        flatten_fun_j_249 = fun expr_b_33 -> (
            bool_j_198 = false;
            lst_fail_b_34 = bool_j_198;
            var_j_199 = expr_b_33;
            m_match_bool_j_201 = var_j_199 ~ any;
            m_match_bool_j_204 = var_j_199 ~ {j_head, j_tail, _};
            m_match_bool_j_246 = var_j_199 ~ {j_empty, _};
            m_match_cond_j_247 = m_match_bool_j_246 ? (
                    bool_j_248 = true
                ) : (
                    m_match_cond_j_205 = m_match_bool_j_204 ? (
                            bj_underscore_j_28 = var_j_199.j_head;
                            bj_underscore2_j_27 = var_j_199.j_tail;
                            flatten_fun_j_239 = fun test_fun_b_30_j_2 -> (
                                flatten_fun_j_238 = fun test_list_b_31 -> (
                                    var_j_206 = test_fun_b_30_j_2;
                                    var_j_207 = test_fun_b_30_j_2;
                                    appl_j_208 = var_j_206 var_j_207;
                                    test_fun_b_30 = appl_j_208;
                                    var_j_209 = test_list_b_31;
                                    m_match_bool_j_211 = var_j_209 ~ 
                                        {j_head, j_tail, _};
                                    m_match_bool_j_235 = var_j_209 ~ 
                                        {j_empty, _};
                                    m_match_cond_j_236 = m_match_bool_j_235 ? (
                                            bool_j_237 = true
                                        ) : (
                                            m_match_cond_j_212 = m_match_bool_j_211 ? (
                                                    hd_j_24 = var_j_209.j_head;
                                                    tl_j_23 = var_j_209.j_tail;
                                                    bool_j_213 = false;
                                                    fail_b_28 = bool_j_213;
                                                    flatten_fun_j_222 = fun expr_b_27 -> (
                                                        var_j_214 = expr_b_27;
                                                        m_match_bool_j_216 = var_j_214 ~ any;
                                                        m_match_bool_j_219 = var_j_214 ~ int;
                                                        m_match_cond_j_220 = m_match_bool_j_219 ? (
                                                                bool_j_221 = true
                                                            ) : (
                                                                m_match_cond_j_217 = m_match_bool_j_216 ? (
                                                                        
                                                                    var_j_218 = fail_b_28
                                                                    ) : (
                                                                        
                                                                    void_j_215 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_224 = fun bj_null_j_22 -> (
                                                        input_j_223 = input);
                                                    record_j_225 = {checker = flatten_fun_j_222, generator = flatten_fun_j_224};
                                                    proj_j_226 = record_j_225.checker;
                                                    var_j_227 = hd_j_24;
                                                    appl_j_228 = proj_j_226 var_j_227;
                                                    elm_check_b_32 = appl_j_228;
                                                    var_j_229 = elm_check_b_32;
                                                    if_j_234 = var_j_229 ? (
                                                            var_j_230 = test_fun_b_30;
                                                            var_j_231 = tl_j_23;
                                                            appl_j_232 = var_j_230 var_j_231
                                                        ) : (
                                                            var_j_233 = elm_check_b_32
                                                        )
                                                ) : (
                                                    void_j_210 = {}
                                                )
                                        )));
                            test_fun_b_30_j_2_j_26 = flatten_fun_j_239;
                            var_j_240 = test_fun_b_30_j_2_j_26;
                            var_j_241 = test_fun_b_30_j_2_j_26;
                            appl_j_242 = var_j_240 var_j_241;
                            test_fun_b_30_j_25 = appl_j_242;
                            var_j_243 = test_fun_b_30_j_25;
                            var_j_244 = expr_b_33;
                            appl_j_245 = var_j_243 var_j_244
                        ) : (
                            m_match_cond_j_202 = m_match_bool_j_201 ? (
                                    var_j_203 = lst_fail_b_34
                                ) : (
                                    void_j_200 = {}
                                )
                        )
                ));
        flatten_fun_j_298 = fun bj_null_j_33 -> (
            flatten_fun_j_284 = fun list_maker_b_25_j_3 -> (
                flatten_fun_j_283 = fun len_b_24 -> (
                    var_j_250 = list_maker_b_25_j_3;
                    var_j_251 = list_maker_b_25_j_3;
                    appl_j_252 = var_j_250 var_j_251;
                    list_maker_b_25 = appl_j_252;
                    var_j_253 = len_b_24;
                    int_j_254 = 0;
                    binop_j_255 = var_j_253 == int_j_254;
                    if_j_282 = binop_j_255 ? (
                            record_j_256 = {};
                            record_j_257 = {j_empty = record_j_256}
                        ) : (
                            bool_j_258 = false;
                            fail_b_22 = bool_j_258;
                            flatten_fun_j_267 = fun expr_b_21 -> (
                                var_j_259 = expr_b_21;
                                m_match_bool_j_261 = var_j_259 ~ any;
                                m_match_bool_j_264 = var_j_259 ~ int;
                                m_match_cond_j_265 = m_match_bool_j_264 ? (
                                        bool_j_266 = true
                                    ) : (
                                        m_match_cond_j_262 = m_match_bool_j_261 ? (
                                                var_j_263 = fail_b_22
                                            ) : (
                                                void_j_260 = {}
                                            )
                                    ));
                            flatten_fun_j_269 = fun bj_null_j_29 -> (
                                input_j_268 = input);
                            record_j_270 = {checker = flatten_fun_j_267, generator = flatten_fun_j_269};
                            proj_j_271 = record_j_270.generator;
                            int_j_272 = 0;
                            appl_j_273 = proj_j_271 int_j_272;
                            elm_b_26 = appl_j_273;
                            record_j_274 = {};
                            var_j_275 = elm_b_26;
                            var_j_276 = list_maker_b_25;
                            var_j_277 = len_b_24;
                            int_j_278 = 1;
                            binop_j_279 = var_j_277 - int_j_278;
                            appl_j_280 = var_j_276 binop_j_279;
                            record_j_281 = {j_cons = record_j_274, j_head = var_j_275, j_tail = appl_j_280}
                        )));
            list_maker_b_25_j_3_j_32 = flatten_fun_j_284;
            var_j_285 = list_maker_b_25_j_3_j_32;
            var_j_286 = list_maker_b_25_j_3_j_32;
            appl_j_287 = var_j_285 var_j_286;
            list_maker_b_25_j_31 = appl_j_287;
            input_j_288 = input;
            len_b_24_j_30 = input_j_288;
            int_j_289 = 0;
            var_j_290 = len_b_24_j_30;
            binop_j_291 = int_j_289 <= var_j_290;
            if_j_297 = binop_j_291 ? (
                    var_j_292 = list_maker_b_25_j_31;
                    var_j_293 = len_b_24_j_30;
                    appl_j_294 = var_j_292 var_j_293
                ) : (
                    bool_j_295 = false;
                    assume_j_296 = assume bool_j_295
                ));
        record_j_299 = {checker = flatten_fun_j_249, generator = flatten_fun_j_298};
        proj_j_300 = record_j_299.checker;
        var_j_301 = expr_b_36;
        appl_j_302 = proj_j_300 var_j_301;
        t_check_b_37 = appl_j_302;
        var_j_303 = t_check_b_37;
        if_j_327 = var_j_303 ? (
                bool_j_304 = false;
                pred_check_b_38 = bool_j_304;
                flatten_fun_j_320 = fun l_j_34 -> (
                    var_j_305 = appl_j_118;
                    var_j_306 = l_j_34;
                    m_i_634 = var_j_305 ~ fun;
                    appl_j_307 = m_i_634 ? (
                            c_appl_i_635 = var_j_305 var_j_306
                        ) : (
                            ab_i_636 = abort
                        );
                    var_j_308 = is_nonempty;
                    var_j_309 = xs_j_49;
                    m_i_637 = var_j_308 ~ fun;
                    appl_j_310 = m_i_637 ? (
                            c_appl_i_638 = var_j_308 var_j_309
                        ) : (
                            ab_i_639 = abort
                        );
                    m_i_640 = appl_j_310 ~ bool;
                    if_j_318 = m_i_640 ? (
                            c_cond_i_650 = appl_j_310 ? (
                                    var_j_311 = is_nonempty;
                                    var_j_312 = l_j_34;
                                    m_i_641 = var_j_311 ~ fun;
                                    appl_j_313 = m_i_641 ? (
                                            c_appl_i_642 = var_j_311 var_j_312
                                        ) : (
                                            ab_i_643 = abort
                                        )
                                ) : (
                                    var_j_314 = is_nonempty;
                                    var_j_315 = l_j_34;
                                    m_i_644 = var_j_314 ~ fun;
                                    appl_j_316 = m_i_644 ? (
                                            c_appl_i_645 = var_j_314 var_j_315
                                        ) : (
                                            ab_i_646 = abort
                                        );
                                    m_i_647 = appl_j_316 ~ bool;
                                    notop_j_317 = m_i_647 ? (
                                            c_not_i_648 = not appl_j_316
                                        ) : (
                                            ab_i_649 = abort
                                        )
                                )
                        ) : (
                            ab_i_651 = abort
                        );
                    m_bl_i_652 = appl_j_307 ~ bool;
                    m_br_i_653 = if_j_318 ~ bool;
                    m_b_i_654 = m_bl_i_652 and m_br_i_653;
                    binop_j_319 = m_b_i_654 ? (
                            c_binop_i_655 = appl_j_307 and if_j_318
                        ) : (
                            ab_i_656 = abort
                        ));
                var_j_321 = expr_b_36;
                appl_j_322 = flatten_fun_j_320 var_j_321;
                if_j_325 = appl_j_322 ? (
                        bool_j_323 = true
                    ) : (
                        var_j_324 = pred_check_b_38
                    )
            ) : (
                var_j_326 = t_check_b_37
            ));
    flatten_fun_j_456 = fun bj_null_j_48 -> (
        flatten_fun_j_380 = fun expr_b_17 -> (
            bool_j_329 = false;
            lst_fail_b_18 = bool_j_329;
            var_j_330 = expr_b_17;
            m_match_bool_j_332 = var_j_330 ~ any;
            m_match_bool_j_335 = var_j_330 ~ {j_head, j_tail, _};
            m_match_bool_j_377 = var_j_330 ~ {j_empty, _};
            m_match_cond_j_378 = m_match_bool_j_377 ? (
                    bool_j_379 = true
                ) : (
                    m_match_cond_j_336 = m_match_bool_j_335 ? (
                            bj_underscore_j_41 = var_j_330.j_head;
                            bj_underscore2_j_40 = var_j_330.j_tail;
                            flatten_fun_j_370 = fun test_fun_b_14_j_4 -> (
                                flatten_fun_j_369 = fun test_list_b_15 -> (
                                    var_j_337 = test_fun_b_14_j_4;
                                    var_j_338 = test_fun_b_14_j_4;
                                    appl_j_339 = var_j_337 var_j_338;
                                    test_fun_b_14 = appl_j_339;
                                    var_j_340 = test_list_b_15;
                                    m_match_bool_j_342 = var_j_340 ~ 
                                        {j_head, j_tail, _};
                                    m_match_bool_j_366 = var_j_340 ~ 
                                        {j_empty, _};
                                    m_match_cond_j_367 = m_match_bool_j_366 ? (
                                            bool_j_368 = true
                                        ) : (
                                            m_match_cond_j_343 = m_match_bool_j_342 ? (
                                                    hd_j_37 = var_j_340.j_head;
                                                    tl_j_36 = var_j_340.j_tail;
                                                    bool_j_344 = false;
                                                    fail_b_12 = bool_j_344;
                                                    flatten_fun_j_353 = fun expr_b_11 -> (
                                                        var_j_345 = expr_b_11;
                                                        m_match_bool_j_347 = var_j_345 ~ any;
                                                        m_match_bool_j_350 = var_j_345 ~ int;
                                                        m_match_cond_j_351 = m_match_bool_j_350 ? (
                                                                bool_j_352 = true
                                                            ) : (
                                                                m_match_cond_j_348 = m_match_bool_j_347 ? (
                                                                        
                                                                    var_j_349 = fail_b_12
                                                                    ) : (
                                                                        
                                                                    void_j_346 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_355 = fun bj_null_j_35 -> (
                                                        input_j_354 = input);
                                                    record_j_356 = {checker = flatten_fun_j_353, generator = flatten_fun_j_355};
                                                    proj_j_357 = record_j_356.checker;
                                                    var_j_358 = hd_j_37;
                                                    appl_j_359 = proj_j_357 var_j_358;
                                                    elm_check_b_16 = appl_j_359;
                                                    var_j_360 = elm_check_b_16;
                                                    if_j_365 = var_j_360 ? (
                                                            var_j_361 = test_fun_b_14;
                                                            var_j_362 = tl_j_36;
                                                            appl_j_363 = var_j_361 var_j_362
                                                        ) : (
                                                            var_j_364 = elm_check_b_16
                                                        )
                                                ) : (
                                                    void_j_341 = {}
                                                )
                                        )));
                            test_fun_b_14_j_4_j_39 = flatten_fun_j_370;
                            var_j_371 = test_fun_b_14_j_4_j_39;
                            var_j_372 = test_fun_b_14_j_4_j_39;
                            appl_j_373 = var_j_371 var_j_372;
                            test_fun_b_14_j_38 = appl_j_373;
                            var_j_374 = test_fun_b_14_j_38;
                            var_j_375 = expr_b_17;
                            appl_j_376 = var_j_374 var_j_375
                        ) : (
                            m_match_cond_j_333 = m_match_bool_j_332 ? (
                                    var_j_334 = lst_fail_b_18
                                ) : (
                                    void_j_331 = {}
                                )
                        )
                ));
        flatten_fun_j_429 = fun bj_null_j_46 -> (
            flatten_fun_j_415 = fun list_maker_b_9_j_5 -> (
                flatten_fun_j_414 = fun len_b_8 -> (
                    var_j_381 = list_maker_b_9_j_5;
                    var_j_382 = list_maker_b_9_j_5;
                    appl_j_383 = var_j_381 var_j_382;
                    list_maker_b_9 = appl_j_383;
                    var_j_384 = len_b_8;
                    int_j_385 = 0;
                    binop_j_386 = var_j_384 == int_j_385;
                    if_j_413 = binop_j_386 ? (
                            record_j_387 = {};
                            record_j_388 = {j_empty = record_j_387}
                        ) : (
                            bool_j_389 = false;
                            fail_b_6 = bool_j_389;
                            flatten_fun_j_398 = fun expr_b_5 -> (
                                var_j_390 = expr_b_5;
                                m_match_bool_j_392 = var_j_390 ~ any;
                                m_match_bool_j_395 = var_j_390 ~ int;
                                m_match_cond_j_396 = m_match_bool_j_395 ? (
                                        bool_j_397 = true
                                    ) : (
                                        m_match_cond_j_393 = m_match_bool_j_392 ? (
                                                var_j_394 = fail_b_6
                                            ) : (
                                                void_j_391 = {}
                                            )
                                    ));
                            flatten_fun_j_400 = fun bj_null_j_42 -> (
                                input_j_399 = input);
                            record_j_401 = {checker = flatten_fun_j_398, generator = flatten_fun_j_400};
                            proj_j_402 = record_j_401.generator;
                            int_j_403 = 0;
                            appl_j_404 = proj_j_402 int_j_403;
                            elm_b_10 = appl_j_404;
                            record_j_405 = {};
                            var_j_406 = elm_b_10;
                            var_j_407 = list_maker_b_9;
                            var_j_408 = len_b_8;
                            int_j_409 = 1;
                            binop_j_410 = var_j_408 - int_j_409;
                            appl_j_411 = var_j_407 binop_j_410;
                            record_j_412 = {j_cons = record_j_405, j_head = var_j_406, j_tail = appl_j_411}
                        )));
            list_maker_b_9_j_5_j_45 = flatten_fun_j_415;
            var_j_416 = list_maker_b_9_j_5_j_45;
            var_j_417 = list_maker_b_9_j_5_j_45;
            appl_j_418 = var_j_416 var_j_417;
            list_maker_b_9_j_44 = appl_j_418;
            input_j_419 = input;
            len_b_8_j_43 = input_j_419;
            int_j_420 = 0;
            var_j_421 = len_b_8_j_43;
            binop_j_422 = int_j_420 <= var_j_421;
            if_j_428 = binop_j_422 ? (
                    var_j_423 = list_maker_b_9_j_44;
                    var_j_424 = len_b_8_j_43;
                    appl_j_425 = var_j_423 var_j_424
                ) : (
                    bool_j_426 = false;
                    assume_j_427 = assume bool_j_426
                ));
        record_j_430 = {checker = flatten_fun_j_380, generator = flatten_fun_j_429};
        proj_j_431 = record_j_430.generator;
        int_j_432 = 0;
        appl_j_433 = proj_j_431 int_j_432;
        candidate_b_20 = appl_j_433;
        flatten_fun_j_449 = fun l_j_47 -> (
            var_j_434 = appl_j_118;
            var_j_435 = l_j_47;
            m_i_657 = var_j_434 ~ fun;
            appl_j_436 = m_i_657 ? (
                    c_appl_i_658 = var_j_434 var_j_435
                ) : (
                    ab_i_659 = abort
                );
            var_j_437 = is_nonempty;
            var_j_438 = xs_j_49;
            m_i_660 = var_j_437 ~ fun;
            appl_j_439 = m_i_660 ? (
                    c_appl_i_661 = var_j_437 var_j_438
                ) : (
                    ab_i_662 = abort
                );
            m_i_663 = appl_j_439 ~ bool;
            if_j_447 = m_i_663 ? (
                    c_cond_i_673 = appl_j_439 ? (
                            var_j_440 = is_nonempty;
                            var_j_441 = l_j_47;
                            m_i_664 = var_j_440 ~ fun;
                            appl_j_442 = m_i_664 ? (
                                    c_appl_i_665 = var_j_440 var_j_441
                                ) : (
                                    ab_i_666 = abort
                                )
                        ) : (
                            var_j_443 = is_nonempty;
                            var_j_444 = l_j_47;
                            m_i_667 = var_j_443 ~ fun;
                            appl_j_445 = m_i_667 ? (
                                    c_appl_i_668 = var_j_443 var_j_444
                                ) : (
                                    ab_i_669 = abort
                                );
                            m_i_670 = appl_j_445 ~ bool;
                            notop_j_446 = m_i_670 ? (
                                    c_not_i_671 = not appl_j_445
                                ) : (
                                    ab_i_672 = abort
                                )
                        )
                ) : (
                    ab_i_674 = abort
                );
            m_bl_i_675 = appl_j_436 ~ bool;
            m_br_i_676 = if_j_447 ~ bool;
            m_b_i_677 = m_bl_i_675 and m_br_i_676;
            binop_j_448 = m_b_i_677 ? (
                    c_binop_i_678 = appl_j_436 and if_j_447
                ) : (
                    ab_i_679 = abort
                ));
        var_j_450 = candidate_b_20;
        appl_j_451 = flatten_fun_j_449 var_j_450;
        if_j_455 = appl_j_451 ? (
                var_j_452 = candidate_b_20
            ) : (
                bool_j_453 = false;
                assume_j_454 = assume bool_j_453
            ));
    record_j_457 = {checker = flatten_fun_j_328, generator = flatten_fun_j_456});
ret_type = ret_type_j_458;
sort_j_467 = fun xs_j_21 -> (
    var_j_459 = appl_j_154;
    var_j_460 = appl_j_197;
    m_i_680 = var_j_459 ~ fun;
    appl_j_461 = m_i_680 ? (
            c_appl_i_681 = var_j_459 var_j_460
        ) : (
            ab_i_682 = abort
        );
    record_j_462 = {};
    record_j_463 = {j_empty = record_j_462};
    m_i_683 = appl_j_461 ~ fun;
    appl_j_464 = m_i_683 ? (
            c_appl_i_684 = appl_j_461 record_j_463
        ) : (
            ab_i_685 = abort
        );
    var_j_465 = xs_j_21;
    m_i_686 = appl_j_464 ~ fun;
    appl_j_466 = m_i_686 ? (
            c_appl_i_687 = appl_j_464 var_j_465
        ) : (
            ab_i_688 = abort
        ));
sort = sort_j_467;
flatten_fun_j_519 = fun expr_b_52 -> (
    bool_j_468 = false;
    lst_fail_b_53 = bool_j_468;
    var_j_469 = expr_b_52;
    m_match_bool_j_471 = var_j_469 ~ any;
    m_match_bool_j_474 = var_j_469 ~ {j_head, j_tail, _};
    m_match_bool_j_516 = var_j_469 ~ {j_empty, _};
    m_match_cond_j_517 = m_match_bool_j_516 ? (
            bool_j_518 = true
        ) : (
            m_match_cond_j_475 = m_match_bool_j_474 ? (
                    bj_underscore = var_j_469.j_head;
                    bj_underscore2 = var_j_469.j_tail;
                    flatten_fun_j_509 = fun test_fun_b_49_j_0 -> (
                        flatten_fun_j_508 = fun test_list_b_50 -> (
                            var_j_476 = test_fun_b_49_j_0;
                            var_j_477 = test_fun_b_49_j_0;
                            appl_j_478 = var_j_476 var_j_477;
                            test_fun_b_49 = appl_j_478;
                            var_j_479 = test_list_b_50;
                            m_match_bool_j_481 = var_j_479 ~ {j_head, j_tail, _};
                            m_match_bool_j_505 = var_j_479 ~ {j_empty, _};
                            m_match_cond_j_506 = m_match_bool_j_505 ? (
                                    bool_j_507 = true
                                ) : (
                                    m_match_cond_j_482 = m_match_bool_j_481 ? (
                                            hd = var_j_479.j_head;
                                            tl_j_12 = var_j_479.j_tail;
                                            bool_j_483 = false;
                                            fail_b_47 = bool_j_483;
                                            flatten_fun_j_492 = fun expr_b_46 -> (
                                                var_j_484 = expr_b_46;
                                                m_match_bool_j_486 = var_j_484 ~ any;
                                                m_match_bool_j_489 = var_j_484 ~ int;
                                                m_match_cond_j_490 = m_match_bool_j_489 ? (
                                                        bool_j_491 = true
                                                    ) : (
                                                        m_match_cond_j_487 = m_match_bool_j_486 ? (
                                                                var_j_488 = fail_b_47
                                                            ) : (
                                                                void_j_485 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_494 = fun bj_null -> (
                                                input_j_493 = input);
                                            record_j_495 = {checker = flatten_fun_j_492, generator = flatten_fun_j_494};
                                            proj_j_496 = record_j_495.checker;
                                            var_j_497 = hd;
                                            appl_j_498 = proj_j_496 var_j_497;
                                            elm_check_b_51 = appl_j_498;
                                            var_j_499 = elm_check_b_51;
                                            if_j_504 = var_j_499 ? (
                                                    var_j_500 = test_fun_b_49;
                                                    var_j_501 = tl_j_12;
                                                    appl_j_502 = var_j_500 var_j_501
                                                ) : (
                                                    var_j_503 = elm_check_b_51
                                                )
                                        ) : (
                                            void_j_480 = {}
                                        )
                                )));
                    test_fun_b_49_j_0_j_14 = flatten_fun_j_509;
                    var_j_510 = test_fun_b_49_j_0_j_14;
                    var_j_511 = test_fun_b_49_j_0_j_14;
                    appl_j_512 = var_j_510 var_j_511;
                    test_fun_b_49_j_13 = appl_j_512;
                    var_j_513 = test_fun_b_49_j_13;
                    var_j_514 = expr_b_52;
                    appl_j_515 = var_j_513 var_j_514
                ) : (
                    m_match_cond_j_472 = m_match_bool_j_471 ? (
                            var_j_473 = lst_fail_b_53
                        ) : (
                            void_j_470 = {}
                        )
                )
        ));
flatten_fun_j_568 = fun bj_null_j_19 -> (
    flatten_fun_j_554 = fun list_maker_b_44_j_1 -> (
        flatten_fun_j_553 = fun len_b_43 -> (
            var_j_520 = list_maker_b_44_j_1;
            var_j_521 = list_maker_b_44_j_1;
            appl_j_522 = var_j_520 var_j_521;
            list_maker_b_44 = appl_j_522;
            var_j_523 = len_b_43;
            int_j_524 = 0;
            binop_j_525 = var_j_523 == int_j_524;
            if_j_552 = binop_j_525 ? (
                    record_j_526 = {};
                    record_j_527 = {j_empty = record_j_526}
                ) : (
                    bool_j_528 = false;
                    fail_b_41 = bool_j_528;
                    flatten_fun_j_537 = fun expr_b_40 -> (
                        var_j_529 = expr_b_40;
                        m_match_bool_j_531 = var_j_529 ~ any;
                        m_match_bool_j_534 = var_j_529 ~ int;
                        m_match_cond_j_535 = m_match_bool_j_534 ? (
                                bool_j_536 = true
                            ) : (
                                m_match_cond_j_532 = m_match_bool_j_531 ? (
                                        var_j_533 = fail_b_41
                                    ) : (
                                        void_j_530 = {}
                                    )
                            ));
                    flatten_fun_j_539 = fun bj_null_j_15 -> (
                        input_j_538 = input);
                    record_j_540 = {checker = flatten_fun_j_537, generator = flatten_fun_j_539};
                    proj_j_541 = record_j_540.generator;
                    int_j_542 = 0;
                    appl_j_543 = proj_j_541 int_j_542;
                    elm_b_45 = appl_j_543;
                    record_j_544 = {};
                    var_j_545 = elm_b_45;
                    var_j_546 = list_maker_b_44;
                    var_j_547 = len_b_43;
                    int_j_548 = 1;
                    binop_j_549 = var_j_547 - int_j_548;
                    appl_j_550 = var_j_546 binop_j_549;
                    record_j_551 = {j_cons = record_j_544, j_head = var_j_545, j_tail = appl_j_550}
                )));
    list_maker_b_44_j_1_j_18 = flatten_fun_j_554;
    var_j_555 = list_maker_b_44_j_1_j_18;
    var_j_556 = list_maker_b_44_j_1_j_18;
    appl_j_557 = var_j_555 var_j_556;
    list_maker_b_44_j_17 = appl_j_557;
    input_j_558 = input;
    len_b_43_j_16 = input_j_558;
    int_j_559 = 0;
    var_j_560 = len_b_43_j_16;
    binop_j_561 = int_j_559 <= var_j_560;
    if_j_567 = binop_j_561 ? (
            var_j_562 = list_maker_b_44_j_17;
            var_j_563 = len_b_43_j_16;
            appl_j_564 = var_j_562 var_j_563
        ) : (
            bool_j_565 = false;
            assume_j_566 = assume bool_j_565
        ));
record_j_569 = {checker = flatten_fun_j_519, generator = flatten_fun_j_568};
proj_j_570 = record_j_569.generator;
int_j_571 = 0;
appl_j_572 = proj_j_570 int_j_571;
xs_b_55 = appl_j_572;
flatten_fun_j_577 = fun xs_j_20 -> (
    var_j_573 = ret_type;
    var_j_574 = xs_j_20;
    m_i_689 = var_j_573 ~ fun;
    appl_j_575 = m_i_689 ? (
            c_appl_i_690 = var_j_573 var_j_574
        ) : (
            ab_i_691 = abort
        );
    proj_j_576 = appl_j_575.checker);
appl_j_579 = flatten_fun_j_577 xs_b_55;
appl_j_582 = sort xs_b_55;
appl_j_583 = appl_j_579 appl_j_582;
check_res_b_56 = appl_j_583;
if_j_591 = check_res_b_56 ? (
        var_j_585 = sort
    ) : (
        error_var_j_586 = check_res_b_56;
        assert_pred_j_587 = error_var_j_586;
        assert_res_j_588 = assert_pred_j_587 ? (
                assert_res_true_j_589 = {}
            ) : (
                ab_j_590 = abort
            )
    );
i_result = if_j_591