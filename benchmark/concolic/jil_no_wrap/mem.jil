i_first = {};
flatten_fun_j_71 = fun mem_j_5 -> (
    flatten_fun_j_70 = fun x -> (
        flatten_fun_j_69 = fun xs -> (
            var_j_42 = mem_j_5;
            var_j_43 = mem_j_5;
            appl_j_44 = var_j_42 var_j_43;
            mem = appl_j_44;
            bool_j_45 = false;
            fail_b_0 = bool_j_45;
            var_j_46 = xs;
            m_match_bool_j_48 = var_j_46 ~ {j_head, j_tail, _};
            m_match_bool_j_59 = var_j_46 ~ {j_empty, _};
            m_match_bool_j_62 = var_j_46 ~ {bj_untouched, _};
            m_match_cond_j_63 = m_match_bool_j_62 ? (
                    var_j_64 = fail_b_0;
                    assert_pred_j_65 = var_j_64;
                    assert_res_j_66 = assert_pred_j_65 ? (
                            assert_res_true_j_67 = {}
                        ) : (
                            ab_j_68 = abort
                        )
                ) : (
                    m_match_cond_j_60 = m_match_bool_j_59 ? (
                            bool_j_61 = false
                        ) : (
                            m_match_cond_j_49 = m_match_bool_j_48 ? (
                                    hd = var_j_46.j_head;
                                    tl = var_j_46.j_tail;
                                    var_j_50 = hd;
                                    var_j_51 = x;
                                    m_bl_i_461 = var_j_50 ~ int;
                                    m_br_i_462 = var_j_51 ~ int;
                                    m_b_i_463 = m_bl_i_461 and m_br_i_462;
                                    binop_j_52 = m_b_i_463 ? (
                                            c_binop_i_464 = var_j_50 == var_j_51
                                        ) : (
                                            ab_i_465 = abort
                                        );
                                    var_j_53 = mem;
                                    var_j_54 = x;
                                    m_i_466 = var_j_53 ~ fun;
                                    appl_j_55 = m_i_466 ? (
                                            c_appl_i_467 = var_j_53 var_j_54
                                        ) : (
                                            ab_i_468 = abort
                                        );
                                    var_j_56 = tl;
                                    m_i_469 = appl_j_55 ~ fun;
                                    appl_j_57 = m_i_469 ? (
                                            c_appl_i_470 = appl_j_55 var_j_56
                                        ) : (
                                            ab_i_471 = abort
                                        );
                                    m_bl_i_472 = binop_j_52 ~ bool;
                                    m_br_i_473 = appl_j_57 ~ bool;
                                    m_b_i_474 = m_bl_i_472 and m_br_i_473;
                                    binop_j_58 = m_b_i_474 ? (
                                            c_binop_i_475 = binop_j_52 or appl_j_57
                                        ) : (
                                            ab_i_476 = abort
                                        )
                                ) : (
                                    ab_j_47 = abort
                                )
                        )
                ))));
appl_j_74 = flatten_fun_j_71 flatten_fun_j_71;
ret_type_j_345 = fun x_j_39 -> (
    flatten_fun_j_210 = fun expr_b_34 -> (
        flatten_fun_j_126 = fun expr_b_30 -> (
            bool_j_75 = false;
            lst_fail_b_31 = bool_j_75;
            var_j_76 = expr_b_30;
            m_match_bool_j_78 = var_j_76 ~ any;
            m_match_bool_j_81 = var_j_76 ~ {j_head, j_tail, _};
            m_match_bool_j_123 = var_j_76 ~ {j_empty, _};
            m_match_cond_j_124 = m_match_bool_j_123 ? (
                    bool_j_125 = true
                ) : (
                    m_match_cond_j_82 = m_match_bool_j_81 ? (
                            bj_underscore = var_j_76.j_head;
                            bj_underscore2 = var_j_76.j_tail;
                            flatten_fun_j_116 = fun test_fun_b_27_j_1 -> (
                                flatten_fun_j_115 = fun test_list_b_28 -> (
                                    var_j_83 = test_fun_b_27_j_1;
                                    var_j_84 = test_fun_b_27_j_1;
                                    appl_j_85 = var_j_83 var_j_84;
                                    test_fun_b_27 = appl_j_85;
                                    var_j_86 = test_list_b_28;
                                    m_match_bool_j_88 = var_j_86 ~ {j_head, j_tail, _};
                                    m_match_bool_j_112 = var_j_86 ~ {j_empty, _};
                                    m_match_cond_j_113 = m_match_bool_j_112 ? (
                                            bool_j_114 = true
                                        ) : (
                                            m_match_cond_j_89 = m_match_bool_j_88 ? (
                                                    hd_j_15 = var_j_86.j_head;
                                                    tl_j_14 = var_j_86.j_tail;
                                                    bool_j_90 = false;
                                                    fail_b_25 = bool_j_90;
                                                    flatten_fun_j_99 = fun expr_b_24 -> (
                                                        var_j_91 = expr_b_24;
                                                        m_match_bool_j_93 = var_j_91 ~ any;
                                                        m_match_bool_j_96 = var_j_91 ~ int;
                                                        m_match_cond_j_97 = m_match_bool_j_96 ? (
                                                                bool_j_98 = true
                                                            ) : (
                                                                m_match_cond_j_94 = m_match_bool_j_93 ? (
                                                                        
                                                                    var_j_95 = fail_b_25
                                                                    ) : (
                                                                        
                                                                    void_j_92 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_101 = fun bj_null_j_13 -> (
                                                        input_j_100 = input);
                                                    record_j_102 = {checker = flatten_fun_j_99, generator = flatten_fun_j_101};
                                                    proj_j_103 = record_j_102.checker;
                                                    var_j_104 = hd_j_15;
                                                    appl_j_105 = proj_j_103 var_j_104;
                                                    elm_check_b_29 = appl_j_105;
                                                    var_j_106 = elm_check_b_29;
                                                    if_j_111 = var_j_106 ? (
                                                            var_j_107 = test_fun_b_27;
                                                            var_j_108 = tl_j_14;
                                                            appl_j_109 = var_j_107 var_j_108
                                                        ) : (
                                                            var_j_110 = elm_check_b_29
                                                        )
                                                ) : (
                                                    void_j_87 = {}
                                                )
                                        )));
                            test_fun_b_27_j_1_j_17 = flatten_fun_j_116;
                            var_j_117 = test_fun_b_27_j_1_j_17;
                            var_j_118 = test_fun_b_27_j_1_j_17;
                            appl_j_119 = var_j_117 var_j_118;
                            test_fun_b_27_j_16 = appl_j_119;
                            var_j_120 = test_fun_b_27_j_16;
                            var_j_121 = expr_b_30;
                            appl_j_122 = var_j_120 var_j_121
                        ) : (
                            m_match_cond_j_79 = m_match_bool_j_78 ? (
                                    var_j_80 = lst_fail_b_31
                                ) : (
                                    void_j_77 = {}
                                )
                        )
                ));
        flatten_fun_j_175 = fun bj_null_j_22 -> (
            flatten_fun_j_161 = fun list_maker_b_22_j_2 -> (
                flatten_fun_j_160 = fun len_b_21 -> (
                    var_j_127 = list_maker_b_22_j_2;
                    var_j_128 = list_maker_b_22_j_2;
                    appl_j_129 = var_j_127 var_j_128;
                    list_maker_b_22 = appl_j_129;
                    var_j_130 = len_b_21;
                    int_j_131 = 0;
                    binop_j_132 = var_j_130 == int_j_131;
                    if_j_159 = binop_j_132 ? (
                            record_j_133 = {};
                            record_j_134 = {j_empty = record_j_133}
                        ) : (
                            bool_j_135 = false;
                            fail_b_19 = bool_j_135;
                            flatten_fun_j_144 = fun expr_b_18 -> (
                                var_j_136 = expr_b_18;
                                m_match_bool_j_138 = var_j_136 ~ any;
                                m_match_bool_j_141 = var_j_136 ~ int;
                                m_match_cond_j_142 = m_match_bool_j_141 ? (
                                        bool_j_143 = true
                                    ) : (
                                        m_match_cond_j_139 = m_match_bool_j_138 ? (
                                                var_j_140 = fail_b_19
                                            ) : (
                                                void_j_137 = {}
                                            )
                                    ));
                            flatten_fun_j_146 = fun bj_null_j_18 -> (
                                input_j_145 = input);
                            record_j_147 = {checker = flatten_fun_j_144, generator = flatten_fun_j_146};
                            proj_j_148 = record_j_147.generator;
                            int_j_149 = 0;
                            appl_j_150 = proj_j_148 int_j_149;
                            elm_b_23 = appl_j_150;
                            record_j_151 = {};
                            var_j_152 = elm_b_23;
                            var_j_153 = list_maker_b_22;
                            var_j_154 = len_b_21;
                            int_j_155 = 1;
                            binop_j_156 = var_j_154 - int_j_155;
                            appl_j_157 = var_j_153 binop_j_156;
                            record_j_158 = {j_cons = record_j_151, j_head = var_j_152, j_tail = appl_j_157}
                        )));
            list_maker_b_22_j_2_j_21 = flatten_fun_j_161;
            var_j_162 = list_maker_b_22_j_2_j_21;
            var_j_163 = list_maker_b_22_j_2_j_21;
            appl_j_164 = var_j_162 var_j_163;
            list_maker_b_22_j_20 = appl_j_164;
            input_j_165 = input;
            len_b_21_j_19 = input_j_165;
            int_j_166 = 0;
            var_j_167 = len_b_21_j_19;
            binop_j_168 = int_j_166 <= var_j_167;
            if_j_174 = binop_j_168 ? (
                    var_j_169 = list_maker_b_22_j_20;
                    var_j_170 = len_b_21_j_19;
                    appl_j_171 = var_j_169 var_j_170
                ) : (
                    bool_j_172 = false;
                    assume_j_173 = assume bool_j_172
                ));
        record_j_176 = {checker = flatten_fun_j_126, generator = flatten_fun_j_175};
        proj_j_177 = record_j_176.checker;
        var_j_178 = expr_b_34;
        appl_j_179 = proj_j_177 var_j_178;
        t_check_b_35 = appl_j_179;
        var_j_180 = t_check_b_35;
        if_j_209 = var_j_180 ? (
                bool_j_181 = false;
                pred_check_b_36 = bool_j_181;
                flatten_fun_j_202 = fun l -> (
                    bool_j_182 = false;
                    fail_b_33 = bool_j_182;
                    var_j_183 = l;
                    m_match_bool_j_185 = var_j_183 ~ {j_head, j_tail, _};
                    m_match_bool_j_192 = var_j_183 ~ {j_empty, _};
                    m_match_bool_j_195 = var_j_183 ~ {bj_untouched, _};
                    m_match_cond_j_196 = m_match_bool_j_195 ? (
                            var_j_197 = fail_b_33;
                            assert_pred_j_198 = var_j_197;
                            assert_res_j_199 = assert_pred_j_198 ? (
                                    assert_res_true_j_200 = {}
                                ) : (
                                    ab_j_201 = abort
                                )
                        ) : (
                            m_match_cond_j_193 = m_match_bool_j_192 ? (
                                    bool_j_194 = true
                                ) : (
                                    m_match_cond_j_186 = m_match_bool_j_185 ? (
                                            a = var_j_183.j_head;
                                            b = var_j_183.j_tail;
                                            var_j_187 = appl_j_74;
                                            var_j_188 = x_j_39;
                                            m_i_477 = var_j_187 ~ fun;
                                            appl_j_189 = m_i_477 ? (
                                                    c_appl_i_478 = var_j_187 var_j_188
                                                ) : (
                                                    ab_i_479 = abort
                                                );
                                            var_j_190 = l;
                                            m_i_480 = appl_j_189 ~ fun;
                                            appl_j_191 = m_i_480 ? (
                                                    c_appl_i_481 = appl_j_189 var_j_190
                                                ) : (
                                                    ab_i_482 = abort
                                                )
                                        ) : (
                                            ab_j_184 = abort
                                        )
                                )
                        ));
                var_j_203 = expr_b_34;
                appl_j_204 = flatten_fun_j_202 var_j_203;
                if_j_207 = appl_j_204 ? (
                        bool_j_205 = true
                    ) : (
                        var_j_206 = pred_check_b_36
                    )
            ) : (
                var_j_208 = t_check_b_35
            ));
    flatten_fun_j_343 = fun bj_null_j_38 -> (
        flatten_fun_j_262 = fun expr_b_13 -> (
            bool_j_211 = false;
            lst_fail_b_14 = bool_j_211;
            var_j_212 = expr_b_13;
            m_match_bool_j_214 = var_j_212 ~ any;
            m_match_bool_j_217 = var_j_212 ~ {j_head, j_tail, _};
            m_match_bool_j_259 = var_j_212 ~ {j_empty, _};
            m_match_cond_j_260 = m_match_bool_j_259 ? (
                    bool_j_261 = true
                ) : (
                    m_match_cond_j_218 = m_match_bool_j_217 ? (
                            bj_underscore_j_29 = var_j_212.j_head;
                            bj_underscore2_j_28 = var_j_212.j_tail;
                            flatten_fun_j_252 = fun test_fun_b_10_j_3 -> (
                                flatten_fun_j_251 = fun test_list_b_11 -> (
                                    var_j_219 = test_fun_b_10_j_3;
                                    var_j_220 = test_fun_b_10_j_3;
                                    appl_j_221 = var_j_219 var_j_220;
                                    test_fun_b_10 = appl_j_221;
                                    var_j_222 = test_list_b_11;
                                    m_match_bool_j_224 = var_j_222 ~ 
                                        {j_head, j_tail, _};
                                    m_match_bool_j_248 = var_j_222 ~ 
                                        {j_empty, _};
                                    m_match_cond_j_249 = m_match_bool_j_248 ? (
                                            bool_j_250 = true
                                        ) : (
                                            m_match_cond_j_225 = m_match_bool_j_224 ? (
                                                    hd_j_25 = var_j_222.j_head;
                                                    tl_j_24 = var_j_222.j_tail;
                                                    bool_j_226 = false;
                                                    fail_b_8 = bool_j_226;
                                                    flatten_fun_j_235 = fun expr_b_7 -> (
                                                        var_j_227 = expr_b_7;
                                                        m_match_bool_j_229 = var_j_227 ~ any;
                                                        m_match_bool_j_232 = var_j_227 ~ int;
                                                        m_match_cond_j_233 = m_match_bool_j_232 ? (
                                                                bool_j_234 = true
                                                            ) : (
                                                                m_match_cond_j_230 = m_match_bool_j_229 ? (
                                                                        
                                                                    var_j_231 = fail_b_8
                                                                    ) : (
                                                                        
                                                                    void_j_228 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_237 = fun bj_null_j_23 -> (
                                                        input_j_236 = input);
                                                    record_j_238 = {checker = flatten_fun_j_235, generator = flatten_fun_j_237};
                                                    proj_j_239 = record_j_238.checker;
                                                    var_j_240 = hd_j_25;
                                                    appl_j_241 = proj_j_239 var_j_240;
                                                    elm_check_b_12 = appl_j_241;
                                                    var_j_242 = elm_check_b_12;
                                                    if_j_247 = var_j_242 ? (
                                                            var_j_243 = test_fun_b_10;
                                                            var_j_244 = tl_j_24;
                                                            appl_j_245 = var_j_243 var_j_244
                                                        ) : (
                                                            var_j_246 = elm_check_b_12
                                                        )
                                                ) : (
                                                    void_j_223 = {}
                                                )
                                        )));
                            test_fun_b_10_j_3_j_27 = flatten_fun_j_252;
                            var_j_253 = test_fun_b_10_j_3_j_27;
                            var_j_254 = test_fun_b_10_j_3_j_27;
                            appl_j_255 = var_j_253 var_j_254;
                            test_fun_b_10_j_26 = appl_j_255;
                            var_j_256 = test_fun_b_10_j_26;
                            var_j_257 = expr_b_13;
                            appl_j_258 = var_j_256 var_j_257
                        ) : (
                            m_match_cond_j_215 = m_match_bool_j_214 ? (
                                    var_j_216 = lst_fail_b_14
                                ) : (
                                    void_j_213 = {}
                                )
                        )
                ));
        flatten_fun_j_311 = fun bj_null_j_34 -> (
            flatten_fun_j_297 = fun list_maker_b_5_j_4 -> (
                flatten_fun_j_296 = fun len_b_4 -> (
                    var_j_263 = list_maker_b_5_j_4;
                    var_j_264 = list_maker_b_5_j_4;
                    appl_j_265 = var_j_263 var_j_264;
                    list_maker_b_5 = appl_j_265;
                    var_j_266 = len_b_4;
                    int_j_267 = 0;
                    binop_j_268 = var_j_266 == int_j_267;
                    if_j_295 = binop_j_268 ? (
                            record_j_269 = {};
                            record_j_270 = {j_empty = record_j_269}
                        ) : (
                            bool_j_271 = false;
                            fail_b_2 = bool_j_271;
                            flatten_fun_j_280 = fun expr_b_1 -> (
                                var_j_272 = expr_b_1;
                                m_match_bool_j_274 = var_j_272 ~ any;
                                m_match_bool_j_277 = var_j_272 ~ int;
                                m_match_cond_j_278 = m_match_bool_j_277 ? (
                                        bool_j_279 = true
                                    ) : (
                                        m_match_cond_j_275 = m_match_bool_j_274 ? (
                                                var_j_276 = fail_b_2
                                            ) : (
                                                void_j_273 = {}
                                            )
                                    ));
                            flatten_fun_j_282 = fun bj_null_j_30 -> (
                                input_j_281 = input);
                            record_j_283 = {checker = flatten_fun_j_280, generator = flatten_fun_j_282};
                            proj_j_284 = record_j_283.generator;
                            int_j_285 = 0;
                            appl_j_286 = proj_j_284 int_j_285;
                            elm_b_6 = appl_j_286;
                            record_j_287 = {};
                            var_j_288 = elm_b_6;
                            var_j_289 = list_maker_b_5;
                            var_j_290 = len_b_4;
                            int_j_291 = 1;
                            binop_j_292 = var_j_290 - int_j_291;
                            appl_j_293 = var_j_289 binop_j_292;
                            record_j_294 = {j_cons = record_j_287, j_head = var_j_288, j_tail = appl_j_293}
                        )));
            list_maker_b_5_j_4_j_33 = flatten_fun_j_297;
            var_j_298 = list_maker_b_5_j_4_j_33;
            var_j_299 = list_maker_b_5_j_4_j_33;
            appl_j_300 = var_j_298 var_j_299;
            list_maker_b_5_j_32 = appl_j_300;
            input_j_301 = input;
            len_b_4_j_31 = input_j_301;
            int_j_302 = 0;
            var_j_303 = len_b_4_j_31;
            binop_j_304 = int_j_302 <= var_j_303;
            if_j_310 = binop_j_304 ? (
                    var_j_305 = list_maker_b_5_j_32;
                    var_j_306 = len_b_4_j_31;
                    appl_j_307 = var_j_305 var_j_306
                ) : (
                    bool_j_308 = false;
                    assume_j_309 = assume bool_j_308
                ));
        record_j_312 = {checker = flatten_fun_j_262, generator = flatten_fun_j_311};
        proj_j_313 = record_j_312.generator;
        int_j_314 = 0;
        appl_j_315 = proj_j_313 int_j_314;
        candidate_b_17 = appl_j_315;
        flatten_fun_j_336 = fun l_j_37 -> (
            bool_j_316 = false;
            fail_b_16 = bool_j_316;
            var_j_317 = l_j_37;
            m_match_bool_j_319 = var_j_317 ~ {j_head, j_tail, _};
            m_match_bool_j_326 = var_j_317 ~ {j_empty, _};
            m_match_bool_j_329 = var_j_317 ~ {bj_untouched, _};
            m_match_cond_j_330 = m_match_bool_j_329 ? (
                    var_j_331 = fail_b_16;
                    assert_pred_j_332 = var_j_331;
                    assert_res_j_333 = assert_pred_j_332 ? (
                            assert_res_true_j_334 = {}
                        ) : (
                            ab_j_335 = abort
                        )
                ) : (
                    m_match_cond_j_327 = m_match_bool_j_326 ? (
                            bool_j_328 = true
                        ) : (
                            m_match_cond_j_320 = m_match_bool_j_319 ? (
                                    a_j_36 = var_j_317.j_head;
                                    b_j_35 = var_j_317.j_tail;
                                    var_j_321 = appl_j_74;
                                    var_j_322 = x_j_39;
                                    m_i_483 = var_j_321 ~ fun;
                                    appl_j_323 = m_i_483 ? (
                                            c_appl_i_484 = var_j_321 var_j_322
                                        ) : (
                                            ab_i_485 = abort
                                        );
                                    var_j_324 = l_j_37;
                                    m_i_486 = appl_j_323 ~ fun;
                                    appl_j_325 = m_i_486 ? (
                                            c_appl_i_487 = appl_j_323 var_j_324
                                        ) : (
                                            ab_i_488 = abort
                                        )
                                ) : (
                                    ab_j_318 = abort
                                )
                        )
                ));
        var_j_337 = candidate_b_17;
        appl_j_338 = flatten_fun_j_336 var_j_337;
        if_j_342 = appl_j_338 ? (
                var_j_339 = candidate_b_17
            ) : (
                bool_j_340 = false;
                assume_j_341 = assume bool_j_340
            ));
    record_j_344 = {checker = flatten_fun_j_210, generator = flatten_fun_j_343});
ret_type = ret_type_j_345;
flatten_fun_j_367 = fun mk_list_j_0 -> (
    flatten_fun_j_366 = fun x_j_6 -> (
        var_j_346 = mk_list_j_0;
        var_j_347 = mk_list_j_0;
        appl_j_348 = var_j_346 var_j_347;
        mk_list = appl_j_348;
        flatten_fun_j_365 = fun n -> (
            var_j_349 = n;
            int_j_350 = 0;
            m_bl_i_489 = var_j_349 ~ int;
            m_br_i_490 = int_j_350 ~ int;
            m_b_i_491 = m_bl_i_489 and m_br_i_490;
            binop_j_351 = m_b_i_491 ? (
                    c_binop_i_492 = var_j_349 < int_j_350
                ) : (
                    ab_i_493 = abort
                );
            m_i_494 = binop_j_351 ~ bool;
            if_j_364 = m_i_494 ? (
                    c_cond_i_506 = binop_j_351 ? (
                            record_j_352 = {};
                            record_j_353 = {j_empty = record_j_352}
                        ) : (
                            record_j_354 = {};
                            var_j_355 = n;
                            var_j_356 = mk_list;
                            var_j_357 = x_j_6;
                            m_i_495 = var_j_356 ~ fun;
                            appl_j_358 = m_i_495 ? (
                                    c_appl_i_496 = var_j_356 var_j_357
                                ) : (
                                    ab_i_497 = abort
                                );
                            var_j_359 = n;
                            int_j_360 = 1;
                            m_bl_i_498 = var_j_359 ~ int;
                            m_br_i_499 = int_j_360 ~ int;
                            m_b_i_500 = m_bl_i_498 and m_br_i_499;
                            binop_j_361 = m_b_i_500 ? (
                                    c_binop_i_501 = var_j_359 - int_j_360
                                ) : (
                                    ab_i_502 = abort
                                );
                            m_i_503 = appl_j_358 ~ fun;
                            appl_j_362 = m_i_503 ? (
                                    c_appl_i_504 = appl_j_358 binop_j_361
                                ) : (
                                    ab_i_505 = abort
                                );
                            record_j_363 = {j_cons = record_j_354, j_head = var_j_355, j_tail = appl_j_362}
                        )
                ) : (
                    ab_i_507 = abort
                ))));
appl_j_370 = flatten_fun_j_367 flatten_fun_j_367;
bool_j_371 = false;
fail_b_39 = bool_j_371;
flatten_fun_j_380 = fun expr_b_38 -> (
    var_j_372 = expr_b_38;
    m_match_bool_j_374 = var_j_372 ~ any;
    m_match_bool_j_377 = var_j_372 ~ int;
    m_match_cond_j_378 = m_match_bool_j_377 ? (
            bool_j_379 = true
        ) : (
            m_match_cond_j_375 = m_match_bool_j_374 ? (
                    var_j_376 = fail_b_39
                ) : (
                    void_j_373 = {}
                )
        ));
flatten_fun_j_382 = fun bj_null -> (
    input_j_381 = input);
record_j_383 = {checker = flatten_fun_j_380, generator = flatten_fun_j_382};
proj_j_384 = record_j_383.generator;
int_j_385 = 0;
appl_j_386 = proj_j_384 int_j_385;
x_b_58 = appl_j_386;
flatten_fun_j_446 = fun x_j_10 -> (
    flatten_fun_j_412 = fun expr_b_49 -> (
        bool_j_387 = false;
        fail_b_47 = bool_j_387;
        flatten_fun_j_396 = fun expr_b_46 -> (
            var_j_388 = expr_b_46;
            m_match_bool_j_390 = var_j_388 ~ any;
            m_match_bool_j_393 = var_j_388 ~ int;
            m_match_cond_j_394 = m_match_bool_j_393 ? (
                    bool_j_395 = true
                ) : (
                    m_match_cond_j_391 = m_match_bool_j_390 ? (
                            var_j_392 = fail_b_47
                        ) : (
                            void_j_389 = {}
                        )
                ));
        flatten_fun_j_398 = fun bj_null_j_7 -> (
            input_j_397 = input);
        record_j_399 = {checker = flatten_fun_j_396, generator = flatten_fun_j_398};
        proj_j_400 = record_j_399.generator;
        int_j_401 = 0;
        appl_j_402 = proj_j_400 int_j_401;
        arg_assert_b_50 = appl_j_402;
        var_j_403 = expr_b_49;
        var_j_404 = arg_assert_b_50;
        appl_j_405 = var_j_403 var_j_404;
        fun_ret_b_51 = appl_j_405;
        var_j_406 = ret_type;
        var_j_407 = x_j_10;
        m_i_508 = var_j_406 ~ fun;
        appl_j_408 = m_i_508 ? (
                c_appl_i_509 = var_j_406 var_j_407
            ) : (
                ab_i_510 = abort
            );
        proj_j_409 = appl_j_408.checker;
        var_j_410 = fun_ret_b_51;
        appl_j_411 = proj_j_409 var_j_410);
    flatten_fun_j_443 = fun bj_null_j_9 -> (
        flatten_fun_j_442 = fun arg_assume_b_44 -> (
            bool_j_413 = false;
            fail_b_42 = bool_j_413;
            flatten_fun_j_422 = fun expr_b_41 -> (
                var_j_414 = expr_b_41;
                m_match_bool_j_416 = var_j_414 ~ any;
                m_match_bool_j_419 = var_j_414 ~ int;
                m_match_cond_j_420 = m_match_bool_j_419 ? (
                        bool_j_421 = true
                    ) : (
                        m_match_cond_j_417 = m_match_bool_j_416 ? (
                                var_j_418 = fail_b_42
                            ) : (
                                void_j_415 = {}
                            )
                    ));
            flatten_fun_j_424 = fun bj_null_j_8 -> (
                input_j_423 = input);
            record_j_425 = {checker = flatten_fun_j_422, generator = flatten_fun_j_424};
            proj_j_426 = record_j_425.checker;
            var_j_427 = arg_assume_b_44;
            appl_j_428 = proj_j_426 var_j_427;
            if_j_441 = appl_j_428 ? (
                    var_j_429 = ret_type;
                    var_j_430 = x_j_10;
                    m_i_511 = var_j_429 ~ fun;
                    appl_j_431 = m_i_511 ? (
                            c_appl_i_512 = var_j_429 var_j_430
                        ) : (
                            ab_i_513 = abort
                        );
                    proj_j_432 = appl_j_431.generator;
                    int_j_433 = 0;
                    appl_j_434 = proj_j_432 int_j_433
                ) : (
                    bool_j_435 = false;
                    fail_b_45 = bool_j_435;
                    var_j_436 = fail_b_45;
                    assert_pred_j_437 = var_j_436;
                    assert_res_j_438 = assert_pred_j_437 ? (
                            assert_res_true_j_439 = {}
                        ) : (
                            ab_j_440 = abort
                        )
                )));
    record_j_444 = {checker = flatten_fun_j_412, generator = flatten_fun_j_443};
    proj_j_445 = record_j_444.checker);
appl_j_448 = flatten_fun_j_446 x_b_58;
appl_j_451 = appl_j_370 x_b_58;
appl_j_452 = appl_j_448 appl_j_451;
check_res_b_57 = appl_j_452;
if_j_460 = check_res_b_57 ? (
        var_j_454 = appl_j_370
    ) : (
        error_var_j_455 = check_res_b_57;
        assert_pred_j_456 = error_var_j_455;
        assert_res_j_457 = assert_pred_j_456 ? (
                assert_res_true_j_458 = {}
            ) : (
                ab_j_459 = abort
            )
    );
i_result = if_j_460