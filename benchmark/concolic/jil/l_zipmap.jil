i_first = {};
flatten_fun_j_58 = fun zip_j_1 -> (
    flatten_fun_j_57 = fun x -> (
        flatten_fun_j_56 = fun y -> (
            var_j_19 = zip_j_1;
            var_j_20 = zip_j_1;
            appl_j_21 = var_j_19 var_j_20;
            zip = appl_j_21;
            var_j_22 = x;
            int_j_23 = 0;
            m_bl_i_289 = var_j_22 ~ int;
            m_br_i_290 = int_j_23 ~ int;
            m_b_i_291 = m_bl_i_289 and m_br_i_290;
            binop_j_24 = m_b_i_291 ? (
                    c_binop_i_292 = var_j_22 == int_j_23
                ) : (
                    ab_i_293 = abort
                );
            var_j_25 = y;
            int_j_26 = 0;
            m_bl_i_294 = var_j_25 ~ int;
            m_br_i_295 = int_j_26 ~ int;
            m_b_i_296 = m_bl_i_294 and m_br_i_295;
            binop_j_27 = m_b_i_296 ? (
                    c_binop_i_297 = var_j_25 == int_j_26
                ) : (
                    ab_i_298 = abort
                );
            m_bl_i_299 = binop_j_24 ~ bool;
            m_br_i_300 = binop_j_27 ~ bool;
            m_b_i_301 = m_bl_i_299 and m_br_i_300;
            binop_j_28 = m_b_i_301 ? (
                    c_binop_i_302 = binop_j_24 and binop_j_27
                ) : (
                    ab_i_303 = abort
                );
            m_i_304 = binop_j_28 ~ bool;
            if_j_55 = m_i_304 ? (
                    c_cond_i_350 = binop_j_28 ? (
                            var_j_29 = x
                        ) : (
                            var_j_30 = x;
                            int_j_31 = 0;
                            m_bl_i_305 = var_j_30 ~ int;
                            m_br_i_306 = int_j_31 ~ int;
                            m_b_i_307 = m_bl_i_305 and m_br_i_306;
                            binop_j_32 = m_b_i_307 ? (
                                    c_binop_i_308 = var_j_30 == int_j_31
                                ) : (
                                    ab_i_309 = abort
                                );
                            m_i_310 = binop_j_32 ~ bool;
                            notop_j_33 = m_i_310 ? (
                                    c_not_i_311 = not binop_j_32
                                ) : (
                                    ab_i_312 = abort
                                );
                            var_j_34 = y;
                            int_j_35 = 0;
                            m_bl_i_313 = var_j_34 ~ int;
                            m_br_i_314 = int_j_35 ~ int;
                            m_b_i_315 = m_bl_i_313 and m_br_i_314;
                            binop_j_36 = m_b_i_315 ? (
                                    c_binop_i_316 = var_j_34 == int_j_35
                                ) : (
                                    ab_i_317 = abort
                                );
                            m_bl_i_318 = notop_j_33 ~ bool;
                            m_br_i_319 = binop_j_36 ~ bool;
                            m_b_i_320 = m_bl_i_318 and m_br_i_319;
                            binop_j_37 = m_b_i_320 ? (
                                    c_binop_i_321 = notop_j_33 and binop_j_36
                                ) : (
                                    ab_i_322 = abort
                                );
                            m_i_323 = binop_j_37 ~ bool;
                            if_j_54 = m_i_323 ? (
                                    c_cond_i_348 = binop_j_37 ? (
                                            int_j_38 = 1;
                                            var_j_39 = zip;
                                            var_j_40 = x;
                                            int_j_41 = 1;
                                            m_bl_i_324 = var_j_40 ~ int;
                                            m_br_i_325 = int_j_41 ~ int;
                                            m_b_i_326 = m_bl_i_324 and m_br_i_325;
                                            binop_j_42 = m_b_i_326 ? (
                                                    c_binop_i_327 = var_j_40 - int_j_41
                                                ) : (
                                                    ab_i_328 = abort
                                                );
                                            m_i_329 = var_j_39 ~ fun;
                                            appl_j_43 = m_i_329 ? (
                                                    c_appl_i_330 = var_j_39 binop_j_42
                                                ) : (
                                                    ab_i_331 = abort
                                                );
                                            var_j_44 = y;
                                            int_j_45 = 1;
                                            m_bl_i_332 = var_j_44 ~ int;
                                            m_br_i_333 = int_j_45 ~ int;
                                            m_b_i_334 = m_bl_i_332 and m_br_i_333;
                                            binop_j_46 = m_b_i_334 ? (
                                                    c_binop_i_335 = var_j_44 - int_j_45
                                                ) : (
                                                    ab_i_336 = abort
                                                );
                                            m_i_337 = appl_j_43 ~ fun;
                                            appl_j_47 = m_i_337 ? (
                                                    c_appl_i_338 = appl_j_43 binop_j_46
                                                ) : (
                                                    ab_i_339 = abort
                                                );
                                            m_bl_i_340 = int_j_38 ~ int;
                                            m_br_i_341 = appl_j_47 ~ int;
                                            m_b_i_342 = m_bl_i_340 and m_br_i_341;
                                            binop_j_48 = m_b_i_342 ? (
                                                    c_binop_i_343 = int_j_38 + appl_j_47
                                                ) : (
                                                    ab_i_344 = abort
                                                )
                                        ) : (
                                            bool_j_49 = false;
                                            assert_pred_j_50 = bool_j_49;
                                            m_i_345 = assert_pred_j_50 ~ bool;
                                            assert_res_j_51 = m_i_345 ? (
                                                    c_cond_i_346 = assert_pred_j_50 ? (
                                                            assert_res_true_j_52 = 
                                                                {}
                                                        ) : (
                                                            ab_j_53 = abort
                                                        )
                                                ) : (
                                                    ab_i_347 = abort
                                                )
                                        )
                                ) : (
                                    ab_i_349 = abort
                                )
                        )
                ) : (
                    ab_i_351 = abort
                ))));
appl_j_61 = flatten_fun_j_58 flatten_fun_j_58;
flatten_fun_j_78 = fun map_j_0 -> (
    flatten_fun_j_77 = fun x_j_2 -> (
        var_j_62 = map_j_0;
        var_j_63 = map_j_0;
        appl_j_64 = var_j_62 var_j_63;
        map = appl_j_64;
        var_j_65 = x_j_2;
        int_j_66 = 0;
        m_bl_i_352 = var_j_65 ~ int;
        m_br_i_353 = int_j_66 ~ int;
        m_b_i_354 = m_bl_i_352 and m_br_i_353;
        binop_j_67 = m_b_i_354 ? (
                c_binop_i_355 = var_j_65 == int_j_66
            ) : (
                ab_i_356 = abort
            );
        m_i_357 = binop_j_67 ~ bool;
        if_j_76 = m_i_357 ? (
                c_cond_i_371 = binop_j_67 ? (
                        var_j_68 = x_j_2
                    ) : (
                        int_j_69 = 1;
                        var_j_70 = map;
                        var_j_71 = x_j_2;
                        int_j_72 = 1;
                        m_bl_i_358 = var_j_71 ~ int;
                        m_br_i_359 = int_j_72 ~ int;
                        m_b_i_360 = m_bl_i_358 and m_br_i_359;
                        binop_j_73 = m_b_i_360 ? (
                                c_binop_i_361 = var_j_71 - int_j_72
                            ) : (
                                ab_i_362 = abort
                            );
                        m_i_363 = var_j_70 ~ fun;
                        appl_j_74 = m_i_363 ? (
                                c_appl_i_364 = var_j_70 binop_j_73
                            ) : (
                                ab_i_365 = abort
                            );
                        m_bl_i_366 = int_j_69 ~ int;
                        m_br_i_367 = appl_j_74 ~ int;
                        m_b_i_368 = m_bl_i_366 and m_br_i_367;
                        binop_j_75 = m_b_i_368 ? (
                                c_binop_i_369 = int_j_69 + appl_j_74
                            ) : (
                                ab_i_370 = abort
                            )
                    )
            ) : (
                ab_i_372 = abort
            )));
appl_j_81 = flatten_fun_j_78 flatten_fun_j_78;
main_j_188 = fun n_j_14 -> (
    flatten_fun_j_185 = fun n_b_0 -> (
        bool_j_82 = false;
        fail_b_6 = bool_j_82;
        flatten_fun_j_91 = fun expr_b_5 -> (
            var_j_83 = expr_b_5;
            m_match_bool_j_85 = var_j_83 ~ any;
            m_match_bool_j_88 = var_j_83 ~ int;
            m_match_cond_j_89 = m_match_bool_j_88 ? (
                    bool_j_90 = true
                ) : (
                    m_match_cond_j_86 = m_match_bool_j_85 ? (
                            var_j_87 = fail_b_6
                        ) : (
                            void_j_84 = {}
                        )
                ));
        flatten_fun_j_93 = fun bj_null_j_7 -> (
            input_j_92 = input);
        flatten_fun_j_95 = fun expr_b_7 -> (
            var_j_94 = expr_b_7);
        record_j_96 = {checker = flatten_fun_j_91, generator = flatten_fun_j_93, wrapper = flatten_fun_j_95};
        proj_j_97 = record_j_96.checker;
        var_j_98 = n_b_0;
        appl_j_99 = proj_j_97 var_j_98;
        arg_check_b_1 = appl_j_99;
        var_j_100 = arg_check_b_1;
        if_j_184 = var_j_100 ? (
                flatten_fun_j_167 = fun n_j_13 -> (
                    flatten_fun_j_133 = fun expr_b_15 -> (
                        bool_j_101 = false;
                        fail_b_13 = bool_j_101;
                        flatten_fun_j_110 = fun expr_b_12 -> (
                            var_j_102 = expr_b_12;
                            m_match_bool_j_104 = var_j_102 ~ any;
                            m_match_bool_j_107 = var_j_102 ~ int;
                            m_match_cond_j_108 = m_match_bool_j_107 ? (
                                    bool_j_109 = true
                                ) : (
                                    m_match_cond_j_105 = m_match_bool_j_104 ? (
                                            var_j_106 = fail_b_13
                                        ) : (
                                            void_j_103 = {}
                                        )
                                ));
                        flatten_fun_j_112 = fun bj_null_j_8 -> (
                            input_j_111 = input);
                        flatten_fun_j_114 = fun expr_b_14 -> (
                            var_j_113 = expr_b_14);
                        record_j_115 = {checker = flatten_fun_j_110, generator = flatten_fun_j_112, wrapper = flatten_fun_j_114};
                        proj_j_116 = record_j_115.checker;
                        var_j_117 = expr_b_15;
                        appl_j_118 = proj_j_116 var_j_117;
                        t_check_b_16 = appl_j_118;
                        var_j_119 = t_check_b_16;
                        if_j_132 = var_j_119 ? (
                                bool_j_120 = false;
                                pred_check_b_17 = bool_j_120;
                                flatten_fun_j_125 = fun i_j_9 -> (
                                    var_j_121 = i_j_9;
                                    var_j_122 = n_j_13;
                                    m_bl_i_373 = var_j_121 ~ int;
                                    m_br_i_374 = var_j_122 ~ int;
                                    m_b_i_375 = m_bl_i_373 and m_br_i_374;
                                    binop_j_123 = m_b_i_375 ? (
                                            c_binop_i_376 = var_j_121 == var_j_122
                                        ) : (
                                            ab_i_377 = abort
                                        );
                                    m_i_378 = binop_j_123 ~ bool;
                                    notop_j_124 = m_i_378 ? (
                                            c_not_i_379 = not binop_j_123
                                        ) : (
                                            ab_i_380 = abort
                                        ));
                                var_j_126 = expr_b_15;
                                appl_j_127 = flatten_fun_j_125 var_j_126;
                                if_j_130 = appl_j_127 ? (
                                        bool_j_128 = true
                                    ) : (
                                        var_j_129 = pred_check_b_17
                                    )
                            ) : (
                                var_j_131 = t_check_b_16
                            ));
                    flatten_fun_j_163 = fun bj_null_j_12 -> (
                        bool_j_134 = false;
                        fail_b_9 = bool_j_134;
                        flatten_fun_j_143 = fun expr_b_8 -> (
                            var_j_135 = expr_b_8;
                            m_match_bool_j_137 = var_j_135 ~ any;
                            m_match_bool_j_140 = var_j_135 ~ int;
                            m_match_cond_j_141 = m_match_bool_j_140 ? (
                                    bool_j_142 = true
                                ) : (
                                    m_match_cond_j_138 = m_match_bool_j_137 ? (
                                            var_j_139 = fail_b_9
                                        ) : (
                                            void_j_136 = {}
                                        )
                                ));
                        flatten_fun_j_145 = fun bj_null_j_10 -> (
                            input_j_144 = input);
                        flatten_fun_j_147 = fun expr_b_10 -> (
                            var_j_146 = expr_b_10);
                        record_j_148 = {checker = flatten_fun_j_143, generator = flatten_fun_j_145, wrapper = flatten_fun_j_147};
                        proj_j_149 = record_j_148.generator;
                        int_j_150 = 0;
                        appl_j_151 = proj_j_149 int_j_150;
                        candidate_b_11 = appl_j_151;
                        flatten_fun_j_156 = fun i_j_11 -> (
                            var_j_152 = i_j_11;
                            var_j_153 = n_j_13;
                            m_bl_i_381 = var_j_152 ~ int;
                            m_br_i_382 = var_j_153 ~ int;
                            m_b_i_383 = m_bl_i_381 and m_br_i_382;
                            binop_j_154 = m_b_i_383 ? (
                                    c_binop_i_384 = var_j_152 == var_j_153
                                ) : (
                                    ab_i_385 = abort
                                );
                            m_i_386 = binop_j_154 ~ bool;
                            notop_j_155 = m_i_386 ? (
                                    c_not_i_387 = not binop_j_154
                                ) : (
                                    ab_i_388 = abort
                                ));
                        var_j_157 = candidate_b_11;
                        appl_j_158 = flatten_fun_j_156 var_j_157;
                        if_j_162 = appl_j_158 ? (
                                var_j_159 = candidate_b_11
                            ) : (
                                bool_j_160 = false;
                                assume_j_161 = assume bool_j_160
                            ));
                    flatten_fun_j_165 = fun expr_b_18 -> (
                        var_j_164 = expr_b_18);
                    record_j_166 = {checker = flatten_fun_j_133, generator = flatten_fun_j_163, wrapper = flatten_fun_j_165});
                var_j_168 = n_b_0;
                appl_j_169 = flatten_fun_j_167 var_j_168;
                proj_j_170 = appl_j_169.wrapper;
                var_j_171 = appl_j_81;
                var_j_172 = appl_j_61;
                var_j_173 = n_j_14;
                m_i_389 = var_j_172 ~ fun;
                appl_j_174 = m_i_389 ? (
                        c_appl_i_390 = var_j_172 var_j_173
                    ) : (
                        ab_i_391 = abort
                    );
                var_j_175 = n_j_14;
                m_i_392 = appl_j_174 ~ fun;
                appl_j_176 = m_i_392 ? (
                        c_appl_i_393 = appl_j_174 var_j_175
                    ) : (
                        ab_i_394 = abort
                    );
                m_i_395 = var_j_171 ~ fun;
                appl_j_177 = m_i_395 ? (
                        c_appl_i_396 = var_j_171 appl_j_176
                    ) : (
                        ab_i_397 = abort
                    );
                m_i_398 = proj_j_170 ~ fun;
                appl_j_178 = m_i_398 ? (
                        c_appl_i_399 = proj_j_170 appl_j_177
                    ) : (
                        ab_i_400 = abort
                    )
            ) : (
                bool_j_179 = false;
                assert_pred_j_180 = bool_j_179;
                assert_res_j_181 = assert_pred_j_180 ? (
                        assert_res_true_j_182 = {}
                    ) : (
                        ab_j_183 = abort
                    )
            ));
    var_j_186 = n_j_14;
    appl_j_187 = flatten_fun_j_185 var_j_186);
main = main_j_188;
bool_j_189 = false;
fail_b_3 = bool_j_189;
flatten_fun_j_198 = fun expr_b_2 -> (
    var_j_190 = expr_b_2;
    m_match_bool_j_192 = var_j_190 ~ any;
    m_match_bool_j_195 = var_j_190 ~ int;
    m_match_cond_j_196 = m_match_bool_j_195 ? (
            bool_j_197 = true
        ) : (
            m_match_cond_j_193 = m_match_bool_j_192 ? (
                    var_j_194 = fail_b_3
                ) : (
                    void_j_191 = {}
                )
        ));
flatten_fun_j_200 = fun bj_null -> (
    input_j_199 = input);
flatten_fun_j_202 = fun expr_b_4 -> (
    var_j_201 = expr_b_4);
record_j_203 = {checker = flatten_fun_j_198, generator = flatten_fun_j_200, wrapper = flatten_fun_j_202};
proj_j_204 = record_j_203.generator;
int_j_205 = 0;
appl_j_206 = proj_j_204 int_j_205;
n_b_30 = appl_j_206;
flatten_fun_j_274 = fun n -> (
    flatten_fun_j_239 = fun expr_b_26 -> (
        bool_j_207 = false;
        fail_b_24 = bool_j_207;
        flatten_fun_j_216 = fun expr_b_23 -> (
            var_j_208 = expr_b_23;
            m_match_bool_j_210 = var_j_208 ~ any;
            m_match_bool_j_213 = var_j_208 ~ int;
            m_match_cond_j_214 = m_match_bool_j_213 ? (
                    bool_j_215 = true
                ) : (
                    m_match_cond_j_211 = m_match_bool_j_210 ? (
                            var_j_212 = fail_b_24
                        ) : (
                            void_j_209 = {}
                        )
                ));
        flatten_fun_j_218 = fun bj_null_j_3 -> (
            input_j_217 = input);
        flatten_fun_j_220 = fun expr_b_25 -> (
            var_j_219 = expr_b_25);
        record_j_221 = {checker = flatten_fun_j_216, generator = flatten_fun_j_218, wrapper = flatten_fun_j_220};
        proj_j_222 = record_j_221.checker;
        var_j_223 = expr_b_26;
        appl_j_224 = proj_j_222 var_j_223;
        t_check_b_27 = appl_j_224;
        var_j_225 = t_check_b_27;
        if_j_238 = var_j_225 ? (
                bool_j_226 = false;
                pred_check_b_28 = bool_j_226;
                flatten_fun_j_231 = fun i -> (
                    var_j_227 = i;
                    var_j_228 = n;
                    m_bl_i_401 = var_j_227 ~ int;
                    m_br_i_402 = var_j_228 ~ int;
                    m_b_i_403 = m_bl_i_401 and m_br_i_402;
                    binop_j_229 = m_b_i_403 ? (
                            c_binop_i_404 = var_j_227 == var_j_228
                        ) : (
                            ab_i_405 = abort
                        );
                    m_i_406 = binop_j_229 ~ bool;
                    notop_j_230 = m_i_406 ? (
                            c_not_i_407 = not binop_j_229
                        ) : (
                            ab_i_408 = abort
                        ));
                var_j_232 = expr_b_26;
                appl_j_233 = flatten_fun_j_231 var_j_232;
                if_j_236 = appl_j_233 ? (
                        bool_j_234 = true
                    ) : (
                        var_j_235 = pred_check_b_28
                    )
            ) : (
                var_j_237 = t_check_b_27
            ));
    flatten_fun_j_269 = fun bj_null_j_6 -> (
        bool_j_240 = false;
        fail_b_20 = bool_j_240;
        flatten_fun_j_249 = fun expr_b_19 -> (
            var_j_241 = expr_b_19;
            m_match_bool_j_243 = var_j_241 ~ any;
            m_match_bool_j_246 = var_j_241 ~ int;
            m_match_cond_j_247 = m_match_bool_j_246 ? (
                    bool_j_248 = true
                ) : (
                    m_match_cond_j_244 = m_match_bool_j_243 ? (
                            var_j_245 = fail_b_20
                        ) : (
                            void_j_242 = {}
                        )
                ));
        flatten_fun_j_251 = fun bj_null_j_4 -> (
            input_j_250 = input);
        flatten_fun_j_253 = fun expr_b_21 -> (
            var_j_252 = expr_b_21);
        record_j_254 = {checker = flatten_fun_j_249, generator = flatten_fun_j_251, wrapper = flatten_fun_j_253};
        proj_j_255 = record_j_254.generator;
        int_j_256 = 0;
        appl_j_257 = proj_j_255 int_j_256;
        candidate_b_22 = appl_j_257;
        flatten_fun_j_262 = fun i_j_5 -> (
            var_j_258 = i_j_5;
            var_j_259 = n;
            m_bl_i_409 = var_j_258 ~ int;
            m_br_i_410 = var_j_259 ~ int;
            m_b_i_411 = m_bl_i_409 and m_br_i_410;
            binop_j_260 = m_b_i_411 ? (
                    c_binop_i_412 = var_j_258 == var_j_259
                ) : (
                    ab_i_413 = abort
                );
            m_i_414 = binop_j_260 ~ bool;
            notop_j_261 = m_i_414 ? (
                    c_not_i_415 = not binop_j_260
                ) : (
                    ab_i_416 = abort
                ));
        var_j_263 = candidate_b_22;
        appl_j_264 = flatten_fun_j_262 var_j_263;
        if_j_268 = appl_j_264 ? (
                var_j_265 = candidate_b_22
            ) : (
                bool_j_266 = false;
                assume_j_267 = assume bool_j_266
            ));
    flatten_fun_j_271 = fun expr_b_29 -> (
        var_j_270 = expr_b_29);
    record_j_272 = {checker = flatten_fun_j_239, generator = flatten_fun_j_269, wrapper = flatten_fun_j_271};
    proj_j_273 = record_j_272.checker);
appl_j_276 = flatten_fun_j_274 n_b_30;
appl_j_279 = main n_b_30;
appl_j_280 = appl_j_276 appl_j_279;
check_res_b_31 = appl_j_280;
if_j_288 = check_res_b_31 ? (
        var_j_282 = main
    ) : (
        error_var_j_283 = check_res_b_31;
        assert_pred_j_284 = error_var_j_283;
        assert_res_j_285 = assert_pred_j_284 ? (
                assert_res_true_j_286 = {}
            ) : (
                ab_j_287 = abort
            )
    );
i_result = if_j_288