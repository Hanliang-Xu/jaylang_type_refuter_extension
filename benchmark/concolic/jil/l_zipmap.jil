i_first = {};
flatten_fun_j_57 = fun zip_j_1 -> (
    flatten_fun_j_56 = fun x -> (
        flatten_fun_j_55 = fun y -> (
            var_j_19 = zip_j_1;
            var_j_20 = zip_j_1;
            appl_j_21 = var_j_19 var_j_20;
            zip = appl_j_21;
            var_j_22 = x;
            int_j_23 = 0;
            m_bl_i_284 = var_j_22 ~ int;
            m_br_i_285 = int_j_23 ~ int;
            m_b_i_286 = m_bl_i_284 and m_br_i_285;
            binop_j_24 = m_b_i_286 ? (
                    c_binop_i_287 = var_j_22 == int_j_23
                ) : (
                    ab_i_288 = abort
                );
            var_j_25 = y;
            int_j_26 = 0;
            m_bl_i_289 = var_j_25 ~ int;
            m_br_i_290 = int_j_26 ~ int;
            m_b_i_291 = m_bl_i_289 and m_br_i_290;
            binop_j_27 = m_b_i_291 ? (
                    c_binop_i_292 = var_j_25 == int_j_26
                ) : (
                    ab_i_293 = abort
                );
            m_bl_i_294 = binop_j_24 ~ bool;
            m_br_i_295 = binop_j_27 ~ bool;
            m_b_i_296 = m_bl_i_294 and m_br_i_295;
            binop_j_28 = m_b_i_296 ? (
                    c_binop_i_297 = binop_j_24 and binop_j_27
                ) : (
                    ab_i_298 = abort
                );
            m_i_299 = binop_j_28 ~ bool;
            if_j_54 = m_i_299 ? (
                    c_cond_i_342 = binop_j_28 ? (
                            var_j_29 = x
                        ) : (
                            var_j_30 = x;
                            int_j_31 = 0;
                            m_bl_i_300 = var_j_30 ~ int;
                            m_br_i_301 = int_j_31 ~ int;
                            m_b_i_302 = m_bl_i_300 and m_br_i_301;
                            binop_j_32 = m_b_i_302 ? (
                                    c_binop_i_303 = var_j_30 <> int_j_31
                                ) : (
                                    ab_i_304 = abort
                                );
                            var_j_33 = y;
                            int_j_34 = 0;
                            m_bl_i_305 = var_j_33 ~ int;
                            m_br_i_306 = int_j_34 ~ int;
                            m_b_i_307 = m_bl_i_305 and m_br_i_306;
                            binop_j_35 = m_b_i_307 ? (
                                    c_binop_i_308 = var_j_33 <> int_j_34
                                ) : (
                                    ab_i_309 = abort
                                );
                            m_bl_i_310 = binop_j_32 ~ bool;
                            m_br_i_311 = binop_j_35 ~ bool;
                            m_b_i_312 = m_bl_i_310 and m_br_i_311;
                            binop_j_36 = m_b_i_312 ? (
                                    c_binop_i_313 = binop_j_32 and binop_j_35
                                ) : (
                                    ab_i_314 = abort
                                );
                            m_i_315 = binop_j_36 ~ bool;
                            if_j_53 = m_i_315 ? (
                                    c_cond_i_340 = binop_j_36 ? (
                                            int_j_37 = 1;
                                            var_j_38 = zip;
                                            var_j_39 = x;
                                            int_j_40 = 1;
                                            m_bl_i_316 = var_j_39 ~ int;
                                            m_br_i_317 = int_j_40 ~ int;
                                            m_b_i_318 = m_bl_i_316 and m_br_i_317;
                                            binop_j_41 = m_b_i_318 ? (
                                                    c_binop_i_319 = var_j_39 - int_j_40
                                                ) : (
                                                    ab_i_320 = abort
                                                );
                                            m_i_321 = var_j_38 ~ fun;
                                            appl_j_42 = m_i_321 ? (
                                                    c_appl_i_322 = var_j_38 binop_j_41
                                                ) : (
                                                    ab_i_323 = abort
                                                );
                                            var_j_43 = y;
                                            int_j_44 = 1;
                                            m_bl_i_324 = var_j_43 ~ int;
                                            m_br_i_325 = int_j_44 ~ int;
                                            m_b_i_326 = m_bl_i_324 and m_br_i_325;
                                            binop_j_45 = m_b_i_326 ? (
                                                    c_binop_i_327 = var_j_43 - int_j_44
                                                ) : (
                                                    ab_i_328 = abort
                                                );
                                            m_i_329 = appl_j_42 ~ fun;
                                            appl_j_46 = m_i_329 ? (
                                                    c_appl_i_330 = appl_j_42 binop_j_45
                                                ) : (
                                                    ab_i_331 = abort
                                                );
                                            m_bl_i_332 = int_j_37 ~ int;
                                            m_br_i_333 = appl_j_46 ~ int;
                                            m_b_i_334 = m_bl_i_332 and m_br_i_333;
                                            binop_j_47 = m_b_i_334 ? (
                                                    c_binop_i_335 = int_j_37 + appl_j_46
                                                ) : (
                                                    ab_i_336 = abort
                                                )
                                        ) : (
                                            bool_j_48 = false;
                                            assert_pred_j_49 = bool_j_48;
                                            m_i_337 = assert_pred_j_49 ~ bool;
                                            assert_res_j_50 = m_i_337 ? (
                                                    c_cond_i_338 = assert_pred_j_49 ? (
                                                            assert_res_true_j_51 = 
                                                                {}
                                                        ) : (
                                                            ab_j_52 = abort
                                                        )
                                                ) : (
                                                    ab_i_339 = abort
                                                )
                                        )
                                ) : (
                                    ab_i_341 = abort
                                )
                        )
                ) : (
                    ab_i_343 = abort
                ))));
appl_j_60 = flatten_fun_j_57 flatten_fun_j_57;
flatten_fun_j_77 = fun map_j_0 -> (
    flatten_fun_j_76 = fun x_j_2 -> (
        var_j_61 = map_j_0;
        var_j_62 = map_j_0;
        appl_j_63 = var_j_61 var_j_62;
        map = appl_j_63;
        var_j_64 = x_j_2;
        int_j_65 = 0;
        m_bl_i_344 = var_j_64 ~ int;
        m_br_i_345 = int_j_65 ~ int;
        m_b_i_346 = m_bl_i_344 and m_br_i_345;
        binop_j_66 = m_b_i_346 ? (
                c_binop_i_347 = var_j_64 == int_j_65
            ) : (
                ab_i_348 = abort
            );
        m_i_349 = binop_j_66 ~ bool;
        if_j_75 = m_i_349 ? (
                c_cond_i_363 = binop_j_66 ? (
                        var_j_67 = x_j_2
                    ) : (
                        int_j_68 = 1;
                        var_j_69 = map;
                        var_j_70 = x_j_2;
                        int_j_71 = 1;
                        m_bl_i_350 = var_j_70 ~ int;
                        m_br_i_351 = int_j_71 ~ int;
                        m_b_i_352 = m_bl_i_350 and m_br_i_351;
                        binop_j_72 = m_b_i_352 ? (
                                c_binop_i_353 = var_j_70 - int_j_71
                            ) : (
                                ab_i_354 = abort
                            );
                        m_i_355 = var_j_69 ~ fun;
                        appl_j_73 = m_i_355 ? (
                                c_appl_i_356 = var_j_69 binop_j_72
                            ) : (
                                ab_i_357 = abort
                            );
                        m_bl_i_358 = int_j_68 ~ int;
                        m_br_i_359 = appl_j_73 ~ int;
                        m_b_i_360 = m_bl_i_358 and m_br_i_359;
                        binop_j_74 = m_b_i_360 ? (
                                c_binop_i_361 = int_j_68 + appl_j_73
                            ) : (
                                ab_i_362 = abort
                            )
                    )
            ) : (
                ab_i_364 = abort
            )));
appl_j_80 = flatten_fun_j_77 flatten_fun_j_77;
main_j_185 = fun n_j_14 -> (
    flatten_fun_j_182 = fun n_b_0 -> (
        bool_j_81 = false;
        fail_b_6 = bool_j_81;
        flatten_fun_j_90 = fun expr_b_5 -> (
            var_j_82 = expr_b_5;
            m_match_bool_j_84 = var_j_82 ~ any;
            m_match_bool_j_87 = var_j_82 ~ int;
            m_match_cond_j_88 = m_match_bool_j_87 ? (
                    bool_j_89 = true
                ) : (
                    m_match_cond_j_85 = m_match_bool_j_84 ? (
                            var_j_86 = fail_b_6
                        ) : (
                            void_j_83 = {}
                        )
                ));
        flatten_fun_j_92 = fun bj_null_j_7 -> (
            input_j_91 = input);
        flatten_fun_j_94 = fun expr_b_7 -> (
            var_j_93 = expr_b_7);
        record_j_95 = {checker = flatten_fun_j_90, generator = flatten_fun_j_92, wrapper = flatten_fun_j_94};
        proj_j_96 = record_j_95.checker;
        var_j_97 = n_b_0;
        appl_j_98 = proj_j_96 var_j_97;
        arg_check_b_1 = appl_j_98;
        var_j_99 = arg_check_b_1;
        if_j_181 = var_j_99 ? (
                flatten_fun_j_164 = fun n_j_13 -> (
                    flatten_fun_j_131 = fun expr_b_15 -> (
                        bool_j_100 = false;
                        fail_b_13 = bool_j_100;
                        flatten_fun_j_109 = fun expr_b_12 -> (
                            var_j_101 = expr_b_12;
                            m_match_bool_j_103 = var_j_101 ~ any;
                            m_match_bool_j_106 = var_j_101 ~ int;
                            m_match_cond_j_107 = m_match_bool_j_106 ? (
                                    bool_j_108 = true
                                ) : (
                                    m_match_cond_j_104 = m_match_bool_j_103 ? (
                                            var_j_105 = fail_b_13
                                        ) : (
                                            void_j_102 = {}
                                        )
                                ));
                        flatten_fun_j_111 = fun bj_null_j_8 -> (
                            input_j_110 = input);
                        flatten_fun_j_113 = fun expr_b_14 -> (
                            var_j_112 = expr_b_14);
                        record_j_114 = {checker = flatten_fun_j_109, generator = flatten_fun_j_111, wrapper = flatten_fun_j_113};
                        proj_j_115 = record_j_114.checker;
                        var_j_116 = expr_b_15;
                        appl_j_117 = proj_j_115 var_j_116;
                        t_check_b_16 = appl_j_117;
                        var_j_118 = t_check_b_16;
                        if_j_130 = var_j_118 ? (
                                bool_j_119 = false;
                                pred_check_b_17 = bool_j_119;
                                flatten_fun_j_123 = fun i_j_9 -> (
                                    var_j_120 = i_j_9;
                                    var_j_121 = n_j_13;
                                    m_bl_i_365 = var_j_120 ~ int;
                                    m_br_i_366 = var_j_121 ~ int;
                                    m_b_i_367 = m_bl_i_365 and m_br_i_366;
                                    binop_j_122 = m_b_i_367 ? (
                                            c_binop_i_368 = var_j_120 <> var_j_121
                                        ) : (
                                            ab_i_369 = abort
                                        ));
                                var_j_124 = expr_b_15;
                                appl_j_125 = flatten_fun_j_123 var_j_124;
                                if_j_128 = appl_j_125 ? (
                                        bool_j_126 = true
                                    ) : (
                                        var_j_127 = pred_check_b_17
                                    )
                            ) : (
                                var_j_129 = t_check_b_16
                            ));
                    flatten_fun_j_160 = fun bj_null_j_12 -> (
                        bool_j_132 = false;
                        fail_b_9 = bool_j_132;
                        flatten_fun_j_141 = fun expr_b_8 -> (
                            var_j_133 = expr_b_8;
                            m_match_bool_j_135 = var_j_133 ~ any;
                            m_match_bool_j_138 = var_j_133 ~ int;
                            m_match_cond_j_139 = m_match_bool_j_138 ? (
                                    bool_j_140 = true
                                ) : (
                                    m_match_cond_j_136 = m_match_bool_j_135 ? (
                                            var_j_137 = fail_b_9
                                        ) : (
                                            void_j_134 = {}
                                        )
                                ));
                        flatten_fun_j_143 = fun bj_null_j_10 -> (
                            input_j_142 = input);
                        flatten_fun_j_145 = fun expr_b_10 -> (
                            var_j_144 = expr_b_10);
                        record_j_146 = {checker = flatten_fun_j_141, generator = flatten_fun_j_143, wrapper = flatten_fun_j_145};
                        proj_j_147 = record_j_146.generator;
                        int_j_148 = 0;
                        appl_j_149 = proj_j_147 int_j_148;
                        candidate_b_11 = appl_j_149;
                        flatten_fun_j_153 = fun i_j_11 -> (
                            var_j_150 = i_j_11;
                            var_j_151 = n_j_13;
                            m_bl_i_370 = var_j_150 ~ int;
                            m_br_i_371 = var_j_151 ~ int;
                            m_b_i_372 = m_bl_i_370 and m_br_i_371;
                            binop_j_152 = m_b_i_372 ? (
                                    c_binop_i_373 = var_j_150 <> var_j_151
                                ) : (
                                    ab_i_374 = abort
                                ));
                        var_j_154 = candidate_b_11;
                        appl_j_155 = flatten_fun_j_153 var_j_154;
                        if_j_159 = appl_j_155 ? (
                                var_j_156 = candidate_b_11
                            ) : (
                                bool_j_157 = false;
                                assume_j_158 = assume bool_j_157
                            ));
                    flatten_fun_j_162 = fun expr_b_18 -> (
                        var_j_161 = expr_b_18);
                    record_j_163 = {checker = flatten_fun_j_131, generator = flatten_fun_j_160, wrapper = flatten_fun_j_162});
                var_j_165 = n_b_0;
                appl_j_166 = flatten_fun_j_164 var_j_165;
                proj_j_167 = appl_j_166.wrapper;
                var_j_168 = appl_j_80;
                var_j_169 = appl_j_60;
                var_j_170 = n_j_14;
                m_i_375 = var_j_169 ~ fun;
                appl_j_171 = m_i_375 ? (
                        c_appl_i_376 = var_j_169 var_j_170
                    ) : (
                        ab_i_377 = abort
                    );
                var_j_172 = n_j_14;
                m_i_378 = appl_j_171 ~ fun;
                appl_j_173 = m_i_378 ? (
                        c_appl_i_379 = appl_j_171 var_j_172
                    ) : (
                        ab_i_380 = abort
                    );
                m_i_381 = var_j_168 ~ fun;
                appl_j_174 = m_i_381 ? (
                        c_appl_i_382 = var_j_168 appl_j_173
                    ) : (
                        ab_i_383 = abort
                    );
                m_i_384 = proj_j_167 ~ fun;
                appl_j_175 = m_i_384 ? (
                        c_appl_i_385 = proj_j_167 appl_j_174
                    ) : (
                        ab_i_386 = abort
                    )
            ) : (
                bool_j_176 = false;
                assert_pred_j_177 = bool_j_176;
                assert_res_j_178 = assert_pred_j_177 ? (
                        assert_res_true_j_179 = {}
                    ) : (
                        ab_j_180 = abort
                    )
            ));
    var_j_183 = n_j_14;
    appl_j_184 = flatten_fun_j_182 var_j_183);
main = main_j_185;
bool_j_186 = false;
fail_b_3 = bool_j_186;
flatten_fun_j_195 = fun expr_b_2 -> (
    var_j_187 = expr_b_2;
    m_match_bool_j_189 = var_j_187 ~ any;
    m_match_bool_j_192 = var_j_187 ~ int;
    m_match_cond_j_193 = m_match_bool_j_192 ? (
            bool_j_194 = true
        ) : (
            m_match_cond_j_190 = m_match_bool_j_189 ? (
                    var_j_191 = fail_b_3
                ) : (
                    void_j_188 = {}
                )
        ));
flatten_fun_j_197 = fun bj_null -> (
    input_j_196 = input);
flatten_fun_j_199 = fun expr_b_4 -> (
    var_j_198 = expr_b_4);
record_j_200 = {checker = flatten_fun_j_195, generator = flatten_fun_j_197, wrapper = flatten_fun_j_199};
proj_j_201 = record_j_200.generator;
int_j_202 = 0;
appl_j_203 = proj_j_201 int_j_202;
n_b_30 = appl_j_203;
flatten_fun_j_269 = fun n -> (
    flatten_fun_j_235 = fun expr_b_26 -> (
        bool_j_204 = false;
        fail_b_24 = bool_j_204;
        flatten_fun_j_213 = fun expr_b_23 -> (
            var_j_205 = expr_b_23;
            m_match_bool_j_207 = var_j_205 ~ any;
            m_match_bool_j_210 = var_j_205 ~ int;
            m_match_cond_j_211 = m_match_bool_j_210 ? (
                    bool_j_212 = true
                ) : (
                    m_match_cond_j_208 = m_match_bool_j_207 ? (
                            var_j_209 = fail_b_24
                        ) : (
                            void_j_206 = {}
                        )
                ));
        flatten_fun_j_215 = fun bj_null_j_3 -> (
            input_j_214 = input);
        flatten_fun_j_217 = fun expr_b_25 -> (
            var_j_216 = expr_b_25);
        record_j_218 = {checker = flatten_fun_j_213, generator = flatten_fun_j_215, wrapper = flatten_fun_j_217};
        proj_j_219 = record_j_218.checker;
        var_j_220 = expr_b_26;
        appl_j_221 = proj_j_219 var_j_220;
        t_check_b_27 = appl_j_221;
        var_j_222 = t_check_b_27;
        if_j_234 = var_j_222 ? (
                bool_j_223 = false;
                pred_check_b_28 = bool_j_223;
                flatten_fun_j_227 = fun i -> (
                    var_j_224 = i;
                    var_j_225 = n;
                    m_bl_i_387 = var_j_224 ~ int;
                    m_br_i_388 = var_j_225 ~ int;
                    m_b_i_389 = m_bl_i_387 and m_br_i_388;
                    binop_j_226 = m_b_i_389 ? (
                            c_binop_i_390 = var_j_224 <> var_j_225
                        ) : (
                            ab_i_391 = abort
                        ));
                var_j_228 = expr_b_26;
                appl_j_229 = flatten_fun_j_227 var_j_228;
                if_j_232 = appl_j_229 ? (
                        bool_j_230 = true
                    ) : (
                        var_j_231 = pred_check_b_28
                    )
            ) : (
                var_j_233 = t_check_b_27
            ));
    flatten_fun_j_264 = fun bj_null_j_6 -> (
        bool_j_236 = false;
        fail_b_20 = bool_j_236;
        flatten_fun_j_245 = fun expr_b_19 -> (
            var_j_237 = expr_b_19;
            m_match_bool_j_239 = var_j_237 ~ any;
            m_match_bool_j_242 = var_j_237 ~ int;
            m_match_cond_j_243 = m_match_bool_j_242 ? (
                    bool_j_244 = true
                ) : (
                    m_match_cond_j_240 = m_match_bool_j_239 ? (
                            var_j_241 = fail_b_20
                        ) : (
                            void_j_238 = {}
                        )
                ));
        flatten_fun_j_247 = fun bj_null_j_4 -> (
            input_j_246 = input);
        flatten_fun_j_249 = fun expr_b_21 -> (
            var_j_248 = expr_b_21);
        record_j_250 = {checker = flatten_fun_j_245, generator = flatten_fun_j_247, wrapper = flatten_fun_j_249};
        proj_j_251 = record_j_250.generator;
        int_j_252 = 0;
        appl_j_253 = proj_j_251 int_j_252;
        candidate_b_22 = appl_j_253;
        flatten_fun_j_257 = fun i_j_5 -> (
            var_j_254 = i_j_5;
            var_j_255 = n;
            m_bl_i_392 = var_j_254 ~ int;
            m_br_i_393 = var_j_255 ~ int;
            m_b_i_394 = m_bl_i_392 and m_br_i_393;
            binop_j_256 = m_b_i_394 ? (
                    c_binop_i_395 = var_j_254 <> var_j_255
                ) : (
                    ab_i_396 = abort
                ));
        var_j_258 = candidate_b_22;
        appl_j_259 = flatten_fun_j_257 var_j_258;
        if_j_263 = appl_j_259 ? (
                var_j_260 = candidate_b_22
            ) : (
                bool_j_261 = false;
                assume_j_262 = assume bool_j_261
            ));
    flatten_fun_j_266 = fun expr_b_29 -> (
        var_j_265 = expr_b_29);
    record_j_267 = {checker = flatten_fun_j_235, generator = flatten_fun_j_264, wrapper = flatten_fun_j_266};
    proj_j_268 = record_j_267.checker);
appl_j_271 = flatten_fun_j_269 n_b_30;
appl_j_274 = main n_b_30;
appl_j_275 = appl_j_271 appl_j_274;
check_res_b_31 = appl_j_275;
if_j_283 = check_res_b_31 ? (
        var_j_277 = main
    ) : (
        error_var_j_278 = check_res_b_31;
        assert_pred_j_279 = error_var_j_278;
        assert_res_j_280 = assert_pred_j_279 ? (
                assert_res_true_j_281 = {}
            ) : (
                ab_j_282 = abort
            )
    );
i_result = if_j_283