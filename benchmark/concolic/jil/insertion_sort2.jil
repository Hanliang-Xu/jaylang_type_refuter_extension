i_first = {};
is_nonempty_j_88 = fun lst_j_71 -> (
    bool_j_72 = false;
    fail_b_2 = bool_j_72;
    var_j_73 = lst_j_71;
    m_match_bool_j_75 = var_j_73 ~ any;
    m_match_bool_j_78 = var_j_73 ~ {j_empty, _};
    m_match_bool_j_81 = var_j_73 ~ {bj_untouched, _};
    m_match_cond_j_82 = m_match_bool_j_81 ? (
            var_j_83 = fail_b_2;
            assert_pred_j_84 = var_j_83;
            assert_res_j_85 = assert_pred_j_84 ? (
                    assert_res_true_j_86 = {}
                ) : (
                    ab_j_87 = abort
                )
        ) : (
            m_match_cond_j_79 = m_match_bool_j_78 ? (
                    bool_j_80 = false
                ) : (
                    m_match_cond_j_76 = m_match_bool_j_75 ? (
                            bool_j_77 = true
                        ) : (
                            ab_j_74 = abort
                        )
                )
        ));
is_nonempty = is_nonempty_j_88;
flatten_fun_j_130 = fun ne_sorted_j_10 -> (
    flatten_fun_j_129 = fun lst -> (
        var_j_89 = ne_sorted_j_10;
        var_j_90 = ne_sorted_j_10;
        appl_j_91 = var_j_89 var_j_90;
        ne_sorted = appl_j_91;
        bool_j_92 = false;
        fail_b_3 = bool_j_92;
        var_j_93 = lst;
        m_match_bool_j_95 = var_j_93 ~ {j_head, j_tail, _};
        m_match_bool_j_119 = var_j_93 ~ {j_empty, _};
        m_match_bool_j_122 = var_j_93 ~ {bj_untouched, _};
        m_match_cond_j_123 = m_match_bool_j_122 ? (
                var_j_124 = fail_b_3;
                assert_pred_j_125 = var_j_124;
                assert_res_j_126 = assert_pred_j_125 ? (
                        assert_res_true_j_127 = {}
                    ) : (
                        ab_j_128 = abort
                    )
            ) : (
                m_match_cond_j_120 = m_match_bool_j_119 ? (
                        bool_j_121 = true
                    ) : (
                        m_match_cond_j_96 = m_match_bool_j_95 ? (
                                a = var_j_93.j_head;
                                tl = var_j_93.j_tail;
                                bool_j_97 = false;
                                fail_b_4 = bool_j_97;
                                var_j_98 = tl;
                                m_match_bool_j_100 = var_j_98 ~ {j_head, j_tail, _};
                                m_match_bool_j_109 = var_j_98 ~ {j_empty, _};
                                m_match_bool_j_112 = var_j_98 ~ {bj_untouched, _};
                                m_match_cond_j_113 = m_match_bool_j_112 ? (
                                        var_j_114 = fail_b_4;
                                        assert_pred_j_115 = var_j_114;
                                        assert_res_j_116 = assert_pred_j_115 ? (
                                                assert_res_true_j_117 = 
                                                    {}
                                            ) : (
                                                ab_j_118 = abort
                                            )
                                    ) : (
                                        m_match_cond_j_110 = m_match_bool_j_109 ? (
                                                bool_j_111 = true
                                            ) : (
                                                m_match_cond_j_101 = m_match_bool_j_100 ? (
                                                        b = var_j_98.j_head;
                                                        tll = var_j_98.j_tail;
                                                        var_j_102 = a;
                                                        var_j_103 = b;
                                                        m_bl_i_754 = var_j_102 ~ int;
                                                        m_br_i_755 = var_j_103 ~ int;
                                                        m_b_i_756 = m_bl_i_754 and m_br_i_755;
                                                        binop_j_104 = m_b_i_756 ? (
                                                                c_binop_i_757 = var_j_102 <= var_j_103
                                                            ) : (
                                                                ab_i_758 = abort
                                                            );
                                                        var_j_105 = ne_sorted;
                                                        var_j_106 = tl;
                                                        m_i_759 = var_j_105 ~ fun;
                                                        appl_j_107 = m_i_759 ? (
                                                                c_appl_i_760 = var_j_105 var_j_106
                                                            ) : (
                                                                ab_i_761 = abort
                                                            );
                                                        m_bl_i_762 = binop_j_104 ~ bool;
                                                        m_br_i_763 = appl_j_107 ~ bool;
                                                        m_b_i_764 = m_bl_i_762 and m_br_i_763;
                                                        binop_j_108 = m_b_i_764 ? (
                                                                c_binop_i_765 = binop_j_104 and appl_j_107
                                                            ) : (
                                                                ab_i_766 = abort
                                                            )
                                                    ) : (
                                                        ab_j_99 = abort
                                                    )
                                            )
                                    )
                            ) : (
                                ab_j_94 = abort
                            )
                    )
            )));
appl_j_133 = flatten_fun_j_130 flatten_fun_j_130;
flatten_fun_j_166 = fun foldl_j_9 -> (
    flatten_fun_j_165 = fun f -> (
        flatten_fun_j_164 = fun b_j_11 -> (
            flatten_fun_j_163 = fun l -> (
                var_j_134 = foldl_j_9;
                var_j_135 = foldl_j_9;
                appl_j_136 = var_j_134 var_j_135;
                foldl = appl_j_136;
                bool_j_137 = false;
                fail_b_5 = bool_j_137;
                var_j_138 = l;
                m_match_bool_j_140 = var_j_138 ~ {j_head, j_tail, _};
                m_match_bool_j_153 = var_j_138 ~ {j_empty, _};
                m_match_bool_j_156 = var_j_138 ~ {bj_untouched, _};
                m_match_cond_j_157 = m_match_bool_j_156 ? (
                        var_j_158 = fail_b_5;
                        assert_pred_j_159 = var_j_158;
                        assert_res_j_160 = assert_pred_j_159 ? (
                                assert_res_true_j_161 = {}
                            ) : (
                                ab_j_162 = abort
                            )
                    ) : (
                        m_match_cond_j_154 = m_match_bool_j_153 ? (
                                var_j_155 = b_j_11
                            ) : (
                                m_match_cond_j_141 = m_match_bool_j_140 ? (
                                        x = var_j_138.j_head;
                                        xs = var_j_138.j_tail;
                                        var_j_142 = foldl;
                                        var_j_143 = f;
                                        m_i_767 = var_j_142 ~ fun;
                                        appl_j_144 = m_i_767 ? (
                                                c_appl_i_768 = var_j_142 var_j_143
                                            ) : (
                                                ab_i_769 = abort
                                            );
                                        var_j_145 = f;
                                        var_j_146 = x;
                                        m_i_770 = var_j_145 ~ fun;
                                        appl_j_147 = m_i_770 ? (
                                                c_appl_i_771 = var_j_145 var_j_146
                                            ) : (
                                                ab_i_772 = abort
                                            );
                                        var_j_148 = b_j_11;
                                        m_i_773 = appl_j_147 ~ fun;
                                        appl_j_149 = m_i_773 ? (
                                                c_appl_i_774 = appl_j_147 var_j_148
                                            ) : (
                                                ab_i_775 = abort
                                            );
                                        m_i_776 = appl_j_144 ~ fun;
                                        appl_j_150 = m_i_776 ? (
                                                c_appl_i_777 = appl_j_144 appl_j_149
                                            ) : (
                                                ab_i_778 = abort
                                            );
                                        var_j_151 = xs;
                                        m_i_779 = appl_j_150 ~ fun;
                                        appl_j_152 = m_i_779 ? (
                                                c_appl_i_780 = appl_j_150 var_j_151
                                            ) : (
                                                ab_i_781 = abort
                                            )
                                    ) : (
                                        ab_j_139 = abort
                                    )
                            )
                    )))));
appl_j_169 = flatten_fun_j_166 flatten_fun_j_166;
flatten_fun_j_207 = fun insert_j_8 -> (
    flatten_fun_j_206 = fun x_j_13 -> (
        flatten_fun_j_205 = fun l_j_12 -> (
            var_j_170 = insert_j_8;
            var_j_171 = insert_j_8;
            appl_j_172 = var_j_170 var_j_171;
            insert = appl_j_172;
            bool_j_173 = false;
            fail_b_6 = bool_j_173;
            var_j_174 = l_j_12;
            m_match_bool_j_176 = var_j_174 ~ {j_head, j_tail, _};
            m_match_bool_j_194 = var_j_174 ~ {j_empty, _};
            m_match_bool_j_198 = var_j_174 ~ {bj_untouched, _};
            m_match_cond_j_199 = m_match_bool_j_198 ? (
                    var_j_200 = fail_b_6;
                    assert_pred_j_201 = var_j_200;
                    assert_res_j_202 = assert_pred_j_201 ? (
                            assert_res_true_j_203 = {}
                        ) : (
                            ab_j_204 = abort
                        )
                ) : (
                    m_match_cond_j_195 = m_match_bool_j_194 ? (
                            record_j_196 = {};
                            record_j_197 = {j_empty = record_j_196}
                        ) : (
                            m_match_cond_j_177 = m_match_bool_j_176 ? (
                                    h = var_j_174.j_head;
                                    t = var_j_174.j_tail;
                                    var_j_178 = x_j_13;
                                    var_j_179 = h;
                                    m_bl_i_782 = var_j_178 ~ int;
                                    m_br_i_783 = var_j_179 ~ int;
                                    m_b_i_784 = m_bl_i_782 and m_br_i_783;
                                    binop_j_180 = m_b_i_784 ? (
                                            c_binop_i_785 = var_j_178 <= var_j_179
                                        ) : (
                                            ab_i_786 = abort
                                        );
                                    m_i_787 = binop_j_180 ~ bool;
                                    if_j_193 = m_i_787 ? (
                                            c_cond_i_794 = binop_j_180 ? (
                                                    record_j_181 = {};
                                                    var_j_182 = x_j_13;
                                                    var_j_183 = l_j_12;
                                                    record_j_184 = {j_cons = record_j_181, j_head = var_j_182, j_tail = var_j_183}
                                                ) : (
                                                    record_j_185 = {};
                                                    var_j_186 = h;
                                                    var_j_187 = insert;
                                                    var_j_188 = x_j_13;
                                                    m_i_788 = var_j_187 ~ fun;
                                                    appl_j_189 = m_i_788 ? (
                                                            c_appl_i_789 = var_j_187 var_j_188
                                                        ) : (
                                                            ab_i_790 = abort
                                                        );
                                                    var_j_190 = t;
                                                    m_i_791 = appl_j_189 ~ fun;
                                                    appl_j_191 = m_i_791 ? (
                                                            c_appl_i_792 = appl_j_189 var_j_190
                                                        ) : (
                                                            ab_i_793 = abort
                                                        );
                                                    record_j_192 = {j_cons = record_j_185, j_head = var_j_186, j_tail = appl_j_191}
                                                )
                                        ) : (
                                            ab_i_795 = abort
                                        )
                                ) : (
                                    ab_j_175 = abort
                                )
                        )
                ))));
appl_j_210 = flatten_fun_j_207 flatten_fun_j_207;
ret_type_j_485 = fun xs_j_64 -> (
    flatten_fun_j_347 = fun expr_b_38 -> (
        flatten_fun_j_264 = fun expr_b_35 -> (
            bool_j_211 = false;
            lst_fail_b_36 = bool_j_211;
            var_j_212 = expr_b_35;
            m_match_bool_j_214 = var_j_212 ~ any;
            m_match_bool_j_217 = var_j_212 ~ {j_head, j_tail, _};
            m_match_bool_j_261 = var_j_212 ~ {j_empty, _};
            m_match_cond_j_262 = m_match_bool_j_261 ? (
                    bool_j_263 = true
                ) : (
                    m_match_cond_j_218 = m_match_bool_j_217 ? (
                            bj_underscore_j_43 = var_j_212.j_head;
                            bj_underscore2_j_42 = var_j_212.j_tail;
                            flatten_fun_j_254 = fun test_fun_b_32_j_4 -> (
                                flatten_fun_j_253 = fun test_list_b_33 -> (
                                    var_j_219 = test_fun_b_32_j_4;
                                    var_j_220 = test_fun_b_32_j_4;
                                    appl_j_221 = var_j_219 var_j_220;
                                    test_fun_b_32 = appl_j_221;
                                    var_j_222 = test_list_b_33;
                                    m_match_bool_j_224 = var_j_222 ~ 
                                        {j_head, j_tail, _};
                                    m_match_bool_j_250 = var_j_222 ~ 
                                        {j_empty, _};
                                    m_match_cond_j_251 = m_match_bool_j_250 ? (
                                            bool_j_252 = true
                                        ) : (
                                            m_match_cond_j_225 = m_match_bool_j_224 ? (
                                                    hd_j_39 = var_j_222.j_head;
                                                    tl_j_38 = var_j_222.j_tail;
                                                    bool_j_226 = false;
                                                    fail_b_30 = bool_j_226;
                                                    flatten_fun_j_235 = fun expr_b_29 -> (
                                                        var_j_227 = expr_b_29;
                                                        m_match_bool_j_229 = var_j_227 ~ any;
                                                        m_match_bool_j_232 = var_j_227 ~ int;
                                                        m_match_cond_j_233 = m_match_bool_j_232 ? (
                                                                bool_j_234 = true
                                                            ) : (
                                                                m_match_cond_j_230 = m_match_bool_j_229 ? (
                                                                        
                                                                    var_j_231 = fail_b_30
                                                                    ) : (
                                                                        
                                                                    void_j_228 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_237 = fun bj_null_j_37 -> (
                                                        input_j_236 = input);
                                                    flatten_fun_j_239 = fun expr_b_31 -> (
                                                        var_j_238 = expr_b_31);
                                                    record_j_240 = {checker = flatten_fun_j_235, generator = flatten_fun_j_237, wrapper = flatten_fun_j_239};
                                                    proj_j_241 = record_j_240.checker;
                                                    var_j_242 = hd_j_39;
                                                    appl_j_243 = proj_j_241 var_j_242;
                                                    elm_check_b_34 = appl_j_243;
                                                    var_j_244 = elm_check_b_34;
                                                    if_j_249 = var_j_244 ? (
                                                            var_j_245 = test_fun_b_32;
                                                            var_j_246 = tl_j_38;
                                                            appl_j_247 = var_j_245 var_j_246
                                                        ) : (
                                                            var_j_248 = elm_check_b_34
                                                        )
                                                ) : (
                                                    void_j_223 = {}
                                                )
                                        )));
                            test_fun_b_32_j_4_j_41 = flatten_fun_j_254;
                            var_j_255 = test_fun_b_32_j_4_j_41;
                            var_j_256 = test_fun_b_32_j_4_j_41;
                            appl_j_257 = var_j_255 var_j_256;
                            test_fun_b_32_j_40 = appl_j_257;
                            var_j_258 = test_fun_b_32_j_40;
                            var_j_259 = expr_b_35;
                            appl_j_260 = var_j_258 var_j_259
                        ) : (
                            m_match_cond_j_215 = m_match_bool_j_214 ? (
                                    var_j_216 = lst_fail_b_36
                                ) : (
                                    void_j_213 = {}
                                )
                        )
                ));
        flatten_fun_j_315 = fun bj_null_j_48 -> (
            flatten_fun_j_301 = fun list_maker_b_27_j_5 -> (
                flatten_fun_j_300 = fun len_b_26 -> (
                    var_j_265 = list_maker_b_27_j_5;
                    var_j_266 = list_maker_b_27_j_5;
                    appl_j_267 = var_j_265 var_j_266;
                    list_maker_b_27 = appl_j_267;
                    var_j_268 = len_b_26;
                    int_j_269 = 0;
                    binop_j_270 = var_j_268 == int_j_269;
                    if_j_299 = binop_j_270 ? (
                            record_j_271 = {};
                            record_j_272 = {j_empty = record_j_271}
                        ) : (
                            bool_j_273 = false;
                            fail_b_24 = bool_j_273;
                            flatten_fun_j_282 = fun expr_b_23 -> (
                                var_j_274 = expr_b_23;
                                m_match_bool_j_276 = var_j_274 ~ any;
                                m_match_bool_j_279 = var_j_274 ~ int;
                                m_match_cond_j_280 = m_match_bool_j_279 ? (
                                        bool_j_281 = true
                                    ) : (
                                        m_match_cond_j_277 = m_match_bool_j_276 ? (
                                                var_j_278 = fail_b_24
                                            ) : (
                                                void_j_275 = {}
                                            )
                                    ));
                            flatten_fun_j_284 = fun bj_null_j_44 -> (
                                input_j_283 = input);
                            flatten_fun_j_286 = fun expr_b_25 -> (
                                var_j_285 = expr_b_25);
                            record_j_287 = {checker = flatten_fun_j_282, generator = flatten_fun_j_284, wrapper = flatten_fun_j_286};
                            proj_j_288 = record_j_287.generator;
                            int_j_289 = 0;
                            appl_j_290 = proj_j_288 int_j_289;
                            elm_b_28 = appl_j_290;
                            record_j_291 = {};
                            var_j_292 = elm_b_28;
                            var_j_293 = list_maker_b_27;
                            var_j_294 = len_b_26;
                            int_j_295 = 1;
                            binop_j_296 = var_j_294 - int_j_295;
                            appl_j_297 = var_j_293 binop_j_296;
                            record_j_298 = {j_cons = record_j_291, j_head = var_j_292, j_tail = appl_j_297}
                        )));
            list_maker_b_27_j_5_j_47 = flatten_fun_j_301;
            var_j_302 = list_maker_b_27_j_5_j_47;
            var_j_303 = list_maker_b_27_j_5_j_47;
            appl_j_304 = var_j_302 var_j_303;
            list_maker_b_27_j_46 = appl_j_304;
            input_j_305 = input;
            len_b_26_j_45 = input_j_305;
            int_j_306 = 0;
            var_j_307 = len_b_26_j_45;
            binop_j_308 = int_j_306 <= var_j_307;
            if_j_314 = binop_j_308 ? (
                    var_j_309 = list_maker_b_27_j_46;
                    var_j_310 = len_b_26_j_45;
                    appl_j_311 = var_j_309 var_j_310
                ) : (
                    bool_j_312 = false;
                    assume_j_313 = assume bool_j_312
                ));
        flatten_fun_j_317 = fun expr_b_37 -> (
            var_j_316 = expr_b_37);
        record_j_318 = {checker = flatten_fun_j_264, generator = flatten_fun_j_315, wrapper = flatten_fun_j_317};
        proj_j_319 = record_j_318.checker;
        var_j_320 = expr_b_38;
        appl_j_321 = proj_j_319 var_j_320;
        t_check_b_39 = appl_j_321;
        var_j_322 = t_check_b_39;
        if_j_346 = var_j_322 ? (
                bool_j_323 = false;
                pred_check_b_40 = bool_j_323;
                flatten_fun_j_339 = fun l_j_49 -> (
                    var_j_324 = appl_j_133;
                    var_j_325 = l_j_49;
                    m_i_796 = var_j_324 ~ fun;
                    appl_j_326 = m_i_796 ? (
                            c_appl_i_797 = var_j_324 var_j_325
                        ) : (
                            ab_i_798 = abort
                        );
                    var_j_327 = is_nonempty;
                    var_j_328 = xs_j_64;
                    m_i_799 = var_j_327 ~ fun;
                    appl_j_329 = m_i_799 ? (
                            c_appl_i_800 = var_j_327 var_j_328
                        ) : (
                            ab_i_801 = abort
                        );
                    m_i_802 = appl_j_329 ~ bool;
                    if_j_337 = m_i_802 ? (
                            c_cond_i_812 = appl_j_329 ? (
                                    var_j_330 = is_nonempty;
                                    var_j_331 = l_j_49;
                                    m_i_803 = var_j_330 ~ fun;
                                    appl_j_332 = m_i_803 ? (
                                            c_appl_i_804 = var_j_330 var_j_331
                                        ) : (
                                            ab_i_805 = abort
                                        )
                                ) : (
                                    var_j_333 = is_nonempty;
                                    var_j_334 = l_j_49;
                                    m_i_806 = var_j_333 ~ fun;
                                    appl_j_335 = m_i_806 ? (
                                            c_appl_i_807 = var_j_333 var_j_334
                                        ) : (
                                            ab_i_808 = abort
                                        );
                                    m_i_809 = appl_j_335 ~ bool;
                                    notop_j_336 = m_i_809 ? (
                                            c_not_i_810 = not appl_j_335
                                        ) : (
                                            ab_i_811 = abort
                                        )
                                )
                        ) : (
                            ab_i_813 = abort
                        );
                    m_bl_i_814 = appl_j_326 ~ bool;
                    m_br_i_815 = if_j_337 ~ bool;
                    m_b_i_816 = m_bl_i_814 and m_br_i_815;
                    binop_j_338 = m_b_i_816 ? (
                            c_binop_i_817 = appl_j_326 and if_j_337
                        ) : (
                            ab_i_818 = abort
                        ));
                var_j_340 = expr_b_38;
                appl_j_341 = flatten_fun_j_339 var_j_340;
                if_j_344 = appl_j_341 ? (
                        bool_j_342 = true
                    ) : (
                        var_j_343 = pred_check_b_40
                    )
            ) : (
                var_j_345 = t_check_b_39
            ));
    flatten_fun_j_481 = fun bj_null_j_63 -> (
        flatten_fun_j_401 = fun expr_b_19 -> (
            bool_j_348 = false;
            lst_fail_b_20 = bool_j_348;
            var_j_349 = expr_b_19;
            m_match_bool_j_351 = var_j_349 ~ any;
            m_match_bool_j_354 = var_j_349 ~ {j_head, j_tail, _};
            m_match_bool_j_398 = var_j_349 ~ {j_empty, _};
            m_match_cond_j_399 = m_match_bool_j_398 ? (
                    bool_j_400 = true
                ) : (
                    m_match_cond_j_355 = m_match_bool_j_354 ? (
                            bj_underscore_j_56 = var_j_349.j_head;
                            bj_underscore2_j_55 = var_j_349.j_tail;
                            flatten_fun_j_391 = fun test_fun_b_16_j_6 -> (
                                flatten_fun_j_390 = fun test_list_b_17 -> (
                                    var_j_356 = test_fun_b_16_j_6;
                                    var_j_357 = test_fun_b_16_j_6;
                                    appl_j_358 = var_j_356 var_j_357;
                                    test_fun_b_16 = appl_j_358;
                                    var_j_359 = test_list_b_17;
                                    m_match_bool_j_361 = var_j_359 ~ 
                                        {j_head, j_tail, _};
                                    m_match_bool_j_387 = var_j_359 ~ 
                                        {j_empty, _};
                                    m_match_cond_j_388 = m_match_bool_j_387 ? (
                                            bool_j_389 = true
                                        ) : (
                                            m_match_cond_j_362 = m_match_bool_j_361 ? (
                                                    hd_j_52 = var_j_359.j_head;
                                                    tl_j_51 = var_j_359.j_tail;
                                                    bool_j_363 = false;
                                                    fail_b_14 = bool_j_363;
                                                    flatten_fun_j_372 = fun expr_b_13 -> (
                                                        var_j_364 = expr_b_13;
                                                        m_match_bool_j_366 = var_j_364 ~ any;
                                                        m_match_bool_j_369 = var_j_364 ~ int;
                                                        m_match_cond_j_370 = m_match_bool_j_369 ? (
                                                                bool_j_371 = true
                                                            ) : (
                                                                m_match_cond_j_367 = m_match_bool_j_366 ? (
                                                                        
                                                                    var_j_368 = fail_b_14
                                                                    ) : (
                                                                        
                                                                    void_j_365 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_374 = fun bj_null_j_50 -> (
                                                        input_j_373 = input);
                                                    flatten_fun_j_376 = fun expr_b_15 -> (
                                                        var_j_375 = expr_b_15);
                                                    record_j_377 = {checker = flatten_fun_j_372, generator = flatten_fun_j_374, wrapper = flatten_fun_j_376};
                                                    proj_j_378 = record_j_377.checker;
                                                    var_j_379 = hd_j_52;
                                                    appl_j_380 = proj_j_378 var_j_379;
                                                    elm_check_b_18 = appl_j_380;
                                                    var_j_381 = elm_check_b_18;
                                                    if_j_386 = var_j_381 ? (
                                                            var_j_382 = test_fun_b_16;
                                                            var_j_383 = tl_j_51;
                                                            appl_j_384 = var_j_382 var_j_383
                                                        ) : (
                                                            var_j_385 = elm_check_b_18
                                                        )
                                                ) : (
                                                    void_j_360 = {}
                                                )
                                        )));
                            test_fun_b_16_j_6_j_54 = flatten_fun_j_391;
                            var_j_392 = test_fun_b_16_j_6_j_54;
                            var_j_393 = test_fun_b_16_j_6_j_54;
                            appl_j_394 = var_j_392 var_j_393;
                            test_fun_b_16_j_53 = appl_j_394;
                            var_j_395 = test_fun_b_16_j_53;
                            var_j_396 = expr_b_19;
                            appl_j_397 = var_j_395 var_j_396
                        ) : (
                            m_match_cond_j_352 = m_match_bool_j_351 ? (
                                    var_j_353 = lst_fail_b_20
                                ) : (
                                    void_j_350 = {}
                                )
                        )
                ));
        flatten_fun_j_452 = fun bj_null_j_61 -> (
            flatten_fun_j_438 = fun list_maker_b_11_j_7 -> (
                flatten_fun_j_437 = fun len_b_10 -> (
                    var_j_402 = list_maker_b_11_j_7;
                    var_j_403 = list_maker_b_11_j_7;
                    appl_j_404 = var_j_402 var_j_403;
                    list_maker_b_11 = appl_j_404;
                    var_j_405 = len_b_10;
                    int_j_406 = 0;
                    binop_j_407 = var_j_405 == int_j_406;
                    if_j_436 = binop_j_407 ? (
                            record_j_408 = {};
                            record_j_409 = {j_empty = record_j_408}
                        ) : (
                            bool_j_410 = false;
                            fail_b_8 = bool_j_410;
                            flatten_fun_j_419 = fun expr_b_7 -> (
                                var_j_411 = expr_b_7;
                                m_match_bool_j_413 = var_j_411 ~ any;
                                m_match_bool_j_416 = var_j_411 ~ int;
                                m_match_cond_j_417 = m_match_bool_j_416 ? (
                                        bool_j_418 = true
                                    ) : (
                                        m_match_cond_j_414 = m_match_bool_j_413 ? (
                                                var_j_415 = fail_b_8
                                            ) : (
                                                void_j_412 = {}
                                            )
                                    ));
                            flatten_fun_j_421 = fun bj_null_j_57 -> (
                                input_j_420 = input);
                            flatten_fun_j_423 = fun expr_b_9 -> (
                                var_j_422 = expr_b_9);
                            record_j_424 = {checker = flatten_fun_j_419, generator = flatten_fun_j_421, wrapper = flatten_fun_j_423};
                            proj_j_425 = record_j_424.generator;
                            int_j_426 = 0;
                            appl_j_427 = proj_j_425 int_j_426;
                            elm_b_12 = appl_j_427;
                            record_j_428 = {};
                            var_j_429 = elm_b_12;
                            var_j_430 = list_maker_b_11;
                            var_j_431 = len_b_10;
                            int_j_432 = 1;
                            binop_j_433 = var_j_431 - int_j_432;
                            appl_j_434 = var_j_430 binop_j_433;
                            record_j_435 = {j_cons = record_j_428, j_head = var_j_429, j_tail = appl_j_434}
                        )));
            list_maker_b_11_j_7_j_60 = flatten_fun_j_438;
            var_j_439 = list_maker_b_11_j_7_j_60;
            var_j_440 = list_maker_b_11_j_7_j_60;
            appl_j_441 = var_j_439 var_j_440;
            list_maker_b_11_j_59 = appl_j_441;
            input_j_442 = input;
            len_b_10_j_58 = input_j_442;
            int_j_443 = 0;
            var_j_444 = len_b_10_j_58;
            binop_j_445 = int_j_443 <= var_j_444;
            if_j_451 = binop_j_445 ? (
                    var_j_446 = list_maker_b_11_j_59;
                    var_j_447 = len_b_10_j_58;
                    appl_j_448 = var_j_446 var_j_447
                ) : (
                    bool_j_449 = false;
                    assume_j_450 = assume bool_j_449
                ));
        flatten_fun_j_454 = fun expr_b_21 -> (
            var_j_453 = expr_b_21);
        record_j_455 = {checker = flatten_fun_j_401, generator = flatten_fun_j_452, wrapper = flatten_fun_j_454};
        proj_j_456 = record_j_455.generator;
        int_j_457 = 0;
        appl_j_458 = proj_j_456 int_j_457;
        candidate_b_22 = appl_j_458;
        flatten_fun_j_474 = fun l_j_62 -> (
            var_j_459 = appl_j_133;
            var_j_460 = l_j_62;
            m_i_819 = var_j_459 ~ fun;
            appl_j_461 = m_i_819 ? (
                    c_appl_i_820 = var_j_459 var_j_460
                ) : (
                    ab_i_821 = abort
                );
            var_j_462 = is_nonempty;
            var_j_463 = xs_j_64;
            m_i_822 = var_j_462 ~ fun;
            appl_j_464 = m_i_822 ? (
                    c_appl_i_823 = var_j_462 var_j_463
                ) : (
                    ab_i_824 = abort
                );
            m_i_825 = appl_j_464 ~ bool;
            if_j_472 = m_i_825 ? (
                    c_cond_i_835 = appl_j_464 ? (
                            var_j_465 = is_nonempty;
                            var_j_466 = l_j_62;
                            m_i_826 = var_j_465 ~ fun;
                            appl_j_467 = m_i_826 ? (
                                    c_appl_i_827 = var_j_465 var_j_466
                                ) : (
                                    ab_i_828 = abort
                                )
                        ) : (
                            var_j_468 = is_nonempty;
                            var_j_469 = l_j_62;
                            m_i_829 = var_j_468 ~ fun;
                            appl_j_470 = m_i_829 ? (
                                    c_appl_i_830 = var_j_468 var_j_469
                                ) : (
                                    ab_i_831 = abort
                                );
                            m_i_832 = appl_j_470 ~ bool;
                            notop_j_471 = m_i_832 ? (
                                    c_not_i_833 = not appl_j_470
                                ) : (
                                    ab_i_834 = abort
                                )
                        )
                ) : (
                    ab_i_836 = abort
                );
            m_bl_i_837 = appl_j_461 ~ bool;
            m_br_i_838 = if_j_472 ~ bool;
            m_b_i_839 = m_bl_i_837 and m_br_i_838;
            binop_j_473 = m_b_i_839 ? (
                    c_binop_i_840 = appl_j_461 and if_j_472
                ) : (
                    ab_i_841 = abort
                ));
        var_j_475 = candidate_b_22;
        appl_j_476 = flatten_fun_j_474 var_j_475;
        if_j_480 = appl_j_476 ? (
                var_j_477 = candidate_b_22
            ) : (
                bool_j_478 = false;
                assume_j_479 = assume bool_j_478
            ));
    flatten_fun_j_483 = fun expr_b_41 -> (
        var_j_482 = expr_b_41);
    record_j_484 = {checker = flatten_fun_j_347, generator = flatten_fun_j_481, wrapper = flatten_fun_j_483});
ret_type = ret_type_j_485;
sort_j_623 = fun xs_j_36 -> (
    flatten_fun_j_620 = fun xs_b_0 -> (
        flatten_fun_j_539 = fun expr_b_69 -> (
            bool_j_486 = false;
            lst_fail_b_70 = bool_j_486;
            var_j_487 = expr_b_69;
            m_match_bool_j_489 = var_j_487 ~ any;
            m_match_bool_j_492 = var_j_487 ~ {j_head, j_tail, _};
            m_match_bool_j_536 = var_j_487 ~ {j_empty, _};
            m_match_cond_j_537 = m_match_bool_j_536 ? (
                    bool_j_538 = true
                ) : (
                    m_match_cond_j_493 = m_match_bool_j_492 ? (
                            bj_underscore_j_29 = var_j_487.j_head;
                            bj_underscore2_j_28 = var_j_487.j_tail;
                            flatten_fun_j_529 = fun test_fun_b_66_j_2 -> (
                                flatten_fun_j_528 = fun test_list_b_67 -> (
                                    var_j_494 = test_fun_b_66_j_2;
                                    var_j_495 = test_fun_b_66_j_2;
                                    appl_j_496 = var_j_494 var_j_495;
                                    test_fun_b_66 = appl_j_496;
                                    var_j_497 = test_list_b_67;
                                    m_match_bool_j_499 = var_j_497 ~ 
                                        {j_head, j_tail, _};
                                    m_match_bool_j_525 = var_j_497 ~ 
                                        {j_empty, _};
                                    m_match_cond_j_526 = m_match_bool_j_525 ? (
                                            bool_j_527 = true
                                        ) : (
                                            m_match_cond_j_500 = m_match_bool_j_499 ? (
                                                    hd_j_25 = var_j_497.j_head;
                                                    tl_j_24 = var_j_497.j_tail;
                                                    bool_j_501 = false;
                                                    fail_b_64 = bool_j_501;
                                                    flatten_fun_j_510 = fun expr_b_63 -> (
                                                        var_j_502 = expr_b_63;
                                                        m_match_bool_j_504 = var_j_502 ~ any;
                                                        m_match_bool_j_507 = var_j_502 ~ int;
                                                        m_match_cond_j_508 = m_match_bool_j_507 ? (
                                                                bool_j_509 = true
                                                            ) : (
                                                                m_match_cond_j_505 = m_match_bool_j_504 ? (
                                                                        
                                                                    var_j_506 = fail_b_64
                                                                    ) : (
                                                                        
                                                                    void_j_503 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_512 = fun bj_null_j_23 -> (
                                                        input_j_511 = input);
                                                    flatten_fun_j_514 = fun expr_b_65 -> (
                                                        var_j_513 = expr_b_65);
                                                    record_j_515 = {checker = flatten_fun_j_510, generator = flatten_fun_j_512, wrapper = flatten_fun_j_514};
                                                    proj_j_516 = record_j_515.checker;
                                                    var_j_517 = hd_j_25;
                                                    appl_j_518 = proj_j_516 var_j_517;
                                                    elm_check_b_68 = appl_j_518;
                                                    var_j_519 = elm_check_b_68;
                                                    if_j_524 = var_j_519 ? (
                                                            var_j_520 = test_fun_b_66;
                                                            var_j_521 = tl_j_24;
                                                            appl_j_522 = var_j_520 var_j_521
                                                        ) : (
                                                            var_j_523 = elm_check_b_68
                                                        )
                                                ) : (
                                                    void_j_498 = {}
                                                )
                                        )));
                            test_fun_b_66_j_2_j_27 = flatten_fun_j_529;
                            var_j_530 = test_fun_b_66_j_2_j_27;
                            var_j_531 = test_fun_b_66_j_2_j_27;
                            appl_j_532 = var_j_530 var_j_531;
                            test_fun_b_66_j_26 = appl_j_532;
                            var_j_533 = test_fun_b_66_j_26;
                            var_j_534 = expr_b_69;
                            appl_j_535 = var_j_533 var_j_534
                        ) : (
                            m_match_cond_j_490 = m_match_bool_j_489 ? (
                                    var_j_491 = lst_fail_b_70
                                ) : (
                                    void_j_488 = {}
                                )
                        )
                ));
        flatten_fun_j_590 = fun bj_null_j_34 -> (
            flatten_fun_j_576 = fun list_maker_b_61_j_3 -> (
                flatten_fun_j_575 = fun len_b_60 -> (
                    var_j_540 = list_maker_b_61_j_3;
                    var_j_541 = list_maker_b_61_j_3;
                    appl_j_542 = var_j_540 var_j_541;
                    list_maker_b_61 = appl_j_542;
                    var_j_543 = len_b_60;
                    int_j_544 = 0;
                    binop_j_545 = var_j_543 == int_j_544;
                    if_j_574 = binop_j_545 ? (
                            record_j_546 = {};
                            record_j_547 = {j_empty = record_j_546}
                        ) : (
                            bool_j_548 = false;
                            fail_b_58 = bool_j_548;
                            flatten_fun_j_557 = fun expr_b_57 -> (
                                var_j_549 = expr_b_57;
                                m_match_bool_j_551 = var_j_549 ~ any;
                                m_match_bool_j_554 = var_j_549 ~ int;
                                m_match_cond_j_555 = m_match_bool_j_554 ? (
                                        bool_j_556 = true
                                    ) : (
                                        m_match_cond_j_552 = m_match_bool_j_551 ? (
                                                var_j_553 = fail_b_58
                                            ) : (
                                                void_j_550 = {}
                                            )
                                    ));
                            flatten_fun_j_559 = fun bj_null_j_30 -> (
                                input_j_558 = input);
                            flatten_fun_j_561 = fun expr_b_59 -> (
                                var_j_560 = expr_b_59);
                            record_j_562 = {checker = flatten_fun_j_557, generator = flatten_fun_j_559, wrapper = flatten_fun_j_561};
                            proj_j_563 = record_j_562.generator;
                            int_j_564 = 0;
                            appl_j_565 = proj_j_563 int_j_564;
                            elm_b_62 = appl_j_565;
                            record_j_566 = {};
                            var_j_567 = elm_b_62;
                            var_j_568 = list_maker_b_61;
                            var_j_569 = len_b_60;
                            int_j_570 = 1;
                            binop_j_571 = var_j_569 - int_j_570;
                            appl_j_572 = var_j_568 binop_j_571;
                            record_j_573 = {j_cons = record_j_566, j_head = var_j_567, j_tail = appl_j_572}
                        )));
            list_maker_b_61_j_3_j_33 = flatten_fun_j_576;
            var_j_577 = list_maker_b_61_j_3_j_33;
            var_j_578 = list_maker_b_61_j_3_j_33;
            appl_j_579 = var_j_577 var_j_578;
            list_maker_b_61_j_32 = appl_j_579;
            input_j_580 = input;
            len_b_60_j_31 = input_j_580;
            int_j_581 = 0;
            var_j_582 = len_b_60_j_31;
            binop_j_583 = int_j_581 <= var_j_582;
            if_j_589 = binop_j_583 ? (
                    var_j_584 = list_maker_b_61_j_32;
                    var_j_585 = len_b_60_j_31;
                    appl_j_586 = var_j_584 var_j_585
                ) : (
                    bool_j_587 = false;
                    assume_j_588 = assume bool_j_587
                ));
        flatten_fun_j_592 = fun expr_b_71 -> (
            var_j_591 = expr_b_71);
        record_j_593 = {checker = flatten_fun_j_539, generator = flatten_fun_j_590, wrapper = flatten_fun_j_592};
        proj_j_594 = record_j_593.checker;
        var_j_595 = xs_b_0;
        appl_j_596 = proj_j_594 var_j_595;
        arg_check_b_1 = appl_j_596;
        var_j_597 = arg_check_b_1;
        if_j_619 = var_j_597 ? (
                flatten_fun_j_601 = fun xs_j_35 -> (
                    var_j_598 = ret_type;
                    var_j_599 = xs_j_35;
                    m_i_842 = var_j_598 ~ fun;
                    appl_j_600 = m_i_842 ? (
                            c_appl_i_843 = var_j_598 var_j_599
                        ) : (
                            ab_i_844 = abort
                        ));
                var_j_602 = xs_b_0;
                appl_j_603 = flatten_fun_j_601 var_j_602;
                proj_j_604 = appl_j_603.wrapper;
                var_j_605 = appl_j_169;
                var_j_606 = appl_j_210;
                m_i_845 = var_j_605 ~ fun;
                appl_j_607 = m_i_845 ? (
                        c_appl_i_846 = var_j_605 var_j_606
                    ) : (
                        ab_i_847 = abort
                    );
                record_j_608 = {};
                record_j_609 = {j_empty = record_j_608};
                m_i_848 = appl_j_607 ~ fun;
                appl_j_610 = m_i_848 ? (
                        c_appl_i_849 = appl_j_607 record_j_609
                    ) : (
                        ab_i_850 = abort
                    );
                var_j_611 = xs_j_36;
                m_i_851 = appl_j_610 ~ fun;
                appl_j_612 = m_i_851 ? (
                        c_appl_i_852 = appl_j_610 var_j_611
                    ) : (
                        ab_i_853 = abort
                    );
                m_i_854 = proj_j_604 ~ fun;
                appl_j_613 = m_i_854 ? (
                        c_appl_i_855 = proj_j_604 appl_j_612
                    ) : (
                        ab_i_856 = abort
                    )
            ) : (
                bool_j_614 = false;
                assert_pred_j_615 = bool_j_614;
                assert_res_j_616 = assert_pred_j_615 ? (
                        assert_res_true_j_617 = {}
                    ) : (
                        ab_j_618 = abort
                    )
            ));
    var_j_621 = xs_j_36;
    appl_j_622 = flatten_fun_j_620 var_j_621);
sort = sort_j_623;
flatten_fun_j_677 = fun expr_b_54 -> (
    bool_j_624 = false;
    lst_fail_b_55 = bool_j_624;
    var_j_625 = expr_b_54;
    m_match_bool_j_627 = var_j_625 ~ any;
    m_match_bool_j_630 = var_j_625 ~ {j_head, j_tail, _};
    m_match_bool_j_674 = var_j_625 ~ {j_empty, _};
    m_match_cond_j_675 = m_match_bool_j_674 ? (
            bool_j_676 = true
        ) : (
            m_match_cond_j_631 = m_match_bool_j_630 ? (
                    bj_underscore = var_j_625.j_head;
                    bj_underscore2 = var_j_625.j_tail;
                    flatten_fun_j_667 = fun test_fun_b_51_j_0 -> (
                        flatten_fun_j_666 = fun test_list_b_52 -> (
                            var_j_632 = test_fun_b_51_j_0;
                            var_j_633 = test_fun_b_51_j_0;
                            appl_j_634 = var_j_632 var_j_633;
                            test_fun_b_51 = appl_j_634;
                            var_j_635 = test_list_b_52;
                            m_match_bool_j_637 = var_j_635 ~ {j_head, j_tail, _};
                            m_match_bool_j_663 = var_j_635 ~ {j_empty, _};
                            m_match_cond_j_664 = m_match_bool_j_663 ? (
                                    bool_j_665 = true
                                ) : (
                                    m_match_cond_j_638 = m_match_bool_j_637 ? (
                                            hd = var_j_635.j_head;
                                            tl_j_14 = var_j_635.j_tail;
                                            bool_j_639 = false;
                                            fail_b_49 = bool_j_639;
                                            flatten_fun_j_648 = fun expr_b_48 -> (
                                                var_j_640 = expr_b_48;
                                                m_match_bool_j_642 = var_j_640 ~ any;
                                                m_match_bool_j_645 = var_j_640 ~ int;
                                                m_match_cond_j_646 = m_match_bool_j_645 ? (
                                                        bool_j_647 = true
                                                    ) : (
                                                        m_match_cond_j_643 = m_match_bool_j_642 ? (
                                                                var_j_644 = fail_b_49
                                                            ) : (
                                                                void_j_641 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_650 = fun bj_null -> (
                                                input_j_649 = input);
                                            flatten_fun_j_652 = fun expr_b_50 -> (
                                                var_j_651 = expr_b_50);
                                            record_j_653 = {checker = flatten_fun_j_648, generator = flatten_fun_j_650, wrapper = flatten_fun_j_652};
                                            proj_j_654 = record_j_653.checker;
                                            var_j_655 = hd;
                                            appl_j_656 = proj_j_654 var_j_655;
                                            elm_check_b_53 = appl_j_656;
                                            var_j_657 = elm_check_b_53;
                                            if_j_662 = var_j_657 ? (
                                                    var_j_658 = test_fun_b_51;
                                                    var_j_659 = tl_j_14;
                                                    appl_j_660 = var_j_658 var_j_659
                                                ) : (
                                                    var_j_661 = elm_check_b_53
                                                )
                                        ) : (
                                            void_j_636 = {}
                                        )
                                )));
                    test_fun_b_51_j_0_j_16 = flatten_fun_j_667;
                    var_j_668 = test_fun_b_51_j_0_j_16;
                    var_j_669 = test_fun_b_51_j_0_j_16;
                    appl_j_670 = var_j_668 var_j_669;
                    test_fun_b_51_j_15 = appl_j_670;
                    var_j_671 = test_fun_b_51_j_15;
                    var_j_672 = expr_b_54;
                    appl_j_673 = var_j_671 var_j_672
                ) : (
                    m_match_cond_j_628 = m_match_bool_j_627 ? (
                            var_j_629 = lst_fail_b_55
                        ) : (
                            void_j_626 = {}
                        )
                )
        ));
flatten_fun_j_728 = fun bj_null_j_21 -> (
    flatten_fun_j_714 = fun list_maker_b_46_j_1 -> (
        flatten_fun_j_713 = fun len_b_45 -> (
            var_j_678 = list_maker_b_46_j_1;
            var_j_679 = list_maker_b_46_j_1;
            appl_j_680 = var_j_678 var_j_679;
            list_maker_b_46 = appl_j_680;
            var_j_681 = len_b_45;
            int_j_682 = 0;
            binop_j_683 = var_j_681 == int_j_682;
            if_j_712 = binop_j_683 ? (
                    record_j_684 = {};
                    record_j_685 = {j_empty = record_j_684}
                ) : (
                    bool_j_686 = false;
                    fail_b_43 = bool_j_686;
                    flatten_fun_j_695 = fun expr_b_42 -> (
                        var_j_687 = expr_b_42;
                        m_match_bool_j_689 = var_j_687 ~ any;
                        m_match_bool_j_692 = var_j_687 ~ int;
                        m_match_cond_j_693 = m_match_bool_j_692 ? (
                                bool_j_694 = true
                            ) : (
                                m_match_cond_j_690 = m_match_bool_j_689 ? (
                                        var_j_691 = fail_b_43
                                    ) : (
                                        void_j_688 = {}
                                    )
                            ));
                    flatten_fun_j_697 = fun bj_null_j_17 -> (
                        input_j_696 = input);
                    flatten_fun_j_699 = fun expr_b_44 -> (
                        var_j_698 = expr_b_44);
                    record_j_700 = {checker = flatten_fun_j_695, generator = flatten_fun_j_697, wrapper = flatten_fun_j_699};
                    proj_j_701 = record_j_700.generator;
                    int_j_702 = 0;
                    appl_j_703 = proj_j_701 int_j_702;
                    elm_b_47 = appl_j_703;
                    record_j_704 = {};
                    var_j_705 = elm_b_47;
                    var_j_706 = list_maker_b_46;
                    var_j_707 = len_b_45;
                    int_j_708 = 1;
                    binop_j_709 = var_j_707 - int_j_708;
                    appl_j_710 = var_j_706 binop_j_709;
                    record_j_711 = {j_cons = record_j_704, j_head = var_j_705, j_tail = appl_j_710}
                )));
    list_maker_b_46_j_1_j_20 = flatten_fun_j_714;
    var_j_715 = list_maker_b_46_j_1_j_20;
    var_j_716 = list_maker_b_46_j_1_j_20;
    appl_j_717 = var_j_715 var_j_716;
    list_maker_b_46_j_19 = appl_j_717;
    input_j_718 = input;
    len_b_45_j_18 = input_j_718;
    int_j_719 = 0;
    var_j_720 = len_b_45_j_18;
    binop_j_721 = int_j_719 <= var_j_720;
    if_j_727 = binop_j_721 ? (
            var_j_722 = list_maker_b_46_j_19;
            var_j_723 = len_b_45_j_18;
            appl_j_724 = var_j_722 var_j_723
        ) : (
            bool_j_725 = false;
            assume_j_726 = assume bool_j_725
        ));
flatten_fun_j_730 = fun expr_b_56 -> (
    var_j_729 = expr_b_56);
record_j_731 = {checker = flatten_fun_j_677, generator = flatten_fun_j_728, wrapper = flatten_fun_j_730};
proj_j_732 = record_j_731.generator;
int_j_733 = 0;
appl_j_734 = proj_j_732 int_j_733;
xs_b_72 = appl_j_734;
flatten_fun_j_739 = fun xs_j_22 -> (
    var_j_735 = ret_type;
    var_j_736 = xs_j_22;
    m_i_857 = var_j_735 ~ fun;
    appl_j_737 = m_i_857 ? (
            c_appl_i_858 = var_j_735 var_j_736
        ) : (
            ab_i_859 = abort
        );
    proj_j_738 = appl_j_737.checker);
appl_j_741 = flatten_fun_j_739 xs_b_72;
appl_j_744 = sort xs_b_72;
appl_j_745 = appl_j_741 appl_j_744;
check_res_b_73 = appl_j_745;
if_j_753 = check_res_b_73 ? (
        var_j_747 = sort
    ) : (
        error_var_j_748 = check_res_b_73;
        assert_pred_j_749 = error_var_j_748;
        assert_res_j_750 = assert_pred_j_749 ? (
                assert_res_true_j_751 = {}
            ) : (
                ab_j_752 = abort
            )
    );
i_result = if_j_753