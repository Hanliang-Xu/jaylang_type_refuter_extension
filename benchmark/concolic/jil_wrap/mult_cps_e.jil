i_first = {};
acc_j_13 = fun z -> (
    acc_j_12 = fun m -> (
        flatten_fun_j_11 = fun r -> (
            var_j_6 = m;
            var_j_7 = z;
            var_j_8 = r;
            m_bl_i_162 = var_j_7 ~ int;
            m_br_i_163 = var_j_8 ~ int;
            m_b_i_164 = m_bl_i_162 and m_br_i_163;
            binop_j_9 = m_b_i_164 ? (
                    c_binop_i_165 = var_j_7 + var_j_8
                ) : (
                    ab_i_166 = abort
                );
            m_i_167 = var_j_6 ~ fun;
            appl_j_10 = m_i_167 ? (
                    c_appl_i_168 = var_j_6 binop_j_9
                ) : (
                    ab_i_169 = abort
                ))));
acc = acc_j_13;
flatten_fun_j_46 = fun mult_j_0 -> (
    flatten_fun_j_45 = fun x -> (
        flatten_fun_j_44 = fun y -> (
            flatten_fun_j_43 = fun k -> (
                var_j_14 = mult_j_0;
                var_j_15 = mult_j_0;
                appl_j_16 = var_j_14 var_j_15;
                mult = appl_j_16;
                var_j_17 = x;
                int_j_18 = 0;
                m_bl_i_170 = var_j_17 ~ int;
                m_br_i_171 = int_j_18 ~ int;
                m_b_i_172 = m_bl_i_170 and m_br_i_171;
                binop_j_19 = m_b_i_172 ? (
                        c_binop_i_173 = var_j_17 <= int_j_18
                    ) : (
                        ab_i_174 = abort
                    );
                var_j_20 = y;
                int_j_21 = 0;
                m_bl_i_175 = var_j_20 ~ int;
                m_br_i_176 = int_j_21 ~ int;
                m_b_i_177 = m_bl_i_175 and m_br_i_176;
                binop_j_22 = m_b_i_177 ? (
                        c_binop_i_178 = var_j_20 <= int_j_21
                    ) : (
                        ab_i_179 = abort
                    );
                m_bl_i_180 = binop_j_19 ~ bool;
                m_br_i_181 = binop_j_22 ~ bool;
                m_b_i_182 = m_bl_i_180 and m_br_i_181;
                binop_j_23 = m_b_i_182 ? (
                        c_binop_i_183 = binop_j_19 or binop_j_22
                    ) : (
                        ab_i_184 = abort
                    );
                m_i_185 = binop_j_23 ~ bool;
                if_j_42 = m_i_185 ? (
                        c_cond_i_214 = binop_j_23 ? (
                                var_j_24 = k;
                                int_j_25 = 0;
                                m_i_186 = var_j_24 ~ fun;
                                appl_j_26 = m_i_186 ? (
                                        c_appl_i_187 = var_j_24 int_j_25
                                    ) : (
                                        ab_i_188 = abort
                                    )
                            ) : (
                                var_j_27 = x;
                                var_j_28 = mult;
                                var_j_29 = x;
                                m_i_189 = var_j_28 ~ fun;
                                appl_j_30 = m_i_189 ? (
                                        c_appl_i_190 = var_j_28 var_j_29
                                    ) : (
                                        ab_i_191 = abort
                                    );
                                var_j_31 = y;
                                int_j_32 = 1;
                                m_bl_i_192 = var_j_31 ~ int;
                                m_br_i_193 = int_j_32 ~ int;
                                m_b_i_194 = m_bl_i_192 and m_br_i_193;
                                binop_j_33 = m_b_i_194 ? (
                                        c_binop_i_195 = var_j_31 - int_j_32
                                    ) : (
                                        ab_i_196 = abort
                                    );
                                m_i_197 = appl_j_30 ~ fun;
                                appl_j_34 = m_i_197 ? (
                                        c_appl_i_198 = appl_j_30 binop_j_33
                                    ) : (
                                        ab_i_199 = abort
                                    );
                                var_j_35 = acc;
                                var_j_36 = x;
                                m_i_200 = var_j_35 ~ fun;
                                appl_j_37 = m_i_200 ? (
                                        c_appl_i_201 = var_j_35 var_j_36
                                    ) : (
                                        ab_i_202 = abort
                                    );
                                var_j_38 = k;
                                m_i_203 = appl_j_37 ~ fun;
                                appl_j_39 = m_i_203 ? (
                                        c_appl_i_204 = appl_j_37 var_j_38
                                    ) : (
                                        ab_i_205 = abort
                                    );
                                m_i_206 = appl_j_34 ~ fun;
                                appl_j_40 = m_i_206 ? (
                                        c_appl_i_207 = appl_j_34 appl_j_39
                                    ) : (
                                        ab_i_208 = abort
                                    );
                                m_bl_i_209 = var_j_27 ~ int;
                                m_br_i_210 = appl_j_40 ~ int;
                                m_b_i_211 = m_bl_i_209 and m_br_i_210;
                                binop_j_41 = m_b_i_211 ? (
                                        c_binop_i_212 = var_j_27 + appl_j_40
                                    ) : (
                                        ab_i_213 = abort
                                    )
                            )
                    ) : (
                        ab_i_215 = abort
                    )))));
appl_j_49 = flatten_fun_j_46 flatten_fun_j_46;
check100_j_57 = fun w -> (
    int_j_50 = 600;
    var_j_51 = w;
    m_bl_i_216 = int_j_50 ~ int;
    m_br_i_217 = var_j_51 ~ int;
    m_b_i_218 = m_bl_i_216 and m_br_i_217;
    binop_j_52 = m_b_i_218 ? (
            c_binop_i_219 = int_j_50 <= var_j_51
        ) : (
            ab_i_220 = abort
        );
    assert_pred_j_53 = binop_j_52;
    m_i_221 = assert_pred_j_53 ~ bool;
    assert_res_j_54 = m_i_221 ? (
            c_cond_i_222 = assert_pred_j_53 ? (
                    assert_res_true_j_55 = {}
                ) : (
                    ab_j_56 = abort
                )
        ) : (
            ab_i_223 = abort
        ));
check100 = check100_j_57;
main_j_115 = fun n -> (
    flatten_fun_j_112 = fun n_b_0 -> (
        int_j_58 = 0;
        input_j_59 = input;
        m_bl_i_224 = int_j_58 ~ int;
        m_br_i_225 = input_j_59 ~ int;
        m_b_i_226 = m_bl_i_224 and m_br_i_225;
        binop_j_60 = m_b_i_226 ? (
                c_binop_i_227 = int_j_58 < input_j_59
            ) : (
                ab_i_228 = abort
            );
        if_j_80 = binop_j_60 ? (
                bool_j_61 = false;
                fail_b_6 = bool_j_61;
                flatten_fun_j_70 = fun expr_b_5 -> (
                    var_j_62 = expr_b_5;
                    m_match_bool_j_64 = var_j_62 ~ any;
                    m_match_bool_j_67 = var_j_62 ~ int;
                    m_match_cond_j_68 = m_match_bool_j_67 ? (
                            bool_j_69 = true
                        ) : (
                            m_match_cond_j_65 = m_match_bool_j_64 ? (
                                    var_j_66 = fail_b_6
                                ) : (
                                    void_j_63 = {}
                                )
                        ));
                flatten_fun_j_72 = fun bj_null_j_2 -> (
                    input_j_71 = input);
                flatten_fun_j_74 = fun expr_b_7 -> (
                    var_j_73 = expr_b_7);
                record_j_75 = {checker = flatten_fun_j_70, generator = flatten_fun_j_72, wrapper = flatten_fun_j_74};
                proj_j_76 = record_j_75.checker;
                var_j_77 = n_b_0;
                m_i_229 = proj_j_76 ~ fun;
                appl_j_78 = m_i_229 ? (
                        c_appl_i_230 = proj_j_76 var_j_77
                    ) : (
                        ab_i_231 = abort
                    )
            ) : (
                bool_j_79 = true
            );
        arg_check_b_1 = if_j_80;
        var_j_81 = arg_check_b_1;
        if_j_111 = var_j_81 ? (
                bool_j_82 = false;
                fail_b_9 = bool_j_82;
                flatten_fun_j_91 = fun expr_b_8 -> (
                    var_j_83 = expr_b_8;
                    m_match_bool_j_85 = var_j_83 ~ any;
                    m_match_bool_j_88 = var_j_83 ~ int;
                    m_match_cond_j_89 = m_match_bool_j_88 ? (
                            bool_j_90 = true
                        ) : (
                            m_match_cond_j_86 = m_match_bool_j_85 ? (
                                    var_j_87 = fail_b_9
                                ) : (
                                    void_j_84 = {}
                                )
                        ));
                flatten_fun_j_93 = fun bj_null_j_3 -> (
                    input_j_92 = input);
                flatten_fun_j_95 = fun expr_b_10 -> (
                    var_j_94 = expr_b_10);
                record_j_96 = {checker = flatten_fun_j_91, generator = flatten_fun_j_93, wrapper = flatten_fun_j_95};
                proj_j_97 = record_j_96.wrapper;
                var_j_98 = appl_j_49;
                int_j_99 = 100;
                m_i_232 = var_j_98 ~ fun;
                appl_j_100 = m_i_232 ? (
                        c_appl_i_233 = var_j_98 int_j_99
                    ) : (
                        ab_i_234 = abort
                    );
                var_j_101 = n;
                m_i_235 = appl_j_100 ~ fun;
                appl_j_102 = m_i_235 ? (
                        c_appl_i_236 = appl_j_100 var_j_101
                    ) : (
                        ab_i_237 = abort
                    );
                var_j_103 = check100;
                m_i_238 = appl_j_102 ~ fun;
                appl_j_104 = m_i_238 ? (
                        c_appl_i_239 = appl_j_102 var_j_103
                    ) : (
                        ab_i_240 = abort
                    );
                m_i_241 = proj_j_97 ~ fun;
                appl_j_105 = m_i_241 ? (
                        c_appl_i_242 = proj_j_97 appl_j_104
                    ) : (
                        ab_i_243 = abort
                    )
            ) : (
                var_j_106 = arg_check_b_1;
                assert_pred_j_107 = var_j_106;
                assert_res_j_108 = assert_pred_j_107 ? (
                        assert_res_true_j_109 = {}
                    ) : (
                        ab_j_110 = abort
                    )
            ));
    var_j_113 = n;
    appl_j_114 = flatten_fun_j_112 var_j_113);
main = main_j_115;
bool_j_116 = false;
fail_b_3 = bool_j_116;
flatten_fun_j_125 = fun expr_b_2 -> (
    var_j_117 = expr_b_2;
    m_match_bool_j_119 = var_j_117 ~ any;
    m_match_bool_j_122 = var_j_117 ~ int;
    m_match_cond_j_123 = m_match_bool_j_122 ? (
            bool_j_124 = true
        ) : (
            m_match_cond_j_120 = m_match_bool_j_119 ? (
                    var_j_121 = fail_b_3
                ) : (
                    void_j_118 = {}
                )
        ));
flatten_fun_j_127 = fun bj_null -> (
    input_j_126 = input);
flatten_fun_j_129 = fun expr_b_4 -> (
    var_j_128 = expr_b_4);
record_j_130 = {checker = flatten_fun_j_125, generator = flatten_fun_j_127, wrapper = flatten_fun_j_129};
proj_j_131 = record_j_130.generator;
int_j_132 = 0;
appl_j_133 = proj_j_131 int_j_132;
n_b_14 = appl_j_133;
bool_j_134 = false;
fail_b_12 = bool_j_134;
flatten_fun_j_143 = fun expr_b_11 -> (
    var_j_135 = expr_b_11;
    m_match_bool_j_137 = var_j_135 ~ any;
    m_match_bool_j_140 = var_j_135 ~ int;
    m_match_cond_j_141 = m_match_bool_j_140 ? (
            bool_j_142 = true
        ) : (
            m_match_cond_j_138 = m_match_bool_j_137 ? (
                    var_j_139 = fail_b_12
                ) : (
                    void_j_136 = {}
                )
        ));
flatten_fun_j_145 = fun bj_null_j_1 -> (
    input_j_144 = input);
flatten_fun_j_147 = fun expr_b_13 -> (
    var_j_146 = expr_b_13);
record_j_148 = {checker = flatten_fun_j_143, generator = flatten_fun_j_145, wrapper = flatten_fun_j_147};
proj_j_149 = record_j_148.checker;
appl_j_152 = main n_b_14;
appl_j_153 = proj_j_149 appl_j_152;
check_res_b_15 = appl_j_153;
if_j_161 = check_res_b_15 ? (
        var_j_155 = main
    ) : (
        error_var_j_156 = check_res_b_15;
        assert_pred_j_157 = error_var_j_156;
        assert_res_j_158 = assert_pred_j_157 ? (
                assert_res_true_j_159 = {}
            ) : (
                ab_j_160 = abort
            )
    );
i_result = if_j_161