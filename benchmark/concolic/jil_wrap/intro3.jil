i_first = {};
flatten_fun_j_85 = fun expr_b_11 -> (
    bool_j_41 = false;
    rec_fail_b_10 = bool_j_41;
    bool_j_42 = false;
    rec_fail_b_9 = bool_j_42;
    bool_j_43 = false;
    rec_fail_b_8 = bool_j_43;
    var_j_44 = expr_b_11;
    m_match_bool_j_46 = var_j_44 ~ any;
    m_match_bool_j_49 = var_j_44 ~ {bj_actual_rec, _};
    m_match_cond_j_50 = m_match_bool_j_49 ? (
            var_j_51 = expr_b_11;
            proj_j_52 = var_j_51.bj_decl_lbls;
            m_match_bool_j_54 = proj_j_52 ~ any;
            m_match_bool_j_57 = proj_j_52 ~ {e, _};
            m_match_cond_j_58 = m_match_bool_j_57 ? (
                    e_j_0 = proj_j_52.e;
                    var_j_59 = expr_b_11;
                    proj_j_60 = var_j_59.bj_actual_rec;
                    m_match_bool_j_62 = proj_j_60 ~ any;
                    m_match_bool_j_65 = proj_j_60 ~ {e, _};
                    m_match_cond_j_66 = m_match_bool_j_65 ? (
                            e = proj_j_60.e;
                            bool_j_67 = false;
                            fail_b_13 = bool_j_67;
                            flatten_fun_j_76 = fun expr_b_12 -> (
                                var_j_68 = expr_b_12;
                                m_match_bool_j_70 = var_j_68 ~ any;
                                m_match_bool_j_73 = var_j_68 ~ int;
                                m_match_cond_j_74 = m_match_bool_j_73 ? (
                                        bool_j_75 = true
                                    ) : (
                                        m_match_cond_j_71 = m_match_bool_j_70 ? (
                                                var_j_72 = fail_b_13
                                            ) : (
                                                void_j_69 = {}
                                            )
                                    ));
                            flatten_fun_j_78 = fun bj_null -> (
                                input_j_77 = input);
                            flatten_fun_j_80 = fun expr_b_14 -> (
                                var_j_79 = expr_b_14);
                            record_j_81 = {checker = flatten_fun_j_76, generator = flatten_fun_j_78, wrapper = flatten_fun_j_80};
                            proj_j_82 = record_j_81.checker;
                            var_j_83 = e;
                            appl_j_84 = proj_j_82 var_j_83
                        ) : (
                            m_match_cond_j_63 = m_match_bool_j_62 ? (
                                    var_j_64 = rec_fail_b_8
                                ) : (
                                    void_j_61 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_55 = m_match_bool_j_54 ? (
                            var_j_56 = rec_fail_b_9
                        ) : (
                            void_j_53 = {}
                        )
                )
        ) : (
            m_match_cond_j_47 = m_match_bool_j_46 ? (
                    var_j_48 = rec_fail_b_10
                ) : (
                    void_j_45 = {}
                )
        ));
flatten_fun_j_109 = fun bj_null_j_2 -> (
    bool_j_86 = false;
    fail_b_6 = bool_j_86;
    flatten_fun_j_95 = fun expr_b_5 -> (
        var_j_87 = expr_b_5;
        m_match_bool_j_89 = var_j_87 ~ any;
        m_match_bool_j_92 = var_j_87 ~ int;
        m_match_cond_j_93 = m_match_bool_j_92 ? (
                bool_j_94 = true
            ) : (
                m_match_cond_j_90 = m_match_bool_j_89 ? (
                        var_j_91 = fail_b_6
                    ) : (
                        void_j_88 = {}
                    )
            ));
    flatten_fun_j_97 = fun bj_null_j_1 -> (
        input_j_96 = input);
    flatten_fun_j_99 = fun expr_b_7 -> (
        var_j_98 = expr_b_7);
    record_j_100 = {checker = flatten_fun_j_95, generator = flatten_fun_j_97, wrapper = flatten_fun_j_99};
    proj_j_101 = record_j_100.generator;
    int_j_102 = 0;
    appl_j_103 = proj_j_101 int_j_102;
    e_b_4 = appl_j_103;
    var_j_104 = e_b_4;
    record_j_105 = {e = var_j_104};
    record_j_106 = {};
    record_j_107 = {e = record_j_106};
    record_j_108 = {bj_actual_rec = record_j_105, bj_decl_lbls = record_j_107});
flatten_fun_j_111 = fun expr_b_15 -> (
    var_j_110 = expr_b_15);
record_j_112 = {checker = flatten_fun_j_85, generator = flatten_fun_j_109, wrapper = flatten_fun_j_111};
unit_type = record_j_112;
int_j_113 = 0;
record_j_114 = {e = int_j_113};
record_j_115 = {};
record_j_116 = {e = record_j_115};
record_j_117 = {bj_actual_rec = record_j_114, bj_decl_lbls = record_j_116};
unit = record_j_117;
f_j_124 = fun x -> (
    f_j_123 = fun g -> (
        var_j_118 = g;
        var_j_119 = x;
        int_j_120 = 1;
        m_bl_i_749 = var_j_119 ~ int;
        m_br_i_750 = int_j_120 ~ int;
        m_b_i_751 = m_bl_i_749 and m_br_i_750;
        binop_j_121 = m_b_i_751 ? (
                c_binop_i_752 = var_j_119 + int_j_120
            ) : (
                ab_i_753 = abort
            );
        m_i_754 = var_j_118 ~ fun;
        appl_j_122 = m_i_754 ? (
                c_appl_i_755 = var_j_118 binop_j_121
            ) : (
                ab_i_756 = abort
            )));
f = f_j_124;
h_j_397 = fun z_j_40 -> (
    flatten_fun_j_394 = fun z_b_0 -> (
        bool_j_125 = false;
        fail_b_20 = bool_j_125;
        flatten_fun_j_134 = fun expr_b_19 -> (
            var_j_126 = expr_b_19;
            m_match_bool_j_128 = var_j_126 ~ any;
            m_match_bool_j_131 = var_j_126 ~ int;
            m_match_cond_j_132 = m_match_bool_j_131 ? (
                    bool_j_133 = true
                ) : (
                    m_match_cond_j_129 = m_match_bool_j_128 ? (
                            var_j_130 = fail_b_20
                        ) : (
                            void_j_127 = {}
                        )
                ));
        flatten_fun_j_136 = fun bj_null_j_21 -> (
            input_j_135 = input);
        flatten_fun_j_138 = fun expr_b_21 -> (
            var_j_137 = expr_b_21);
        record_j_139 = {checker = flatten_fun_j_134, generator = flatten_fun_j_136, wrapper = flatten_fun_j_138};
        proj_j_140 = record_j_139.checker;
        var_j_141 = z_b_0;
        appl_j_142 = proj_j_140 var_j_141;
        arg_check_b_1 = appl_j_142;
        var_j_143 = arg_check_b_1;
        if_j_393 = var_j_143 ? (
                flatten_fun_j_381 = fun z_j_38 -> (
                    flatten_fun_j_218 = fun expr_b_46 -> (
                        flatten_fun_j_175 = fun expr_b_42 -> (
                            bool_j_144 = false;
                            fail_b_40 = bool_j_144;
                            flatten_fun_j_153 = fun expr_b_39 -> (
                                var_j_145 = expr_b_39;
                                m_match_bool_j_147 = var_j_145 ~ any;
                                m_match_bool_j_150 = var_j_145 ~ int;
                                m_match_cond_j_151 = m_match_bool_j_150 ? (
                                        bool_j_152 = true
                                    ) : (
                                        m_match_cond_j_148 = m_match_bool_j_147 ? (
                                                var_j_149 = fail_b_40
                                            ) : (
                                                void_j_146 = {}
                                            )
                                    ));
                            flatten_fun_j_155 = fun bj_null_j_22 -> (
                                input_j_154 = input);
                            flatten_fun_j_157 = fun expr_b_41 -> (
                                var_j_156 = expr_b_41);
                            record_j_158 = {checker = flatten_fun_j_153, generator = flatten_fun_j_155, wrapper = flatten_fun_j_157};
                            proj_j_159 = record_j_158.checker;
                            var_j_160 = expr_b_42;
                            appl_j_161 = proj_j_159 var_j_160;
                            t_check_b_43 = appl_j_161;
                            var_j_162 = t_check_b_43;
                            if_j_174 = var_j_162 ? (
                                    bool_j_163 = false;
                                    pred_check_b_44 = bool_j_163;
                                    flatten_fun_j_167 = fun y_j_23 -> (
                                        var_j_164 = y_j_23;
                                        var_j_165 = z_j_38;
                                        m_bl_i_757 = var_j_164 ~ int;
                                        m_br_i_758 = var_j_165 ~ int;
                                        m_b_i_759 = m_bl_i_757 and m_br_i_758;
                                        binop_j_166 = m_b_i_759 ? (
                                                c_binop_i_760 = var_j_164 < var_j_165
                                            ) : (
                                                ab_i_761 = abort
                                            ));
                                    var_j_168 = expr_b_42;
                                    appl_j_169 = flatten_fun_j_167 var_j_168;
                                    if_j_172 = appl_j_169 ? (
                                            bool_j_170 = true
                                        ) : (
                                            var_j_171 = pred_check_b_44
                                        )
                                ) : (
                                    var_j_173 = t_check_b_43
                                ));
                        flatten_fun_j_204 = fun bj_null_j_26 -> (
                            bool_j_176 = false;
                            fail_b_36 = bool_j_176;
                            flatten_fun_j_185 = fun expr_b_35 -> (
                                var_j_177 = expr_b_35;
                                m_match_bool_j_179 = var_j_177 ~ any;
                                m_match_bool_j_182 = var_j_177 ~ int;
                                m_match_cond_j_183 = m_match_bool_j_182 ? (
                                        bool_j_184 = true
                                    ) : (
                                        m_match_cond_j_180 = m_match_bool_j_179 ? (
                                                var_j_181 = fail_b_36
                                            ) : (
                                                void_j_178 = {}
                                            )
                                    ));
                            flatten_fun_j_187 = fun bj_null_j_24 -> (
                                input_j_186 = input);
                            flatten_fun_j_189 = fun expr_b_37 -> (
                                var_j_188 = expr_b_37);
                            record_j_190 = {checker = flatten_fun_j_185, generator = flatten_fun_j_187, wrapper = flatten_fun_j_189};
                            proj_j_191 = record_j_190.generator;
                            int_j_192 = 0;
                            appl_j_193 = proj_j_191 int_j_192;
                            candidate_b_38 = appl_j_193;
                            flatten_fun_j_197 = fun y_j_25 -> (
                                var_j_194 = y_j_25;
                                var_j_195 = z_j_38;
                                m_bl_i_762 = var_j_194 ~ int;
                                m_br_i_763 = var_j_195 ~ int;
                                m_b_i_764 = m_bl_i_762 and m_br_i_763;
                                binop_j_196 = m_b_i_764 ? (
                                        c_binop_i_765 = var_j_194 < var_j_195
                                    ) : (
                                        ab_i_766 = abort
                                    ));
                            var_j_198 = candidate_b_38;
                            appl_j_199 = flatten_fun_j_197 var_j_198;
                            if_j_203 = appl_j_199 ? (
                                    var_j_200 = candidate_b_38
                                ) : (
                                    bool_j_201 = false;
                                    assume_j_202 = assume bool_j_201
                                ));
                        flatten_fun_j_206 = fun expr_b_45 -> (
                            var_j_205 = expr_b_45);
                        record_j_207 = {checker = flatten_fun_j_175, generator = flatten_fun_j_204, wrapper = flatten_fun_j_206};
                        proj_j_208 = record_j_207.generator;
                        int_j_209 = 0;
                        appl_j_210 = proj_j_208 int_j_209;
                        arg_assert_b_47 = appl_j_210;
                        var_j_211 = expr_b_46;
                        var_j_212 = arg_assert_b_47;
                        appl_j_213 = var_j_211 var_j_212;
                        fun_ret_b_48 = appl_j_213;
                        var_j_214 = unit_type;
                        proj_j_215 = var_j_214.checker;
                        var_j_216 = fun_ret_b_48;
                        appl_j_217 = proj_j_215 var_j_216);
                    flatten_fun_j_298 = fun bj_null_j_32 -> (
                        flatten_fun_j_297 = fun arg_assume_b_33 -> (
                            flatten_fun_j_250 = fun expr_b_29 -> (
                                bool_j_219 = false;
                                fail_b_27 = bool_j_219;
                                flatten_fun_j_228 = fun expr_b_26 -> (
                                    var_j_220 = expr_b_26;
                                    m_match_bool_j_222 = var_j_220 ~ any;
                                    m_match_bool_j_225 = var_j_220 ~ int;
                                    m_match_cond_j_226 = m_match_bool_j_225 ? (
                                            bool_j_227 = true
                                        ) : (
                                            m_match_cond_j_223 = m_match_bool_j_222 ? (
                                                    var_j_224 = fail_b_27
                                                ) : (
                                                    void_j_221 = {}
                                                )
                                        ));
                                flatten_fun_j_230 = fun bj_null_j_27 -> (
                                    input_j_229 = input);
                                flatten_fun_j_232 = fun expr_b_28 -> (
                                    var_j_231 = expr_b_28);
                                record_j_233 = {checker = flatten_fun_j_228, generator = flatten_fun_j_230, wrapper = flatten_fun_j_232};
                                proj_j_234 = record_j_233.checker;
                                var_j_235 = expr_b_29;
                                appl_j_236 = proj_j_234 var_j_235;
                                t_check_b_30 = appl_j_236;
                                var_j_237 = t_check_b_30;
                                if_j_249 = var_j_237 ? (
                                        bool_j_238 = false;
                                        pred_check_b_31 = bool_j_238;
                                        flatten_fun_j_242 = fun y_j_28 -> (
                                            var_j_239 = y_j_28;
                                            var_j_240 = z_j_38;
                                            m_bl_i_767 = var_j_239 ~ int;
                                            m_br_i_768 = var_j_240 ~ int;
                                            m_b_i_769 = m_bl_i_767 and m_br_i_768;
                                            binop_j_241 = m_b_i_769 ? (
                                                    c_binop_i_770 = var_j_239 < var_j_240
                                                ) : (
                                                    ab_i_771 = abort
                                                ));
                                        var_j_243 = expr_b_29;
                                        appl_j_244 = flatten_fun_j_242 var_j_243;
                                        if_j_247 = appl_j_244 ? (
                                                bool_j_245 = true
                                            ) : (
                                                var_j_246 = pred_check_b_31
                                            )
                                    ) : (
                                        var_j_248 = t_check_b_30
                                    ));
                            flatten_fun_j_279 = fun bj_null_j_31 -> (
                                bool_j_251 = false;
                                fail_b_23 = bool_j_251;
                                flatten_fun_j_260 = fun expr_b_22 -> (
                                    var_j_252 = expr_b_22;
                                    m_match_bool_j_254 = var_j_252 ~ any;
                                    m_match_bool_j_257 = var_j_252 ~ int;
                                    m_match_cond_j_258 = m_match_bool_j_257 ? (
                                            bool_j_259 = true
                                        ) : (
                                            m_match_cond_j_255 = m_match_bool_j_254 ? (
                                                    var_j_256 = fail_b_23
                                                ) : (
                                                    void_j_253 = {}
                                                )
                                        ));
                                flatten_fun_j_262 = fun bj_null_j_29 -> (
                                    input_j_261 = input);
                                flatten_fun_j_264 = fun expr_b_24 -> (
                                    var_j_263 = expr_b_24);
                                record_j_265 = {checker = flatten_fun_j_260, generator = flatten_fun_j_262, wrapper = flatten_fun_j_264};
                                proj_j_266 = record_j_265.generator;
                                int_j_267 = 0;
                                appl_j_268 = proj_j_266 int_j_267;
                                candidate_b_25 = appl_j_268;
                                flatten_fun_j_272 = fun y_j_30 -> (
                                    var_j_269 = y_j_30;
                                    var_j_270 = z_j_38;
                                    m_bl_i_772 = var_j_269 ~ int;
                                    m_br_i_773 = var_j_270 ~ int;
                                    m_b_i_774 = m_bl_i_772 and m_br_i_773;
                                    binop_j_271 = m_b_i_774 ? (
                                            c_binop_i_775 = var_j_269 < var_j_270
                                        ) : (
                                            ab_i_776 = abort
                                        ));
                                var_j_273 = candidate_b_25;
                                appl_j_274 = flatten_fun_j_272 var_j_273;
                                if_j_278 = appl_j_274 ? (
                                        var_j_275 = candidate_b_25
                                    ) : (
                                        bool_j_276 = false;
                                        assume_j_277 = assume bool_j_276
                                    ));
                            flatten_fun_j_281 = fun expr_b_32 -> (
                                var_j_280 = expr_b_32);
                            record_j_282 = {checker = flatten_fun_j_250, generator = flatten_fun_j_279, wrapper = flatten_fun_j_281};
                            proj_j_283 = record_j_282.checker;
                            var_j_284 = arg_assume_b_33;
                            appl_j_285 = proj_j_283 var_j_284;
                            if_j_296 = appl_j_285 ? (
                                    var_j_286 = unit_type;
                                    proj_j_287 = var_j_286.generator;
                                    int_j_288 = 0;
                                    appl_j_289 = proj_j_287 int_j_288
                                ) : (
                                    bool_j_290 = false;
                                    fail_b_34 = bool_j_290;
                                    var_j_291 = fail_b_34;
                                    assert_pred_j_292 = var_j_291;
                                    assert_res_j_293 = assert_pred_j_292 ? (
                                            assert_res_true_j_294 = {}
                                        ) : (
                                            ab_j_295 = abort
                                        )
                                )));
                    flatten_fun_j_379 = fun expr_b_60 -> (
                        flatten_fun_j_378 = fun arg_b_61 -> (
                            flatten_fun_j_330 = fun expr_b_56 -> (
                                bool_j_299 = false;
                                fail_b_54 = bool_j_299;
                                flatten_fun_j_308 = fun expr_b_53 -> (
                                    var_j_300 = expr_b_53;
                                    m_match_bool_j_302 = var_j_300 ~ any;
                                    m_match_bool_j_305 = var_j_300 ~ int;
                                    m_match_cond_j_306 = m_match_bool_j_305 ? (
                                            bool_j_307 = true
                                        ) : (
                                            m_match_cond_j_303 = m_match_bool_j_302 ? (
                                                    var_j_304 = fail_b_54
                                                ) : (
                                                    void_j_301 = {}
                                                )
                                        ));
                                flatten_fun_j_310 = fun bj_null_j_33 -> (
                                    input_j_309 = input);
                                flatten_fun_j_312 = fun expr_b_55 -> (
                                    var_j_311 = expr_b_55);
                                record_j_313 = {checker = flatten_fun_j_308, generator = flatten_fun_j_310, wrapper = flatten_fun_j_312};
                                proj_j_314 = record_j_313.checker;
                                var_j_315 = expr_b_56;
                                appl_j_316 = proj_j_314 var_j_315;
                                t_check_b_57 = appl_j_316;
                                var_j_317 = t_check_b_57;
                                if_j_329 = var_j_317 ? (
                                        bool_j_318 = false;
                                        pred_check_b_58 = bool_j_318;
                                        flatten_fun_j_322 = fun y_j_34 -> (
                                            var_j_319 = y_j_34;
                                            var_j_320 = z_j_38;
                                            m_bl_i_777 = var_j_319 ~ int;
                                            m_br_i_778 = var_j_320 ~ int;
                                            m_b_i_779 = m_bl_i_777 and m_br_i_778;
                                            binop_j_321 = m_b_i_779 ? (
                                                    c_binop_i_780 = var_j_319 < var_j_320
                                                ) : (
                                                    ab_i_781 = abort
                                                ));
                                        var_j_323 = expr_b_56;
                                        appl_j_324 = flatten_fun_j_322 var_j_323;
                                        if_j_327 = appl_j_324 ? (
                                                bool_j_325 = true
                                            ) : (
                                                var_j_326 = pred_check_b_58
                                            )
                                    ) : (
                                        var_j_328 = t_check_b_57
                                    ));
                            flatten_fun_j_359 = fun bj_null_j_37 -> (
                                bool_j_331 = false;
                                fail_b_50 = bool_j_331;
                                flatten_fun_j_340 = fun expr_b_49 -> (
                                    var_j_332 = expr_b_49;
                                    m_match_bool_j_334 = var_j_332 ~ any;
                                    m_match_bool_j_337 = var_j_332 ~ int;
                                    m_match_cond_j_338 = m_match_bool_j_337 ? (
                                            bool_j_339 = true
                                        ) : (
                                            m_match_cond_j_335 = m_match_bool_j_334 ? (
                                                    var_j_336 = fail_b_50
                                                ) : (
                                                    void_j_333 = {}
                                                )
                                        ));
                                flatten_fun_j_342 = fun bj_null_j_35 -> (
                                    input_j_341 = input);
                                flatten_fun_j_344 = fun expr_b_51 -> (
                                    var_j_343 = expr_b_51);
                                record_j_345 = {checker = flatten_fun_j_340, generator = flatten_fun_j_342, wrapper = flatten_fun_j_344};
                                proj_j_346 = record_j_345.generator;
                                int_j_347 = 0;
                                appl_j_348 = proj_j_346 int_j_347;
                                candidate_b_52 = appl_j_348;
                                flatten_fun_j_352 = fun y_j_36 -> (
                                    var_j_349 = y_j_36;
                                    var_j_350 = z_j_38;
                                    m_bl_i_782 = var_j_349 ~ int;
                                    m_br_i_783 = var_j_350 ~ int;
                                    m_b_i_784 = m_bl_i_782 and m_br_i_783;
                                    binop_j_351 = m_b_i_784 ? (
                                            c_binop_i_785 = var_j_349 < var_j_350
                                        ) : (
                                            ab_i_786 = abort
                                        ));
                                var_j_353 = candidate_b_52;
                                appl_j_354 = flatten_fun_j_352 var_j_353;
                                if_j_358 = appl_j_354 ? (
                                        var_j_355 = candidate_b_52
                                    ) : (
                                        bool_j_356 = false;
                                        assume_j_357 = assume bool_j_356
                                    ));
                            flatten_fun_j_361 = fun expr_b_59 -> (
                                var_j_360 = expr_b_59);
                            record_j_362 = {checker = flatten_fun_j_330, generator = flatten_fun_j_359, wrapper = flatten_fun_j_361};
                            proj_j_363 = record_j_362.checker;
                            var_j_364 = arg_b_61;
                            m_i_787 = proj_j_363 ~ fun;
                            appl_j_365 = m_i_787 ? (
                                    c_appl_i_788 = proj_j_363 var_j_364
                                ) : (
                                    ab_i_789 = abort
                                );
                            m_i_790 = appl_j_365 ~ bool;
                            if_j_377 = m_i_790 ? (
                                    c_cond_i_797 = appl_j_365 ? (
                                            var_j_366 = unit_type;
                                            proj_j_367 = var_j_366.wrapper;
                                            var_j_368 = expr_b_60;
                                            var_j_369 = arg_b_61;
                                            m_i_791 = var_j_368 ~ fun;
                                            appl_j_370 = m_i_791 ? (
                                                    c_appl_i_792 = var_j_368 var_j_369
                                                ) : (
                                                    ab_i_793 = abort
                                                );
                                            m_i_794 = proj_j_367 ~ fun;
                                            appl_j_371 = m_i_794 ? (
                                                    c_appl_i_795 = proj_j_367 appl_j_370
                                                ) : (
                                                    ab_i_796 = abort
                                                )
                                        ) : (
                                            bool_j_372 = false;
                                            assert_pred_j_373 = bool_j_372;
                                            assert_res_j_374 = assert_pred_j_373 ? (
                                                    assert_res_true_j_375 = 
                                                        {}
                                                ) : (
                                                    ab_j_376 = abort
                                                )
                                        )
                                ) : (
                                    ab_i_798 = abort
                                )));
                    record_j_380 = {checker = flatten_fun_j_218, generator = flatten_fun_j_298, wrapper = flatten_fun_j_379});
                var_j_382 = z_b_0;
                appl_j_383 = flatten_fun_j_381 var_j_382;
                proj_j_384 = appl_j_383.wrapper;
                flatten_fun_j_386 = fun y_j_39 -> (
                    var_j_385 = unit);
                m_i_799 = proj_j_384 ~ fun;
                appl_j_387 = m_i_799 ? (
                        c_appl_i_800 = proj_j_384 flatten_fun_j_386
                    ) : (
                        ab_i_801 = abort
                    )
            ) : (
                bool_j_388 = false;
                assert_pred_j_389 = bool_j_388;
                assert_res_j_390 = assert_pred_j_389 ? (
                        assert_res_true_j_391 = {}
                    ) : (
                        ab_j_392 = abort
                    )
            ));
    var_j_395 = z_j_40;
    appl_j_396 = flatten_fun_j_394 var_j_395);
h = h_j_397;
bool_j_398 = false;
fail_b_17 = bool_j_398;
flatten_fun_j_407 = fun expr_b_16 -> (
    var_j_399 = expr_b_16;
    m_match_bool_j_401 = var_j_399 ~ any;
    m_match_bool_j_404 = var_j_399 ~ int;
    m_match_cond_j_405 = m_match_bool_j_404 ? (
            bool_j_406 = true
        ) : (
            m_match_cond_j_402 = m_match_bool_j_401 ? (
                    var_j_403 = fail_b_17
                ) : (
                    void_j_400 = {}
                )
        ));
flatten_fun_j_409 = fun bj_null_j_3 -> (
    input_j_408 = input);
flatten_fun_j_411 = fun expr_b_18 -> (
    var_j_410 = expr_b_18);
record_j_412 = {checker = flatten_fun_j_407, generator = flatten_fun_j_409, wrapper = flatten_fun_j_411};
proj_j_413 = record_j_412.generator;
int_j_414 = 0;
appl_j_415 = proj_j_413 int_j_414;
z_b_108 = appl_j_415;
flatten_fun_j_654 = fun z -> (
    flatten_fun_j_490 = fun expr_b_86 -> (
        flatten_fun_j_447 = fun expr_b_82 -> (
            bool_j_416 = false;
            fail_b_80 = bool_j_416;
            flatten_fun_j_425 = fun expr_b_79 -> (
                var_j_417 = expr_b_79;
                m_match_bool_j_419 = var_j_417 ~ any;
                m_match_bool_j_422 = var_j_417 ~ int;
                m_match_cond_j_423 = m_match_bool_j_422 ? (
                        bool_j_424 = true
                    ) : (
                        m_match_cond_j_420 = m_match_bool_j_419 ? (
                                var_j_421 = fail_b_80
                            ) : (
                                void_j_418 = {}
                            )
                    ));
            flatten_fun_j_427 = fun bj_null_j_4 -> (
                input_j_426 = input);
            flatten_fun_j_429 = fun expr_b_81 -> (
                var_j_428 = expr_b_81);
            record_j_430 = {checker = flatten_fun_j_425, generator = flatten_fun_j_427, wrapper = flatten_fun_j_429};
            proj_j_431 = record_j_430.checker;
            var_j_432 = expr_b_82;
            appl_j_433 = proj_j_431 var_j_432;
            t_check_b_83 = appl_j_433;
            var_j_434 = t_check_b_83;
            if_j_446 = var_j_434 ? (
                    bool_j_435 = false;
                    pred_check_b_84 = bool_j_435;
                    flatten_fun_j_439 = fun y -> (
                        var_j_436 = y;
                        var_j_437 = z;
                        m_bl_i_802 = var_j_436 ~ int;
                        m_br_i_803 = var_j_437 ~ int;
                        m_b_i_804 = m_bl_i_802 and m_br_i_803;
                        binop_j_438 = m_b_i_804 ? (
                                c_binop_i_805 = var_j_436 < var_j_437
                            ) : (
                                ab_i_806 = abort
                            ));
                    var_j_440 = expr_b_82;
                    appl_j_441 = flatten_fun_j_439 var_j_440;
                    if_j_444 = appl_j_441 ? (
                            bool_j_442 = true
                        ) : (
                            var_j_443 = pred_check_b_84
                        )
                ) : (
                    var_j_445 = t_check_b_83
                ));
        flatten_fun_j_476 = fun bj_null_j_7 -> (
            bool_j_448 = false;
            fail_b_76 = bool_j_448;
            flatten_fun_j_457 = fun expr_b_75 -> (
                var_j_449 = expr_b_75;
                m_match_bool_j_451 = var_j_449 ~ any;
                m_match_bool_j_454 = var_j_449 ~ int;
                m_match_cond_j_455 = m_match_bool_j_454 ? (
                        bool_j_456 = true
                    ) : (
                        m_match_cond_j_452 = m_match_bool_j_451 ? (
                                var_j_453 = fail_b_76
                            ) : (
                                void_j_450 = {}
                            )
                    ));
            flatten_fun_j_459 = fun bj_null_j_5 -> (
                input_j_458 = input);
            flatten_fun_j_461 = fun expr_b_77 -> (
                var_j_460 = expr_b_77);
            record_j_462 = {checker = flatten_fun_j_457, generator = flatten_fun_j_459, wrapper = flatten_fun_j_461};
            proj_j_463 = record_j_462.generator;
            int_j_464 = 0;
            appl_j_465 = proj_j_463 int_j_464;
            candidate_b_78 = appl_j_465;
            flatten_fun_j_469 = fun y_j_6 -> (
                var_j_466 = y_j_6;
                var_j_467 = z;
                m_bl_i_807 = var_j_466 ~ int;
                m_br_i_808 = var_j_467 ~ int;
                m_b_i_809 = m_bl_i_807 and m_br_i_808;
                binop_j_468 = m_b_i_809 ? (
                        c_binop_i_810 = var_j_466 < var_j_467
                    ) : (
                        ab_i_811 = abort
                    ));
            var_j_470 = candidate_b_78;
            appl_j_471 = flatten_fun_j_469 var_j_470;
            if_j_475 = appl_j_471 ? (
                    var_j_472 = candidate_b_78
                ) : (
                    bool_j_473 = false;
                    assume_j_474 = assume bool_j_473
                ));
        flatten_fun_j_478 = fun expr_b_85 -> (
            var_j_477 = expr_b_85);
        record_j_479 = {checker = flatten_fun_j_447, generator = flatten_fun_j_476, wrapper = flatten_fun_j_478};
        proj_j_480 = record_j_479.generator;
        int_j_481 = 0;
        appl_j_482 = proj_j_480 int_j_481;
        arg_assert_b_87 = appl_j_482;
        var_j_483 = expr_b_86;
        var_j_484 = arg_assert_b_87;
        appl_j_485 = var_j_483 var_j_484;
        fun_ret_b_88 = appl_j_485;
        var_j_486 = unit_type;
        proj_j_487 = var_j_486.checker;
        var_j_488 = fun_ret_b_88;
        appl_j_489 = proj_j_487 var_j_488);
    flatten_fun_j_570 = fun bj_null_j_13 -> (
        flatten_fun_j_569 = fun arg_assume_b_73 -> (
            flatten_fun_j_522 = fun expr_b_69 -> (
                bool_j_491 = false;
                fail_b_67 = bool_j_491;
                flatten_fun_j_500 = fun expr_b_66 -> (
                    var_j_492 = expr_b_66;
                    m_match_bool_j_494 = var_j_492 ~ any;
                    m_match_bool_j_497 = var_j_492 ~ int;
                    m_match_cond_j_498 = m_match_bool_j_497 ? (
                            bool_j_499 = true
                        ) : (
                            m_match_cond_j_495 = m_match_bool_j_494 ? (
                                    var_j_496 = fail_b_67
                                ) : (
                                    void_j_493 = {}
                                )
                        ));
                flatten_fun_j_502 = fun bj_null_j_8 -> (
                    input_j_501 = input);
                flatten_fun_j_504 = fun expr_b_68 -> (
                    var_j_503 = expr_b_68);
                record_j_505 = {checker = flatten_fun_j_500, generator = flatten_fun_j_502, wrapper = flatten_fun_j_504};
                proj_j_506 = record_j_505.checker;
                var_j_507 = expr_b_69;
                appl_j_508 = proj_j_506 var_j_507;
                t_check_b_70 = appl_j_508;
                var_j_509 = t_check_b_70;
                if_j_521 = var_j_509 ? (
                        bool_j_510 = false;
                        pred_check_b_71 = bool_j_510;
                        flatten_fun_j_514 = fun y_j_9 -> (
                            var_j_511 = y_j_9;
                            var_j_512 = z;
                            m_bl_i_812 = var_j_511 ~ int;
                            m_br_i_813 = var_j_512 ~ int;
                            m_b_i_814 = m_bl_i_812 and m_br_i_813;
                            binop_j_513 = m_b_i_814 ? (
                                    c_binop_i_815 = var_j_511 < var_j_512
                                ) : (
                                    ab_i_816 = abort
                                ));
                        var_j_515 = expr_b_69;
                        appl_j_516 = flatten_fun_j_514 var_j_515;
                        if_j_519 = appl_j_516 ? (
                                bool_j_517 = true
                            ) : (
                                var_j_518 = pred_check_b_71
                            )
                    ) : (
                        var_j_520 = t_check_b_70
                    ));
            flatten_fun_j_551 = fun bj_null_j_12 -> (
                bool_j_523 = false;
                fail_b_63 = bool_j_523;
                flatten_fun_j_532 = fun expr_b_62 -> (
                    var_j_524 = expr_b_62;
                    m_match_bool_j_526 = var_j_524 ~ any;
                    m_match_bool_j_529 = var_j_524 ~ int;
                    m_match_cond_j_530 = m_match_bool_j_529 ? (
                            bool_j_531 = true
                        ) : (
                            m_match_cond_j_527 = m_match_bool_j_526 ? (
                                    var_j_528 = fail_b_63
                                ) : (
                                    void_j_525 = {}
                                )
                        ));
                flatten_fun_j_534 = fun bj_null_j_10 -> (
                    input_j_533 = input);
                flatten_fun_j_536 = fun expr_b_64 -> (
                    var_j_535 = expr_b_64);
                record_j_537 = {checker = flatten_fun_j_532, generator = flatten_fun_j_534, wrapper = flatten_fun_j_536};
                proj_j_538 = record_j_537.generator;
                int_j_539 = 0;
                appl_j_540 = proj_j_538 int_j_539;
                candidate_b_65 = appl_j_540;
                flatten_fun_j_544 = fun y_j_11 -> (
                    var_j_541 = y_j_11;
                    var_j_542 = z;
                    m_bl_i_817 = var_j_541 ~ int;
                    m_br_i_818 = var_j_542 ~ int;
                    m_b_i_819 = m_bl_i_817 and m_br_i_818;
                    binop_j_543 = m_b_i_819 ? (
                            c_binop_i_820 = var_j_541 < var_j_542
                        ) : (
                            ab_i_821 = abort
                        ));
                var_j_545 = candidate_b_65;
                appl_j_546 = flatten_fun_j_544 var_j_545;
                if_j_550 = appl_j_546 ? (
                        var_j_547 = candidate_b_65
                    ) : (
                        bool_j_548 = false;
                        assume_j_549 = assume bool_j_548
                    ));
            flatten_fun_j_553 = fun expr_b_72 -> (
                var_j_552 = expr_b_72);
            record_j_554 = {checker = flatten_fun_j_522, generator = flatten_fun_j_551, wrapper = flatten_fun_j_553};
            proj_j_555 = record_j_554.checker;
            var_j_556 = arg_assume_b_73;
            appl_j_557 = proj_j_555 var_j_556;
            if_j_568 = appl_j_557 ? (
                    var_j_558 = unit_type;
                    proj_j_559 = var_j_558.generator;
                    int_j_560 = 0;
                    appl_j_561 = proj_j_559 int_j_560
                ) : (
                    bool_j_562 = false;
                    fail_b_74 = bool_j_562;
                    var_j_563 = fail_b_74;
                    assert_pred_j_564 = var_j_563;
                    assert_res_j_565 = assert_pred_j_564 ? (
                            assert_res_true_j_566 = {}
                        ) : (
                            ab_j_567 = abort
                        )
                )));
    flatten_fun_j_651 = fun expr_b_100 -> (
        flatten_fun_j_650 = fun arg_b_101 -> (
            flatten_fun_j_602 = fun expr_b_96 -> (
                bool_j_571 = false;
                fail_b_94 = bool_j_571;
                flatten_fun_j_580 = fun expr_b_93 -> (
                    var_j_572 = expr_b_93;
                    m_match_bool_j_574 = var_j_572 ~ any;
                    m_match_bool_j_577 = var_j_572 ~ int;
                    m_match_cond_j_578 = m_match_bool_j_577 ? (
                            bool_j_579 = true
                        ) : (
                            m_match_cond_j_575 = m_match_bool_j_574 ? (
                                    var_j_576 = fail_b_94
                                ) : (
                                    void_j_573 = {}
                                )
                        ));
                flatten_fun_j_582 = fun bj_null_j_14 -> (
                    input_j_581 = input);
                flatten_fun_j_584 = fun expr_b_95 -> (
                    var_j_583 = expr_b_95);
                record_j_585 = {checker = flatten_fun_j_580, generator = flatten_fun_j_582, wrapper = flatten_fun_j_584};
                proj_j_586 = record_j_585.checker;
                var_j_587 = expr_b_96;
                appl_j_588 = proj_j_586 var_j_587;
                t_check_b_97 = appl_j_588;
                var_j_589 = t_check_b_97;
                if_j_601 = var_j_589 ? (
                        bool_j_590 = false;
                        pred_check_b_98 = bool_j_590;
                        flatten_fun_j_594 = fun y_j_15 -> (
                            var_j_591 = y_j_15;
                            var_j_592 = z;
                            m_bl_i_822 = var_j_591 ~ int;
                            m_br_i_823 = var_j_592 ~ int;
                            m_b_i_824 = m_bl_i_822 and m_br_i_823;
                            binop_j_593 = m_b_i_824 ? (
                                    c_binop_i_825 = var_j_591 < var_j_592
                                ) : (
                                    ab_i_826 = abort
                                ));
                        var_j_595 = expr_b_96;
                        appl_j_596 = flatten_fun_j_594 var_j_595;
                        if_j_599 = appl_j_596 ? (
                                bool_j_597 = true
                            ) : (
                                var_j_598 = pred_check_b_98
                            )
                    ) : (
                        var_j_600 = t_check_b_97
                    ));
            flatten_fun_j_631 = fun bj_null_j_18 -> (
                bool_j_603 = false;
                fail_b_90 = bool_j_603;
                flatten_fun_j_612 = fun expr_b_89 -> (
                    var_j_604 = expr_b_89;
                    m_match_bool_j_606 = var_j_604 ~ any;
                    m_match_bool_j_609 = var_j_604 ~ int;
                    m_match_cond_j_610 = m_match_bool_j_609 ? (
                            bool_j_611 = true
                        ) : (
                            m_match_cond_j_607 = m_match_bool_j_606 ? (
                                    var_j_608 = fail_b_90
                                ) : (
                                    void_j_605 = {}
                                )
                        ));
                flatten_fun_j_614 = fun bj_null_j_16 -> (
                    input_j_613 = input);
                flatten_fun_j_616 = fun expr_b_91 -> (
                    var_j_615 = expr_b_91);
                record_j_617 = {checker = flatten_fun_j_612, generator = flatten_fun_j_614, wrapper = flatten_fun_j_616};
                proj_j_618 = record_j_617.generator;
                int_j_619 = 0;
                appl_j_620 = proj_j_618 int_j_619;
                candidate_b_92 = appl_j_620;
                flatten_fun_j_624 = fun y_j_17 -> (
                    var_j_621 = y_j_17;
                    var_j_622 = z;
                    m_bl_i_827 = var_j_621 ~ int;
                    m_br_i_828 = var_j_622 ~ int;
                    m_b_i_829 = m_bl_i_827 and m_br_i_828;
                    binop_j_623 = m_b_i_829 ? (
                            c_binop_i_830 = var_j_621 < var_j_622
                        ) : (
                            ab_i_831 = abort
                        ));
                var_j_625 = candidate_b_92;
                appl_j_626 = flatten_fun_j_624 var_j_625;
                if_j_630 = appl_j_626 ? (
                        var_j_627 = candidate_b_92
                    ) : (
                        bool_j_628 = false;
                        assume_j_629 = assume bool_j_628
                    ));
            flatten_fun_j_633 = fun expr_b_99 -> (
                var_j_632 = expr_b_99);
            record_j_634 = {checker = flatten_fun_j_602, generator = flatten_fun_j_631, wrapper = flatten_fun_j_633};
            proj_j_635 = record_j_634.checker;
            var_j_636 = arg_b_101;
            m_i_832 = proj_j_635 ~ fun;
            appl_j_637 = m_i_832 ? (
                    c_appl_i_833 = proj_j_635 var_j_636
                ) : (
                    ab_i_834 = abort
                );
            m_i_835 = appl_j_637 ~ bool;
            if_j_649 = m_i_835 ? (
                    c_cond_i_842 = appl_j_637 ? (
                            var_j_638 = unit_type;
                            proj_j_639 = var_j_638.wrapper;
                            var_j_640 = expr_b_100;
                            var_j_641 = arg_b_101;
                            m_i_836 = var_j_640 ~ fun;
                            appl_j_642 = m_i_836 ? (
                                    c_appl_i_837 = var_j_640 var_j_641
                                ) : (
                                    ab_i_838 = abort
                                );
                            m_i_839 = proj_j_639 ~ fun;
                            appl_j_643 = m_i_839 ? (
                                    c_appl_i_840 = proj_j_639 appl_j_642
                                ) : (
                                    ab_i_841 = abort
                                )
                        ) : (
                            bool_j_644 = false;
                            assert_pred_j_645 = bool_j_644;
                            assert_res_j_646 = assert_pred_j_645 ? (
                                    assert_res_true_j_647 = {}
                                ) : (
                                    ab_j_648 = abort
                                )
                        )
                ) : (
                    ab_i_843 = abort
                )));
    record_j_652 = {checker = flatten_fun_j_490, generator = flatten_fun_j_570, wrapper = flatten_fun_j_651};
    proj_j_653 = record_j_652.checker);
appl_j_656 = flatten_fun_j_654 z_b_108;
appl_j_659 = h z_b_108;
appl_j_660 = appl_j_656 appl_j_659;
check_res_b_111 = appl_j_660;
if_j_748 = check_res_b_111 ? (
        main_j_710 = fun n -> (
            flatten_fun_j_707 = fun n_b_2 -> (
                int_j_662 = 0;
                input_j_663 = input;
                m_bl_i_844 = int_j_662 ~ int;
                m_br_i_845 = input_j_663 ~ int;
                m_b_i_846 = m_bl_i_844 and m_br_i_845;
                binop_j_664 = m_b_i_846 ? (
                        c_binop_i_847 = int_j_662 < input_j_663
                    ) : (
                        ab_i_848 = abort
                    );
                if_j_684 = binop_j_664 ? (
                        bool_j_665 = false;
                        fail_b_106 = bool_j_665;
                        flatten_fun_j_674 = fun expr_b_105 -> (
                            var_j_666 = expr_b_105;
                            m_match_bool_j_668 = var_j_666 ~ any;
                            m_match_bool_j_671 = var_j_666 ~ int;
                            m_match_cond_j_672 = m_match_bool_j_671 ? (
                                    bool_j_673 = true
                                ) : (
                                    m_match_cond_j_669 = m_match_bool_j_668 ? (
                                            var_j_670 = fail_b_106
                                        ) : (
                                            void_j_667 = {}
                                        )
                                ));
                        flatten_fun_j_676 = fun bj_null_j_20 -> (
                            input_j_675 = input);
                        flatten_fun_j_678 = fun expr_b_107 -> (
                            var_j_677 = expr_b_107);
                        record_j_679 = {checker = flatten_fun_j_674, generator = flatten_fun_j_676, wrapper = flatten_fun_j_678};
                        proj_j_680 = record_j_679.checker;
                        var_j_681 = n_b_2;
                        m_i_849 = proj_j_680 ~ fun;
                        appl_j_682 = m_i_849 ? (
                                c_appl_i_850 = proj_j_680 var_j_681
                            ) : (
                                ab_i_851 = abort
                            )
                    ) : (
                        bool_j_683 = true
                    );
                arg_check_b_3 = if_j_684;
                var_j_685 = arg_check_b_3;
                if_j_706 = var_j_685 ? (
                        var_j_686 = unit_type;
                        proj_j_687 = var_j_686.wrapper;
                        int_j_688 = 0;
                        var_j_689 = n;
                        m_bl_i_852 = int_j_688 ~ int;
                        m_br_i_853 = var_j_689 ~ int;
                        m_b_i_854 = m_bl_i_852 and m_br_i_853;
                        binop_j_690 = m_b_i_854 ? (
                                c_binop_i_855 = int_j_688 < var_j_689
                            ) : (
                                ab_i_856 = abort
                            );
                        m_i_857 = binop_j_690 ~ bool;
                        if_j_699 = m_i_857 ? (
                                c_cond_i_867 = binop_j_690 ? (
                                        var_j_691 = f;
                                        var_j_692 = n;
                                        m_i_858 = var_j_691 ~ fun;
                                        appl_j_693 = m_i_858 ? (
                                                c_appl_i_859 = var_j_691 var_j_692
                                            ) : (
                                                ab_i_860 = abort
                                            );
                                        var_j_694 = h;
                                        var_j_695 = n;
                                        m_i_861 = var_j_694 ~ fun;
                                        appl_j_696 = m_i_861 ? (
                                                c_appl_i_862 = var_j_694 var_j_695
                                            ) : (
                                                ab_i_863 = abort
                                            );
                                        m_i_864 = appl_j_693 ~ fun;
                                        appl_j_697 = m_i_864 ? (
                                                c_appl_i_865 = appl_j_693 appl_j_696
                                            ) : (
                                                ab_i_866 = abort
                                            )
                                    ) : (
                                        var_j_698 = unit
                                    )
                            ) : (
                                ab_i_868 = abort
                            );
                        m_i_869 = proj_j_687 ~ fun;
                        appl_j_700 = m_i_869 ? (
                                c_appl_i_870 = proj_j_687 if_j_699
                            ) : (
                                ab_i_871 = abort
                            )
                    ) : (
                        var_j_701 = arg_check_b_3;
                        assert_pred_j_702 = var_j_701;
                        assert_res_j_703 = assert_pred_j_702 ? (
                                assert_res_true_j_704 = {}
                            ) : (
                                ab_j_705 = abort
                            )
                    ));
            var_j_708 = n;
            appl_j_709 = flatten_fun_j_707 var_j_708);
        main = main_j_710;
        bool_j_711 = false;
        fail_b_103 = bool_j_711;
        flatten_fun_j_720 = fun expr_b_102 -> (
            var_j_712 = expr_b_102;
            m_match_bool_j_714 = var_j_712 ~ any;
            m_match_bool_j_717 = var_j_712 ~ int;
            m_match_cond_j_718 = m_match_bool_j_717 ? (
                    bool_j_719 = true
                ) : (
                    m_match_cond_j_715 = m_match_bool_j_714 ? (
                            var_j_716 = fail_b_103
                        ) : (
                            void_j_713 = {}
                        )
                ));
        flatten_fun_j_722 = fun bj_null_j_19 -> (
            input_j_721 = input);
        flatten_fun_j_724 = fun expr_b_104 -> (
            var_j_723 = expr_b_104);
        record_j_725 = {checker = flatten_fun_j_720, generator = flatten_fun_j_722, wrapper = flatten_fun_j_724};
        proj_j_726 = record_j_725.generator;
        int_j_727 = 0;
        appl_j_728 = proj_j_726 int_j_727;
        n_b_109 = appl_j_728;
        var_j_729 = unit_type;
        proj_j_730 = var_j_729.checker;
        var_j_731 = main;
        var_j_732 = n_b_109;
        appl_j_733 = var_j_731 var_j_732;
        appl_j_734 = proj_j_730 appl_j_733;
        check_res_b_110 = appl_j_734;
        var_j_735 = check_res_b_110;
        if_j_742 = var_j_735 ? (
                var_j_736 = main
            ) : (
                error_var_j_737 = check_res_b_110;
                assert_pred_j_738 = error_var_j_737;
                assert_res_j_739 = assert_pred_j_738 ? (
                        assert_res_true_j_740 = {}
                    ) : (
                        ab_j_741 = abort
                    )
            )
    ) : (
        error_var_j_743 = check_res_b_111;
        assert_pred_j_744 = error_var_j_743;
        assert_res_j_745 = assert_pred_j_744 ? (
                assert_res_true_j_746 = {}
            ) : (
                ab_j_747 = abort
            )
    );
i_result = if_j_748