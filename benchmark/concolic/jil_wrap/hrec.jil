i_first = {};
flatten_fun_j_39 = fun f_j_0 -> (
    flatten_fun_j_38 = fun g -> (
        flatten_fun_j_37 = fun x_j_1 -> (
            var_j_15 = f_j_0;
            var_j_16 = f_j_0;
            appl_j_17 = var_j_15 var_j_16;
            f = appl_j_17;
            var_j_18 = x_j_1;
            int_j_19 = 0;
            m_bl_i_246 = var_j_18 ~ int;
            m_br_i_247 = int_j_19 ~ int;
            m_b_i_248 = m_bl_i_246 and m_br_i_247;
            binop_j_20 = m_b_i_248 ? (
                    c_binop_i_249 = var_j_18 <= int_j_19
                ) : (
                    ab_i_250 = abort
                );
            m_i_251 = binop_j_20 ~ bool;
            if_j_36 = m_i_251 ? (
                    c_cond_i_270 = binop_j_20 ? (
                            var_j_21 = g;
                            var_j_22 = x_j_1;
                            m_i_252 = var_j_21 ~ fun;
                            appl_j_23 = m_i_252 ? (
                                    c_appl_i_253 = var_j_21 var_j_22
                                ) : (
                                    ab_i_254 = abort
                                )
                        ) : (
                            var_j_24 = f;
                            flatten_fun_j_30 = fun x -> (
                                var_j_25 = f;
                                var_j_26 = g;
                                m_i_255 = var_j_25 ~ fun;
                                appl_j_27 = m_i_255 ? (
                                        c_appl_i_256 = var_j_25 var_j_26
                                    ) : (
                                        ab_i_257 = abort
                                    );
                                var_j_28 = x;
                                m_i_258 = appl_j_27 ~ fun;
                                appl_j_29 = m_i_258 ? (
                                        c_appl_i_259 = appl_j_27 var_j_28
                                    ) : (
                                        ab_i_260 = abort
                                    ));
                            m_i_261 = var_j_24 ~ fun;
                            appl_j_31 = m_i_261 ? (
                                    c_appl_i_262 = var_j_24 flatten_fun_j_30
                                ) : (
                                    ab_i_263 = abort
                                );
                            var_j_32 = g;
                            var_j_33 = x_j_1;
                            m_i_264 = var_j_32 ~ fun;
                            appl_j_34 = m_i_264 ? (
                                    c_appl_i_265 = var_j_32 var_j_33
                                ) : (
                                    ab_i_266 = abort
                                );
                            m_i_267 = appl_j_31 ~ fun;
                            appl_j_35 = m_i_267 ? (
                                    c_appl_i_268 = appl_j_31 appl_j_34
                                ) : (
                                    ab_i_269 = abort
                                )
                        )
                ) : (
                    ab_i_271 = abort
                ))));
appl_j_42 = flatten_fun_j_39 flatten_fun_j_39;
main_j_150 = fun n -> (
    flatten_fun_j_147 = fun n_b_0 -> (
        int_j_43 = 0;
        input_j_44 = input;
        m_bl_i_272 = int_j_43 ~ int;
        m_br_i_273 = input_j_44 ~ int;
        m_b_i_274 = m_bl_i_272 and m_br_i_273;
        binop_j_45 = m_b_i_274 ? (
                c_binop_i_275 = int_j_43 < input_j_44
            ) : (
                ab_i_276 = abort
            );
        if_j_65 = binop_j_45 ? (
                bool_j_46 = false;
                fail_b_6 = bool_j_46;
                flatten_fun_j_55 = fun expr_b_5 -> (
                    var_j_47 = expr_b_5;
                    m_match_bool_j_49 = var_j_47 ~ any;
                    m_match_bool_j_52 = var_j_47 ~ int;
                    m_match_cond_j_53 = m_match_bool_j_52 ? (
                            bool_j_54 = true
                        ) : (
                            m_match_cond_j_50 = m_match_bool_j_49 ? (
                                    var_j_51 = fail_b_6
                                ) : (
                                    void_j_48 = {}
                                )
                        ));
                flatten_fun_j_57 = fun bj_null_j_6 -> (
                    input_j_56 = input);
                flatten_fun_j_59 = fun expr_b_7 -> (
                    var_j_58 = expr_b_7);
                record_j_60 = {checker = flatten_fun_j_55, generator = flatten_fun_j_57, wrapper = flatten_fun_j_59};
                proj_j_61 = record_j_60.checker;
                var_j_62 = n_b_0;
                m_i_277 = proj_j_61 ~ fun;
                appl_j_63 = m_i_277 ? (
                        c_appl_i_278 = proj_j_61 var_j_62
                    ) : (
                        ab_i_279 = abort
                    )
            ) : (
                bool_j_64 = true
            );
        arg_check_b_1 = if_j_65;
        var_j_66 = arg_check_b_1;
        if_j_146 = var_j_66 ? (
                flatten_fun_j_98 = fun expr_b_15 -> (
                    bool_j_67 = false;
                    fail_b_13 = bool_j_67;
                    flatten_fun_j_76 = fun expr_b_12 -> (
                        var_j_68 = expr_b_12;
                        m_match_bool_j_70 = var_j_68 ~ any;
                        m_match_bool_j_73 = var_j_68 ~ int;
                        m_match_cond_j_74 = m_match_bool_j_73 ? (
                                bool_j_75 = true
                            ) : (
                                m_match_cond_j_71 = m_match_bool_j_70 ? (
                                        var_j_72 = fail_b_13
                                    ) : (
                                        void_j_69 = {}
                                    )
                            ));
                    flatten_fun_j_78 = fun bj_null_j_7 -> (
                        input_j_77 = input);
                    flatten_fun_j_80 = fun expr_b_14 -> (
                        var_j_79 = expr_b_14);
                    record_j_81 = {checker = flatten_fun_j_76, generator = flatten_fun_j_78, wrapper = flatten_fun_j_80};
                    proj_j_82 = record_j_81.checker;
                    var_j_83 = expr_b_15;
                    appl_j_84 = proj_j_82 var_j_83;
                    t_check_b_16 = appl_j_84;
                    var_j_85 = t_check_b_16;
                    if_j_97 = var_j_85 ? (
                            bool_j_86 = false;
                            pred_check_b_17 = bool_j_86;
                            flatten_fun_j_90 = fun i_j_8 -> (
                                int_j_87 = 0;
                                var_j_88 = i_j_8;
                                m_bl_i_280 = int_j_87 ~ int;
                                m_br_i_281 = var_j_88 ~ int;
                                m_b_i_282 = m_bl_i_280 and m_br_i_281;
                                binop_j_89 = m_b_i_282 ? (
                                        c_binop_i_283 = int_j_87 <= var_j_88
                                    ) : (
                                        ab_i_284 = abort
                                    ));
                            var_j_91 = expr_b_15;
                            appl_j_92 = flatten_fun_j_90 var_j_91;
                            if_j_95 = appl_j_92 ? (
                                    bool_j_93 = true
                                ) : (
                                    var_j_94 = pred_check_b_17
                                )
                        ) : (
                            var_j_96 = t_check_b_16
                        ));
                flatten_fun_j_127 = fun bj_null_j_11 -> (
                    bool_j_99 = false;
                    fail_b_9 = bool_j_99;
                    flatten_fun_j_108 = fun expr_b_8 -> (
                        var_j_100 = expr_b_8;
                        m_match_bool_j_102 = var_j_100 ~ any;
                        m_match_bool_j_105 = var_j_100 ~ int;
                        m_match_cond_j_106 = m_match_bool_j_105 ? (
                                bool_j_107 = true
                            ) : (
                                m_match_cond_j_103 = m_match_bool_j_102 ? (
                                        var_j_104 = fail_b_9
                                    ) : (
                                        void_j_101 = {}
                                    )
                            ));
                    flatten_fun_j_110 = fun bj_null_j_9 -> (
                        input_j_109 = input);
                    flatten_fun_j_112 = fun expr_b_10 -> (
                        var_j_111 = expr_b_10);
                    record_j_113 = {checker = flatten_fun_j_108, generator = flatten_fun_j_110, wrapper = flatten_fun_j_112};
                    proj_j_114 = record_j_113.generator;
                    int_j_115 = 0;
                    appl_j_116 = proj_j_114 int_j_115;
                    candidate_b_11 = appl_j_116;
                    flatten_fun_j_120 = fun i_j_10 -> (
                        int_j_117 = 0;
                        var_j_118 = i_j_10;
                        m_bl_i_285 = int_j_117 ~ int;
                        m_br_i_286 = var_j_118 ~ int;
                        m_b_i_287 = m_bl_i_285 and m_br_i_286;
                        binop_j_119 = m_b_i_287 ? (
                                c_binop_i_288 = int_j_117 <= var_j_118
                            ) : (
                                ab_i_289 = abort
                            ));
                    var_j_121 = candidate_b_11;
                    appl_j_122 = flatten_fun_j_120 var_j_121;
                    if_j_126 = appl_j_122 ? (
                            var_j_123 = candidate_b_11
                        ) : (
                            bool_j_124 = false;
                            assume_j_125 = assume bool_j_124
                        ));
                flatten_fun_j_129 = fun expr_b_18 -> (
                    var_j_128 = expr_b_18);
                record_j_130 = {checker = flatten_fun_j_98, generator = flatten_fun_j_127, wrapper = flatten_fun_j_129};
                proj_j_131 = record_j_130.wrapper;
                var_j_132 = appl_j_42;
                flatten_fun_j_136 = fun x_j_12 -> (
                    var_j_133 = x_j_12;
                    int_j_134 = 1;
                    m_bl_i_290 = var_j_133 ~ int;
                    m_br_i_291 = int_j_134 ~ int;
                    m_b_i_292 = m_bl_i_290 and m_br_i_291;
                    binop_j_135 = m_b_i_292 ? (
                            c_binop_i_293 = var_j_133 + int_j_134
                        ) : (
                            ab_i_294 = abort
                        ));
                m_i_295 = var_j_132 ~ fun;
                appl_j_137 = m_i_295 ? (
                        c_appl_i_296 = var_j_132 flatten_fun_j_136
                    ) : (
                        ab_i_297 = abort
                    );
                var_j_138 = n;
                m_i_298 = appl_j_137 ~ fun;
                appl_j_139 = m_i_298 ? (
                        c_appl_i_299 = appl_j_137 var_j_138
                    ) : (
                        ab_i_300 = abort
                    );
                m_i_301 = proj_j_131 ~ fun;
                appl_j_140 = m_i_301 ? (
                        c_appl_i_302 = proj_j_131 appl_j_139
                    ) : (
                        ab_i_303 = abort
                    )
            ) : (
                var_j_141 = arg_check_b_1;
                assert_pred_j_142 = var_j_141;
                assert_res_j_143 = assert_pred_j_142 ? (
                        assert_res_true_j_144 = {}
                    ) : (
                        ab_j_145 = abort
                    )
            ));
    var_j_148 = n;
    appl_j_149 = flatten_fun_j_147 var_j_148);
main = main_j_150;
bool_j_151 = false;
fail_b_3 = bool_j_151;
flatten_fun_j_160 = fun expr_b_2 -> (
    var_j_152 = expr_b_2;
    m_match_bool_j_154 = var_j_152 ~ any;
    m_match_bool_j_157 = var_j_152 ~ int;
    m_match_cond_j_158 = m_match_bool_j_157 ? (
            bool_j_159 = true
        ) : (
            m_match_cond_j_155 = m_match_bool_j_154 ? (
                    var_j_156 = fail_b_3
                ) : (
                    void_j_153 = {}
                )
        ));
flatten_fun_j_162 = fun bj_null -> (
    input_j_161 = input);
flatten_fun_j_164 = fun expr_b_4 -> (
    var_j_163 = expr_b_4);
record_j_165 = {checker = flatten_fun_j_160, generator = flatten_fun_j_162, wrapper = flatten_fun_j_164};
proj_j_166 = record_j_165.generator;
int_j_167 = 0;
appl_j_168 = proj_j_166 int_j_167;
n_b_30 = appl_j_168;
flatten_fun_j_200 = fun expr_b_26 -> (
    bool_j_169 = false;
    fail_b_24 = bool_j_169;
    flatten_fun_j_178 = fun expr_b_23 -> (
        var_j_170 = expr_b_23;
        m_match_bool_j_172 = var_j_170 ~ any;
        m_match_bool_j_175 = var_j_170 ~ int;
        m_match_cond_j_176 = m_match_bool_j_175 ? (
                bool_j_177 = true
            ) : (
                m_match_cond_j_173 = m_match_bool_j_172 ? (
                        var_j_174 = fail_b_24
                    ) : (
                        void_j_171 = {}
                    )
            ));
    flatten_fun_j_180 = fun bj_null_j_2 -> (
        input_j_179 = input);
    flatten_fun_j_182 = fun expr_b_25 -> (
        var_j_181 = expr_b_25);
    record_j_183 = {checker = flatten_fun_j_178, generator = flatten_fun_j_180, wrapper = flatten_fun_j_182};
    proj_j_184 = record_j_183.checker;
    var_j_185 = expr_b_26;
    appl_j_186 = proj_j_184 var_j_185;
    t_check_b_27 = appl_j_186;
    var_j_187 = t_check_b_27;
    if_j_199 = var_j_187 ? (
            bool_j_188 = false;
            pred_check_b_28 = bool_j_188;
            flatten_fun_j_192 = fun i -> (
                int_j_189 = 0;
                var_j_190 = i;
                m_bl_i_304 = int_j_189 ~ int;
                m_br_i_305 = var_j_190 ~ int;
                m_b_i_306 = m_bl_i_304 and m_br_i_305;
                binop_j_191 = m_b_i_306 ? (
                        c_binop_i_307 = int_j_189 <= var_j_190
                    ) : (
                        ab_i_308 = abort
                    ));
            var_j_193 = expr_b_26;
            appl_j_194 = flatten_fun_j_192 var_j_193;
            if_j_197 = appl_j_194 ? (
                    bool_j_195 = true
                ) : (
                    var_j_196 = pred_check_b_28
                )
        ) : (
            var_j_198 = t_check_b_27
        ));
flatten_fun_j_229 = fun bj_null_j_5 -> (
    bool_j_201 = false;
    fail_b_20 = bool_j_201;
    flatten_fun_j_210 = fun expr_b_19 -> (
        var_j_202 = expr_b_19;
        m_match_bool_j_204 = var_j_202 ~ any;
        m_match_bool_j_207 = var_j_202 ~ int;
        m_match_cond_j_208 = m_match_bool_j_207 ? (
                bool_j_209 = true
            ) : (
                m_match_cond_j_205 = m_match_bool_j_204 ? (
                        var_j_206 = fail_b_20
                    ) : (
                        void_j_203 = {}
                    )
            ));
    flatten_fun_j_212 = fun bj_null_j_3 -> (
        input_j_211 = input);
    flatten_fun_j_214 = fun expr_b_21 -> (
        var_j_213 = expr_b_21);
    record_j_215 = {checker = flatten_fun_j_210, generator = flatten_fun_j_212, wrapper = flatten_fun_j_214};
    proj_j_216 = record_j_215.generator;
    int_j_217 = 0;
    appl_j_218 = proj_j_216 int_j_217;
    candidate_b_22 = appl_j_218;
    flatten_fun_j_222 = fun i_j_4 -> (
        int_j_219 = 0;
        var_j_220 = i_j_4;
        m_bl_i_309 = int_j_219 ~ int;
        m_br_i_310 = var_j_220 ~ int;
        m_b_i_311 = m_bl_i_309 and m_br_i_310;
        binop_j_221 = m_b_i_311 ? (
                c_binop_i_312 = int_j_219 <= var_j_220
            ) : (
                ab_i_313 = abort
            ));
    var_j_223 = candidate_b_22;
    appl_j_224 = flatten_fun_j_222 var_j_223;
    if_j_228 = appl_j_224 ? (
            var_j_225 = candidate_b_22
        ) : (
            bool_j_226 = false;
            assume_j_227 = assume bool_j_226
        ));
flatten_fun_j_231 = fun expr_b_29 -> (
    var_j_230 = expr_b_29);
record_j_232 = {checker = flatten_fun_j_200, generator = flatten_fun_j_229, wrapper = flatten_fun_j_231};
proj_j_233 = record_j_232.checker;
appl_j_236 = main n_b_30;
appl_j_237 = proj_j_233 appl_j_236;
check_res_b_31 = appl_j_237;
if_j_245 = check_res_b_31 ? (
        var_j_239 = main
    ) : (
        error_var_j_240 = check_res_b_31;
        assert_pred_j_241 = error_var_j_240;
        assert_res_j_242 = assert_pred_j_241 ? (
                assert_res_true_j_243 = {}
            ) : (
                ab_j_244 = abort
            )
    );
i_result = if_j_245