i_first = {};
flatten_fun_j_128 = fun sum_j_0 -> (
    flatten_fun_j_127 = fun n_j_5 -> (
        var_j_15 = sum_j_0;
        var_j_16 = sum_j_0;
        appl_j_17 = var_j_15 var_j_16;
        sum = appl_j_17;
        flatten_fun_j_124 = fun n_b_0 -> (
            bool_j_18 = false;
            fail_b_6 = bool_j_18;
            flatten_fun_j_27 = fun expr_b_5 -> (
                var_j_19 = expr_b_5;
                m_match_bool_j_21 = var_j_19 ~ any;
                m_match_bool_j_24 = var_j_19 ~ int;
                m_match_cond_j_25 = m_match_bool_j_24 ? (
                        bool_j_26 = true
                    ) : (
                        m_match_cond_j_22 = m_match_bool_j_21 ? (
                                var_j_23 = fail_b_6
                            ) : (
                                void_j_20 = {}
                            )
                    ));
            flatten_fun_j_29 = fun bj_null -> (
                input_j_28 = input);
            flatten_fun_j_31 = fun expr_b_7 -> (
                var_j_30 = expr_b_7);
            record_j_32 = {checker = flatten_fun_j_27, generator = flatten_fun_j_29, wrapper = flatten_fun_j_31};
            proj_j_33 = record_j_32.checker;
            var_j_34 = n_b_0;
            appl_j_35 = proj_j_33 var_j_34;
            arg_check_b_1 = appl_j_35;
            var_j_36 = arg_check_b_1;
            if_j_123 = var_j_36 ? (
                    flatten_fun_j_101 = fun n -> (
                        flatten_fun_j_68 = fun expr_b_15 -> (
                            bool_j_37 = false;
                            fail_b_13 = bool_j_37;
                            flatten_fun_j_46 = fun expr_b_12 -> (
                                var_j_38 = expr_b_12;
                                m_match_bool_j_40 = var_j_38 ~ any;
                                m_match_bool_j_43 = var_j_38 ~ int;
                                m_match_cond_j_44 = m_match_bool_j_43 ? (
                                        bool_j_45 = true
                                    ) : (
                                        m_match_cond_j_41 = m_match_bool_j_40 ? (
                                                var_j_42 = fail_b_13
                                            ) : (
                                                void_j_39 = {}
                                            )
                                    ));
                            flatten_fun_j_48 = fun bj_null_j_1 -> (
                                input_j_47 = input);
                            flatten_fun_j_50 = fun expr_b_14 -> (
                                var_j_49 = expr_b_14);
                            record_j_51 = {checker = flatten_fun_j_46, generator = flatten_fun_j_48, wrapper = flatten_fun_j_50};
                            proj_j_52 = record_j_51.checker;
                            var_j_53 = expr_b_15;
                            appl_j_54 = proj_j_52 var_j_53;
                            t_check_b_16 = appl_j_54;
                            var_j_55 = t_check_b_16;
                            if_j_67 = var_j_55 ? (
                                    bool_j_56 = false;
                                    pred_check_b_17 = bool_j_56;
                                    flatten_fun_j_60 = fun c -> (
                                        var_j_57 = n;
                                        var_j_58 = c;
                                        m_bl_i_230 = var_j_57 ~ int;
                                        m_br_i_231 = var_j_58 ~ int;
                                        m_b_i_232 = m_bl_i_230 and m_br_i_231;
                                        binop_j_59 = m_b_i_232 ? (
                                                c_binop_i_233 = var_j_57 < var_j_58
                                            ) : (
                                                ab_i_234 = abort
                                            ));
                                    var_j_61 = expr_b_15;
                                    appl_j_62 = flatten_fun_j_60 var_j_61;
                                    if_j_65 = appl_j_62 ? (
                                            bool_j_63 = true
                                        ) : (
                                            var_j_64 = pred_check_b_17
                                        )
                                ) : (
                                    var_j_66 = t_check_b_16
                                ));
                        flatten_fun_j_97 = fun bj_null_j_4 -> (
                            bool_j_69 = false;
                            fail_b_9 = bool_j_69;
                            flatten_fun_j_78 = fun expr_b_8 -> (
                                var_j_70 = expr_b_8;
                                m_match_bool_j_72 = var_j_70 ~ any;
                                m_match_bool_j_75 = var_j_70 ~ int;
                                m_match_cond_j_76 = m_match_bool_j_75 ? (
                                        bool_j_77 = true
                                    ) : (
                                        m_match_cond_j_73 = m_match_bool_j_72 ? (
                                                var_j_74 = fail_b_9
                                            ) : (
                                                void_j_71 = {}
                                            )
                                    ));
                            flatten_fun_j_80 = fun bj_null_j_2 -> (
                                input_j_79 = input);
                            flatten_fun_j_82 = fun expr_b_10 -> (
                                var_j_81 = expr_b_10);
                            record_j_83 = {checker = flatten_fun_j_78, generator = flatten_fun_j_80, wrapper = flatten_fun_j_82};
                            proj_j_84 = record_j_83.generator;
                            int_j_85 = 0;
                            appl_j_86 = proj_j_84 int_j_85;
                            candidate_b_11 = appl_j_86;
                            flatten_fun_j_90 = fun c_j_3 -> (
                                var_j_87 = n;
                                var_j_88 = c_j_3;
                                m_bl_i_235 = var_j_87 ~ int;
                                m_br_i_236 = var_j_88 ~ int;
                                m_b_i_237 = m_bl_i_235 and m_br_i_236;
                                binop_j_89 = m_b_i_237 ? (
                                        c_binop_i_238 = var_j_87 < var_j_88
                                    ) : (
                                        ab_i_239 = abort
                                    ));
                            var_j_91 = candidate_b_11;
                            appl_j_92 = flatten_fun_j_90 var_j_91;
                            if_j_96 = appl_j_92 ? (
                                    var_j_93 = candidate_b_11
                                ) : (
                                    bool_j_94 = false;
                                    assume_j_95 = assume bool_j_94
                                ));
                        flatten_fun_j_99 = fun expr_b_18 -> (
                            var_j_98 = expr_b_18);
                        record_j_100 = {checker = flatten_fun_j_68, generator = flatten_fun_j_97, wrapper = flatten_fun_j_99});
                    var_j_102 = n_b_0;
                    appl_j_103 = flatten_fun_j_101 var_j_102;
                    proj_j_104 = appl_j_103.wrapper;
                    var_j_105 = n_j_5;
                    int_j_106 = 0;
                    m_bl_i_240 = var_j_105 ~ int;
                    m_br_i_241 = int_j_106 ~ int;
                    m_b_i_242 = m_bl_i_240 and m_br_i_241;
                    binop_j_107 = m_b_i_242 ? (
                            c_binop_i_243 = var_j_105 <= int_j_106
                        ) : (
                            ab_i_244 = abort
                        );
                    m_i_245 = binop_j_107 ~ bool;
                    if_j_116 = m_i_245 ? (
                            c_cond_i_259 = binop_j_107 ? (
                                    int_j_108 = 0
                                ) : (
                                    var_j_109 = n_j_5;
                                    var_j_110 = sum;
                                    var_j_111 = n_j_5;
                                    int_j_112 = 1;
                                    m_bl_i_246 = var_j_111 ~ int;
                                    m_br_i_247 = int_j_112 ~ int;
                                    m_b_i_248 = m_bl_i_246 and m_br_i_247;
                                    binop_j_113 = m_b_i_248 ? (
                                            c_binop_i_249 = var_j_111 - int_j_112
                                        ) : (
                                            ab_i_250 = abort
                                        );
                                    m_i_251 = var_j_110 ~ fun;
                                    appl_j_114 = m_i_251 ? (
                                            c_appl_i_252 = var_j_110 binop_j_113
                                        ) : (
                                            ab_i_253 = abort
                                        );
                                    m_bl_i_254 = var_j_109 ~ int;
                                    m_br_i_255 = appl_j_114 ~ int;
                                    m_b_i_256 = m_bl_i_254 and m_br_i_255;
                                    binop_j_115 = m_b_i_256 ? (
                                            c_binop_i_257 = var_j_109 + appl_j_114
                                        ) : (
                                            ab_i_258 = abort
                                        )
                                )
                        ) : (
                            ab_i_260 = abort
                        );
                    m_i_261 = proj_j_104 ~ fun;
                    appl_j_117 = m_i_261 ? (
                            c_appl_i_262 = proj_j_104 if_j_116
                        ) : (
                            ab_i_263 = abort
                        )
                ) : (
                    bool_j_118 = false;
                    assert_pred_j_119 = bool_j_118;
                    assert_res_j_120 = assert_pred_j_119 ? (
                            assert_res_true_j_121 = {}
                        ) : (
                            ab_j_122 = abort
                        )
                ));
        var_j_125 = n_j_5;
        appl_j_126 = flatten_fun_j_124 var_j_125));
appl_j_131 = flatten_fun_j_128 flatten_fun_j_128;
bool_j_132 = false;
fail_b_3 = bool_j_132;
flatten_fun_j_141 = fun expr_b_2 -> (
    var_j_133 = expr_b_2;
    m_match_bool_j_135 = var_j_133 ~ any;
    m_match_bool_j_138 = var_j_133 ~ int;
    m_match_cond_j_139 = m_match_bool_j_138 ? (
            bool_j_140 = true
        ) : (
            m_match_cond_j_136 = m_match_bool_j_135 ? (
                    var_j_137 = fail_b_3
                ) : (
                    void_j_134 = {}
                )
        ));
flatten_fun_j_143 = fun bj_null_j_6 -> (
    input_j_142 = input);
flatten_fun_j_145 = fun expr_b_4 -> (
    var_j_144 = expr_b_4);
record_j_146 = {checker = flatten_fun_j_141, generator = flatten_fun_j_143, wrapper = flatten_fun_j_145};
proj_j_147 = record_j_146.generator;
int_j_148 = 0;
appl_j_149 = proj_j_147 int_j_148;
n_b_31 = appl_j_149;
flatten_fun_j_215 = fun n_j_12 -> (
    flatten_fun_j_181 = fun expr_b_26 -> (
        bool_j_150 = false;
        fail_b_24 = bool_j_150;
        flatten_fun_j_159 = fun expr_b_23 -> (
            var_j_151 = expr_b_23;
            m_match_bool_j_153 = var_j_151 ~ any;
            m_match_bool_j_156 = var_j_151 ~ int;
            m_match_cond_j_157 = m_match_bool_j_156 ? (
                    bool_j_158 = true
                ) : (
                    m_match_cond_j_154 = m_match_bool_j_153 ? (
                            var_j_155 = fail_b_24
                        ) : (
                            void_j_152 = {}
                        )
                ));
        flatten_fun_j_161 = fun bj_null_j_7 -> (
            input_j_160 = input);
        flatten_fun_j_163 = fun expr_b_25 -> (
            var_j_162 = expr_b_25);
        record_j_164 = {checker = flatten_fun_j_159, generator = flatten_fun_j_161, wrapper = flatten_fun_j_163};
        proj_j_165 = record_j_164.checker;
        var_j_166 = expr_b_26;
        appl_j_167 = proj_j_165 var_j_166;
        t_check_b_27 = appl_j_167;
        var_j_168 = t_check_b_27;
        if_j_180 = var_j_168 ? (
                bool_j_169 = false;
                pred_check_b_28 = bool_j_169;
                flatten_fun_j_173 = fun c_j_8 -> (
                    var_j_170 = n_j_12;
                    var_j_171 = c_j_8;
                    m_bl_i_264 = var_j_170 ~ int;
                    m_br_i_265 = var_j_171 ~ int;
                    m_b_i_266 = m_bl_i_264 and m_br_i_265;
                    binop_j_172 = m_b_i_266 ? (
                            c_binop_i_267 = var_j_170 < var_j_171
                        ) : (
                            ab_i_268 = abort
                        ));
                var_j_174 = expr_b_26;
                appl_j_175 = flatten_fun_j_173 var_j_174;
                if_j_178 = appl_j_175 ? (
                        bool_j_176 = true
                    ) : (
                        var_j_177 = pred_check_b_28
                    )
            ) : (
                var_j_179 = t_check_b_27
            ));
    flatten_fun_j_210 = fun bj_null_j_11 -> (
        bool_j_182 = false;
        fail_b_20 = bool_j_182;
        flatten_fun_j_191 = fun expr_b_19 -> (
            var_j_183 = expr_b_19;
            m_match_bool_j_185 = var_j_183 ~ any;
            m_match_bool_j_188 = var_j_183 ~ int;
            m_match_cond_j_189 = m_match_bool_j_188 ? (
                    bool_j_190 = true
                ) : (
                    m_match_cond_j_186 = m_match_bool_j_185 ? (
                            var_j_187 = fail_b_20
                        ) : (
                            void_j_184 = {}
                        )
                ));
        flatten_fun_j_193 = fun bj_null_j_9 -> (
            input_j_192 = input);
        flatten_fun_j_195 = fun expr_b_21 -> (
            var_j_194 = expr_b_21);
        record_j_196 = {checker = flatten_fun_j_191, generator = flatten_fun_j_193, wrapper = flatten_fun_j_195};
        proj_j_197 = record_j_196.generator;
        int_j_198 = 0;
        appl_j_199 = proj_j_197 int_j_198;
        candidate_b_22 = appl_j_199;
        flatten_fun_j_203 = fun c_j_10 -> (
            var_j_200 = n_j_12;
            var_j_201 = c_j_10;
            m_bl_i_269 = var_j_200 ~ int;
            m_br_i_270 = var_j_201 ~ int;
            m_b_i_271 = m_bl_i_269 and m_br_i_270;
            binop_j_202 = m_b_i_271 ? (
                    c_binop_i_272 = var_j_200 < var_j_201
                ) : (
                    ab_i_273 = abort
                ));
        var_j_204 = candidate_b_22;
        appl_j_205 = flatten_fun_j_203 var_j_204;
        if_j_209 = appl_j_205 ? (
                var_j_206 = candidate_b_22
            ) : (
                bool_j_207 = false;
                assume_j_208 = assume bool_j_207
            ));
    flatten_fun_j_212 = fun expr_b_29 -> (
        var_j_211 = expr_b_29);
    record_j_213 = {checker = flatten_fun_j_181, generator = flatten_fun_j_210, wrapper = flatten_fun_j_212};
    proj_j_214 = record_j_213.checker);
appl_j_217 = flatten_fun_j_215 n_b_31;
appl_j_220 = appl_j_131 n_b_31;
appl_j_221 = appl_j_217 appl_j_220;
check_res_b_30 = appl_j_221;
if_j_229 = check_res_b_30 ? (
        var_j_223 = appl_j_131
    ) : (
        error_var_j_224 = check_res_b_30;
        assert_pred_j_225 = error_var_j_224;
        assert_res_j_226 = assert_pred_j_225 ? (
                assert_res_true_j_227 = {}
            ) : (
                ab_j_228 = abort
            )
    );
i_result = if_j_229