i_first = {};
flatten_fun_j_36 = fun mult_j_0 -> (
    flatten_fun_j_35 = fun x -> (
        flatten_fun_j_34 = fun y -> (
            var_j_13 = mult_j_0;
            var_j_14 = mult_j_0;
            appl_j_15 = var_j_13 var_j_14;
            mult = appl_j_15;
            var_j_16 = x;
            int_j_17 = 0;
            m_bl_i_240 = var_j_16 ~ int;
            m_br_i_241 = int_j_17 ~ int;
            m_b_i_242 = m_bl_i_240 and m_br_i_241;
            binop_j_18 = m_b_i_242 ? (
                    c_binop_i_243 = var_j_16 <= int_j_17
                ) : (
                    ab_i_244 = abort
                );
            var_j_19 = y;
            int_j_20 = 0;
            m_bl_i_245 = var_j_19 ~ int;
            m_br_i_246 = int_j_20 ~ int;
            m_b_i_247 = m_bl_i_245 and m_br_i_246;
            binop_j_21 = m_b_i_247 ? (
                    c_binop_i_248 = var_j_19 <= int_j_20
                ) : (
                    ab_i_249 = abort
                );
            m_bl_i_250 = binop_j_18 ~ bool;
            m_br_i_251 = binop_j_21 ~ bool;
            m_b_i_252 = m_bl_i_250 and m_br_i_251;
            binop_j_22 = m_b_i_252 ? (
                    c_binop_i_253 = binop_j_18 or binop_j_21
                ) : (
                    ab_i_254 = abort
                );
            m_i_255 = binop_j_22 ~ bool;
            if_j_33 = m_i_255 ? (
                    c_cond_i_272 = binop_j_22 ? (
                            int_j_23 = 0
                        ) : (
                            var_j_24 = x;
                            var_j_25 = mult;
                            var_j_26 = x;
                            m_i_256 = var_j_25 ~ fun;
                            appl_j_27 = m_i_256 ? (
                                    c_appl_i_257 = var_j_25 var_j_26
                                ) : (
                                    ab_i_258 = abort
                                );
                            var_j_28 = y;
                            int_j_29 = 1;
                            m_bl_i_259 = var_j_28 ~ int;
                            m_br_i_260 = int_j_29 ~ int;
                            m_b_i_261 = m_bl_i_259 and m_br_i_260;
                            binop_j_30 = m_b_i_261 ? (
                                    c_binop_i_262 = var_j_28 - int_j_29
                                ) : (
                                    ab_i_263 = abort
                                );
                            m_i_264 = appl_j_27 ~ fun;
                            appl_j_31 = m_i_264 ? (
                                    c_appl_i_265 = appl_j_27 binop_j_30
                                ) : (
                                    ab_i_266 = abort
                                );
                            m_bl_i_267 = var_j_24 ~ int;
                            m_br_i_268 = appl_j_31 ~ int;
                            m_b_i_269 = m_bl_i_267 and m_br_i_268;
                            binop_j_32 = m_b_i_269 ? (
                                    c_binop_i_270 = var_j_24 + appl_j_31
                                ) : (
                                    ab_i_271 = abort
                                )
                        )
                ) : (
                    ab_i_273 = abort
                ))));
appl_j_39 = flatten_fun_j_36 flatten_fun_j_36;
main_j_144 = fun n -> (
    flatten_fun_j_141 = fun n_b_0 -> (
        int_j_40 = 0;
        input_j_41 = input;
        m_bl_i_274 = int_j_40 ~ int;
        m_br_i_275 = input_j_41 ~ int;
        m_b_i_276 = m_bl_i_274 and m_br_i_275;
        binop_j_42 = m_b_i_276 ? (
                c_binop_i_277 = int_j_40 < input_j_41
            ) : (
                ab_i_278 = abort
            );
        if_j_62 = binop_j_42 ? (
                bool_j_43 = false;
                fail_b_6 = bool_j_43;
                flatten_fun_j_52 = fun expr_b_5 -> (
                    var_j_44 = expr_b_5;
                    m_match_bool_j_46 = var_j_44 ~ any;
                    m_match_bool_j_49 = var_j_44 ~ int;
                    m_match_cond_j_50 = m_match_bool_j_49 ? (
                            bool_j_51 = true
                        ) : (
                            m_match_cond_j_47 = m_match_bool_j_46 ? (
                                    var_j_48 = fail_b_6
                                ) : (
                                    void_j_45 = {}
                                )
                        ));
                flatten_fun_j_54 = fun bj_null_j_5 -> (
                    input_j_53 = input);
                flatten_fun_j_56 = fun expr_b_7 -> (
                    var_j_55 = expr_b_7);
                record_j_57 = {checker = flatten_fun_j_52, generator = flatten_fun_j_54, wrapper = flatten_fun_j_56};
                proj_j_58 = record_j_57.checker;
                var_j_59 = n_b_0;
                m_i_279 = proj_j_58 ~ fun;
                appl_j_60 = m_i_279 ? (
                        c_appl_i_280 = proj_j_58 var_j_59
                    ) : (
                        ab_i_281 = abort
                    )
            ) : (
                bool_j_61 = true
            );
        arg_check_b_1 = if_j_62;
        var_j_63 = arg_check_b_1;
        if_j_140 = var_j_63 ? (
                flatten_fun_j_95 = fun expr_b_15 -> (
                    bool_j_64 = false;
                    fail_b_13 = bool_j_64;
                    flatten_fun_j_73 = fun expr_b_12 -> (
                        var_j_65 = expr_b_12;
                        m_match_bool_j_67 = var_j_65 ~ any;
                        m_match_bool_j_70 = var_j_65 ~ int;
                        m_match_cond_j_71 = m_match_bool_j_70 ? (
                                bool_j_72 = true
                            ) : (
                                m_match_cond_j_68 = m_match_bool_j_67 ? (
                                        var_j_69 = fail_b_13
                                    ) : (
                                        void_j_66 = {}
                                    )
                            ));
                    flatten_fun_j_75 = fun bj_null_j_6 -> (
                        input_j_74 = input);
                    flatten_fun_j_77 = fun expr_b_14 -> (
                        var_j_76 = expr_b_14);
                    record_j_78 = {checker = flatten_fun_j_73, generator = flatten_fun_j_75, wrapper = flatten_fun_j_77};
                    proj_j_79 = record_j_78.checker;
                    var_j_80 = expr_b_15;
                    appl_j_81 = proj_j_79 var_j_80;
                    t_check_b_16 = appl_j_81;
                    var_j_82 = t_check_b_16;
                    if_j_94 = var_j_82 ? (
                            bool_j_83 = false;
                            pred_check_b_17 = bool_j_83;
                            flatten_fun_j_87 = fun i_j_7 -> (
                                int_j_84 = 600;
                                var_j_85 = i_j_7;
                                m_bl_i_282 = int_j_84 ~ int;
                                m_br_i_283 = var_j_85 ~ int;
                                m_b_i_284 = m_bl_i_282 and m_br_i_283;
                                binop_j_86 = m_b_i_284 ? (
                                        c_binop_i_285 = int_j_84 <= var_j_85
                                    ) : (
                                        ab_i_286 = abort
                                    ));
                            var_j_88 = expr_b_15;
                            appl_j_89 = flatten_fun_j_87 var_j_88;
                            if_j_92 = appl_j_89 ? (
                                    bool_j_90 = true
                                ) : (
                                    var_j_91 = pred_check_b_17
                                )
                        ) : (
                            var_j_93 = t_check_b_16
                        ));
                flatten_fun_j_124 = fun bj_null_j_10 -> (
                    bool_j_96 = false;
                    fail_b_9 = bool_j_96;
                    flatten_fun_j_105 = fun expr_b_8 -> (
                        var_j_97 = expr_b_8;
                        m_match_bool_j_99 = var_j_97 ~ any;
                        m_match_bool_j_102 = var_j_97 ~ int;
                        m_match_cond_j_103 = m_match_bool_j_102 ? (
                                bool_j_104 = true
                            ) : (
                                m_match_cond_j_100 = m_match_bool_j_99 ? (
                                        var_j_101 = fail_b_9
                                    ) : (
                                        void_j_98 = {}
                                    )
                            ));
                    flatten_fun_j_107 = fun bj_null_j_8 -> (
                        input_j_106 = input);
                    flatten_fun_j_109 = fun expr_b_10 -> (
                        var_j_108 = expr_b_10);
                    record_j_110 = {checker = flatten_fun_j_105, generator = flatten_fun_j_107, wrapper = flatten_fun_j_109};
                    proj_j_111 = record_j_110.generator;
                    int_j_112 = 0;
                    appl_j_113 = proj_j_111 int_j_112;
                    candidate_b_11 = appl_j_113;
                    flatten_fun_j_117 = fun i_j_9 -> (
                        int_j_114 = 600;
                        var_j_115 = i_j_9;
                        m_bl_i_287 = int_j_114 ~ int;
                        m_br_i_288 = var_j_115 ~ int;
                        m_b_i_289 = m_bl_i_287 and m_br_i_288;
                        binop_j_116 = m_b_i_289 ? (
                                c_binop_i_290 = int_j_114 <= var_j_115
                            ) : (
                                ab_i_291 = abort
                            ));
                    var_j_118 = candidate_b_11;
                    appl_j_119 = flatten_fun_j_117 var_j_118;
                    if_j_123 = appl_j_119 ? (
                            var_j_120 = candidate_b_11
                        ) : (
                            bool_j_121 = false;
                            assume_j_122 = assume bool_j_121
                        ));
                flatten_fun_j_126 = fun expr_b_18 -> (
                    var_j_125 = expr_b_18);
                record_j_127 = {checker = flatten_fun_j_95, generator = flatten_fun_j_124, wrapper = flatten_fun_j_126};
                proj_j_128 = record_j_127.wrapper;
                var_j_129 = appl_j_39;
                int_j_130 = 100;
                m_i_292 = var_j_129 ~ fun;
                appl_j_131 = m_i_292 ? (
                        c_appl_i_293 = var_j_129 int_j_130
                    ) : (
                        ab_i_294 = abort
                    );
                var_j_132 = n;
                m_i_295 = appl_j_131 ~ fun;
                appl_j_133 = m_i_295 ? (
                        c_appl_i_296 = appl_j_131 var_j_132
                    ) : (
                        ab_i_297 = abort
                    );
                m_i_298 = proj_j_128 ~ fun;
                appl_j_134 = m_i_298 ? (
                        c_appl_i_299 = proj_j_128 appl_j_133
                    ) : (
                        ab_i_300 = abort
                    )
            ) : (
                var_j_135 = arg_check_b_1;
                assert_pred_j_136 = var_j_135;
                assert_res_j_137 = assert_pred_j_136 ? (
                        assert_res_true_j_138 = {}
                    ) : (
                        ab_j_139 = abort
                    )
            ));
    var_j_142 = n;
    appl_j_143 = flatten_fun_j_141 var_j_142);
main = main_j_144;
bool_j_145 = false;
fail_b_3 = bool_j_145;
flatten_fun_j_154 = fun expr_b_2 -> (
    var_j_146 = expr_b_2;
    m_match_bool_j_148 = var_j_146 ~ any;
    m_match_bool_j_151 = var_j_146 ~ int;
    m_match_cond_j_152 = m_match_bool_j_151 ? (
            bool_j_153 = true
        ) : (
            m_match_cond_j_149 = m_match_bool_j_148 ? (
                    var_j_150 = fail_b_3
                ) : (
                    void_j_147 = {}
                )
        ));
flatten_fun_j_156 = fun bj_null -> (
    input_j_155 = input);
flatten_fun_j_158 = fun expr_b_4 -> (
    var_j_157 = expr_b_4);
record_j_159 = {checker = flatten_fun_j_154, generator = flatten_fun_j_156, wrapper = flatten_fun_j_158};
proj_j_160 = record_j_159.generator;
int_j_161 = 0;
appl_j_162 = proj_j_160 int_j_161;
n_b_30 = appl_j_162;
flatten_fun_j_194 = fun expr_b_26 -> (
    bool_j_163 = false;
    fail_b_24 = bool_j_163;
    flatten_fun_j_172 = fun expr_b_23 -> (
        var_j_164 = expr_b_23;
        m_match_bool_j_166 = var_j_164 ~ any;
        m_match_bool_j_169 = var_j_164 ~ int;
        m_match_cond_j_170 = m_match_bool_j_169 ? (
                bool_j_171 = true
            ) : (
                m_match_cond_j_167 = m_match_bool_j_166 ? (
                        var_j_168 = fail_b_24
                    ) : (
                        void_j_165 = {}
                    )
            ));
    flatten_fun_j_174 = fun bj_null_j_1 -> (
        input_j_173 = input);
    flatten_fun_j_176 = fun expr_b_25 -> (
        var_j_175 = expr_b_25);
    record_j_177 = {checker = flatten_fun_j_172, generator = flatten_fun_j_174, wrapper = flatten_fun_j_176};
    proj_j_178 = record_j_177.checker;
    var_j_179 = expr_b_26;
    appl_j_180 = proj_j_178 var_j_179;
    t_check_b_27 = appl_j_180;
    var_j_181 = t_check_b_27;
    if_j_193 = var_j_181 ? (
            bool_j_182 = false;
            pred_check_b_28 = bool_j_182;
            flatten_fun_j_186 = fun i -> (
                int_j_183 = 600;
                var_j_184 = i;
                m_bl_i_301 = int_j_183 ~ int;
                m_br_i_302 = var_j_184 ~ int;
                m_b_i_303 = m_bl_i_301 and m_br_i_302;
                binop_j_185 = m_b_i_303 ? (
                        c_binop_i_304 = int_j_183 <= var_j_184
                    ) : (
                        ab_i_305 = abort
                    ));
            var_j_187 = expr_b_26;
            appl_j_188 = flatten_fun_j_186 var_j_187;
            if_j_191 = appl_j_188 ? (
                    bool_j_189 = true
                ) : (
                    var_j_190 = pred_check_b_28
                )
        ) : (
            var_j_192 = t_check_b_27
        ));
flatten_fun_j_223 = fun bj_null_j_4 -> (
    bool_j_195 = false;
    fail_b_20 = bool_j_195;
    flatten_fun_j_204 = fun expr_b_19 -> (
        var_j_196 = expr_b_19;
        m_match_bool_j_198 = var_j_196 ~ any;
        m_match_bool_j_201 = var_j_196 ~ int;
        m_match_cond_j_202 = m_match_bool_j_201 ? (
                bool_j_203 = true
            ) : (
                m_match_cond_j_199 = m_match_bool_j_198 ? (
                        var_j_200 = fail_b_20
                    ) : (
                        void_j_197 = {}
                    )
            ));
    flatten_fun_j_206 = fun bj_null_j_2 -> (
        input_j_205 = input);
    flatten_fun_j_208 = fun expr_b_21 -> (
        var_j_207 = expr_b_21);
    record_j_209 = {checker = flatten_fun_j_204, generator = flatten_fun_j_206, wrapper = flatten_fun_j_208};
    proj_j_210 = record_j_209.generator;
    int_j_211 = 0;
    appl_j_212 = proj_j_210 int_j_211;
    candidate_b_22 = appl_j_212;
    flatten_fun_j_216 = fun i_j_3 -> (
        int_j_213 = 600;
        var_j_214 = i_j_3;
        m_bl_i_306 = int_j_213 ~ int;
        m_br_i_307 = var_j_214 ~ int;
        m_b_i_308 = m_bl_i_306 and m_br_i_307;
        binop_j_215 = m_b_i_308 ? (
                c_binop_i_309 = int_j_213 <= var_j_214
            ) : (
                ab_i_310 = abort
            ));
    var_j_217 = candidate_b_22;
    appl_j_218 = flatten_fun_j_216 var_j_217;
    if_j_222 = appl_j_218 ? (
            var_j_219 = candidate_b_22
        ) : (
            bool_j_220 = false;
            assume_j_221 = assume bool_j_220
        ));
flatten_fun_j_225 = fun expr_b_29 -> (
    var_j_224 = expr_b_29);
record_j_226 = {checker = flatten_fun_j_194, generator = flatten_fun_j_223, wrapper = flatten_fun_j_225};
proj_j_227 = record_j_226.checker;
appl_j_230 = main n_b_30;
appl_j_231 = proj_j_227 appl_j_230;
check_res_b_31 = appl_j_231;
if_j_239 = check_res_b_31 ? (
        var_j_233 = main
    ) : (
        error_var_j_234 = check_res_b_31;
        assert_pred_j_235 = error_var_j_234;
        assert_res_j_236 = assert_pred_j_235 ? (
                assert_res_true_j_237 = {}
            ) : (
                ab_j_238 = abort
            )
    );
i_result = if_j_239