i_first = {};
flatten_fun_j_39 = fun reverse_j_1 -> (
    flatten_fun_j_38 = fun l -> (
        flatten_fun_j_37 = fun ac -> (
            var_j_11 = reverse_j_1;
            var_j_12 = reverse_j_1;
            appl_j_13 = var_j_11 var_j_12;
            reverse = appl_j_13;
            bool_j_14 = false;
            fail_b_2 = bool_j_14;
            var_j_15 = l;
            m_match_bool_j_17 = var_j_15 ~ {j_head, j_tail, _};
            m_match_bool_j_27 = var_j_15 ~ {j_empty, _};
            m_match_bool_j_30 = var_j_15 ~ {bj_untouched, _};
            m_match_cond_j_31 = m_match_bool_j_30 ? (
                    var_j_32 = fail_b_2;
                    assert_pred_j_33 = var_j_32;
                    assert_res_j_34 = assert_pred_j_33 ? (
                            assert_res_true_j_35 = {}
                        ) : (
                            ab_j_36 = abort
                        )
                ) : (
                    m_match_cond_j_28 = m_match_bool_j_27 ? (
                            var_j_29 = ac
                        ) : (
                            m_match_cond_j_18 = m_match_bool_j_17 ? (
                                    hd = var_j_15.j_head;
                                    tl = var_j_15.j_tail;
                                    var_j_19 = reverse;
                                    var_j_20 = tl;
                                    m_i_196 = var_j_19 ~ fun;
                                    appl_j_21 = m_i_196 ? (
                                            c_appl_i_197 = var_j_19 var_j_20
                                        ) : (
                                            ab_i_198 = abort
                                        );
                                    record_j_22 = {};
                                    var_j_23 = hd;
                                    var_j_24 = ac;
                                    record_j_25 = {j_cons = record_j_22, j_head = var_j_23, j_tail = var_j_24};
                                    m_i_199 = appl_j_21 ~ fun;
                                    appl_j_26 = m_i_199 ? (
                                            c_appl_i_200 = appl_j_21 record_j_25
                                        ) : (
                                            ab_i_201 = abort
                                        )
                                ) : (
                                    ab_j_16 = abort
                                )
                        )
                ))));
appl_j_42 = flatten_fun_j_39 flatten_fun_j_39;
flatten_fun_j_61 = fun mk_list_j_0 -> (
    flatten_fun_j_60 = fun n -> (
        var_j_43 = mk_list_j_0;
        var_j_44 = mk_list_j_0;
        appl_j_45 = var_j_43 var_j_44;
        mk_list = appl_j_45;
        var_j_46 = n;
        int_j_47 = 0;
        m_bl_i_202 = var_j_46 ~ int;
        m_br_i_203 = int_j_47 ~ int;
        m_b_i_204 = m_bl_i_202 and m_br_i_203;
        binop_j_48 = m_b_i_204 ? (
                c_binop_i_205 = var_j_46 < int_j_47
            ) : (
                ab_i_206 = abort
            );
        m_i_207 = binop_j_48 ~ bool;
        if_j_59 = m_i_207 ? (
                c_cond_i_216 = binop_j_48 ? (
                        record_j_49 = {};
                        record_j_50 = {j_empty = record_j_49}
                    ) : (
                        record_j_51 = {};
                        var_j_52 = n;
                        var_j_53 = mk_list;
                        var_j_54 = n;
                        int_j_55 = 1;
                        m_bl_i_208 = var_j_54 ~ int;
                        m_br_i_209 = int_j_55 ~ int;
                        m_b_i_210 = m_bl_i_208 and m_br_i_209;
                        binop_j_56 = m_b_i_210 ? (
                                c_binop_i_211 = var_j_54 - int_j_55
                            ) : (
                                ab_i_212 = abort
                            );
                        m_i_213 = var_j_53 ~ fun;
                        appl_j_57 = m_i_213 ? (
                                c_appl_i_214 = var_j_53 binop_j_56
                            ) : (
                                ab_i_215 = abort
                            );
                        record_j_58 = {j_cons = record_j_51, j_head = var_j_52, j_tail = appl_j_57}
                    )
            ) : (
                ab_i_217 = abort
            )));
appl_j_64 = flatten_fun_j_61 flatten_fun_j_61;
main_j_149 = fun len -> (
    flatten_fun_j_146 = fun len_b_0 -> (
        int_j_65 = 0;
        input_j_66 = input;
        m_bl_i_218 = int_j_65 ~ int;
        m_br_i_219 = input_j_66 ~ int;
        m_b_i_220 = m_bl_i_218 and m_br_i_219;
        binop_j_67 = m_b_i_220 ? (
                c_binop_i_221 = int_j_65 < input_j_66
            ) : (
                ab_i_222 = abort
            );
        if_j_87 = binop_j_67 ? (
                bool_j_68 = false;
                fail_b_7 = bool_j_68;
                flatten_fun_j_77 = fun expr_b_6 -> (
                    var_j_69 = expr_b_6;
                    m_match_bool_j_71 = var_j_69 ~ any;
                    m_match_bool_j_74 = var_j_69 ~ int;
                    m_match_cond_j_75 = m_match_bool_j_74 ? (
                            bool_j_76 = true
                        ) : (
                            m_match_cond_j_72 = m_match_bool_j_71 ? (
                                    var_j_73 = fail_b_7
                                ) : (
                                    void_j_70 = {}
                                )
                        ));
                flatten_fun_j_79 = fun bj_null_j_3 -> (
                    input_j_78 = input);
                flatten_fun_j_81 = fun expr_b_8 -> (
                    var_j_80 = expr_b_8);
                record_j_82 = {checker = flatten_fun_j_77, generator = flatten_fun_j_79, wrapper = flatten_fun_j_81};
                proj_j_83 = record_j_82.checker;
                var_j_84 = len_b_0;
                m_i_223 = proj_j_83 ~ fun;
                appl_j_85 = m_i_223 ? (
                        c_appl_i_224 = proj_j_83 var_j_84
                    ) : (
                        ab_i_225 = abort
                    )
            ) : (
                bool_j_86 = true
            );
        arg_check_b_1 = if_j_87;
        var_j_88 = arg_check_b_1;
        if_j_145 = var_j_88 ? (
                bool_j_89 = false;
                fail_b_10 = bool_j_89;
                flatten_fun_j_98 = fun expr_b_9 -> (
                    var_j_90 = expr_b_9;
                    m_match_bool_j_92 = var_j_90 ~ any;
                    m_match_bool_j_95 = var_j_90 ~ int;
                    m_match_cond_j_96 = m_match_bool_j_95 ? (
                            bool_j_97 = true
                        ) : (
                            m_match_cond_j_93 = m_match_bool_j_92 ? (
                                    var_j_94 = fail_b_10
                                ) : (
                                    void_j_91 = {}
                                )
                        ));
                flatten_fun_j_100 = fun bj_null_j_4 -> (
                    input_j_99 = input);
                flatten_fun_j_102 = fun expr_b_11 -> (
                    var_j_101 = expr_b_11);
                record_j_103 = {checker = flatten_fun_j_98, generator = flatten_fun_j_100, wrapper = flatten_fun_j_102};
                proj_j_104 = record_j_103.wrapper;
                var_j_105 = appl_j_64;
                var_j_106 = len;
                m_i_226 = var_j_105 ~ fun;
                appl_j_107 = m_i_226 ? (
                        c_appl_i_227 = var_j_105 var_j_106
                    ) : (
                        ab_i_228 = abort
                    );
                xs = appl_j_107;
                var_j_108 = len;
                int_j_109 = 0;
                m_bl_i_229 = var_j_108 ~ int;
                m_br_i_230 = int_j_109 ~ int;
                m_b_i_231 = m_bl_i_229 and m_br_i_230;
                binop_j_110 = m_b_i_231 ? (
                        c_binop_i_232 = var_j_108 == int_j_109
                    ) : (
                        ab_i_233 = abort
                    );
                m_i_234 = binop_j_110 ~ bool;
                notop_j_111 = m_i_234 ? (
                        c_not_i_235 = not binop_j_110
                    ) : (
                        ab_i_236 = abort
                    );
                m_i_237 = notop_j_111 ~ bool;
                if_j_138 = m_i_237 ? (
                        c_cond_i_247 = notop_j_111 ? (
                                bool_j_112 = false;
                                fail_b_12 = bool_j_112;
                                var_j_113 = appl_j_42;
                                var_j_114 = xs;
                                m_i_238 = var_j_113 ~ fun;
                                appl_j_115 = m_i_238 ? (
                                        c_appl_i_239 = var_j_113 var_j_114
                                    ) : (
                                        ab_i_240 = abort
                                    );
                                record_j_116 = {};
                                record_j_117 = {j_empty = record_j_116};
                                m_i_241 = appl_j_115 ~ fun;
                                appl_j_118 = m_i_241 ? (
                                        c_appl_i_242 = appl_j_115 record_j_117
                                    ) : (
                                        ab_i_243 = abort
                                    );
                                m_match_bool_j_120 = appl_j_118 ~ {j_empty, _};
                                m_match_bool_j_127 = appl_j_118 ~ {j_head, j_tail, _};
                                m_match_bool_j_130 = appl_j_118 ~ {bj_untouched, _};
                                m_match_cond_j_131 = m_match_bool_j_130 ? (
                                        var_j_132 = fail_b_12;
                                        assert_pred_j_133 = var_j_132;
                                        assert_res_j_134 = assert_pred_j_133 ? (
                                                assert_res_true_j_135 = 
                                                    {}
                                            ) : (
                                                ab_j_136 = abort
                                            )
                                    ) : (
                                        m_match_cond_j_128 = m_match_bool_j_127 ? (
                                                hd_j_6 = appl_j_118.j_head;
                                                tl_j_5 = appl_j_118.j_tail;
                                                var_j_129 = hd_j_6
                                            ) : (
                                                m_match_cond_j_121 = m_match_bool_j_120 ? (
                                                        bool_j_122 = false;
                                                        assert_pred_j_123 = bool_j_122;
                                                        m_i_244 = assert_pred_j_123 ~ bool;
                                                        assert_res_j_124 = m_i_244 ? (
                                                                c_cond_i_245 = assert_pred_j_123 ? (
                                                                        
                                                                    assert_res_true_j_125 = 
                                                                    {}
                                                                    ) : (
                                                                        
                                                                    ab_j_126 = abort
                                                                    )
                                                            ) : (
                                                                ab_i_246 = abort
                                                            )
                                                    ) : (
                                                        ab_j_119 = abort
                                                    )
                                            )
                                    )
                            ) : (
                                int_j_137 = 0
                            )
                    ) : (
                        ab_i_248 = abort
                    );
                m_i_249 = proj_j_104 ~ fun;
                appl_j_139 = m_i_249 ? (
                        c_appl_i_250 = proj_j_104 if_j_138
                    ) : (
                        ab_i_251 = abort
                    )
            ) : (
                var_j_140 = arg_check_b_1;
                assert_pred_j_141 = var_j_140;
                assert_res_j_142 = assert_pred_j_141 ? (
                        assert_res_true_j_143 = {}
                    ) : (
                        ab_j_144 = abort
                    )
            ));
    var_j_147 = len;
    appl_j_148 = flatten_fun_j_146 var_j_147);
main = main_j_149;
bool_j_150 = false;
fail_b_4 = bool_j_150;
flatten_fun_j_159 = fun expr_b_3 -> (
    var_j_151 = expr_b_3;
    m_match_bool_j_153 = var_j_151 ~ any;
    m_match_bool_j_156 = var_j_151 ~ int;
    m_match_cond_j_157 = m_match_bool_j_156 ? (
            bool_j_158 = true
        ) : (
            m_match_cond_j_154 = m_match_bool_j_153 ? (
                    var_j_155 = fail_b_4
                ) : (
                    void_j_152 = {}
                )
        ));
flatten_fun_j_161 = fun bj_null -> (
    input_j_160 = input);
flatten_fun_j_163 = fun expr_b_5 -> (
    var_j_162 = expr_b_5);
record_j_164 = {checker = flatten_fun_j_159, generator = flatten_fun_j_161, wrapper = flatten_fun_j_163};
proj_j_165 = record_j_164.generator;
int_j_166 = 0;
appl_j_167 = proj_j_165 int_j_166;
len_b_16 = appl_j_167;
bool_j_168 = false;
fail_b_14 = bool_j_168;
flatten_fun_j_177 = fun expr_b_13 -> (
    var_j_169 = expr_b_13;
    m_match_bool_j_171 = var_j_169 ~ any;
    m_match_bool_j_174 = var_j_169 ~ int;
    m_match_cond_j_175 = m_match_bool_j_174 ? (
            bool_j_176 = true
        ) : (
            m_match_cond_j_172 = m_match_bool_j_171 ? (
                    var_j_173 = fail_b_14
                ) : (
                    void_j_170 = {}
                )
        ));
flatten_fun_j_179 = fun bj_null_j_2 -> (
    input_j_178 = input);
flatten_fun_j_181 = fun expr_b_15 -> (
    var_j_180 = expr_b_15);
record_j_182 = {checker = flatten_fun_j_177, generator = flatten_fun_j_179, wrapper = flatten_fun_j_181};
proj_j_183 = record_j_182.checker;
appl_j_186 = main len_b_16;
appl_j_187 = proj_j_183 appl_j_186;
check_res_b_17 = appl_j_187;
if_j_195 = check_res_b_17 ? (
        var_j_189 = main
    ) : (
        error_var_j_190 = check_res_b_17;
        assert_pred_j_191 = error_var_j_190;
        assert_res_j_192 = assert_pred_j_191 ? (
                assert_res_true_j_193 = {}
            ) : (
                ab_j_194 = abort
            )
    );
i_result = if_j_195