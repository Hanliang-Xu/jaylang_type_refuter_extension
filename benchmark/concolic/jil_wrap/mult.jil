i_first = {};
flatten_fun_j_184 = fun mult_j_0 -> (
    flatten_fun_j_183 = fun n -> (
        flatten_fun_j_182 = fun m -> (
            var_j_29 = mult_j_0;
            var_j_30 = mult_j_0;
            appl_j_31 = var_j_29 var_j_30;
            mult = appl_j_31;
            flatten_fun_j_179 = fun n_b_2 -> (
                int_j_32 = 0;
                input_j_33 = input;
                m_bl_i_511 = int_j_32 ~ int;
                m_br_i_512 = input_j_33 ~ int;
                m_b_i_513 = m_bl_i_511 and m_br_i_512;
                binop_j_34 = m_b_i_513 ? (
                        c_binop_i_514 = int_j_32 < input_j_33
                    ) : (
                        ab_i_515 = abort
                    );
                if_j_54 = binop_j_34 ? (
                        bool_j_35 = false;
                        fail_b_13 = bool_j_35;
                        flatten_fun_j_44 = fun expr_b_12 -> (
                            var_j_36 = expr_b_12;
                            m_match_bool_j_38 = var_j_36 ~ any;
                            m_match_bool_j_41 = var_j_36 ~ int;
                            m_match_cond_j_42 = m_match_bool_j_41 ? (
                                    bool_j_43 = true
                                ) : (
                                    m_match_cond_j_39 = m_match_bool_j_38 ? (
                                            var_j_40 = fail_b_13
                                        ) : (
                                            void_j_37 = {}
                                        )
                                ));
                        flatten_fun_j_46 = fun bj_null -> (
                            input_j_45 = input);
                        flatten_fun_j_48 = fun expr_b_14 -> (
                            var_j_47 = expr_b_14);
                        record_j_49 = {checker = flatten_fun_j_44, generator = flatten_fun_j_46, wrapper = flatten_fun_j_48};
                        proj_j_50 = record_j_49.checker;
                        var_j_51 = n_b_2;
                        m_i_516 = proj_j_50 ~ fun;
                        appl_j_52 = m_i_516 ? (
                                c_appl_i_517 = proj_j_50 var_j_51
                            ) : (
                                ab_i_518 = abort
                            )
                    ) : (
                        bool_j_53 = true
                    );
                arg_check_b_3 = if_j_54;
                var_j_55 = arg_check_b_3;
                if_j_178 = var_j_55 ? (
                        flatten_fun_j_170 = fun m_b_0 -> (
                            int_j_56 = 0;
                            input_j_57 = input;
                            m_bl_i_519 = int_j_56 ~ int;
                            m_br_i_520 = input_j_57 ~ int;
                            m_b_i_521 = m_bl_i_519 and m_br_i_520;
                            binop_j_58 = m_b_i_521 ? (
                                    c_binop_i_522 = int_j_56 < input_j_57
                                ) : (
                                    ab_i_523 = abort
                                );
                            if_j_78 = binop_j_58 ? (
                                    bool_j_59 = false;
                                    fail_b_16 = bool_j_59;
                                    flatten_fun_j_68 = fun expr_b_15 -> (
                                        var_j_60 = expr_b_15;
                                        m_match_bool_j_62 = var_j_60 ~ any;
                                        m_match_bool_j_65 = var_j_60 ~ int;
                                        m_match_cond_j_66 = m_match_bool_j_65 ? (
                                                bool_j_67 = true
                                            ) : (
                                                m_match_cond_j_63 = m_match_bool_j_62 ? (
                                                        var_j_64 = fail_b_16
                                                    ) : (
                                                        void_j_61 = {}
                                                    )
                                            ));
                                    flatten_fun_j_70 = fun bj_null_j_1 -> (
                                        input_j_69 = input);
                                    flatten_fun_j_72 = fun expr_b_17 -> (
                                        var_j_71 = expr_b_17);
                                    record_j_73 = {checker = flatten_fun_j_68, generator = flatten_fun_j_70, wrapper = flatten_fun_j_72};
                                    proj_j_74 = record_j_73.checker;
                                    var_j_75 = m_b_0;
                                    m_i_524 = proj_j_74 ~ fun;
                                    appl_j_76 = m_i_524 ? (
                                            c_appl_i_525 = proj_j_74 var_j_75
                                        ) : (
                                            ab_i_526 = abort
                                        )
                                ) : (
                                    bool_j_77 = true
                                );
                            arg_check_b_1 = if_j_78;
                            var_j_79 = arg_check_b_1;
                            if_j_169 = var_j_79 ? (
                                    flatten_fun_j_111 = fun expr_b_25 -> (
                                        bool_j_80 = false;
                                        fail_b_23 = bool_j_80;
                                        flatten_fun_j_89 = fun expr_b_22 -> (
                                            var_j_81 = expr_b_22;
                                            m_match_bool_j_83 = var_j_81 ~ any;
                                            m_match_bool_j_86 = var_j_81 ~ int;
                                            m_match_cond_j_87 = m_match_bool_j_86 ? (
                                                    bool_j_88 = true
                                                ) : (
                                                    m_match_cond_j_84 = m_match_bool_j_83 ? (
                                                            var_j_85 = fail_b_23
                                                        ) : (
                                                            void_j_82 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_91 = fun bj_null_j_2 -> (
                                            input_j_90 = input);
                                        flatten_fun_j_93 = fun expr_b_24 -> (
                                            var_j_92 = expr_b_24);
                                        record_j_94 = {checker = flatten_fun_j_89, generator = flatten_fun_j_91, wrapper = flatten_fun_j_93};
                                        proj_j_95 = record_j_94.checker;
                                        var_j_96 = expr_b_25;
                                        appl_j_97 = proj_j_95 var_j_96;
                                        t_check_b_26 = appl_j_97;
                                        var_j_98 = t_check_b_26;
                                        if_j_110 = var_j_98 ? (
                                                bool_j_99 = false;
                                                pred_check_b_27 = bool_j_99;
                                                flatten_fun_j_103 = fun i -> (
                                                    int_j_100 = 0;
                                                    var_j_101 = i;
                                                    m_bl_i_527 = int_j_100 ~ int;
                                                    m_br_i_528 = var_j_101 ~ int;
                                                    m_b_i_529 = m_bl_i_527 and m_br_i_528;
                                                    binop_j_102 = m_b_i_529 ? (
                                                            c_binop_i_530 = int_j_100 <= var_j_101
                                                        ) : (
                                                            ab_i_531 = abort
                                                        ));
                                                var_j_104 = expr_b_25;
                                                appl_j_105 = flatten_fun_j_103 var_j_104;
                                                if_j_108 = appl_j_105 ? (
                                                        bool_j_106 = true
                                                    ) : (
                                                        var_j_107 = pred_check_b_27
                                                    )
                                            ) : (
                                                var_j_109 = t_check_b_26
                                            ));
                                    flatten_fun_j_140 = fun bj_null_j_5 -> (
                                        bool_j_112 = false;
                                        fail_b_19 = bool_j_112;
                                        flatten_fun_j_121 = fun expr_b_18 -> (
                                            var_j_113 = expr_b_18;
                                            m_match_bool_j_115 = var_j_113 ~ any;
                                            m_match_bool_j_118 = var_j_113 ~ int;
                                            m_match_cond_j_119 = m_match_bool_j_118 ? (
                                                    bool_j_120 = true
                                                ) : (
                                                    m_match_cond_j_116 = m_match_bool_j_115 ? (
                                                            var_j_117 = fail_b_19
                                                        ) : (
                                                            void_j_114 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_123 = fun bj_null_j_3 -> (
                                            input_j_122 = input);
                                        flatten_fun_j_125 = fun expr_b_20 -> (
                                            var_j_124 = expr_b_20);
                                        record_j_126 = {checker = flatten_fun_j_121, generator = flatten_fun_j_123, wrapper = flatten_fun_j_125};
                                        proj_j_127 = record_j_126.generator;
                                        int_j_128 = 0;
                                        appl_j_129 = proj_j_127 int_j_128;
                                        candidate_b_21 = appl_j_129;
                                        flatten_fun_j_133 = fun i_j_4 -> (
                                            int_j_130 = 0;
                                            var_j_131 = i_j_4;
                                            m_bl_i_532 = int_j_130 ~ int;
                                            m_br_i_533 = var_j_131 ~ int;
                                            m_b_i_534 = m_bl_i_532 and m_br_i_533;
                                            binop_j_132 = m_b_i_534 ? (
                                                    c_binop_i_535 = int_j_130 <= var_j_131
                                                ) : (
                                                    ab_i_536 = abort
                                                ));
                                        var_j_134 = candidate_b_21;
                                        appl_j_135 = flatten_fun_j_133 var_j_134;
                                        if_j_139 = appl_j_135 ? (
                                                var_j_136 = candidate_b_21
                                            ) : (
                                                bool_j_137 = false;
                                                assume_j_138 = assume bool_j_137
                                            ));
                                    flatten_fun_j_142 = fun expr_b_28 -> (
                                        var_j_141 = expr_b_28);
                                    record_j_143 = {checker = flatten_fun_j_111, generator = flatten_fun_j_140, wrapper = flatten_fun_j_142};
                                    proj_j_144 = record_j_143.wrapper;
                                    var_j_145 = n;
                                    int_j_146 = 0;
                                    m_bl_i_537 = var_j_145 ~ int;
                                    m_br_i_538 = int_j_146 ~ int;
                                    m_b_i_539 = m_bl_i_537 and m_br_i_538;
                                    binop_j_147 = m_b_i_539 ? (
                                            c_binop_i_540 = var_j_145 <= int_j_146
                                        ) : (
                                            ab_i_541 = abort
                                        );
                                    var_j_148 = m;
                                    int_j_149 = 0;
                                    m_bl_i_542 = var_j_148 ~ int;
                                    m_br_i_543 = int_j_149 ~ int;
                                    m_b_i_544 = m_bl_i_542 and m_br_i_543;
                                    binop_j_150 = m_b_i_544 ? (
                                            c_binop_i_545 = var_j_148 <= int_j_149
                                        ) : (
                                            ab_i_546 = abort
                                        );
                                    m_bl_i_547 = binop_j_147 ~ bool;
                                    m_br_i_548 = binop_j_150 ~ bool;
                                    m_b_i_549 = m_bl_i_547 and m_br_i_548;
                                    binop_j_151 = m_b_i_549 ? (
                                            c_binop_i_550 = binop_j_147 or binop_j_150
                                        ) : (
                                            ab_i_551 = abort
                                        );
                                    m_i_552 = binop_j_151 ~ bool;
                                    if_j_162 = m_i_552 ? (
                                            c_cond_i_569 = binop_j_151 ? (
                                                    int_j_152 = 0
                                                ) : (
                                                    var_j_153 = n;
                                                    var_j_154 = mult;
                                                    var_j_155 = n;
                                                    m_i_553 = var_j_154 ~ fun;
                                                    appl_j_156 = m_i_553 ? (
                                                            c_appl_i_554 = var_j_154 var_j_155
                                                        ) : (
                                                            ab_i_555 = abort
                                                        );
                                                    var_j_157 = m;
                                                    int_j_158 = 1;
                                                    m_bl_i_556 = var_j_157 ~ int;
                                                    m_br_i_557 = int_j_158 ~ int;
                                                    m_b_i_558 = m_bl_i_556 and m_br_i_557;
                                                    binop_j_159 = m_b_i_558 ? (
                                                            c_binop_i_559 = var_j_157 - int_j_158
                                                        ) : (
                                                            ab_i_560 = abort
                                                        );
                                                    m_i_561 = appl_j_156 ~ fun;
                                                    appl_j_160 = m_i_561 ? (
                                                            c_appl_i_562 = appl_j_156 binop_j_159
                                                        ) : (
                                                            ab_i_563 = abort
                                                        );
                                                    m_bl_i_564 = var_j_153 ~ int;
                                                    m_br_i_565 = appl_j_160 ~ int;
                                                    m_b_i_566 = m_bl_i_564 and m_br_i_565;
                                                    binop_j_161 = m_b_i_566 ? (
                                                            c_binop_i_567 = var_j_153 + appl_j_160
                                                        ) : (
                                                            ab_i_568 = abort
                                                        )
                                                )
                                        ) : (
                                            ab_i_570 = abort
                                        );
                                    m_i_571 = proj_j_144 ~ fun;
                                    appl_j_163 = m_i_571 ? (
                                            c_appl_i_572 = proj_j_144 if_j_162
                                        ) : (
                                            ab_i_573 = abort
                                        )
                                ) : (
                                    var_j_164 = arg_check_b_1;
                                    assert_pred_j_165 = var_j_164;
                                    assert_res_j_166 = assert_pred_j_165 ? (
                                            assert_res_true_j_167 = {}
                                        ) : (
                                            ab_j_168 = abort
                                        )
                                ));
                        var_j_171 = m;
                        appl_j_172 = flatten_fun_j_170 var_j_171
                    ) : (
                        var_j_173 = arg_check_b_3;
                        assert_pred_j_174 = var_j_173;
                        assert_res_j_175 = assert_pred_j_174 ? (
                                assert_res_true_j_176 = {}
                            ) : (
                                ab_j_177 = abort
                            )
                    ));
            var_j_180 = n;
            appl_j_181 = flatten_fun_j_179 var_j_180)));
appl_j_187 = flatten_fun_j_184 flatten_fun_j_184;
bool_j_188 = false;
fail_b_7 = bool_j_188;
flatten_fun_j_197 = fun expr_b_6 -> (
    var_j_189 = expr_b_6;
    m_match_bool_j_191 = var_j_189 ~ any;
    m_match_bool_j_194 = var_j_189 ~ int;
    m_match_cond_j_195 = m_match_bool_j_194 ? (
            bool_j_196 = true
        ) : (
            m_match_cond_j_192 = m_match_bool_j_191 ? (
                    var_j_193 = fail_b_7
                ) : (
                    void_j_190 = {}
                )
        ));
flatten_fun_j_199 = fun bj_null_j_6 -> (
    input_j_198 = input);
flatten_fun_j_201 = fun expr_b_8 -> (
    var_j_200 = expr_b_8);
record_j_202 = {checker = flatten_fun_j_197, generator = flatten_fun_j_199, wrapper = flatten_fun_j_201};
proj_j_203 = record_j_202.generator;
int_j_204 = 0;
appl_j_205 = proj_j_203 int_j_204;
n_b_72 = appl_j_205;
bool_j_206 = false;
fail_b_10 = bool_j_206;
flatten_fun_j_215 = fun expr_b_9 -> (
    var_j_207 = expr_b_9;
    m_match_bool_j_209 = var_j_207 ~ any;
    m_match_bool_j_212 = var_j_207 ~ int;
    m_match_cond_j_213 = m_match_bool_j_212 ? (
            bool_j_214 = true
        ) : (
            m_match_cond_j_210 = m_match_bool_j_209 ? (
                    var_j_211 = fail_b_10
                ) : (
                    void_j_208 = {}
                )
        ));
flatten_fun_j_217 = fun bj_null_j_7 -> (
    input_j_216 = input);
flatten_fun_j_219 = fun expr_b_11 -> (
    var_j_218 = expr_b_11);
record_j_220 = {checker = flatten_fun_j_215, generator = flatten_fun_j_217, wrapper = flatten_fun_j_219};
proj_j_221 = record_j_220.generator;
int_j_222 = 0;
appl_j_223 = proj_j_221 int_j_222;
m_b_71 = appl_j_223;
flatten_fun_j_255 = fun expr_b_36 -> (
    bool_j_224 = false;
    fail_b_34 = bool_j_224;
    flatten_fun_j_233 = fun expr_b_33 -> (
        var_j_225 = expr_b_33;
        m_match_bool_j_227 = var_j_225 ~ any;
        m_match_bool_j_230 = var_j_225 ~ int;
        m_match_cond_j_231 = m_match_bool_j_230 ? (
                bool_j_232 = true
            ) : (
                m_match_cond_j_228 = m_match_bool_j_227 ? (
                        var_j_229 = fail_b_34
                    ) : (
                        void_j_226 = {}
                    )
            ));
    flatten_fun_j_235 = fun bj_null_j_8 -> (
        input_j_234 = input);
    flatten_fun_j_237 = fun expr_b_35 -> (
        var_j_236 = expr_b_35);
    record_j_238 = {checker = flatten_fun_j_233, generator = flatten_fun_j_235, wrapper = flatten_fun_j_237};
    proj_j_239 = record_j_238.checker;
    var_j_240 = expr_b_36;
    appl_j_241 = proj_j_239 var_j_240;
    t_check_b_37 = appl_j_241;
    var_j_242 = t_check_b_37;
    if_j_254 = var_j_242 ? (
            bool_j_243 = false;
            pred_check_b_38 = bool_j_243;
            flatten_fun_j_247 = fun i_j_9 -> (
                int_j_244 = 0;
                var_j_245 = i_j_9;
                m_bl_i_574 = int_j_244 ~ int;
                m_br_i_575 = var_j_245 ~ int;
                m_b_i_576 = m_bl_i_574 and m_br_i_575;
                binop_j_246 = m_b_i_576 ? (
                        c_binop_i_577 = int_j_244 <= var_j_245
                    ) : (
                        ab_i_578 = abort
                    ));
            var_j_248 = expr_b_36;
            appl_j_249 = flatten_fun_j_247 var_j_248;
            if_j_252 = appl_j_249 ? (
                    bool_j_250 = true
                ) : (
                    var_j_251 = pred_check_b_38
                )
        ) : (
            var_j_253 = t_check_b_37
        ));
flatten_fun_j_284 = fun bj_null_j_12 -> (
    bool_j_256 = false;
    fail_b_30 = bool_j_256;
    flatten_fun_j_265 = fun expr_b_29 -> (
        var_j_257 = expr_b_29;
        m_match_bool_j_259 = var_j_257 ~ any;
        m_match_bool_j_262 = var_j_257 ~ int;
        m_match_cond_j_263 = m_match_bool_j_262 ? (
                bool_j_264 = true
            ) : (
                m_match_cond_j_260 = m_match_bool_j_259 ? (
                        var_j_261 = fail_b_30
                    ) : (
                        void_j_258 = {}
                    )
            ));
    flatten_fun_j_267 = fun bj_null_j_10 -> (
        input_j_266 = input);
    flatten_fun_j_269 = fun expr_b_31 -> (
        var_j_268 = expr_b_31);
    record_j_270 = {checker = flatten_fun_j_265, generator = flatten_fun_j_267, wrapper = flatten_fun_j_269};
    proj_j_271 = record_j_270.generator;
    int_j_272 = 0;
    appl_j_273 = proj_j_271 int_j_272;
    candidate_b_32 = appl_j_273;
    flatten_fun_j_277 = fun i_j_11 -> (
        int_j_274 = 0;
        var_j_275 = i_j_11;
        m_bl_i_579 = int_j_274 ~ int;
        m_br_i_580 = var_j_275 ~ int;
        m_b_i_581 = m_bl_i_579 and m_br_i_580;
        binop_j_276 = m_b_i_581 ? (
                c_binop_i_582 = int_j_274 <= var_j_275
            ) : (
                ab_i_583 = abort
            ));
    var_j_278 = candidate_b_32;
    appl_j_279 = flatten_fun_j_277 var_j_278;
    if_j_283 = appl_j_279 ? (
            var_j_280 = candidate_b_32
        ) : (
            bool_j_281 = false;
            assume_j_282 = assume bool_j_281
        ));
flatten_fun_j_286 = fun expr_b_39 -> (
    var_j_285 = expr_b_39);
record_j_287 = {checker = flatten_fun_j_255, generator = flatten_fun_j_284, wrapper = flatten_fun_j_286};
proj_j_288 = record_j_287.checker;
appl_j_291 = appl_j_187 n_b_72;
appl_j_293 = appl_j_291 m_b_71;
appl_j_294 = proj_j_288 appl_j_293;
check_res_b_70 = appl_j_294;
if_j_510 = check_res_b_70 ? (
        sqr_j_402 = fun n_j_26 -> (
            flatten_fun_j_399 = fun n_b_4 -> (
                bool_j_296 = false;
                fail_b_44 = bool_j_296;
                flatten_fun_j_305 = fun expr_b_43 -> (
                    var_j_297 = expr_b_43;
                    m_match_bool_j_299 = var_j_297 ~ any;
                    m_match_bool_j_302 = var_j_297 ~ int;
                    m_match_cond_j_303 = m_match_bool_j_302 ? (
                            bool_j_304 = true
                        ) : (
                            m_match_cond_j_300 = m_match_bool_j_299 ? (
                                    var_j_301 = fail_b_44
                                ) : (
                                    void_j_298 = {}
                                )
                        ));
                flatten_fun_j_307 = fun bj_null_j_19 -> (
                    input_j_306 = input);
                flatten_fun_j_309 = fun expr_b_45 -> (
                    var_j_308 = expr_b_45);
                record_j_310 = {checker = flatten_fun_j_305, generator = flatten_fun_j_307, wrapper = flatten_fun_j_309};
                proj_j_311 = record_j_310.checker;
                var_j_312 = n_b_4;
                appl_j_313 = proj_j_311 var_j_312;
                arg_check_b_5 = appl_j_313;
                var_j_314 = arg_check_b_5;
                if_j_398 = var_j_314 ? (
                        flatten_fun_j_383 = fun n_j_25 -> (
                            flatten_fun_j_348 = fun expr_b_53 -> (
                                bool_j_315 = false;
                                fail_b_51 = bool_j_315;
                                flatten_fun_j_324 = fun expr_b_50 -> (
                                    var_j_316 = expr_b_50;
                                    m_match_bool_j_318 = var_j_316 ~ any;
                                    m_match_bool_j_321 = var_j_316 ~ int;
                                    m_match_cond_j_322 = m_match_bool_j_321 ? (
                                            bool_j_323 = true
                                        ) : (
                                            m_match_cond_j_319 = m_match_bool_j_318 ? (
                                                    var_j_320 = fail_b_51
                                                ) : (
                                                    void_j_317 = {}
                                                )
                                        ));
                                flatten_fun_j_326 = fun bj_null_j_20 -> (
                                    input_j_325 = input);
                                flatten_fun_j_328 = fun expr_b_52 -> (
                                    var_j_327 = expr_b_52);
                                record_j_329 = {checker = flatten_fun_j_324, generator = flatten_fun_j_326, wrapper = flatten_fun_j_328};
                                proj_j_330 = record_j_329.checker;
                                var_j_331 = expr_b_53;
                                appl_j_332 = proj_j_330 var_j_331;
                                t_check_b_54 = appl_j_332;
                                var_j_333 = t_check_b_54;
                                if_j_347 = var_j_333 ? (
                                        bool_j_334 = false;
                                        pred_check_b_55 = bool_j_334;
                                        flatten_fun_j_340 = fun c_j_21 -> (
                                            var_j_335 = n_j_25;
                                            int_j_336 = 1;
                                            m_bl_i_584 = var_j_335 ~ int;
                                            m_br_i_585 = int_j_336 ~ int;
                                            m_b_i_586 = m_bl_i_584 and m_br_i_585;
                                            binop_j_337 = m_b_i_586 ? (
                                                    c_binop_i_587 = var_j_335 + int_j_336
                                                ) : (
                                                    ab_i_588 = abort
                                                );
                                            var_j_338 = c_j_21;
                                            m_bl_i_589 = binop_j_337 ~ int;
                                            m_br_i_590 = var_j_338 ~ int;
                                            m_b_i_591 = m_bl_i_589 and m_br_i_590;
                                            binop_j_339 = m_b_i_591 ? (
                                                    c_binop_i_592 = binop_j_337 <= var_j_338
                                                ) : (
                                                    ab_i_593 = abort
                                                ));
                                        var_j_341 = expr_b_53;
                                        appl_j_342 = flatten_fun_j_340 var_j_341;
                                        if_j_345 = appl_j_342 ? (
                                                bool_j_343 = true
                                            ) : (
                                                var_j_344 = pred_check_b_55
                                            )
                                    ) : (
                                        var_j_346 = t_check_b_54
                                    ));
                            flatten_fun_j_379 = fun bj_null_j_24 -> (
                                bool_j_349 = false;
                                fail_b_47 = bool_j_349;
                                flatten_fun_j_358 = fun expr_b_46 -> (
                                    var_j_350 = expr_b_46;
                                    m_match_bool_j_352 = var_j_350 ~ any;
                                    m_match_bool_j_355 = var_j_350 ~ int;
                                    m_match_cond_j_356 = m_match_bool_j_355 ? (
                                            bool_j_357 = true
                                        ) : (
                                            m_match_cond_j_353 = m_match_bool_j_352 ? (
                                                    var_j_354 = fail_b_47
                                                ) : (
                                                    void_j_351 = {}
                                                )
                                        ));
                                flatten_fun_j_360 = fun bj_null_j_22 -> (
                                    input_j_359 = input);
                                flatten_fun_j_362 = fun expr_b_48 -> (
                                    var_j_361 = expr_b_48);
                                record_j_363 = {checker = flatten_fun_j_358, generator = flatten_fun_j_360, wrapper = flatten_fun_j_362};
                                proj_j_364 = record_j_363.generator;
                                int_j_365 = 0;
                                appl_j_366 = proj_j_364 int_j_365;
                                candidate_b_49 = appl_j_366;
                                flatten_fun_j_372 = fun c_j_23 -> (
                                    var_j_367 = n_j_25;
                                    int_j_368 = 1;
                                    m_bl_i_594 = var_j_367 ~ int;
                                    m_br_i_595 = int_j_368 ~ int;
                                    m_b_i_596 = m_bl_i_594 and m_br_i_595;
                                    binop_j_369 = m_b_i_596 ? (
                                            c_binop_i_597 = var_j_367 + int_j_368
                                        ) : (
                                            ab_i_598 = abort
                                        );
                                    var_j_370 = c_j_23;
                                    m_bl_i_599 = binop_j_369 ~ int;
                                    m_br_i_600 = var_j_370 ~ int;
                                    m_b_i_601 = m_bl_i_599 and m_br_i_600;
                                    binop_j_371 = m_b_i_601 ? (
                                            c_binop_i_602 = binop_j_369 <= var_j_370
                                        ) : (
                                            ab_i_603 = abort
                                        ));
                                var_j_373 = candidate_b_49;
                                appl_j_374 = flatten_fun_j_372 var_j_373;
                                if_j_378 = appl_j_374 ? (
                                        var_j_375 = candidate_b_49
                                    ) : (
                                        bool_j_376 = false;
                                        assume_j_377 = assume bool_j_376
                                    ));
                            flatten_fun_j_381 = fun expr_b_56 -> (
                                var_j_380 = expr_b_56);
                            record_j_382 = {checker = flatten_fun_j_348, generator = flatten_fun_j_379, wrapper = flatten_fun_j_381});
                        var_j_384 = n_b_4;
                        appl_j_385 = flatten_fun_j_383 var_j_384;
                        proj_j_386 = appl_j_385.wrapper;
                        var_j_387 = appl_j_187;
                        var_j_388 = n_j_26;
                        m_i_604 = var_j_387 ~ fun;
                        appl_j_389 = m_i_604 ? (
                                c_appl_i_605 = var_j_387 var_j_388
                            ) : (
                                ab_i_606 = abort
                            );
                        var_j_390 = n_j_26;
                        m_i_607 = appl_j_389 ~ fun;
                        appl_j_391 = m_i_607 ? (
                                c_appl_i_608 = appl_j_389 var_j_390
                            ) : (
                                ab_i_609 = abort
                            );
                        m_i_610 = proj_j_386 ~ fun;
                        appl_j_392 = m_i_610 ? (
                                c_appl_i_611 = proj_j_386 appl_j_391
                            ) : (
                                ab_i_612 = abort
                            )
                    ) : (
                        bool_j_393 = false;
                        assert_pred_j_394 = bool_j_393;
                        assert_res_j_395 = assert_pred_j_394 ? (
                                assert_res_true_j_396 = {}
                            ) : (
                                ab_j_397 = abort
                            )
                    ));
            var_j_400 = n_j_26;
            appl_j_401 = flatten_fun_j_399 var_j_400);
        sqr = sqr_j_402;
        bool_j_403 = false;
        fail_b_41 = bool_j_403;
        flatten_fun_j_412 = fun expr_b_40 -> (
            var_j_404 = expr_b_40;
            m_match_bool_j_406 = var_j_404 ~ any;
            m_match_bool_j_409 = var_j_404 ~ int;
            m_match_cond_j_410 = m_match_bool_j_409 ? (
                    bool_j_411 = true
                ) : (
                    m_match_cond_j_407 = m_match_bool_j_406 ? (
                            var_j_408 = fail_b_41
                        ) : (
                            void_j_405 = {}
                        )
                ));
        flatten_fun_j_414 = fun bj_null_j_13 -> (
            input_j_413 = input);
        flatten_fun_j_416 = fun expr_b_42 -> (
            var_j_415 = expr_b_42);
        record_j_417 = {checker = flatten_fun_j_412, generator = flatten_fun_j_414, wrapper = flatten_fun_j_416};
        proj_j_418 = record_j_417.generator;
        int_j_419 = 0;
        appl_j_420 = proj_j_418 int_j_419;
        n_b_68 = appl_j_420;
        flatten_fun_j_490 = fun n_j_18 -> (
            flatten_fun_j_454 = fun expr_b_64 -> (
                bool_j_421 = false;
                fail_b_62 = bool_j_421;
                flatten_fun_j_430 = fun expr_b_61 -> (
                    var_j_422 = expr_b_61;
                    m_match_bool_j_424 = var_j_422 ~ any;
                    m_match_bool_j_427 = var_j_422 ~ int;
                    m_match_cond_j_428 = m_match_bool_j_427 ? (
                            bool_j_429 = true
                        ) : (
                            m_match_cond_j_425 = m_match_bool_j_424 ? (
                                    var_j_426 = fail_b_62
                                ) : (
                                    void_j_423 = {}
                                )
                        ));
                flatten_fun_j_432 = fun bj_null_j_14 -> (
                    input_j_431 = input);
                flatten_fun_j_434 = fun expr_b_63 -> (
                    var_j_433 = expr_b_63);
                record_j_435 = {checker = flatten_fun_j_430, generator = flatten_fun_j_432, wrapper = flatten_fun_j_434};
                proj_j_436 = record_j_435.checker;
                var_j_437 = expr_b_64;
                appl_j_438 = proj_j_436 var_j_437;
                t_check_b_65 = appl_j_438;
                var_j_439 = t_check_b_65;
                if_j_453 = var_j_439 ? (
                        bool_j_440 = false;
                        pred_check_b_66 = bool_j_440;
                        flatten_fun_j_446 = fun c -> (
                            var_j_441 = n_j_18;
                            int_j_442 = 1;
                            m_bl_i_613 = var_j_441 ~ int;
                            m_br_i_614 = int_j_442 ~ int;
                            m_b_i_615 = m_bl_i_613 and m_br_i_614;
                            binop_j_443 = m_b_i_615 ? (
                                    c_binop_i_616 = var_j_441 + int_j_442
                                ) : (
                                    ab_i_617 = abort
                                );
                            var_j_444 = c;
                            m_bl_i_618 = binop_j_443 ~ int;
                            m_br_i_619 = var_j_444 ~ int;
                            m_b_i_620 = m_bl_i_618 and m_br_i_619;
                            binop_j_445 = m_b_i_620 ? (
                                    c_binop_i_621 = binop_j_443 <= var_j_444
                                ) : (
                                    ab_i_622 = abort
                                ));
                        var_j_447 = expr_b_64;
                        appl_j_448 = flatten_fun_j_446 var_j_447;
                        if_j_451 = appl_j_448 ? (
                                bool_j_449 = true
                            ) : (
                                var_j_450 = pred_check_b_66
                            )
                    ) : (
                        var_j_452 = t_check_b_65
                    ));
            flatten_fun_j_485 = fun bj_null_j_17 -> (
                bool_j_455 = false;
                fail_b_58 = bool_j_455;
                flatten_fun_j_464 = fun expr_b_57 -> (
                    var_j_456 = expr_b_57;
                    m_match_bool_j_458 = var_j_456 ~ any;
                    m_match_bool_j_461 = var_j_456 ~ int;
                    m_match_cond_j_462 = m_match_bool_j_461 ? (
                            bool_j_463 = true
                        ) : (
                            m_match_cond_j_459 = m_match_bool_j_458 ? (
                                    var_j_460 = fail_b_58
                                ) : (
                                    void_j_457 = {}
                                )
                        ));
                flatten_fun_j_466 = fun bj_null_j_15 -> (
                    input_j_465 = input);
                flatten_fun_j_468 = fun expr_b_59 -> (
                    var_j_467 = expr_b_59);
                record_j_469 = {checker = flatten_fun_j_464, generator = flatten_fun_j_466, wrapper = flatten_fun_j_468};
                proj_j_470 = record_j_469.generator;
                int_j_471 = 0;
                appl_j_472 = proj_j_470 int_j_471;
                candidate_b_60 = appl_j_472;
                flatten_fun_j_478 = fun c_j_16 -> (
                    var_j_473 = n_j_18;
                    int_j_474 = 1;
                    m_bl_i_623 = var_j_473 ~ int;
                    m_br_i_624 = int_j_474 ~ int;
                    m_b_i_625 = m_bl_i_623 and m_br_i_624;
                    binop_j_475 = m_b_i_625 ? (
                            c_binop_i_626 = var_j_473 + int_j_474
                        ) : (
                            ab_i_627 = abort
                        );
                    var_j_476 = c_j_16;
                    m_bl_i_628 = binop_j_475 ~ int;
                    m_br_i_629 = var_j_476 ~ int;
                    m_b_i_630 = m_bl_i_628 and m_br_i_629;
                    binop_j_477 = m_b_i_630 ? (
                            c_binop_i_631 = binop_j_475 <= var_j_476
                        ) : (
                            ab_i_632 = abort
                        ));
                var_j_479 = candidate_b_60;
                appl_j_480 = flatten_fun_j_478 var_j_479;
                if_j_484 = appl_j_480 ? (
                        var_j_481 = candidate_b_60
                    ) : (
                        bool_j_482 = false;
                        assume_j_483 = assume bool_j_482
                    ));
            flatten_fun_j_487 = fun expr_b_67 -> (
                var_j_486 = expr_b_67);
            record_j_488 = {checker = flatten_fun_j_454, generator = flatten_fun_j_485, wrapper = flatten_fun_j_487};
            proj_j_489 = record_j_488.checker);
        var_j_491 = n_b_68;
        appl_j_492 = flatten_fun_j_490 var_j_491;
        var_j_493 = sqr;
        var_j_494 = n_b_68;
        appl_j_495 = var_j_493 var_j_494;
        appl_j_496 = appl_j_492 appl_j_495;
        check_res_b_69 = appl_j_496;
        var_j_497 = check_res_b_69;
        if_j_504 = var_j_497 ? (
                var_j_498 = sqr
            ) : (
                error_var_j_499 = check_res_b_69;
                assert_pred_j_500 = error_var_j_499;
                assert_res_j_501 = assert_pred_j_500 ? (
                        assert_res_true_j_502 = {}
                    ) : (
                        ab_j_503 = abort
                    )
            )
    ) : (
        error_var_j_505 = check_res_b_70;
        assert_pred_j_506 = error_var_j_505;
        assert_res_j_507 = assert_pred_j_506 ? (
                assert_res_true_j_508 = {}
            ) : (
                ab_j_509 = abort
            )
    );
i_result = if_j_510