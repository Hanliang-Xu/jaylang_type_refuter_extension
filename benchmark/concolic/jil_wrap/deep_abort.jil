i_first = {};
is_10000_j_19 = fun x_j_15 -> (
    var_j_16 = x_j_15;
    int_j_17 = 10000;
    m_bl_i_323 = var_j_16 ~ int;
    m_br_i_324 = int_j_17 ~ int;
    m_b_i_325 = m_bl_i_323 and m_br_i_324;
    binop_j_18 = m_b_i_325 ? (
            c_binop_i_326 = var_j_16 == int_j_17
        ) : (
            ab_i_327 = abort
        ));
is_10000 = is_10000_j_19;
f_j_231 = fun x_j_14 -> (
    flatten_fun_j_228 = fun x_b_2 -> (
        int_j_20 = 0;
        input_j_21 = input;
        m_bl_i_328 = int_j_20 ~ int;
        m_br_i_329 = input_j_21 ~ int;
        m_b_i_330 = m_bl_i_328 and m_br_i_329;
        binop_j_22 = m_b_i_330 ? (
                c_binop_i_331 = int_j_20 < input_j_21
            ) : (
                ab_i_332 = abort
            );
        if_j_85 = binop_j_22 ? (
                flatten_fun_j_51 = fun expr_b_22 -> (
                    bool_j_23 = false;
                    fail_b_20 = bool_j_23;
                    flatten_fun_j_32 = fun expr_b_19 -> (
                        var_j_24 = expr_b_19;
                        m_match_bool_j_26 = var_j_24 ~ any;
                        m_match_bool_j_29 = var_j_24 ~ int;
                        m_match_cond_j_30 = m_match_bool_j_29 ? (
                                bool_j_31 = true
                            ) : (
                                m_match_cond_j_27 = m_match_bool_j_26 ? (
                                        var_j_28 = fail_b_20
                                    ) : (
                                        void_j_25 = {}
                                    )
                            ));
                    flatten_fun_j_34 = fun bj_null_j_4 -> (
                        input_j_33 = input);
                    flatten_fun_j_36 = fun expr_b_21 -> (
                        var_j_35 = expr_b_21);
                    record_j_37 = {checker = flatten_fun_j_32, generator = flatten_fun_j_34, wrapper = flatten_fun_j_36};
                    proj_j_38 = record_j_37.checker;
                    var_j_39 = expr_b_22;
                    appl_j_40 = proj_j_38 var_j_39;
                    t_check_b_23 = appl_j_40;
                    var_j_41 = t_check_b_23;
                    if_j_50 = var_j_41 ? (
                            bool_j_42 = false;
                            pred_check_b_24 = bool_j_42;
                            var_j_43 = is_10000;
                            var_j_44 = expr_b_22;
                            appl_j_45 = var_j_43 var_j_44;
                            if_j_48 = appl_j_45 ? (
                                    bool_j_46 = true
                                ) : (
                                    var_j_47 = pred_check_b_24
                                )
                        ) : (
                            var_j_49 = t_check_b_23
                        ));
                flatten_fun_j_77 = fun bj_null_j_6 -> (
                    bool_j_52 = false;
                    fail_b_16 = bool_j_52;
                    flatten_fun_j_61 = fun expr_b_15 -> (
                        var_j_53 = expr_b_15;
                        m_match_bool_j_55 = var_j_53 ~ any;
                        m_match_bool_j_58 = var_j_53 ~ int;
                        m_match_cond_j_59 = m_match_bool_j_58 ? (
                                bool_j_60 = true
                            ) : (
                                m_match_cond_j_56 = m_match_bool_j_55 ? (
                                        var_j_57 = fail_b_16
                                    ) : (
                                        void_j_54 = {}
                                    )
                            ));
                    flatten_fun_j_63 = fun bj_null_j_5 -> (
                        input_j_62 = input);
                    flatten_fun_j_65 = fun expr_b_17 -> (
                        var_j_64 = expr_b_17);
                    record_j_66 = {checker = flatten_fun_j_61, generator = flatten_fun_j_63, wrapper = flatten_fun_j_65};
                    proj_j_67 = record_j_66.generator;
                    int_j_68 = 0;
                    appl_j_69 = proj_j_67 int_j_68;
                    candidate_b_18 = appl_j_69;
                    var_j_70 = is_10000;
                    var_j_71 = candidate_b_18;
                    appl_j_72 = var_j_70 var_j_71;
                    if_j_76 = appl_j_72 ? (
                            var_j_73 = candidate_b_18
                        ) : (
                            bool_j_74 = false;
                            assume_j_75 = assume bool_j_74
                        ));
                flatten_fun_j_79 = fun expr_b_25 -> (
                    var_j_78 = expr_b_25);
                record_j_80 = {checker = flatten_fun_j_51, generator = flatten_fun_j_77, wrapper = flatten_fun_j_79};
                proj_j_81 = record_j_80.checker;
                var_j_82 = x_b_2;
                m_i_333 = proj_j_81 ~ fun;
                appl_j_83 = m_i_333 ? (
                        c_appl_i_334 = proj_j_81 var_j_82
                    ) : (
                        ab_i_335 = abort
                    )
            ) : (
                bool_j_84 = true
            );
        arg_check_b_3 = if_j_85;
        var_j_86 = arg_check_b_3;
        if_j_227 = var_j_86 ? (
                bool_j_87 = false;
                fail_b_27 = bool_j_87;
                flatten_fun_j_96 = fun expr_b_26 -> (
                    var_j_88 = expr_b_26;
                    m_match_bool_j_90 = var_j_88 ~ any;
                    m_match_bool_j_93 = var_j_88 ~ bool;
                    m_match_cond_j_94 = m_match_bool_j_93 ? (
                            bool_j_95 = true
                        ) : (
                            m_match_cond_j_91 = m_match_bool_j_90 ? (
                                    var_j_92 = fail_b_27
                                ) : (
                                    void_j_89 = {}
                                )
                        ));
                flatten_fun_j_100 = fun bj_null_j_7 -> (
                    int_j_97 = 0;
                    input_j_98 = input;
                    m_bl_i_336 = int_j_97 ~ int;
                    m_br_i_337 = input_j_98 ~ int;
                    m_b_i_338 = m_bl_i_336 and m_br_i_337;
                    binop_j_99 = m_b_i_338 ? (
                            c_binop_i_339 = int_j_97 <= input_j_98
                        ) : (
                            ab_i_340 = abort
                        ));
                flatten_fun_j_102 = fun expr_b_28 -> (
                    var_j_101 = expr_b_28);
                record_j_103 = {checker = flatten_fun_j_96, generator = flatten_fun_j_100, wrapper = flatten_fun_j_102};
                proj_j_104 = record_j_103.wrapper;
                flatten_fun_j_169 = fun g_j_0 -> (
                    flatten_fun_j_168 = fun x -> (
                        var_j_105 = g_j_0;
                        var_j_106 = g_j_0;
                        appl_j_107 = var_j_105 var_j_106;
                        g = appl_j_107;
                        flatten_fun_j_165 = fun x_b_0 -> (
                            int_j_108 = 0;
                            input_j_109 = input;
                            m_bl_i_341 = int_j_108 ~ int;
                            m_br_i_342 = input_j_109 ~ int;
                            m_b_i_343 = m_bl_i_341 and m_br_i_342;
                            binop_j_110 = m_b_i_343 ? (
                                    c_binop_i_344 = int_j_108 < input_j_109
                                ) : (
                                    ab_i_345 = abort
                                );
                            if_j_130 = binop_j_110 ? (
                                    bool_j_111 = false;
                                    fail_b_33 = bool_j_111;
                                    flatten_fun_j_120 = fun expr_b_32 -> (
                                        var_j_112 = expr_b_32;
                                        m_match_bool_j_114 = var_j_112 ~ any;
                                        m_match_bool_j_117 = var_j_112 ~ int;
                                        m_match_cond_j_118 = m_match_bool_j_117 ? (
                                                bool_j_119 = true
                                            ) : (
                                                m_match_cond_j_115 = m_match_bool_j_114 ? (
                                                        var_j_116 = fail_b_33
                                                    ) : (
                                                        void_j_113 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_122 = fun bj_null_j_8 -> (
                                        input_j_121 = input);
                                    flatten_fun_j_124 = fun expr_b_34 -> (
                                        var_j_123 = expr_b_34);
                                    record_j_125 = {checker = flatten_fun_j_120, generator = flatten_fun_j_122, wrapper = flatten_fun_j_124};
                                    proj_j_126 = record_j_125.checker;
                                    var_j_127 = x_b_0;
                                    m_i_346 = proj_j_126 ~ fun;
                                    appl_j_128 = m_i_346 ? (
                                            c_appl_i_347 = proj_j_126 var_j_127
                                        ) : (
                                            ab_i_348 = abort
                                        )
                                ) : (
                                    bool_j_129 = true
                                );
                            arg_check_b_1 = if_j_130;
                            var_j_131 = arg_check_b_1;
                            if_j_164 = var_j_131 ? (
                                    bool_j_132 = false;
                                    fail_b_36 = bool_j_132;
                                    flatten_fun_j_141 = fun expr_b_35 -> (
                                        var_j_133 = expr_b_35;
                                        m_match_bool_j_135 = var_j_133 ~ any;
                                        m_match_bool_j_138 = var_j_133 ~ int;
                                        m_match_cond_j_139 = m_match_bool_j_138 ? (
                                                bool_j_140 = true
                                            ) : (
                                                m_match_cond_j_136 = m_match_bool_j_135 ? (
                                                        var_j_137 = fail_b_36
                                                    ) : (
                                                        void_j_134 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_143 = fun bj_null_j_9 -> (
                                        input_j_142 = input);
                                    flatten_fun_j_145 = fun expr_b_37 -> (
                                        var_j_144 = expr_b_37);
                                    record_j_146 = {checker = flatten_fun_j_141, generator = flatten_fun_j_143, wrapper = flatten_fun_j_145};
                                    proj_j_147 = record_j_146.wrapper;
                                    var_j_148 = x;
                                    int_j_149 = 0;
                                    m_bl_i_349 = var_j_148 ~ int;
                                    m_br_i_350 = int_j_149 ~ int;
                                    m_b_i_351 = m_bl_i_349 and m_br_i_350;
                                    binop_j_150 = m_b_i_351 ? (
                                            c_binop_i_352 = var_j_148 == int_j_149
                                        ) : (
                                            ab_i_353 = abort
                                        );
                                    m_i_354 = binop_j_150 ~ bool;
                                    if_j_157 = m_i_354 ? (
                                            c_cond_i_363 = binop_j_150 ? (
                                                    int_j_151 = 0
                                                ) : (
                                                    var_j_152 = g;
                                                    var_j_153 = x;
                                                    int_j_154 = 1;
                                                    m_bl_i_355 = var_j_153 ~ int;
                                                    m_br_i_356 = int_j_154 ~ int;
                                                    m_b_i_357 = m_bl_i_355 and m_br_i_356;
                                                    binop_j_155 = m_b_i_357 ? (
                                                            c_binop_i_358 = var_j_153 - int_j_154
                                                        ) : (
                                                            ab_i_359 = abort
                                                        );
                                                    m_i_360 = var_j_152 ~ fun;
                                                    appl_j_156 = m_i_360 ? (
                                                            c_appl_i_361 = var_j_152 binop_j_155
                                                        ) : (
                                                            ab_i_362 = abort
                                                        )
                                                )
                                        ) : (
                                            ab_i_364 = abort
                                        );
                                    m_i_365 = proj_j_147 ~ fun;
                                    appl_j_158 = m_i_365 ? (
                                            c_appl_i_366 = proj_j_147 if_j_157
                                        ) : (
                                            ab_i_367 = abort
                                        )
                                ) : (
                                    var_j_159 = arg_check_b_1;
                                    assert_pred_j_160 = var_j_159;
                                    assert_res_j_161 = assert_pred_j_160 ? (
                                            assert_res_true_j_162 = {}
                                        ) : (
                                            ab_j_163 = abort
                                        )
                                ));
                        var_j_166 = x;
                        appl_j_167 = flatten_fun_j_165 var_j_166));
                g_j_0_j_13 = flatten_fun_j_169;
                var_j_170 = g_j_0_j_13;
                var_j_171 = g_j_0_j_13;
                appl_j_172 = var_j_170 var_j_171;
                g_j_12 = appl_j_172;
                bool_j_173 = false;
                fail_b_30 = bool_j_173;
                flatten_fun_j_182 = fun expr_b_29 -> (
                    var_j_174 = expr_b_29;
                    m_match_bool_j_176 = var_j_174 ~ any;
                    m_match_bool_j_179 = var_j_174 ~ int;
                    m_match_cond_j_180 = m_match_bool_j_179 ? (
                            bool_j_181 = true
                        ) : (
                            m_match_cond_j_177 = m_match_bool_j_176 ? (
                                    var_j_178 = fail_b_30
                                ) : (
                                    void_j_175 = {}
                                )
                        ));
                flatten_fun_j_184 = fun bj_null_j_10 -> (
                    input_j_183 = input);
                flatten_fun_j_186 = fun expr_b_31 -> (
                    var_j_185 = expr_b_31);
                record_j_187 = {checker = flatten_fun_j_182, generator = flatten_fun_j_184, wrapper = flatten_fun_j_186};
                proj_j_188 = record_j_187.generator;
                int_j_189 = 0;
                appl_j_190 = proj_j_188 int_j_189;
                x_b_47 = appl_j_190;
                bool_j_191 = false;
                fail_b_39 = bool_j_191;
                flatten_fun_j_200 = fun expr_b_38 -> (
                    var_j_192 = expr_b_38;
                    m_match_bool_j_194 = var_j_192 ~ any;
                    m_match_bool_j_197 = var_j_192 ~ int;
                    m_match_cond_j_198 = m_match_bool_j_197 ? (
                            bool_j_199 = true
                        ) : (
                            m_match_cond_j_195 = m_match_bool_j_194 ? (
                                    var_j_196 = fail_b_39
                                ) : (
                                    void_j_193 = {}
                                )
                        ));
                flatten_fun_j_202 = fun bj_null_j_11 -> (
                    input_j_201 = input);
                flatten_fun_j_204 = fun expr_b_40 -> (
                    var_j_203 = expr_b_40);
                record_j_205 = {checker = flatten_fun_j_200, generator = flatten_fun_j_202, wrapper = flatten_fun_j_204};
                proj_j_206 = record_j_205.checker;
                var_j_207 = g_j_12;
                var_j_208 = x_b_47;
                appl_j_209 = var_j_207 var_j_208;
                appl_j_210 = proj_j_206 appl_j_209;
                check_res_b_46 = appl_j_210;
                var_j_211 = check_res_b_46;
                if_j_220 = var_j_211 ? (
                        var_j_212 = g_j_12;
                        var_j_213 = x_j_14;
                        m_i_368 = var_j_212 ~ fun;
                        appl_j_214 = m_i_368 ? (
                                c_appl_i_369 = var_j_212 var_j_213
                            ) : (
                                ab_i_370 = abort
                            )
                    ) : (
                        error_var_j_215 = check_res_b_46;
                        assert_pred_j_216 = error_var_j_215;
                        assert_res_j_217 = assert_pred_j_216 ? (
                                assert_res_true_j_218 = {}
                            ) : (
                                ab_j_219 = abort
                            )
                    );
                m_i_371 = proj_j_104 ~ fun;
                appl_j_221 = m_i_371 ? (
                        c_appl_i_372 = proj_j_104 if_j_220
                    ) : (
                        ab_i_373 = abort
                    )
            ) : (
                var_j_222 = arg_check_b_3;
                assert_pred_j_223 = var_j_222;
                assert_res_j_224 = assert_pred_j_223 ? (
                        assert_res_true_j_225 = {}
                    ) : (
                        ab_j_226 = abort
                    )
            ));
    var_j_229 = x_j_14;
    appl_j_230 = flatten_fun_j_228 var_j_229);
f = f_j_231;
flatten_fun_j_260 = fun expr_b_11 -> (
    bool_j_232 = false;
    fail_b_9 = bool_j_232;
    flatten_fun_j_241 = fun expr_b_8 -> (
        var_j_233 = expr_b_8;
        m_match_bool_j_235 = var_j_233 ~ any;
        m_match_bool_j_238 = var_j_233 ~ int;
        m_match_cond_j_239 = m_match_bool_j_238 ? (
                bool_j_240 = true
            ) : (
                m_match_cond_j_236 = m_match_bool_j_235 ? (
                        var_j_237 = fail_b_9
                    ) : (
                        void_j_234 = {}
                    )
            ));
    flatten_fun_j_243 = fun bj_null -> (
        input_j_242 = input);
    flatten_fun_j_245 = fun expr_b_10 -> (
        var_j_244 = expr_b_10);
    record_j_246 = {checker = flatten_fun_j_241, generator = flatten_fun_j_243, wrapper = flatten_fun_j_245};
    proj_j_247 = record_j_246.checker;
    var_j_248 = expr_b_11;
    appl_j_249 = proj_j_247 var_j_248;
    t_check_b_12 = appl_j_249;
    var_j_250 = t_check_b_12;
    if_j_259 = var_j_250 ? (
            bool_j_251 = false;
            pred_check_b_13 = bool_j_251;
            var_j_252 = is_10000;
            var_j_253 = expr_b_11;
            appl_j_254 = var_j_252 var_j_253;
            if_j_257 = appl_j_254 ? (
                    bool_j_255 = true
                ) : (
                    var_j_256 = pred_check_b_13
                )
        ) : (
            var_j_258 = t_check_b_12
        ));
flatten_fun_j_286 = fun bj_null_j_2 -> (
    bool_j_261 = false;
    fail_b_5 = bool_j_261;
    flatten_fun_j_270 = fun expr_b_4 -> (
        var_j_262 = expr_b_4;
        m_match_bool_j_264 = var_j_262 ~ any;
        m_match_bool_j_267 = var_j_262 ~ int;
        m_match_cond_j_268 = m_match_bool_j_267 ? (
                bool_j_269 = true
            ) : (
                m_match_cond_j_265 = m_match_bool_j_264 ? (
                        var_j_266 = fail_b_5
                    ) : (
                        void_j_263 = {}
                    )
            ));
    flatten_fun_j_272 = fun bj_null_j_1 -> (
        input_j_271 = input);
    flatten_fun_j_274 = fun expr_b_6 -> (
        var_j_273 = expr_b_6);
    record_j_275 = {checker = flatten_fun_j_270, generator = flatten_fun_j_272, wrapper = flatten_fun_j_274};
    proj_j_276 = record_j_275.generator;
    int_j_277 = 0;
    appl_j_278 = proj_j_276 int_j_277;
    candidate_b_7 = appl_j_278;
    var_j_279 = is_10000;
    var_j_280 = candidate_b_7;
    appl_j_281 = var_j_279 var_j_280;
    if_j_285 = appl_j_281 ? (
            var_j_282 = candidate_b_7
        ) : (
            bool_j_283 = false;
            assume_j_284 = assume bool_j_283
        ));
flatten_fun_j_288 = fun expr_b_14 -> (
    var_j_287 = expr_b_14);
record_j_289 = {checker = flatten_fun_j_260, generator = flatten_fun_j_286, wrapper = flatten_fun_j_288};
proj_j_290 = record_j_289.generator;
int_j_291 = 0;
appl_j_292 = proj_j_290 int_j_291;
x_b_44 = appl_j_292;
bool_j_293 = false;
fail_b_42 = bool_j_293;
flatten_fun_j_302 = fun expr_b_41 -> (
    var_j_294 = expr_b_41;
    m_match_bool_j_296 = var_j_294 ~ any;
    m_match_bool_j_299 = var_j_294 ~ bool;
    m_match_cond_j_300 = m_match_bool_j_299 ? (
            bool_j_301 = true
        ) : (
            m_match_cond_j_297 = m_match_bool_j_296 ? (
                    var_j_298 = fail_b_42
                ) : (
                    void_j_295 = {}
                )
        ));
flatten_fun_j_306 = fun bj_null_j_3 -> (
    int_j_303 = 0;
    input_j_304 = input;
    m_bl_i_374 = int_j_303 ~ int;
    m_br_i_375 = input_j_304 ~ int;
    m_b_i_376 = m_bl_i_374 and m_br_i_375;
    binop_j_305 = m_b_i_376 ? (
            c_binop_i_377 = int_j_303 <= input_j_304
        ) : (
            ab_i_378 = abort
        ));
flatten_fun_j_308 = fun expr_b_43 -> (
    var_j_307 = expr_b_43);
record_j_309 = {checker = flatten_fun_j_302, generator = flatten_fun_j_306, wrapper = flatten_fun_j_308};
proj_j_310 = record_j_309.checker;
appl_j_313 = f x_b_44;
appl_j_314 = proj_j_310 appl_j_313;
check_res_b_45 = appl_j_314;
if_j_322 = check_res_b_45 ? (
        var_j_316 = f
    ) : (
        error_var_j_317 = check_res_b_45;
        assert_pred_j_318 = error_var_j_317;
        assert_res_j_319 = assert_pred_j_318 ? (
                assert_res_true_j_320 = {}
            ) : (
                ab_j_321 = abort
            )
    );
i_result = if_j_322