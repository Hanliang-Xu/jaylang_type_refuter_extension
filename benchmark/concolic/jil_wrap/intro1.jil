i_first = {};
flatten_fun_j_58 = fun expr_b_11 -> (
    bool_j_14 = false;
    rec_fail_b_10 = bool_j_14;
    bool_j_15 = false;
    rec_fail_b_9 = bool_j_15;
    bool_j_16 = false;
    rec_fail_b_8 = bool_j_16;
    var_j_17 = expr_b_11;
    m_match_bool_j_19 = var_j_17 ~ any;
    m_match_bool_j_22 = var_j_17 ~ {bj_actual_rec, _};
    m_match_cond_j_23 = m_match_bool_j_22 ? (
            var_j_24 = expr_b_11;
            proj_j_25 = var_j_24.bj_decl_lbls;
            m_match_bool_j_27 = proj_j_25 ~ any;
            m_match_bool_j_30 = proj_j_25 ~ {e, _};
            m_match_cond_j_31 = m_match_bool_j_30 ? (
                    e_j_0 = proj_j_25.e;
                    var_j_32 = expr_b_11;
                    proj_j_33 = var_j_32.bj_actual_rec;
                    m_match_bool_j_35 = proj_j_33 ~ any;
                    m_match_bool_j_38 = proj_j_33 ~ {e, _};
                    m_match_cond_j_39 = m_match_bool_j_38 ? (
                            e = proj_j_33.e;
                            bool_j_40 = false;
                            fail_b_13 = bool_j_40;
                            flatten_fun_j_49 = fun expr_b_12 -> (
                                var_j_41 = expr_b_12;
                                m_match_bool_j_43 = var_j_41 ~ any;
                                m_match_bool_j_46 = var_j_41 ~ int;
                                m_match_cond_j_47 = m_match_bool_j_46 ? (
                                        bool_j_48 = true
                                    ) : (
                                        m_match_cond_j_44 = m_match_bool_j_43 ? (
                                                var_j_45 = fail_b_13
                                            ) : (
                                                void_j_42 = {}
                                            )
                                    ));
                            flatten_fun_j_51 = fun bj_null -> (
                                input_j_50 = input);
                            flatten_fun_j_53 = fun expr_b_14 -> (
                                var_j_52 = expr_b_14);
                            record_j_54 = {checker = flatten_fun_j_49, generator = flatten_fun_j_51, wrapper = flatten_fun_j_53};
                            proj_j_55 = record_j_54.checker;
                            var_j_56 = e;
                            appl_j_57 = proj_j_55 var_j_56
                        ) : (
                            m_match_cond_j_36 = m_match_bool_j_35 ? (
                                    var_j_37 = rec_fail_b_8
                                ) : (
                                    void_j_34 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_28 = m_match_bool_j_27 ? (
                            var_j_29 = rec_fail_b_9
                        ) : (
                            void_j_26 = {}
                        )
                )
        ) : (
            m_match_cond_j_20 = m_match_bool_j_19 ? (
                    var_j_21 = rec_fail_b_10
                ) : (
                    void_j_18 = {}
                )
        ));
flatten_fun_j_82 = fun bj_null_j_2 -> (
    bool_j_59 = false;
    fail_b_6 = bool_j_59;
    flatten_fun_j_68 = fun expr_b_5 -> (
        var_j_60 = expr_b_5;
        m_match_bool_j_62 = var_j_60 ~ any;
        m_match_bool_j_65 = var_j_60 ~ int;
        m_match_cond_j_66 = m_match_bool_j_65 ? (
                bool_j_67 = true
            ) : (
                m_match_cond_j_63 = m_match_bool_j_62 ? (
                        var_j_64 = fail_b_6
                    ) : (
                        void_j_61 = {}
                    )
            ));
    flatten_fun_j_70 = fun bj_null_j_1 -> (
        input_j_69 = input);
    flatten_fun_j_72 = fun expr_b_7 -> (
        var_j_71 = expr_b_7);
    record_j_73 = {checker = flatten_fun_j_68, generator = flatten_fun_j_70, wrapper = flatten_fun_j_72};
    proj_j_74 = record_j_73.generator;
    int_j_75 = 0;
    appl_j_76 = proj_j_74 int_j_75;
    e_b_4 = appl_j_76;
    var_j_77 = e_b_4;
    record_j_78 = {e = var_j_77};
    record_j_79 = {};
    record_j_80 = {e = record_j_79};
    record_j_81 = {bj_actual_rec = record_j_78, bj_decl_lbls = record_j_80});
flatten_fun_j_84 = fun expr_b_15 -> (
    var_j_83 = expr_b_15);
record_j_85 = {checker = flatten_fun_j_58, generator = flatten_fun_j_82, wrapper = flatten_fun_j_84};
unit_type = record_j_85;
int_j_86 = 0;
record_j_87 = {e = int_j_86};
record_j_88 = {};
record_j_89 = {e = record_j_88};
record_j_90 = {bj_actual_rec = record_j_87, bj_decl_lbls = record_j_89};
unit = record_j_90;
f_j_97 = fun x -> (
    f_j_96 = fun g -> (
        var_j_91 = g;
        var_j_92 = x;
        int_j_93 = 1;
        m_bl_i_344 = var_j_92 ~ int;
        m_br_i_345 = int_j_93 ~ int;
        m_b_i_346 = m_bl_i_344 and m_br_i_345;
        binop_j_94 = m_b_i_346 ? (
                c_binop_i_347 = var_j_92 + int_j_93
            ) : (
                ab_i_348 = abort
            );
        m_i_349 = var_j_91 ~ fun;
        appl_j_95 = m_i_349 ? (
                c_appl_i_350 = var_j_91 binop_j_94
            ) : (
                ab_i_351 = abort
            )));
f = f_j_97;
h_j_184 = fun y -> (
    flatten_fun_j_181 = fun y_b_0 -> (
        int_j_98 = 0;
        input_j_99 = input;
        m_bl_i_352 = int_j_98 ~ int;
        m_br_i_353 = input_j_99 ~ int;
        m_b_i_354 = m_bl_i_352 and m_br_i_353;
        binop_j_100 = m_b_i_354 ? (
                c_binop_i_355 = int_j_98 < input_j_99
            ) : (
                ab_i_356 = abort
            );
        if_j_169 = binop_j_100 ? (
                flatten_fun_j_132 = fun expr_b_34 -> (
                    bool_j_101 = false;
                    fail_b_32 = bool_j_101;
                    flatten_fun_j_110 = fun expr_b_31 -> (
                        var_j_102 = expr_b_31;
                        m_match_bool_j_104 = var_j_102 ~ any;
                        m_match_bool_j_107 = var_j_102 ~ int;
                        m_match_cond_j_108 = m_match_bool_j_107 ? (
                                bool_j_109 = true
                            ) : (
                                m_match_cond_j_105 = m_match_bool_j_104 ? (
                                        var_j_106 = fail_b_32
                                    ) : (
                                        void_j_103 = {}
                                    )
                            ));
                    flatten_fun_j_112 = fun bj_null_j_9 -> (
                        input_j_111 = input);
                    flatten_fun_j_114 = fun expr_b_33 -> (
                        var_j_113 = expr_b_33);
                    record_j_115 = {checker = flatten_fun_j_110, generator = flatten_fun_j_112, wrapper = flatten_fun_j_114};
                    proj_j_116 = record_j_115.checker;
                    var_j_117 = expr_b_34;
                    appl_j_118 = proj_j_116 var_j_117;
                    t_check_b_35 = appl_j_118;
                    var_j_119 = t_check_b_35;
                    if_j_131 = var_j_119 ? (
                            bool_j_120 = false;
                            pred_check_b_36 = bool_j_120;
                            flatten_fun_j_124 = fun c_j_10 -> (
                                int_j_121 = 1;
                                var_j_122 = c_j_10;
                                m_bl_i_357 = int_j_121 ~ int;
                                m_br_i_358 = var_j_122 ~ int;
                                m_b_i_359 = m_bl_i_357 and m_br_i_358;
                                binop_j_123 = m_b_i_359 ? (
                                        c_binop_i_360 = int_j_121 < var_j_122
                                    ) : (
                                        ab_i_361 = abort
                                    ));
                            var_j_125 = expr_b_34;
                            appl_j_126 = flatten_fun_j_124 var_j_125;
                            if_j_129 = appl_j_126 ? (
                                    bool_j_127 = true
                                ) : (
                                    var_j_128 = pred_check_b_36
                                )
                        ) : (
                            var_j_130 = t_check_b_35
                        ));
                flatten_fun_j_161 = fun bj_null_j_13 -> (
                    bool_j_133 = false;
                    fail_b_28 = bool_j_133;
                    flatten_fun_j_142 = fun expr_b_27 -> (
                        var_j_134 = expr_b_27;
                        m_match_bool_j_136 = var_j_134 ~ any;
                        m_match_bool_j_139 = var_j_134 ~ int;
                        m_match_cond_j_140 = m_match_bool_j_139 ? (
                                bool_j_141 = true
                            ) : (
                                m_match_cond_j_137 = m_match_bool_j_136 ? (
                                        var_j_138 = fail_b_28
                                    ) : (
                                        void_j_135 = {}
                                    )
                            ));
                    flatten_fun_j_144 = fun bj_null_j_11 -> (
                        input_j_143 = input);
                    flatten_fun_j_146 = fun expr_b_29 -> (
                        var_j_145 = expr_b_29);
                    record_j_147 = {checker = flatten_fun_j_142, generator = flatten_fun_j_144, wrapper = flatten_fun_j_146};
                    proj_j_148 = record_j_147.generator;
                    int_j_149 = 0;
                    appl_j_150 = proj_j_148 int_j_149;
                    candidate_b_30 = appl_j_150;
                    flatten_fun_j_154 = fun c_j_12 -> (
                        int_j_151 = 1;
                        var_j_152 = c_j_12;
                        m_bl_i_362 = int_j_151 ~ int;
                        m_br_i_363 = var_j_152 ~ int;
                        m_b_i_364 = m_bl_i_362 and m_br_i_363;
                        binop_j_153 = m_b_i_364 ? (
                                c_binop_i_365 = int_j_151 < var_j_152
                            ) : (
                                ab_i_366 = abort
                            ));
                    var_j_155 = candidate_b_30;
                    appl_j_156 = flatten_fun_j_154 var_j_155;
                    if_j_160 = appl_j_156 ? (
                            var_j_157 = candidate_b_30
                        ) : (
                            bool_j_158 = false;
                            assume_j_159 = assume bool_j_158
                        ));
                flatten_fun_j_163 = fun expr_b_37 -> (
                    var_j_162 = expr_b_37);
                record_j_164 = {checker = flatten_fun_j_132, generator = flatten_fun_j_161, wrapper = flatten_fun_j_163};
                proj_j_165 = record_j_164.checker;
                var_j_166 = y_b_0;
                m_i_367 = proj_j_165 ~ fun;
                appl_j_167 = m_i_367 ? (
                        c_appl_i_368 = proj_j_165 var_j_166
                    ) : (
                        ab_i_369 = abort
                    )
            ) : (
                bool_j_168 = true
            );
        arg_check_b_1 = if_j_169;
        var_j_170 = arg_check_b_1;
        if_j_180 = var_j_170 ? (
                var_j_171 = unit_type;
                proj_j_172 = var_j_171.wrapper;
                var_j_173 = unit;
                m_i_370 = proj_j_172 ~ fun;
                appl_j_174 = m_i_370 ? (
                        c_appl_i_371 = proj_j_172 var_j_173
                    ) : (
                        ab_i_372 = abort
                    )
            ) : (
                var_j_175 = arg_check_b_1;
                assert_pred_j_176 = var_j_175;
                assert_res_j_177 = assert_pred_j_176 ? (
                        assert_res_true_j_178 = {}
                    ) : (
                        ab_j_179 = abort
                    )
            ));
    var_j_182 = y;
    appl_j_183 = flatten_fun_j_181 var_j_182);
h = h_j_184;
flatten_fun_j_216 = fun expr_b_23 -> (
    bool_j_185 = false;
    fail_b_21 = bool_j_185;
    flatten_fun_j_194 = fun expr_b_20 -> (
        var_j_186 = expr_b_20;
        m_match_bool_j_188 = var_j_186 ~ any;
        m_match_bool_j_191 = var_j_186 ~ int;
        m_match_cond_j_192 = m_match_bool_j_191 ? (
                bool_j_193 = true
            ) : (
                m_match_cond_j_189 = m_match_bool_j_188 ? (
                        var_j_190 = fail_b_21
                    ) : (
                        void_j_187 = {}
                    )
            ));
    flatten_fun_j_196 = fun bj_null_j_3 -> (
        input_j_195 = input);
    flatten_fun_j_198 = fun expr_b_22 -> (
        var_j_197 = expr_b_22);
    record_j_199 = {checker = flatten_fun_j_194, generator = flatten_fun_j_196, wrapper = flatten_fun_j_198};
    proj_j_200 = record_j_199.checker;
    var_j_201 = expr_b_23;
    appl_j_202 = proj_j_200 var_j_201;
    t_check_b_24 = appl_j_202;
    var_j_203 = t_check_b_24;
    if_j_215 = var_j_203 ? (
            bool_j_204 = false;
            pred_check_b_25 = bool_j_204;
            flatten_fun_j_208 = fun c -> (
                int_j_205 = 1;
                var_j_206 = c;
                m_bl_i_373 = int_j_205 ~ int;
                m_br_i_374 = var_j_206 ~ int;
                m_b_i_375 = m_bl_i_373 and m_br_i_374;
                binop_j_207 = m_b_i_375 ? (
                        c_binop_i_376 = int_j_205 < var_j_206
                    ) : (
                        ab_i_377 = abort
                    ));
            var_j_209 = expr_b_23;
            appl_j_210 = flatten_fun_j_208 var_j_209;
            if_j_213 = appl_j_210 ? (
                    bool_j_211 = true
                ) : (
                    var_j_212 = pred_check_b_25
                )
        ) : (
            var_j_214 = t_check_b_24
        ));
flatten_fun_j_245 = fun bj_null_j_6 -> (
    bool_j_217 = false;
    fail_b_17 = bool_j_217;
    flatten_fun_j_226 = fun expr_b_16 -> (
        var_j_218 = expr_b_16;
        m_match_bool_j_220 = var_j_218 ~ any;
        m_match_bool_j_223 = var_j_218 ~ int;
        m_match_cond_j_224 = m_match_bool_j_223 ? (
                bool_j_225 = true
            ) : (
                m_match_cond_j_221 = m_match_bool_j_220 ? (
                        var_j_222 = fail_b_17
                    ) : (
                        void_j_219 = {}
                    )
            ));
    flatten_fun_j_228 = fun bj_null_j_4 -> (
        input_j_227 = input);
    flatten_fun_j_230 = fun expr_b_18 -> (
        var_j_229 = expr_b_18);
    record_j_231 = {checker = flatten_fun_j_226, generator = flatten_fun_j_228, wrapper = flatten_fun_j_230};
    proj_j_232 = record_j_231.generator;
    int_j_233 = 0;
    appl_j_234 = proj_j_232 int_j_233;
    candidate_b_19 = appl_j_234;
    flatten_fun_j_238 = fun c_j_5 -> (
        int_j_235 = 1;
        var_j_236 = c_j_5;
        m_bl_i_378 = int_j_235 ~ int;
        m_br_i_379 = var_j_236 ~ int;
        m_b_i_380 = m_bl_i_378 and m_br_i_379;
        binop_j_237 = m_b_i_380 ? (
                c_binop_i_381 = int_j_235 < var_j_236
            ) : (
                ab_i_382 = abort
            ));
    var_j_239 = candidate_b_19;
    appl_j_240 = flatten_fun_j_238 var_j_239;
    if_j_244 = appl_j_240 ? (
            var_j_241 = candidate_b_19
        ) : (
            bool_j_242 = false;
            assume_j_243 = assume bool_j_242
        ));
flatten_fun_j_247 = fun expr_b_26 -> (
    var_j_246 = expr_b_26);
record_j_248 = {checker = flatten_fun_j_216, generator = flatten_fun_j_245, wrapper = flatten_fun_j_247};
proj_j_249 = record_j_248.generator;
int_j_250 = 0;
appl_j_251 = proj_j_249 int_j_250;
y_b_44 = appl_j_251;
proj_j_253 = unit_type.checker;
appl_j_256 = h y_b_44;
appl_j_257 = proj_j_253 appl_j_256;
check_res_b_47 = appl_j_257;
if_j_343 = check_res_b_47 ? (
        main_j_305 = fun n -> (
            flatten_fun_j_302 = fun n_b_2 -> (
                int_j_259 = 0;
                input_j_260 = input;
                m_bl_i_383 = int_j_259 ~ int;
                m_br_i_384 = input_j_260 ~ int;
                m_b_i_385 = m_bl_i_383 and m_br_i_384;
                binop_j_261 = m_b_i_385 ? (
                        c_binop_i_386 = int_j_259 < input_j_260
                    ) : (
                        ab_i_387 = abort
                    );
                if_j_281 = binop_j_261 ? (
                        bool_j_262 = false;
                        fail_b_42 = bool_j_262;
                        flatten_fun_j_271 = fun expr_b_41 -> (
                            var_j_263 = expr_b_41;
                            m_match_bool_j_265 = var_j_263 ~ any;
                            m_match_bool_j_268 = var_j_263 ~ int;
                            m_match_cond_j_269 = m_match_bool_j_268 ? (
                                    bool_j_270 = true
                                ) : (
                                    m_match_cond_j_266 = m_match_bool_j_265 ? (
                                            var_j_267 = fail_b_42
                                        ) : (
                                            void_j_264 = {}
                                        )
                                ));
                        flatten_fun_j_273 = fun bj_null_j_8 -> (
                            input_j_272 = input);
                        flatten_fun_j_275 = fun expr_b_43 -> (
                            var_j_274 = expr_b_43);
                        record_j_276 = {checker = flatten_fun_j_271, generator = flatten_fun_j_273, wrapper = flatten_fun_j_275};
                        proj_j_277 = record_j_276.checker;
                        var_j_278 = n_b_2;
                        m_i_388 = proj_j_277 ~ fun;
                        appl_j_279 = m_i_388 ? (
                                c_appl_i_389 = proj_j_277 var_j_278
                            ) : (
                                ab_i_390 = abort
                            )
                    ) : (
                        bool_j_280 = true
                    );
                arg_check_b_3 = if_j_281;
                var_j_282 = arg_check_b_3;
                if_j_301 = var_j_282 ? (
                        var_j_283 = unit_type;
                        proj_j_284 = var_j_283.wrapper;
                        int_j_285 = 0;
                        var_j_286 = n;
                        m_bl_i_391 = int_j_285 ~ int;
                        m_br_i_392 = var_j_286 ~ int;
                        m_b_i_393 = m_bl_i_391 and m_br_i_392;
                        binop_j_287 = m_b_i_393 ? (
                                c_binop_i_394 = int_j_285 <= var_j_286
                            ) : (
                                ab_i_395 = abort
                            );
                        m_i_396 = binop_j_287 ~ bool;
                        if_j_294 = m_i_396 ? (
                                c_cond_i_403 = binop_j_287 ? (
                                        var_j_288 = f;
                                        var_j_289 = n;
                                        m_i_397 = var_j_288 ~ fun;
                                        appl_j_290 = m_i_397 ? (
                                                c_appl_i_398 = var_j_288 var_j_289
                                            ) : (
                                                ab_i_399 = abort
                                            );
                                        var_j_291 = h;
                                        m_i_400 = appl_j_290 ~ fun;
                                        appl_j_292 = m_i_400 ? (
                                                c_appl_i_401 = appl_j_290 var_j_291
                                            ) : (
                                                ab_i_402 = abort
                                            )
                                    ) : (
                                        var_j_293 = unit
                                    )
                            ) : (
                                ab_i_404 = abort
                            );
                        m_i_405 = proj_j_284 ~ fun;
                        appl_j_295 = m_i_405 ? (
                                c_appl_i_406 = proj_j_284 if_j_294
                            ) : (
                                ab_i_407 = abort
                            )
                    ) : (
                        var_j_296 = arg_check_b_3;
                        assert_pred_j_297 = var_j_296;
                        assert_res_j_298 = assert_pred_j_297 ? (
                                assert_res_true_j_299 = {}
                            ) : (
                                ab_j_300 = abort
                            )
                    ));
            var_j_303 = n;
            appl_j_304 = flatten_fun_j_302 var_j_303);
        main = main_j_305;
        bool_j_306 = false;
        fail_b_39 = bool_j_306;
        flatten_fun_j_315 = fun expr_b_38 -> (
            var_j_307 = expr_b_38;
            m_match_bool_j_309 = var_j_307 ~ any;
            m_match_bool_j_312 = var_j_307 ~ int;
            m_match_cond_j_313 = m_match_bool_j_312 ? (
                    bool_j_314 = true
                ) : (
                    m_match_cond_j_310 = m_match_bool_j_309 ? (
                            var_j_311 = fail_b_39
                        ) : (
                            void_j_308 = {}
                        )
                ));
        flatten_fun_j_317 = fun bj_null_j_7 -> (
            input_j_316 = input);
        flatten_fun_j_319 = fun expr_b_40 -> (
            var_j_318 = expr_b_40);
        record_j_320 = {checker = flatten_fun_j_315, generator = flatten_fun_j_317, wrapper = flatten_fun_j_319};
        proj_j_321 = record_j_320.generator;
        int_j_322 = 0;
        appl_j_323 = proj_j_321 int_j_322;
        n_b_45 = appl_j_323;
        var_j_324 = unit_type;
        proj_j_325 = var_j_324.checker;
        var_j_326 = main;
        var_j_327 = n_b_45;
        appl_j_328 = var_j_326 var_j_327;
        appl_j_329 = proj_j_325 appl_j_328;
        check_res_b_46 = appl_j_329;
        var_j_330 = check_res_b_46;
        if_j_337 = var_j_330 ? (
                var_j_331 = main
            ) : (
                error_var_j_332 = check_res_b_46;
                assert_pred_j_333 = error_var_j_332;
                assert_res_j_334 = assert_pred_j_333 ? (
                        assert_res_true_j_335 = {}
                    ) : (
                        ab_j_336 = abort
                    )
            )
    ) : (
        error_var_j_338 = check_res_b_47;
        assert_pred_j_339 = error_var_j_338;
        assert_res_j_340 = assert_pred_j_339 ? (
                assert_res_true_j_341 = {}
            ) : (
                ab_j_342 = abort
            )
    );
i_result = if_j_343