i_first = {};
flatten_fun_j_67 = fun mk_list_j_1 -> (
    flatten_fun_j_66 = fun n -> (
        var_j_46 = mk_list_j_1;
        var_j_47 = mk_list_j_1;
        appl_j_48 = var_j_46 var_j_47;
        mk_list = appl_j_48;
        var_j_49 = n;
        int_j_50 = 0;
        m_bl_i_797 = var_j_49 ~ int;
        m_br_i_798 = int_j_50 ~ int;
        m_b_i_799 = m_bl_i_797 and m_br_i_798;
        binop_j_51 = m_b_i_799 ? (
                c_binop_i_800 = var_j_49 <= int_j_50
            ) : (
                ab_i_801 = abort
            );
        m_i_802 = binop_j_51 ~ bool;
        if_j_65 = m_i_802 ? (
                c_cond_i_816 = binop_j_51 ? (
                        record_j_52 = {};
                        record_j_53 = {j_empty = record_j_52}
                    ) : (
                        record_j_54 = {};
                        flatten_fun_j_58 = fun m -> (
                            var_j_55 = m;
                            var_j_56 = n;
                            m_bl_i_803 = var_j_55 ~ int;
                            m_br_i_804 = var_j_56 ~ int;
                            m_b_i_805 = m_bl_i_803 and m_br_i_804;
                            binop_j_57 = m_b_i_805 ? (
                                    c_binop_i_806 = var_j_55 - var_j_56
                                ) : (
                                    ab_i_807 = abort
                                ));
                        var_j_59 = mk_list;
                        var_j_60 = n;
                        int_j_61 = 1;
                        m_bl_i_808 = var_j_60 ~ int;
                        m_br_i_809 = int_j_61 ~ int;
                        m_b_i_810 = m_bl_i_808 and m_br_i_809;
                        binop_j_62 = m_b_i_810 ? (
                                c_binop_i_811 = var_j_60 - int_j_61
                            ) : (
                                ab_i_812 = abort
                            );
                        m_i_813 = var_j_59 ~ fun;
                        appl_j_63 = m_i_813 ? (
                                c_appl_i_814 = var_j_59 binop_j_62
                            ) : (
                                ab_i_815 = abort
                            );
                        record_j_64 = {j_cons = record_j_54, j_head = flatten_fun_j_58, j_tail = appl_j_63}
                    )
            ) : (
                ab_i_817 = abort
            )));
appl_j_70 = flatten_fun_j_67 flatten_fun_j_67;
flatten_fun_j_103 = fun foldr_j_0 -> (
    flatten_fun_j_102 = fun f -> (
        flatten_fun_j_101 = fun z -> (
            flatten_fun_j_100 = fun xs -> (
                var_j_71 = foldr_j_0;
                var_j_72 = foldr_j_0;
                appl_j_73 = var_j_71 var_j_72;
                foldr = appl_j_73;
                bool_j_74 = false;
                fail_b_2 = bool_j_74;
                var_j_75 = xs;
                m_match_bool_j_77 = var_j_75 ~ {j_head, j_tail, _};
                m_match_bool_j_90 = var_j_75 ~ {j_empty, _};
                m_match_bool_j_93 = var_j_75 ~ {bj_untouched, _};
                m_match_cond_j_94 = m_match_bool_j_93 ? (
                        var_j_95 = fail_b_2;
                        assert_pred_j_96 = var_j_95;
                        assert_res_j_97 = assert_pred_j_96 ? (
                                assert_res_true_j_98 = {}
                            ) : (
                                ab_j_99 = abort
                            )
                    ) : (
                        m_match_cond_j_91 = m_match_bool_j_90 ? (
                                var_j_92 = z
                            ) : (
                                m_match_cond_j_78 = m_match_bool_j_77 ? (
                                        x = var_j_75.j_head;
                                        xss = var_j_75.j_tail;
                                        var_j_79 = f;
                                        var_j_80 = x;
                                        m_i_818 = var_j_79 ~ fun;
                                        appl_j_81 = m_i_818 ? (
                                                c_appl_i_819 = var_j_79 var_j_80
                                            ) : (
                                                ab_i_820 = abort
                                            );
                                        var_j_82 = foldr;
                                        var_j_83 = f;
                                        m_i_821 = var_j_82 ~ fun;
                                        appl_j_84 = m_i_821 ? (
                                                c_appl_i_822 = var_j_82 var_j_83
                                            ) : (
                                                ab_i_823 = abort
                                            );
                                        var_j_85 = z;
                                        m_i_824 = appl_j_84 ~ fun;
                                        appl_j_86 = m_i_824 ? (
                                                c_appl_i_825 = appl_j_84 var_j_85
                                            ) : (
                                                ab_i_826 = abort
                                            );
                                        var_j_87 = xss;
                                        m_i_827 = appl_j_86 ~ fun;
                                        appl_j_88 = m_i_827 ? (
                                                c_appl_i_828 = appl_j_86 var_j_87
                                            ) : (
                                                ab_i_829 = abort
                                            );
                                        m_i_830 = appl_j_81 ~ fun;
                                        appl_j_89 = m_i_830 ? (
                                                c_appl_i_831 = appl_j_81 appl_j_88
                                            ) : (
                                                ab_i_832 = abort
                                            )
                                    ) : (
                                        ab_j_76 = abort
                                    )
                            )
                    )))));
appl_j_106 = flatten_fun_j_103 flatten_fun_j_103;
compose_j_114 = fun f_j_41 -> (
    compose_j_113 = fun g -> (
        flatten_fun_j_112 = fun x_j_40 -> (
            var_j_107 = f_j_41;
            var_j_108 = g;
            var_j_109 = x_j_40;
            m_i_833 = var_j_108 ~ fun;
            appl_j_110 = m_i_833 ? (
                    c_appl_i_834 = var_j_108 var_j_109
                ) : (
                    ab_i_835 = abort
                );
            m_i_836 = var_j_107 ~ fun;
            appl_j_111 = m_i_836 ? (
                    c_appl_i_837 = var_j_107 appl_j_110
                ) : (
                    ab_i_838 = abort
                ))));
compose = compose_j_114;
main_j_463 = fun n_j_39 -> (
    flatten_fun_j_460 = fun n_b_0 -> (
        int_j_115 = 0;
        input_j_116 = input;
        m_bl_i_839 = int_j_115 ~ int;
        m_br_i_840 = input_j_116 ~ int;
        m_b_i_841 = m_bl_i_839 and m_br_i_840;
        binop_j_117 = m_b_i_841 ? (
                c_binop_i_842 = int_j_115 < input_j_116
            ) : (
                ab_i_843 = abort
            );
        if_j_137 = binop_j_117 ? (
                bool_j_118 = false;
                fail_b_7 = bool_j_118;
                flatten_fun_j_127 = fun expr_b_6 -> (
                    var_j_119 = expr_b_6;
                    m_match_bool_j_121 = var_j_119 ~ any;
                    m_match_bool_j_124 = var_j_119 ~ int;
                    m_match_cond_j_125 = m_match_bool_j_124 ? (
                            bool_j_126 = true
                        ) : (
                            m_match_cond_j_122 = m_match_bool_j_121 ? (
                                    var_j_123 = fail_b_7
                                ) : (
                                    void_j_120 = {}
                                )
                        ));
                flatten_fun_j_129 = fun bj_null_j_19 -> (
                    input_j_128 = input);
                flatten_fun_j_131 = fun expr_b_8 -> (
                    var_j_130 = expr_b_8);
                record_j_132 = {checker = flatten_fun_j_127, generator = flatten_fun_j_129, wrapper = flatten_fun_j_131};
                proj_j_133 = record_j_132.checker;
                var_j_134 = n_b_0;
                m_i_844 = proj_j_133 ~ fun;
                appl_j_135 = m_i_844 ? (
                        c_appl_i_845 = proj_j_133 var_j_134
                    ) : (
                        ab_i_846 = abort
                    )
            ) : (
                bool_j_136 = true
            );
        arg_check_b_1 = if_j_137;
        var_j_138 = arg_check_b_1;
        if_j_459 = var_j_138 ? (
                flatten_fun_j_289 = fun expr_b_60 -> (
                    flatten_fun_j_178 = fun expr_b_49 -> (
                        bool_j_139 = false;
                        fail_b_44 = bool_j_139;
                        flatten_fun_j_148 = fun expr_b_43 -> (
                            var_j_140 = expr_b_43;
                            m_match_bool_j_142 = var_j_140 ~ any;
                            m_match_bool_j_145 = var_j_140 ~ int;
                            m_match_cond_j_146 = m_match_bool_j_145 ? (
                                    bool_j_147 = true
                                ) : (
                                    m_match_cond_j_143 = m_match_bool_j_142 ? (
                                            var_j_144 = fail_b_44
                                        ) : (
                                            void_j_141 = {}
                                        )
                                ));
                        flatten_fun_j_150 = fun bj_null_j_20 -> (
                            input_j_149 = input);
                        flatten_fun_j_152 = fun expr_b_45 -> (
                            var_j_151 = expr_b_45);
                        record_j_153 = {checker = flatten_fun_j_148, generator = flatten_fun_j_150, wrapper = flatten_fun_j_152};
                        proj_j_154 = record_j_153.generator;
                        int_j_155 = 0;
                        appl_j_156 = proj_j_154 int_j_155;
                        arg_assert_b_50 = appl_j_156;
                        var_j_157 = expr_b_49;
                        var_j_158 = arg_assert_b_50;
                        appl_j_159 = var_j_157 var_j_158;
                        fun_ret_b_51 = appl_j_159;
                        bool_j_160 = false;
                        fail_b_47 = bool_j_160;
                        flatten_fun_j_169 = fun expr_b_46 -> (
                            var_j_161 = expr_b_46;
                            m_match_bool_j_163 = var_j_161 ~ any;
                            m_match_bool_j_166 = var_j_161 ~ int;
                            m_match_cond_j_167 = m_match_bool_j_166 ? (
                                    bool_j_168 = true
                                ) : (
                                    m_match_cond_j_164 = m_match_bool_j_163 ? (
                                            var_j_165 = fail_b_47
                                        ) : (
                                            void_j_162 = {}
                                        )
                                ));
                        flatten_fun_j_171 = fun bj_null_j_21 -> (
                            input_j_170 = input);
                        flatten_fun_j_173 = fun expr_b_48 -> (
                            var_j_172 = expr_b_48);
                        record_j_174 = {checker = flatten_fun_j_169, generator = flatten_fun_j_171, wrapper = flatten_fun_j_173};
                        proj_j_175 = record_j_174.checker;
                        var_j_176 = fun_ret_b_51;
                        appl_j_177 = proj_j_175 var_j_176);
                    flatten_fun_j_223 = fun bj_null_j_24 -> (
                        flatten_fun_j_222 = fun arg_assume_b_41 -> (
                            bool_j_179 = false;
                            fail_b_36 = bool_j_179;
                            flatten_fun_j_188 = fun expr_b_35 -> (
                                var_j_180 = expr_b_35;
                                m_match_bool_j_182 = var_j_180 ~ any;
                                m_match_bool_j_185 = var_j_180 ~ int;
                                m_match_cond_j_186 = m_match_bool_j_185 ? (
                                        bool_j_187 = true
                                    ) : (
                                        m_match_cond_j_183 = m_match_bool_j_182 ? (
                                                var_j_184 = fail_b_36
                                            ) : (
                                                void_j_181 = {}
                                            )
                                    ));
                            flatten_fun_j_190 = fun bj_null_j_22 -> (
                                input_j_189 = input);
                            flatten_fun_j_192 = fun expr_b_37 -> (
                                var_j_191 = expr_b_37);
                            record_j_193 = {checker = flatten_fun_j_188, generator = flatten_fun_j_190, wrapper = flatten_fun_j_192};
                            proj_j_194 = record_j_193.checker;
                            var_j_195 = arg_assume_b_41;
                            appl_j_196 = proj_j_194 var_j_195;
                            if_j_221 = appl_j_196 ? (
                                    bool_j_197 = false;
                                    fail_b_39 = bool_j_197;
                                    flatten_fun_j_206 = fun expr_b_38 -> (
                                        var_j_198 = expr_b_38;
                                        m_match_bool_j_200 = var_j_198 ~ any;
                                        m_match_bool_j_203 = var_j_198 ~ int;
                                        m_match_cond_j_204 = m_match_bool_j_203 ? (
                                                bool_j_205 = true
                                            ) : (
                                                m_match_cond_j_201 = m_match_bool_j_200 ? (
                                                        var_j_202 = fail_b_39
                                                    ) : (
                                                        void_j_199 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_208 = fun bj_null_j_23 -> (
                                        input_j_207 = input);
                                    flatten_fun_j_210 = fun expr_b_40 -> (
                                        var_j_209 = expr_b_40);
                                    record_j_211 = {checker = flatten_fun_j_206, generator = flatten_fun_j_208, wrapper = flatten_fun_j_210};
                                    proj_j_212 = record_j_211.generator;
                                    int_j_213 = 0;
                                    appl_j_214 = proj_j_212 int_j_213
                                ) : (
                                    bool_j_215 = false;
                                    fail_b_42 = bool_j_215;
                                    var_j_216 = fail_b_42;
                                    assert_pred_j_217 = var_j_216;
                                    assert_res_j_218 = assert_pred_j_217 ? (
                                            assert_res_true_j_219 = {}
                                        ) : (
                                            ab_j_220 = abort
                                        )
                                )));
                    flatten_fun_j_269 = fun expr_b_58 -> (
                        flatten_fun_j_268 = fun arg_b_59 -> (
                            bool_j_224 = false;
                            fail_b_53 = bool_j_224;
                            flatten_fun_j_233 = fun expr_b_52 -> (
                                var_j_225 = expr_b_52;
                                m_match_bool_j_227 = var_j_225 ~ any;
                                m_match_bool_j_230 = var_j_225 ~ int;
                                m_match_cond_j_231 = m_match_bool_j_230 ? (
                                        bool_j_232 = true
                                    ) : (
                                        m_match_cond_j_228 = m_match_bool_j_227 ? (
                                                var_j_229 = fail_b_53
                                            ) : (
                                                void_j_226 = {}
                                            )
                                    ));
                            flatten_fun_j_235 = fun bj_null_j_25 -> (
                                input_j_234 = input);
                            flatten_fun_j_237 = fun expr_b_54 -> (
                                var_j_236 = expr_b_54);
                            record_j_238 = {checker = flatten_fun_j_233, generator = flatten_fun_j_235, wrapper = flatten_fun_j_237};
                            proj_j_239 = record_j_238.checker;
                            var_j_240 = arg_b_59;
                            m_i_847 = proj_j_239 ~ fun;
                            appl_j_241 = m_i_847 ? (
                                    c_appl_i_848 = proj_j_239 var_j_240
                                ) : (
                                    ab_i_849 = abort
                                );
                            m_i_850 = appl_j_241 ~ bool;
                            if_j_267 = m_i_850 ? (
                                    c_cond_i_857 = appl_j_241 ? (
                                            bool_j_242 = false;
                                            fail_b_56 = bool_j_242;
                                            flatten_fun_j_251 = fun expr_b_55 -> (
                                                var_j_243 = expr_b_55;
                                                m_match_bool_j_245 = var_j_243 ~ any;
                                                m_match_bool_j_248 = var_j_243 ~ int;
                                                m_match_cond_j_249 = m_match_bool_j_248 ? (
                                                        bool_j_250 = true
                                                    ) : (
                                                        m_match_cond_j_246 = m_match_bool_j_245 ? (
                                                                var_j_247 = fail_b_56
                                                            ) : (
                                                                void_j_244 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_253 = fun bj_null_j_26 -> (
                                                input_j_252 = input);
                                            flatten_fun_j_255 = fun expr_b_57 -> (
                                                var_j_254 = expr_b_57);
                                            record_j_256 = {checker = flatten_fun_j_251, generator = flatten_fun_j_253, wrapper = flatten_fun_j_255};
                                            proj_j_257 = record_j_256.wrapper;
                                            var_j_258 = expr_b_58;
                                            var_j_259 = arg_b_59;
                                            m_i_851 = var_j_258 ~ fun;
                                            appl_j_260 = m_i_851 ? (
                                                    c_appl_i_852 = var_j_258 var_j_259
                                                ) : (
                                                    ab_i_853 = abort
                                                );
                                            m_i_854 = proj_j_257 ~ fun;
                                            appl_j_261 = m_i_854 ? (
                                                    c_appl_i_855 = proj_j_257 appl_j_260
                                                ) : (
                                                    ab_i_856 = abort
                                                )
                                        ) : (
                                            bool_j_262 = false;
                                            assert_pred_j_263 = bool_j_262;
                                            assert_res_j_264 = assert_pred_j_263 ? (
                                                    assert_res_true_j_265 = 
                                                        {}
                                                ) : (
                                                    ab_j_266 = abort
                                                )
                                        )
                                ) : (
                                    ab_i_858 = abort
                                )));
                    record_j_270 = {checker = flatten_fun_j_178, generator = flatten_fun_j_223, wrapper = flatten_fun_j_269};
                    proj_j_271 = record_j_270.checker;
                    var_j_272 = expr_b_60;
                    appl_j_273 = proj_j_271 var_j_272;
                    t_check_b_61 = appl_j_273;
                    var_j_274 = t_check_b_61;
                    if_j_288 = var_j_274 ? (
                            bool_j_275 = false;
                            pred_check_b_62 = bool_j_275;
                            flatten_fun_j_281 = fun f_j_27 -> (
                                int_j_276 = 0;
                                var_j_277 = f_j_27;
                                int_j_278 = 0;
                                m_i_859 = var_j_277 ~ fun;
                                appl_j_279 = m_i_859 ? (
                                        c_appl_i_860 = var_j_277 int_j_278
                                    ) : (
                                        ab_i_861 = abort
                                    );
                                m_bl_i_862 = int_j_276 ~ int;
                                m_br_i_863 = appl_j_279 ~ int;
                                m_b_i_864 = m_bl_i_862 and m_br_i_863;
                                binop_j_280 = m_b_i_864 ? (
                                        c_binop_i_865 = int_j_276 <= appl_j_279
                                    ) : (
                                        ab_i_866 = abort
                                    ));
                            var_j_282 = expr_b_60;
                            appl_j_283 = flatten_fun_j_281 var_j_282;
                            if_j_286 = appl_j_283 ? (
                                    bool_j_284 = true
                                ) : (
                                    var_j_285 = pred_check_b_62
                                )
                        ) : (
                            var_j_287 = t_check_b_61
                        ));
                flatten_fun_j_437 = fun bj_null_j_36 -> (
                    flatten_fun_j_329 = fun expr_b_23 -> (
                        bool_j_290 = false;
                        fail_b_18 = bool_j_290;
                        flatten_fun_j_299 = fun expr_b_17 -> (
                            var_j_291 = expr_b_17;
                            m_match_bool_j_293 = var_j_291 ~ any;
                            m_match_bool_j_296 = var_j_291 ~ int;
                            m_match_cond_j_297 = m_match_bool_j_296 ? (
                                    bool_j_298 = true
                                ) : (
                                    m_match_cond_j_294 = m_match_bool_j_293 ? (
                                            var_j_295 = fail_b_18
                                        ) : (
                                            void_j_292 = {}
                                        )
                                ));
                        flatten_fun_j_301 = fun bj_null_j_28 -> (
                            input_j_300 = input);
                        flatten_fun_j_303 = fun expr_b_19 -> (
                            var_j_302 = expr_b_19);
                        record_j_304 = {checker = flatten_fun_j_299, generator = flatten_fun_j_301, wrapper = flatten_fun_j_303};
                        proj_j_305 = record_j_304.generator;
                        int_j_306 = 0;
                        appl_j_307 = proj_j_305 int_j_306;
                        arg_assert_b_24 = appl_j_307;
                        var_j_308 = expr_b_23;
                        var_j_309 = arg_assert_b_24;
                        appl_j_310 = var_j_308 var_j_309;
                        fun_ret_b_25 = appl_j_310;
                        bool_j_311 = false;
                        fail_b_21 = bool_j_311;
                        flatten_fun_j_320 = fun expr_b_20 -> (
                            var_j_312 = expr_b_20;
                            m_match_bool_j_314 = var_j_312 ~ any;
                            m_match_bool_j_317 = var_j_312 ~ int;
                            m_match_cond_j_318 = m_match_bool_j_317 ? (
                                    bool_j_319 = true
                                ) : (
                                    m_match_cond_j_315 = m_match_bool_j_314 ? (
                                            var_j_316 = fail_b_21
                                        ) : (
                                            void_j_313 = {}
                                        )
                                ));
                        flatten_fun_j_322 = fun bj_null_j_29 -> (
                            input_j_321 = input);
                        flatten_fun_j_324 = fun expr_b_22 -> (
                            var_j_323 = expr_b_22);
                        record_j_325 = {checker = flatten_fun_j_320, generator = flatten_fun_j_322, wrapper = flatten_fun_j_324};
                        proj_j_326 = record_j_325.checker;
                        var_j_327 = fun_ret_b_25;
                        appl_j_328 = proj_j_326 var_j_327);
                    flatten_fun_j_374 = fun bj_null_j_32 -> (
                        flatten_fun_j_373 = fun arg_assume_b_15 -> (
                            bool_j_330 = false;
                            fail_b_10 = bool_j_330;
                            flatten_fun_j_339 = fun expr_b_9 -> (
                                var_j_331 = expr_b_9;
                                m_match_bool_j_333 = var_j_331 ~ any;
                                m_match_bool_j_336 = var_j_331 ~ int;
                                m_match_cond_j_337 = m_match_bool_j_336 ? (
                                        bool_j_338 = true
                                    ) : (
                                        m_match_cond_j_334 = m_match_bool_j_333 ? (
                                                var_j_335 = fail_b_10
                                            ) : (
                                                void_j_332 = {}
                                            )
                                    ));
                            flatten_fun_j_341 = fun bj_null_j_30 -> (
                                input_j_340 = input);
                            flatten_fun_j_343 = fun expr_b_11 -> (
                                var_j_342 = expr_b_11);
                            record_j_344 = {checker = flatten_fun_j_339, generator = flatten_fun_j_341, wrapper = flatten_fun_j_343};
                            proj_j_345 = record_j_344.checker;
                            var_j_346 = arg_assume_b_15;
                            appl_j_347 = proj_j_345 var_j_346;
                            if_j_372 = appl_j_347 ? (
                                    bool_j_348 = false;
                                    fail_b_13 = bool_j_348;
                                    flatten_fun_j_357 = fun expr_b_12 -> (
                                        var_j_349 = expr_b_12;
                                        m_match_bool_j_351 = var_j_349 ~ any;
                                        m_match_bool_j_354 = var_j_349 ~ int;
                                        m_match_cond_j_355 = m_match_bool_j_354 ? (
                                                bool_j_356 = true
                                            ) : (
                                                m_match_cond_j_352 = m_match_bool_j_351 ? (
                                                        var_j_353 = fail_b_13
                                                    ) : (
                                                        void_j_350 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_359 = fun bj_null_j_31 -> (
                                        input_j_358 = input);
                                    flatten_fun_j_361 = fun expr_b_14 -> (
                                        var_j_360 = expr_b_14);
                                    record_j_362 = {checker = flatten_fun_j_357, generator = flatten_fun_j_359, wrapper = flatten_fun_j_361};
                                    proj_j_363 = record_j_362.generator;
                                    int_j_364 = 0;
                                    appl_j_365 = proj_j_363 int_j_364
                                ) : (
                                    bool_j_366 = false;
                                    fail_b_16 = bool_j_366;
                                    var_j_367 = fail_b_16;
                                    assert_pred_j_368 = var_j_367;
                                    assert_res_j_369 = assert_pred_j_368 ? (
                                            assert_res_true_j_370 = {}
                                        ) : (
                                            ab_j_371 = abort
                                        )
                                )));
                    flatten_fun_j_420 = fun expr_b_32 -> (
                        flatten_fun_j_419 = fun arg_b_33 -> (
                            bool_j_375 = false;
                            fail_b_27 = bool_j_375;
                            flatten_fun_j_384 = fun expr_b_26 -> (
                                var_j_376 = expr_b_26;
                                m_match_bool_j_378 = var_j_376 ~ any;
                                m_match_bool_j_381 = var_j_376 ~ int;
                                m_match_cond_j_382 = m_match_bool_j_381 ? (
                                        bool_j_383 = true
                                    ) : (
                                        m_match_cond_j_379 = m_match_bool_j_378 ? (
                                                var_j_380 = fail_b_27
                                            ) : (
                                                void_j_377 = {}
                                            )
                                    ));
                            flatten_fun_j_386 = fun bj_null_j_33 -> (
                                input_j_385 = input);
                            flatten_fun_j_388 = fun expr_b_28 -> (
                                var_j_387 = expr_b_28);
                            record_j_389 = {checker = flatten_fun_j_384, generator = flatten_fun_j_386, wrapper = flatten_fun_j_388};
                            proj_j_390 = record_j_389.checker;
                            var_j_391 = arg_b_33;
                            m_i_867 = proj_j_390 ~ fun;
                            appl_j_392 = m_i_867 ? (
                                    c_appl_i_868 = proj_j_390 var_j_391
                                ) : (
                                    ab_i_869 = abort
                                );
                            m_i_870 = appl_j_392 ~ bool;
                            if_j_418 = m_i_870 ? (
                                    c_cond_i_877 = appl_j_392 ? (
                                            bool_j_393 = false;
                                            fail_b_30 = bool_j_393;
                                            flatten_fun_j_402 = fun expr_b_29 -> (
                                                var_j_394 = expr_b_29;
                                                m_match_bool_j_396 = var_j_394 ~ any;
                                                m_match_bool_j_399 = var_j_394 ~ int;
                                                m_match_cond_j_400 = m_match_bool_j_399 ? (
                                                        bool_j_401 = true
                                                    ) : (
                                                        m_match_cond_j_397 = m_match_bool_j_396 ? (
                                                                var_j_398 = fail_b_30
                                                            ) : (
                                                                void_j_395 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_404 = fun bj_null_j_34 -> (
                                                input_j_403 = input);
                                            flatten_fun_j_406 = fun expr_b_31 -> (
                                                var_j_405 = expr_b_31);
                                            record_j_407 = {checker = flatten_fun_j_402, generator = flatten_fun_j_404, wrapper = flatten_fun_j_406};
                                            proj_j_408 = record_j_407.wrapper;
                                            var_j_409 = expr_b_32;
                                            var_j_410 = arg_b_33;
                                            m_i_871 = var_j_409 ~ fun;
                                            appl_j_411 = m_i_871 ? (
                                                    c_appl_i_872 = var_j_409 var_j_410
                                                ) : (
                                                    ab_i_873 = abort
                                                );
                                            m_i_874 = proj_j_408 ~ fun;
                                            appl_j_412 = m_i_874 ? (
                                                    c_appl_i_875 = proj_j_408 appl_j_411
                                                ) : (
                                                    ab_i_876 = abort
                                                )
                                        ) : (
                                            bool_j_413 = false;
                                            assert_pred_j_414 = bool_j_413;
                                            assert_res_j_415 = assert_pred_j_414 ? (
                                                    assert_res_true_j_416 = 
                                                        {}
                                                ) : (
                                                    ab_j_417 = abort
                                                )
                                        )
                                ) : (
                                    ab_i_878 = abort
                                )));
                    record_j_421 = {checker = flatten_fun_j_329, generator = flatten_fun_j_374, wrapper = flatten_fun_j_420};
                    proj_j_422 = record_j_421.generator;
                    int_j_423 = 0;
                    appl_j_424 = proj_j_422 int_j_423;
                    candidate_b_34 = appl_j_424;
                    flatten_fun_j_430 = fun f_j_35 -> (
                        int_j_425 = 0;
                        var_j_426 = f_j_35;
                        int_j_427 = 0;
                        m_i_879 = var_j_426 ~ fun;
                        appl_j_428 = m_i_879 ? (
                                c_appl_i_880 = var_j_426 int_j_427
                            ) : (
                                ab_i_881 = abort
                            );
                        m_bl_i_882 = int_j_425 ~ int;
                        m_br_i_883 = appl_j_428 ~ int;
                        m_b_i_884 = m_bl_i_882 and m_br_i_883;
                        binop_j_429 = m_b_i_884 ? (
                                c_binop_i_885 = int_j_425 <= appl_j_428
                            ) : (
                                ab_i_886 = abort
                            ));
                    var_j_431 = candidate_b_34;
                    appl_j_432 = flatten_fun_j_430 var_j_431;
                    if_j_436 = appl_j_432 ? (
                            var_j_433 = candidate_b_34
                        ) : (
                            bool_j_434 = false;
                            assume_j_435 = assume bool_j_434
                        ));
                flatten_fun_j_439 = fun expr_b_63 -> (
                    var_j_438 = expr_b_63);
                record_j_440 = {checker = flatten_fun_j_289, generator = flatten_fun_j_437, wrapper = flatten_fun_j_439};
                proj_j_441 = record_j_440.wrapper;
                var_j_442 = appl_j_70;
                var_j_443 = n_j_39;
                m_i_887 = var_j_442 ~ fun;
                appl_j_444 = m_i_887 ? (
                        c_appl_i_888 = var_j_442 var_j_443
                    ) : (
                        ab_i_889 = abort
                    );
                xs_j_38 = appl_j_444;
                var_j_445 = appl_j_106;
                var_j_446 = compose;
                m_i_890 = var_j_445 ~ fun;
                appl_j_447 = m_i_890 ? (
                        c_appl_i_891 = var_j_445 var_j_446
                    ) : (
                        ab_i_892 = abort
                    );
                flatten_fun_j_449 = fun x_j_37 -> (
                    var_j_448 = x_j_37);
                m_i_893 = appl_j_447 ~ fun;
                appl_j_450 = m_i_893 ? (
                        c_appl_i_894 = appl_j_447 flatten_fun_j_449
                    ) : (
                        ab_i_895 = abort
                    );
                var_j_451 = xs_j_38;
                m_i_896 = appl_j_450 ~ fun;
                appl_j_452 = m_i_896 ? (
                        c_appl_i_897 = appl_j_450 var_j_451
                    ) : (
                        ab_i_898 = abort
                    );
                m_i_899 = proj_j_441 ~ fun;
                appl_j_453 = m_i_899 ? (
                        c_appl_i_900 = proj_j_441 appl_j_452
                    ) : (
                        ab_i_901 = abort
                    )
            ) : (
                var_j_454 = arg_check_b_1;
                assert_pred_j_455 = var_j_454;
                assert_res_j_456 = assert_pred_j_455 ? (
                        assert_res_true_j_457 = {}
                    ) : (
                        ab_j_458 = abort
                    )
            ));
    var_j_461 = n_j_39;
    appl_j_462 = flatten_fun_j_460 var_j_461);
main = main_j_463;
bool_j_464 = false;
fail_b_4 = bool_j_464;
flatten_fun_j_473 = fun expr_b_3 -> (
    var_j_465 = expr_b_3;
    m_match_bool_j_467 = var_j_465 ~ any;
    m_match_bool_j_470 = var_j_465 ~ int;
    m_match_cond_j_471 = m_match_bool_j_470 ? (
            bool_j_472 = true
        ) : (
            m_match_cond_j_468 = m_match_bool_j_467 ? (
                    var_j_469 = fail_b_4
                ) : (
                    void_j_466 = {}
                )
        ));
flatten_fun_j_475 = fun bj_null -> (
    input_j_474 = input);
flatten_fun_j_477 = fun expr_b_5 -> (
    var_j_476 = expr_b_5);
record_j_478 = {checker = flatten_fun_j_473, generator = flatten_fun_j_475, wrapper = flatten_fun_j_477};
proj_j_479 = record_j_478.generator;
int_j_480 = 0;
appl_j_481 = proj_j_479 int_j_480;
n_b_119 = appl_j_481;
flatten_fun_j_632 = fun expr_b_115 -> (
    flatten_fun_j_521 = fun expr_b_104 -> (
        bool_j_482 = false;
        fail_b_99 = bool_j_482;
        flatten_fun_j_491 = fun expr_b_98 -> (
            var_j_483 = expr_b_98;
            m_match_bool_j_485 = var_j_483 ~ any;
            m_match_bool_j_488 = var_j_483 ~ int;
            m_match_cond_j_489 = m_match_bool_j_488 ? (
                    bool_j_490 = true
                ) : (
                    m_match_cond_j_486 = m_match_bool_j_485 ? (
                            var_j_487 = fail_b_99
                        ) : (
                            void_j_484 = {}
                        )
                ));
        flatten_fun_j_493 = fun bj_null_j_2 -> (
            input_j_492 = input);
        flatten_fun_j_495 = fun expr_b_100 -> (
            var_j_494 = expr_b_100);
        record_j_496 = {checker = flatten_fun_j_491, generator = flatten_fun_j_493, wrapper = flatten_fun_j_495};
        proj_j_497 = record_j_496.generator;
        int_j_498 = 0;
        appl_j_499 = proj_j_497 int_j_498;
        arg_assert_b_105 = appl_j_499;
        var_j_500 = expr_b_104;
        var_j_501 = arg_assert_b_105;
        appl_j_502 = var_j_500 var_j_501;
        fun_ret_b_106 = appl_j_502;
        bool_j_503 = false;
        fail_b_102 = bool_j_503;
        flatten_fun_j_512 = fun expr_b_101 -> (
            var_j_504 = expr_b_101;
            m_match_bool_j_506 = var_j_504 ~ any;
            m_match_bool_j_509 = var_j_504 ~ int;
            m_match_cond_j_510 = m_match_bool_j_509 ? (
                    bool_j_511 = true
                ) : (
                    m_match_cond_j_507 = m_match_bool_j_506 ? (
                            var_j_508 = fail_b_102
                        ) : (
                            void_j_505 = {}
                        )
                ));
        flatten_fun_j_514 = fun bj_null_j_3 -> (
            input_j_513 = input);
        flatten_fun_j_516 = fun expr_b_103 -> (
            var_j_515 = expr_b_103);
        record_j_517 = {checker = flatten_fun_j_512, generator = flatten_fun_j_514, wrapper = flatten_fun_j_516};
        proj_j_518 = record_j_517.checker;
        var_j_519 = fun_ret_b_106;
        appl_j_520 = proj_j_518 var_j_519);
    flatten_fun_j_566 = fun bj_null_j_6 -> (
        flatten_fun_j_565 = fun arg_assume_b_96 -> (
            bool_j_522 = false;
            fail_b_91 = bool_j_522;
            flatten_fun_j_531 = fun expr_b_90 -> (
                var_j_523 = expr_b_90;
                m_match_bool_j_525 = var_j_523 ~ any;
                m_match_bool_j_528 = var_j_523 ~ int;
                m_match_cond_j_529 = m_match_bool_j_528 ? (
                        bool_j_530 = true
                    ) : (
                        m_match_cond_j_526 = m_match_bool_j_525 ? (
                                var_j_527 = fail_b_91
                            ) : (
                                void_j_524 = {}
                            )
                    ));
            flatten_fun_j_533 = fun bj_null_j_4 -> (
                input_j_532 = input);
            flatten_fun_j_535 = fun expr_b_92 -> (
                var_j_534 = expr_b_92);
            record_j_536 = {checker = flatten_fun_j_531, generator = flatten_fun_j_533, wrapper = flatten_fun_j_535};
            proj_j_537 = record_j_536.checker;
            var_j_538 = arg_assume_b_96;
            appl_j_539 = proj_j_537 var_j_538;
            if_j_564 = appl_j_539 ? (
                    bool_j_540 = false;
                    fail_b_94 = bool_j_540;
                    flatten_fun_j_549 = fun expr_b_93 -> (
                        var_j_541 = expr_b_93;
                        m_match_bool_j_543 = var_j_541 ~ any;
                        m_match_bool_j_546 = var_j_541 ~ int;
                        m_match_cond_j_547 = m_match_bool_j_546 ? (
                                bool_j_548 = true
                            ) : (
                                m_match_cond_j_544 = m_match_bool_j_543 ? (
                                        var_j_545 = fail_b_94
                                    ) : (
                                        void_j_542 = {}
                                    )
                            ));
                    flatten_fun_j_551 = fun bj_null_j_5 -> (
                        input_j_550 = input);
                    flatten_fun_j_553 = fun expr_b_95 -> (
                        var_j_552 = expr_b_95);
                    record_j_554 = {checker = flatten_fun_j_549, generator = flatten_fun_j_551, wrapper = flatten_fun_j_553};
                    proj_j_555 = record_j_554.generator;
                    int_j_556 = 0;
                    appl_j_557 = proj_j_555 int_j_556
                ) : (
                    bool_j_558 = false;
                    fail_b_97 = bool_j_558;
                    var_j_559 = fail_b_97;
                    assert_pred_j_560 = var_j_559;
                    assert_res_j_561 = assert_pred_j_560 ? (
                            assert_res_true_j_562 = {}
                        ) : (
                            ab_j_563 = abort
                        )
                )));
    flatten_fun_j_612 = fun expr_b_113 -> (
        flatten_fun_j_611 = fun arg_b_114 -> (
            bool_j_567 = false;
            fail_b_108 = bool_j_567;
            flatten_fun_j_576 = fun expr_b_107 -> (
                var_j_568 = expr_b_107;
                m_match_bool_j_570 = var_j_568 ~ any;
                m_match_bool_j_573 = var_j_568 ~ int;
                m_match_cond_j_574 = m_match_bool_j_573 ? (
                        bool_j_575 = true
                    ) : (
                        m_match_cond_j_571 = m_match_bool_j_570 ? (
                                var_j_572 = fail_b_108
                            ) : (
                                void_j_569 = {}
                            )
                    ));
            flatten_fun_j_578 = fun bj_null_j_7 -> (
                input_j_577 = input);
            flatten_fun_j_580 = fun expr_b_109 -> (
                var_j_579 = expr_b_109);
            record_j_581 = {checker = flatten_fun_j_576, generator = flatten_fun_j_578, wrapper = flatten_fun_j_580};
            proj_j_582 = record_j_581.checker;
            var_j_583 = arg_b_114;
            m_i_902 = proj_j_582 ~ fun;
            appl_j_584 = m_i_902 ? (
                    c_appl_i_903 = proj_j_582 var_j_583
                ) : (
                    ab_i_904 = abort
                );
            m_i_905 = appl_j_584 ~ bool;
            if_j_610 = m_i_905 ? (
                    c_cond_i_912 = appl_j_584 ? (
                            bool_j_585 = false;
                            fail_b_111 = bool_j_585;
                            flatten_fun_j_594 = fun expr_b_110 -> (
                                var_j_586 = expr_b_110;
                                m_match_bool_j_588 = var_j_586 ~ any;
                                m_match_bool_j_591 = var_j_586 ~ int;
                                m_match_cond_j_592 = m_match_bool_j_591 ? (
                                        bool_j_593 = true
                                    ) : (
                                        m_match_cond_j_589 = m_match_bool_j_588 ? (
                                                var_j_590 = fail_b_111
                                            ) : (
                                                void_j_587 = {}
                                            )
                                    ));
                            flatten_fun_j_596 = fun bj_null_j_8 -> (
                                input_j_595 = input);
                            flatten_fun_j_598 = fun expr_b_112 -> (
                                var_j_597 = expr_b_112);
                            record_j_599 = {checker = flatten_fun_j_594, generator = flatten_fun_j_596, wrapper = flatten_fun_j_598};
                            proj_j_600 = record_j_599.wrapper;
                            var_j_601 = expr_b_113;
                            var_j_602 = arg_b_114;
                            m_i_906 = var_j_601 ~ fun;
                            appl_j_603 = m_i_906 ? (
                                    c_appl_i_907 = var_j_601 var_j_602
                                ) : (
                                    ab_i_908 = abort
                                );
                            m_i_909 = proj_j_600 ~ fun;
                            appl_j_604 = m_i_909 ? (
                                    c_appl_i_910 = proj_j_600 appl_j_603
                                ) : (
                                    ab_i_911 = abort
                                )
                        ) : (
                            bool_j_605 = false;
                            assert_pred_j_606 = bool_j_605;
                            assert_res_j_607 = assert_pred_j_606 ? (
                                    assert_res_true_j_608 = {}
                                ) : (
                                    ab_j_609 = abort
                                )
                        )
                ) : (
                    ab_i_913 = abort
                )));
    record_j_613 = {checker = flatten_fun_j_521, generator = flatten_fun_j_566, wrapper = flatten_fun_j_612};
    proj_j_614 = record_j_613.checker;
    var_j_615 = expr_b_115;
    appl_j_616 = proj_j_614 var_j_615;
    t_check_b_116 = appl_j_616;
    var_j_617 = t_check_b_116;
    if_j_631 = var_j_617 ? (
            bool_j_618 = false;
            pred_check_b_117 = bool_j_618;
            flatten_fun_j_624 = fun f_j_9 -> (
                int_j_619 = 0;
                var_j_620 = f_j_9;
                int_j_621 = 0;
                m_i_914 = var_j_620 ~ fun;
                appl_j_622 = m_i_914 ? (
                        c_appl_i_915 = var_j_620 int_j_621
                    ) : (
                        ab_i_916 = abort
                    );
                m_bl_i_917 = int_j_619 ~ int;
                m_br_i_918 = appl_j_622 ~ int;
                m_b_i_919 = m_bl_i_917 and m_br_i_918;
                binop_j_623 = m_b_i_919 ? (
                        c_binop_i_920 = int_j_619 <= appl_j_622
                    ) : (
                        ab_i_921 = abort
                    ));
            var_j_625 = expr_b_115;
            appl_j_626 = flatten_fun_j_624 var_j_625;
            if_j_629 = appl_j_626 ? (
                    bool_j_627 = true
                ) : (
                    var_j_628 = pred_check_b_117
                )
        ) : (
            var_j_630 = t_check_b_116
        ));
flatten_fun_j_780 = fun bj_null_j_18 -> (
    flatten_fun_j_672 = fun expr_b_78 -> (
        bool_j_633 = false;
        fail_b_73 = bool_j_633;
        flatten_fun_j_642 = fun expr_b_72 -> (
            var_j_634 = expr_b_72;
            m_match_bool_j_636 = var_j_634 ~ any;
            m_match_bool_j_639 = var_j_634 ~ int;
            m_match_cond_j_640 = m_match_bool_j_639 ? (
                    bool_j_641 = true
                ) : (
                    m_match_cond_j_637 = m_match_bool_j_636 ? (
                            var_j_638 = fail_b_73
                        ) : (
                            void_j_635 = {}
                        )
                ));
        flatten_fun_j_644 = fun bj_null_j_10 -> (
            input_j_643 = input);
        flatten_fun_j_646 = fun expr_b_74 -> (
            var_j_645 = expr_b_74);
        record_j_647 = {checker = flatten_fun_j_642, generator = flatten_fun_j_644, wrapper = flatten_fun_j_646};
        proj_j_648 = record_j_647.generator;
        int_j_649 = 0;
        appl_j_650 = proj_j_648 int_j_649;
        arg_assert_b_79 = appl_j_650;
        var_j_651 = expr_b_78;
        var_j_652 = arg_assert_b_79;
        appl_j_653 = var_j_651 var_j_652;
        fun_ret_b_80 = appl_j_653;
        bool_j_654 = false;
        fail_b_76 = bool_j_654;
        flatten_fun_j_663 = fun expr_b_75 -> (
            var_j_655 = expr_b_75;
            m_match_bool_j_657 = var_j_655 ~ any;
            m_match_bool_j_660 = var_j_655 ~ int;
            m_match_cond_j_661 = m_match_bool_j_660 ? (
                    bool_j_662 = true
                ) : (
                    m_match_cond_j_658 = m_match_bool_j_657 ? (
                            var_j_659 = fail_b_76
                        ) : (
                            void_j_656 = {}
                        )
                ));
        flatten_fun_j_665 = fun bj_null_j_11 -> (
            input_j_664 = input);
        flatten_fun_j_667 = fun expr_b_77 -> (
            var_j_666 = expr_b_77);
        record_j_668 = {checker = flatten_fun_j_663, generator = flatten_fun_j_665, wrapper = flatten_fun_j_667};
        proj_j_669 = record_j_668.checker;
        var_j_670 = fun_ret_b_80;
        appl_j_671 = proj_j_669 var_j_670);
    flatten_fun_j_717 = fun bj_null_j_14 -> (
        flatten_fun_j_716 = fun arg_assume_b_70 -> (
            bool_j_673 = false;
            fail_b_65 = bool_j_673;
            flatten_fun_j_682 = fun expr_b_64 -> (
                var_j_674 = expr_b_64;
                m_match_bool_j_676 = var_j_674 ~ any;
                m_match_bool_j_679 = var_j_674 ~ int;
                m_match_cond_j_680 = m_match_bool_j_679 ? (
                        bool_j_681 = true
                    ) : (
                        m_match_cond_j_677 = m_match_bool_j_676 ? (
                                var_j_678 = fail_b_65
                            ) : (
                                void_j_675 = {}
                            )
                    ));
            flatten_fun_j_684 = fun bj_null_j_12 -> (
                input_j_683 = input);
            flatten_fun_j_686 = fun expr_b_66 -> (
                var_j_685 = expr_b_66);
            record_j_687 = {checker = flatten_fun_j_682, generator = flatten_fun_j_684, wrapper = flatten_fun_j_686};
            proj_j_688 = record_j_687.checker;
            var_j_689 = arg_assume_b_70;
            appl_j_690 = proj_j_688 var_j_689;
            if_j_715 = appl_j_690 ? (
                    bool_j_691 = false;
                    fail_b_68 = bool_j_691;
                    flatten_fun_j_700 = fun expr_b_67 -> (
                        var_j_692 = expr_b_67;
                        m_match_bool_j_694 = var_j_692 ~ any;
                        m_match_bool_j_697 = var_j_692 ~ int;
                        m_match_cond_j_698 = m_match_bool_j_697 ? (
                                bool_j_699 = true
                            ) : (
                                m_match_cond_j_695 = m_match_bool_j_694 ? (
                                        var_j_696 = fail_b_68
                                    ) : (
                                        void_j_693 = {}
                                    )
                            ));
                    flatten_fun_j_702 = fun bj_null_j_13 -> (
                        input_j_701 = input);
                    flatten_fun_j_704 = fun expr_b_69 -> (
                        var_j_703 = expr_b_69);
                    record_j_705 = {checker = flatten_fun_j_700, generator = flatten_fun_j_702, wrapper = flatten_fun_j_704};
                    proj_j_706 = record_j_705.generator;
                    int_j_707 = 0;
                    appl_j_708 = proj_j_706 int_j_707
                ) : (
                    bool_j_709 = false;
                    fail_b_71 = bool_j_709;
                    var_j_710 = fail_b_71;
                    assert_pred_j_711 = var_j_710;
                    assert_res_j_712 = assert_pred_j_711 ? (
                            assert_res_true_j_713 = {}
                        ) : (
                            ab_j_714 = abort
                        )
                )));
    flatten_fun_j_763 = fun expr_b_87 -> (
        flatten_fun_j_762 = fun arg_b_88 -> (
            bool_j_718 = false;
            fail_b_82 = bool_j_718;
            flatten_fun_j_727 = fun expr_b_81 -> (
                var_j_719 = expr_b_81;
                m_match_bool_j_721 = var_j_719 ~ any;
                m_match_bool_j_724 = var_j_719 ~ int;
                m_match_cond_j_725 = m_match_bool_j_724 ? (
                        bool_j_726 = true
                    ) : (
                        m_match_cond_j_722 = m_match_bool_j_721 ? (
                                var_j_723 = fail_b_82
                            ) : (
                                void_j_720 = {}
                            )
                    ));
            flatten_fun_j_729 = fun bj_null_j_15 -> (
                input_j_728 = input);
            flatten_fun_j_731 = fun expr_b_83 -> (
                var_j_730 = expr_b_83);
            record_j_732 = {checker = flatten_fun_j_727, generator = flatten_fun_j_729, wrapper = flatten_fun_j_731};
            proj_j_733 = record_j_732.checker;
            var_j_734 = arg_b_88;
            m_i_922 = proj_j_733 ~ fun;
            appl_j_735 = m_i_922 ? (
                    c_appl_i_923 = proj_j_733 var_j_734
                ) : (
                    ab_i_924 = abort
                );
            m_i_925 = appl_j_735 ~ bool;
            if_j_761 = m_i_925 ? (
                    c_cond_i_932 = appl_j_735 ? (
                            bool_j_736 = false;
                            fail_b_85 = bool_j_736;
                            flatten_fun_j_745 = fun expr_b_84 -> (
                                var_j_737 = expr_b_84;
                                m_match_bool_j_739 = var_j_737 ~ any;
                                m_match_bool_j_742 = var_j_737 ~ int;
                                m_match_cond_j_743 = m_match_bool_j_742 ? (
                                        bool_j_744 = true
                                    ) : (
                                        m_match_cond_j_740 = m_match_bool_j_739 ? (
                                                var_j_741 = fail_b_85
                                            ) : (
                                                void_j_738 = {}
                                            )
                                    ));
                            flatten_fun_j_747 = fun bj_null_j_16 -> (
                                input_j_746 = input);
                            flatten_fun_j_749 = fun expr_b_86 -> (
                                var_j_748 = expr_b_86);
                            record_j_750 = {checker = flatten_fun_j_745, generator = flatten_fun_j_747, wrapper = flatten_fun_j_749};
                            proj_j_751 = record_j_750.wrapper;
                            var_j_752 = expr_b_87;
                            var_j_753 = arg_b_88;
                            m_i_926 = var_j_752 ~ fun;
                            appl_j_754 = m_i_926 ? (
                                    c_appl_i_927 = var_j_752 var_j_753
                                ) : (
                                    ab_i_928 = abort
                                );
                            m_i_929 = proj_j_751 ~ fun;
                            appl_j_755 = m_i_929 ? (
                                    c_appl_i_930 = proj_j_751 appl_j_754
                                ) : (
                                    ab_i_931 = abort
                                )
                        ) : (
                            bool_j_756 = false;
                            assert_pred_j_757 = bool_j_756;
                            assert_res_j_758 = assert_pred_j_757 ? (
                                    assert_res_true_j_759 = {}
                                ) : (
                                    ab_j_760 = abort
                                )
                        )
                ) : (
                    ab_i_933 = abort
                )));
    record_j_764 = {checker = flatten_fun_j_672, generator = flatten_fun_j_717, wrapper = flatten_fun_j_763};
    proj_j_765 = record_j_764.generator;
    int_j_766 = 0;
    appl_j_767 = proj_j_765 int_j_766;
    candidate_b_89 = appl_j_767;
    flatten_fun_j_773 = fun f_j_17 -> (
        int_j_768 = 0;
        var_j_769 = f_j_17;
        int_j_770 = 0;
        m_i_934 = var_j_769 ~ fun;
        appl_j_771 = m_i_934 ? (
                c_appl_i_935 = var_j_769 int_j_770
            ) : (
                ab_i_936 = abort
            );
        m_bl_i_937 = int_j_768 ~ int;
        m_br_i_938 = appl_j_771 ~ int;
        m_b_i_939 = m_bl_i_937 and m_br_i_938;
        binop_j_772 = m_b_i_939 ? (
                c_binop_i_940 = int_j_768 <= appl_j_771
            ) : (
                ab_i_941 = abort
            ));
    var_j_774 = candidate_b_89;
    appl_j_775 = flatten_fun_j_773 var_j_774;
    if_j_779 = appl_j_775 ? (
            var_j_776 = candidate_b_89
        ) : (
            bool_j_777 = false;
            assume_j_778 = assume bool_j_777
        ));
flatten_fun_j_782 = fun expr_b_118 -> (
    var_j_781 = expr_b_118);
record_j_783 = {checker = flatten_fun_j_632, generator = flatten_fun_j_780, wrapper = flatten_fun_j_782};
proj_j_784 = record_j_783.checker;
appl_j_787 = main n_b_119;
appl_j_788 = proj_j_784 appl_j_787;
check_res_b_120 = appl_j_788;
if_j_796 = check_res_b_120 ? (
        var_j_790 = main
    ) : (
        error_var_j_791 = check_res_b_120;
        assert_pred_j_792 = error_var_j_791;
        assert_res_j_793 = assert_pred_j_792 ? (
                assert_res_true_j_794 = {}
            ) : (
                ab_j_795 = abort
            )
    );
i_result = if_j_796