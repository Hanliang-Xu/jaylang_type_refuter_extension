#lang racket

(provide (all-defined-out))

(struct Experiment (name tests) #:transparent)
(struct Test (name cases) #:transparent)
(struct Case (source subject result) #:transparent)
(struct Subject (analysis k) #:transparent)
(struct Result (running-time) #:transparent)

(define experiments
  `(,(Experiment
      'baseline
      `(,(Test 'ack `(,(Case 'ack (Subject 'ddpa 0) #f) ,(Case 'ack (Subject 'p4f 0) #f)))
        ,(Test 'blur `(,(Case 'blur (Subject 'ddpa 0) #f) ,(Case 'blur (Subject 'p4f 0) #f)))
        ,(Test 'church `(,(Case 'church (Subject 'ddpa 0) #f) ,(Case 'church (Subject 'p4f 0) #f)))
        ,(Test 'cpstak `(,(Case 'cpstak (Subject 'ddpa 0) #f) ,(Case 'cpstak (Subject 'p4f 0) #f)))
        ,(Test 'deriv `(,(Case 'deriv (Subject 'ddpa 0) #f) ,(Case 'deriv (Subject 'p4f 0) #f)))
        ,(Test 'eta `(,(Case 'eta (Subject 'ddpa 0) #f) ,(Case 'eta (Subject 'p4f 0) #f)))
        ,(Test 'facehugger `(,(Case 'facehugger (Subject 'ddpa 0) #f) ,(Case 'facehugger (Subject 'p4f 0) #f)))
        ,(Test 'flatten `(,(Case 'flatten (Subject 'ddpa 0) #f) ,(Case 'flatten (Subject 'p4f 0) #f)))
        ,(Test 'kcfa-2 `(,(Case 'kcfa-2 (Subject 'ddpa 0) #f) ,(Case 'kcfa-2 (Subject 'p4f 0) #f)))
        ,(Test 'kcfa-3 `(,(Case 'kcfa-3 (Subject 'ddpa 0) #f) ,(Case 'kcfa-3 (Subject 'p4f 0) #f)))
        ,(Test 'loop2 `(,(Case 'loop2-1 (Subject 'ddpa 0) #f) ,(Case 'loop2-1 (Subject 'p4f 0) #f)))
        ,(Test 'map `(,(Case 'map (Subject 'ddpa 0) #f) ,(Case 'map (Subject 'p4f 0) #f)))
        ,(Test 'mj09 `(,(Case 'mj09 (Subject 'ddpa 0) #f) ,(Case 'mj09 (Subject 'p4f 0) #f)))
        ,(Test 'primtest `(,(Case 'primtest (Subject 'ddpa 0) #f) ,(Case 'primtest (Subject 'p4f 0) #f)))
        ,(Test 'regex `(,(Case 'regex (Subject 'ddpa 0) #f) ,(Case 'regex (Subject 'p4f 0) #f)))
        ,(Test 'rsa `(,(Case 'rsa (Subject 'ddpa 0) #f) ,(Case 'rsa (Subject 'p4f 0) #f)))
        ,(Test 'sat-1 `(,(Case 'sat-1 (Subject 'ddpa 0) #f) ,(Case 'sat-1 (Subject 'p4f 0) #f)))
        ,(Test 'sat-2 `(,(Case 'sat-2 (Subject 'ddpa 0) #f) ,(Case 'sat-2 (Subject 'p4f 0) #f)))
        ,(Test 'sat-3 `(,(Case 'sat-3 (Subject 'ddpa 0) #f) ,(Case 'sat-3 (Subject 'p4f 0) #f)))
        ,(Test 'state `(,(Case 'state (Subject 'ddpa 0) #f)))
        ,(Test 'tak `(,(Case 'tak (Subject 'ddpa 0) #f) ,(Case 'tak (Subject 'p4f 0) #f)))))
    ,(Experiment
      'polyvariance
      `(,(Test 'ack `(,(Case 'ack (Subject 'ddpa 1) #f) ,(Case 'ack (Subject 'p4f 1) #f)))
        ,(Test 'blur `(,(Case 'blur (Subject 'ddpa 1) #f) ,(Case 'blur (Subject 'p4f 1) #f)))
        ,(Test 'church `(,(Case 'church (Subject 'ddpa 1) #f) ,(Case 'church (Subject 'p4f 1) #f)))
        ,(Test 'cpstak `(,(Case 'cpstak (Subject 'ddpa 1) #f) ,(Case 'cpstak (Subject 'p4f 1) #f)))
        ,(Test 'deriv `(,(Case 'deriv (Subject 'ddpa 1) #f) ,(Case 'deriv (Subject 'p4f 1) #f)))
        ,(Test 'eta `(,(Case 'eta (Subject 'ddpa 1) #f) ,(Case 'eta (Subject 'p4f 1) #f)))
        ,(Test 'facehugger `(,(Case 'facehugger (Subject 'ddpa 1) #f) ,(Case 'facehugger (Subject 'p4f 1) #f)))
        ,(Test 'flatten `(,(Case 'flatten (Subject 'ddpa 1) #f) ,(Case 'flatten (Subject 'p4f 1) #f)))
        ,(Test 'kcfa-2 `(,(Case 'kcfa-2 (Subject 'ddpa 5) #f) ,(Case 'kcfa-2 (Subject 'p4f 1) #f)))
        ,(Test 'kcfa-3 `(,(Case 'kcfa-3 (Subject 'ddpa 7) #f) ,(Case 'kcfa-3 (Subject 'p4f 1) #f)))
        ,(Test 'loop2 `(,(Case 'loop2-1 (Subject 'ddpa 1) #f) ,(Case 'loop2-1 (Subject 'p4f 1) #f)))
        ,(Test 'map `(,(Case 'map (Subject 'ddpa 1) #f) ,(Case 'map (Subject 'p4f 1) #f)))
        ,(Test 'mj09 `(,(Case 'mj09 (Subject 'ddpa 1) #f) ,(Case 'mj09 (Subject 'p4f 1) #f)))
        ,(Test 'primtest `(,(Case 'primtest (Subject 'ddpa 1) #f) ,(Case 'primtest (Subject 'p4f 1) #f)))
        ,(Test 'regex `(,(Case 'regex (Subject 'ddpa 1) #f) ,(Case 'regex (Subject 'p4f 1) #f)))
        ,(Test 'rsa `(,(Case 'rsa (Subject 'ddpa 1) #f) ,(Case 'rsa (Subject 'p4f 1) #f)))
        ,(Test 'sat-1 `(,(Case 'sat-1 (Subject 'ddpa 4) #f) ,(Case 'sat-1 (Subject 'p4f 1) #f)))
        ,(Test 'sat-2 `(,(Case 'sat-2 (Subject 'ddpa 4) #f) ,(Case 'sat-2 (Subject 'p4f 1) #f)))
        ,(Test 'sat-3 `(,(Case 'sat-3 (Subject 'ddpa 4) #f) ,(Case 'sat-3 (Subject 'p4f 1) #f)))
        ,(Test 'state `(,(Case 'state (Subject 'ddpa 1) #f)))
        ,(Test 'tak `(,(Case 'tak (Subject 'ddpa 1) #f) ,(Case 'tak (Subject 'p4f 1) #f)))))))
