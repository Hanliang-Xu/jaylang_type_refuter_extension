let nelist xs =
  match xs with
  | [] -> false
  | x::xs -> true
  end
in
let min (x : int) (y : int) : int = 
  if (x < y) then x else y
in
letd rec argmin (f : 'a -> int) : {. List 'a | (fun x -> nelist x) } -> 'a = fun xs ->
  match xs with
  | [] -> 0
  | x::xs -> min (f x) (argmin f xs)
  end
in
argmin