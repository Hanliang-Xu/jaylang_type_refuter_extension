let rec tak (x : int) (y : int) (z : int) (k : int -> int) : int =
  if true then
    (k z)
  else
    (tak (x-1) y z (fun v1 -> 
      tak (y-1) z x (fun v2 ->
        tak (z-1) x y (fun v3 ->
          tak v1 v2 v3 k))))
in
let takk a b c = tak a b c (fun x -> x) in
takk