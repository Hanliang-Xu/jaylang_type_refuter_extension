i_first = {};
flatten_fun_j_52 = fun expr_b_7 -> (
    bool_j_10 = false;
    rec_fail_b_6 = bool_j_10;
    bool_j_11 = false;
    rec_fail_b_5 = bool_j_11;
    bool_j_12 = false;
    rec_fail_b_4 = bool_j_12;
    var_j_13 = expr_b_7;
    m_match_bool_j_15 = var_j_13 ~ any;
    m_match_bool_j_18 = var_j_13 ~ {bj_actual_rec, _};
    m_match_cond_j_19 = m_match_bool_j_18 ? (
            var_j_20 = expr_b_7;
            proj_j_21 = var_j_20.bj_decl_lbls;
            m_match_bool_j_23 = proj_j_21 ~ any;
            m_match_bool_j_26 = proj_j_21 ~ {a, _};
            m_match_cond_j_27 = m_match_bool_j_26 ? (
                    a_j_0 = proj_j_21.a;
                    var_j_28 = expr_b_7;
                    proj_j_29 = var_j_28.bj_actual_rec;
                    m_match_bool_j_31 = proj_j_29 ~ any;
                    m_match_bool_j_34 = proj_j_29 ~ {a, _};
                    m_match_cond_j_35 = m_match_bool_j_34 ? (
                            a = proj_j_29.a;
                            bool_j_36 = false;
                            fail_b_9 = bool_j_36;
                            flatten_fun_j_45 = fun expr_b_8 -> (
                                var_j_37 = expr_b_8;
                                m_match_bool_j_39 = var_j_37 ~ any;
                                m_match_bool_j_42 = var_j_37 ~ int;
                                m_match_cond_j_43 = m_match_bool_j_42 ? (
                                        bool_j_44 = true
                                    ) : (
                                        m_match_cond_j_40 = m_match_bool_j_39 ? (
                                                var_j_41 = fail_b_9
                                            ) : (
                                                void_j_38 = {}
                                            )
                                    ));
                            flatten_fun_j_47 = fun bj_null -> (
                                input_j_46 = input);
                            record_j_48 = {checker = flatten_fun_j_45, generator = flatten_fun_j_47};
                            proj_j_49 = record_j_48.checker;
                            var_j_50 = a;
                            appl_j_51 = proj_j_49 var_j_50
                        ) : (
                            m_match_cond_j_32 = m_match_bool_j_31 ? (
                                    var_j_33 = rec_fail_b_4
                                ) : (
                                    void_j_30 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_24 = m_match_bool_j_23 ? (
                            var_j_25 = rec_fail_b_5
                        ) : (
                            void_j_22 = {}
                        )
                )
        ) : (
            m_match_cond_j_16 = m_match_bool_j_15 ? (
                    var_j_17 = rec_fail_b_6
                ) : (
                    void_j_14 = {}
                )
        ));
flatten_fun_j_74 = fun bj_null_j_2 -> (
    bool_j_53 = false;
    fail_b_2 = bool_j_53;
    flatten_fun_j_62 = fun expr_b_1 -> (
        var_j_54 = expr_b_1;
        m_match_bool_j_56 = var_j_54 ~ any;
        m_match_bool_j_59 = var_j_54 ~ int;
        m_match_cond_j_60 = m_match_bool_j_59 ? (
                bool_j_61 = true
            ) : (
                m_match_cond_j_57 = m_match_bool_j_56 ? (
                        var_j_58 = fail_b_2
                    ) : (
                        void_j_55 = {}
                    )
            ));
    flatten_fun_j_64 = fun bj_null_j_1 -> (
        input_j_63 = input);
    record_j_65 = {checker = flatten_fun_j_62, generator = flatten_fun_j_64};
    proj_j_66 = record_j_65.generator;
    int_j_67 = 0;
    appl_j_68 = proj_j_66 int_j_67;
    a_b_0 = appl_j_68;
    var_j_69 = a_b_0;
    record_j_70 = {a = var_j_69};
    record_j_71 = {};
    record_j_72 = {a = record_j_71};
    record_j_73 = {bj_actual_rec = record_j_70, bj_decl_lbls = record_j_72});
record_j_75 = {checker = flatten_fun_j_52, generator = flatten_fun_j_74};
t = record_j_75;
is_a_j_96 = fun x_j_9 -> (
    bool_j_76 = false;
    fail_b_12 = bool_j_76;
    var_j_77 = x_j_9;
    m_match_bool_j_79 = var_j_77 ~ {bj_untouched, _};
    m_match_bool_j_86 = var_j_77 ~ {bj_actual_rec, _};
    m_match_cond_j_87 = m_match_bool_j_86 ? (
            actual_rec_b_21 = var_j_77.bj_actual_rec;
            var_j_88 = x_j_9;
            proj_j_89 = var_j_88.bj_decl_lbls;
            m_match_bool_j_91 = proj_j_89 ~ {a};
            m_match_cond_j_92 = m_match_bool_j_91 ? (
                    a_j_8 = proj_j_89.a;
                    var_j_93 = actual_rec_b_21;
                    proj_j_94 = var_j_93.a;
                    a_j_7 = proj_j_94;
                    bool_j_95 = true
                ) : (
                    ab_j_90 = abort
                )
        ) : (
            m_match_cond_j_80 = m_match_bool_j_79 ? (
                    var_j_81 = fail_b_12;
                    assert_pred_j_82 = var_j_81;
                    assert_res_j_83 = assert_pred_j_82 ? (
                            assert_res_true_j_84 = {}
                        ) : (
                            ab_j_85 = abort
                        )
                ) : (
                    ab_j_78 = abort
                )
        ));
is_a = is_a_j_96;
flatten_fun_j_115 = fun expr_b_14 -> (
    var_j_97 = t;
    proj_j_98 = var_j_97.checker;
    var_j_99 = expr_b_14;
    appl_j_100 = proj_j_98 var_j_99;
    t_check_b_15 = appl_j_100;
    var_j_101 = t_check_b_15;
    if_j_114 = var_j_101 ? (
            bool_j_102 = false;
            pred_check_b_16 = bool_j_102;
            flatten_fun_j_107 = fun x -> (
                var_j_103 = is_a;
                var_j_104 = x;
                m_i_165 = var_j_103 ~ fun;
                appl_j_105 = m_i_165 ? (
                        c_appl_i_166 = var_j_103 var_j_104
                    ) : (
                        ab_i_167 = abort
                    );
                m_i_168 = appl_j_105 ~ bool;
                notop_j_106 = m_i_168 ? (
                        c_not_i_169 = not appl_j_105
                    ) : (
                        ab_i_170 = abort
                    ));
            var_j_108 = expr_b_14;
            appl_j_109 = flatten_fun_j_107 var_j_108;
            if_j_112 = appl_j_109 ? (
                    bool_j_110 = true
                ) : (
                    var_j_111 = pred_check_b_16
                )
        ) : (
            var_j_113 = t_check_b_15
        ));
flatten_fun_j_131 = fun bj_null_j_4 -> (
    var_j_116 = t;
    proj_j_117 = var_j_116.generator;
    int_j_118 = 0;
    appl_j_119 = proj_j_117 int_j_118;
    candidate_b_13 = appl_j_119;
    flatten_fun_j_124 = fun x_j_3 -> (
        var_j_120 = is_a;
        var_j_121 = x_j_3;
        m_i_171 = var_j_120 ~ fun;
        appl_j_122 = m_i_171 ? (
                c_appl_i_172 = var_j_120 var_j_121
            ) : (
                ab_i_173 = abort
            );
        m_i_174 = appl_j_122 ~ bool;
        notop_j_123 = m_i_174 ? (
                c_not_i_175 = not appl_j_122 # TODO: fix the bug here. The key for this appl_j_122 has the notop_j_123 on the stack, but it needs to reference the outer one
            ) : (
                ab_i_176 = abort
            ));
    var_j_125 = candidate_b_13;
    appl_j_126 = flatten_fun_j_124 var_j_125;
    if_j_130 = appl_j_126 ? (
            var_j_127 = candidate_b_13
        ) : (
            bool_j_128 = false;
            assume_j_129 = assume bool_j_128
        ));
record_j_132 = {checker = flatten_fun_j_115, generator = flatten_fun_j_131};
b_type = record_j_132;
b_func_j_134 = fun x_j_6 -> (
    int_j_133 = 0);
b_func = b_func_j_134;
proj_j_136 = b_type.generator;
int_j_137 = 0;
appl_j_138 = proj_j_136 int_j_137;
x_b_22 = appl_j_138;
bool_j_139 = false;
fail_b_19 = bool_j_139;
flatten_fun_j_148 = fun expr_b_18 -> (
    var_j_140 = expr_b_18;
    m_match_bool_j_142 = var_j_140 ~ any;
    m_match_bool_j_145 = var_j_140 ~ int;
    m_match_cond_j_146 = m_match_bool_j_145 ? (
            bool_j_147 = true
        ) : (
            m_match_cond_j_143 = m_match_bool_j_142 ? (
                    var_j_144 = fail_b_19
                ) : (
                    void_j_141 = {}
                )
        ));
flatten_fun_j_150 = fun bj_null_j_5 -> (
    input_j_149 = input);
record_j_151 = {checker = flatten_fun_j_148, generator = flatten_fun_j_150};
proj_j_152 = record_j_151.checker;
appl_j_155 = b_func x_b_22;
appl_j_156 = proj_j_152 appl_j_155;
check_res_b_23 = appl_j_156;
if_j_164 = check_res_b_23 ? (
        var_j_158 = b_func
    ) : (
        error_var_j_159 = check_res_b_23;
        assert_pred_j_160 = error_var_j_159;
        assert_res_j_161 = assert_pred_j_160 ? (
                assert_res_true_j_162 = {}
            ) : (
                ab_j_163 = abort
            )
    );
i_result = if_j_164