# error is that item is always inserted on the left, so it doesn't stay balanced
# the concolic evaluator doesn't always find this error, probably because the union type is expensive

let t_gen a = Mu tt.
  if input == 123456789
  then ``Node {: v : a , l : tt , r : tt :}
  else ``Leaf {: leaf : bool :}
in

let t_check a = Mu tt.
  ( ``Node {: v : a , l : tt , r : tt :}
  || ``Leaf {: leaf : bool :}
  )
in

let rec size n = 
  match n with
  | `Leaf l -> 0
  | `Node node ->
    match node with
    | { v = v , l = l , r = r } -> 1 + size l + size r
    end
  end
in

let rec is_braun_tree x = 
  match x with
  | `Leaf l -> true
  | `Node node ->
    match node with
    | { v = v , l = l , r = r } ->
      is_braun_tree l
      and is_braun_tree r
      and (size l == size r or size l == size r + 1)
    end
  end
in

let bt_gen a = {. t_gen a | is_braun_tree } in
let bt_check a = {. t_check a | is_braun_tree } in

let rec insert (type a_) (tree : bt_gen a_) (x : a_) : bt_check a_ =
  match tree with
  | `Leaf l -> `Node { v = x , l = `Leaf { leaf = true } , r = `Leaf { leaf = true } }
  | `Node node ->
    match node with
    | { v = v , l = l , r = r } ->
      if size l > size r
      then `Node { l = l , r = insert a_ r x , v = v }
      else `Node { l = insert a_ l x , r = r , v = v }
    end
  end
in

insert