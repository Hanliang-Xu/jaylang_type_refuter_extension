
let int_wrapper = {: value : int :}
in

let module =
  { square = let square (i : int) : int = i * i in square
  , double = let double (i : int) : int = i + i in double }
in

let adapter module =
  { square = let square (r : int_wrapper) : int_wrapper = { value = module.square r.value } in square
  , double = let double (r : int_wrapper) : int_wrapper = { value = module.double r.value } in double }
in

let (x : int) = (adapter module).square { value = 36 } # ERROR: should be `x : int_wrapper`
in

x
 