
let t a b i =
  if i % 2 == 0
  then b
  else a
in

# 'a and 'b alternate by call here, so can't assume 'a stays the same in recursive calls
letd rec f (i : int) : 'a -> 'b -> t ('a) ('b) i =
  fun a -> fun b -> 
    if i == 0
    then b
    else f (i - 1) b a
in

f 2 (int) 0 (bool) true