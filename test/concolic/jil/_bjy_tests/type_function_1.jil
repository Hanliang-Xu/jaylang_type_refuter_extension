i_first = {};
mk_rec_j_176 = fun age -> (
    int_j_20 = 18;
    var_j_21 = age;
    m_bl_i_468 = int_j_20 ~ int;
    m_br_i_469 = var_j_21 ~ int;
    m_b_i_470 = m_bl_i_468 and m_br_i_469;
    binop_j_22 = m_b_i_470 ? (
            c_binop_i_471 = int_j_20 <= var_j_21
        ) : (
            ab_i_472 = abort
        );
    m_i_473 = binop_j_22 ~ bool;
    if_j_175 = m_i_473 ? (
            c_cond_i_494 = binop_j_22 ? (
                    flatten_fun_j_69 = fun expr_b_9 -> (
                        bool_j_23 = false;
                        rec_fail_b_8 = bool_j_23;
                        bool_j_24 = false;
                        rec_fail_b_7 = bool_j_24;
                        bool_j_25 = false;
                        rec_fail_b_6 = bool_j_25;
                        var_j_26 = expr_b_9;
                        m_match_bool_j_28 = var_j_26 ~ any;
                        m_match_bool_j_31 = var_j_26 ~ {bj_actual_rec, _};
                        m_match_cond_j_32 = m_match_bool_j_31 ? (
                                var_j_33 = expr_b_9;
                                proj_j_34 = var_j_33.bj_decl_lbls;
                                m_match_bool_j_36 = proj_j_34 ~ any;
                                m_match_bool_j_39 = proj_j_34 ~ {employed, _};
                                m_match_cond_j_40 = m_match_bool_j_39 ? (
                                        employed_j_13 = proj_j_34.employed;
                                        var_j_41 = expr_b_9;
                                        proj_j_42 = var_j_41.bj_actual_rec;
                                        m_match_bool_j_44 = proj_j_42 ~ any;
                                        m_match_bool_j_47 = proj_j_42 ~ 
                                            {employed, _};
                                        m_match_cond_j_48 = m_match_bool_j_47 ? (
                                                employed_j_12 = proj_j_42.employed;
                                                bool_j_49 = false;
                                                fail_b_11 = bool_j_49;
                                                flatten_fun_j_58 = fun expr_b_10 -> (
                                                    var_j_50 = expr_b_10;
                                                    m_match_bool_j_52 = var_j_50 ~ any;
                                                    m_match_bool_j_55 = var_j_50 ~ bool;
                                                    m_match_cond_j_56 = m_match_bool_j_55 ? (
                                                            bool_j_57 = true
                                                        ) : (
                                                            m_match_cond_j_53 = m_match_bool_j_52 ? (
                                                                    var_j_54 = fail_b_11
                                                                ) : (
                                                                    void_j_51 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_62 = fun bj_null_j_11 -> (
                                                    int_j_59 = 0;
                                                    input_j_60 = input;
                                                    m_bl_i_474 = int_j_59 ~ int;
                                                    m_br_i_475 = input_j_60 ~ int;
                                                    m_b_i_476 = m_bl_i_474 and m_br_i_475;
                                                    binop_j_61 = m_b_i_476 ? (
                                                            c_binop_i_477 = int_j_59 <= input_j_60
                                                        ) : (
                                                            ab_i_478 = abort
                                                        ));
                                                flatten_fun_j_64 = fun expr_b_12 -> (
                                                    var_j_63 = expr_b_12);
                                                record_j_65 = {checker = flatten_fun_j_58, generator = flatten_fun_j_62, wrapper = flatten_fun_j_64};
                                                proj_j_66 = record_j_65.checker;
                                                var_j_67 = employed_j_12;
                                                appl_j_68 = proj_j_66 var_j_67
                                            ) : (
                                                m_match_cond_j_45 = m_match_bool_j_44 ? (
                                                        var_j_46 = rec_fail_b_6
                                                    ) : (
                                                        void_j_43 = {}
                                                    )
                                            )
                                    ) : (
                                        m_match_cond_j_37 = m_match_bool_j_36 ? (
                                                var_j_38 = rec_fail_b_7
                                            ) : (
                                                void_j_35 = {}
                                            )
                                    )
                            ) : (
                                m_match_cond_j_29 = m_match_bool_j_28 ? (
                                        var_j_30 = rec_fail_b_8
                                    ) : (
                                        void_j_27 = {}
                                    )
                            ));
                    flatten_fun_j_95 = fun bj_null_j_15 -> (
                        bool_j_70 = false;
                        fail_b_4 = bool_j_70;
                        flatten_fun_j_79 = fun expr_b_3 -> (
                            var_j_71 = expr_b_3;
                            m_match_bool_j_73 = var_j_71 ~ any;
                            m_match_bool_j_76 = var_j_71 ~ bool;
                            m_match_cond_j_77 = m_match_bool_j_76 ? (
                                    bool_j_78 = true
                                ) : (
                                    m_match_cond_j_74 = m_match_bool_j_73 ? (
                                            var_j_75 = fail_b_4
                                        ) : (
                                            void_j_72 = {}
                                        )
                                ));
                        flatten_fun_j_83 = fun bj_null_j_14 -> (
                            int_j_80 = 0;
                            input_j_81 = input;
                            m_bl_i_479 = int_j_80 ~ int;
                            m_br_i_480 = input_j_81 ~ int;
                            m_b_i_481 = m_bl_i_479 and m_br_i_480;
                            binop_j_82 = m_b_i_481 ? (
                                    c_binop_i_482 = int_j_80 <= input_j_81
                                ) : (
                                    ab_i_483 = abort
                                ));
                        flatten_fun_j_85 = fun expr_b_5 -> (
                            var_j_84 = expr_b_5);
                        record_j_86 = {checker = flatten_fun_j_79, generator = flatten_fun_j_83, wrapper = flatten_fun_j_85};
                        proj_j_87 = record_j_86.generator;
                        int_j_88 = 0;
                        appl_j_89 = proj_j_87 int_j_88;
                        employed_b_2 = appl_j_89;
                        var_j_90 = employed_b_2;
                        record_j_91 = {employed = var_j_90};
                        record_j_92 = {};
                        record_j_93 = {employed = record_j_92};
                        record_j_94 = {bj_actual_rec = record_j_91, bj_decl_lbls = record_j_93});
                    flatten_fun_j_97 = fun expr_b_13 -> (
                        var_j_96 = expr_b_13);
                    record_j_98 = {checker = flatten_fun_j_69, generator = flatten_fun_j_95, wrapper = flatten_fun_j_97}
                ) : (
                    flatten_fun_j_145 = fun expr_b_21 -> (
                        bool_j_99 = false;
                        rec_fail_b_20 = bool_j_99;
                        bool_j_100 = false;
                        rec_fail_b_19 = bool_j_100;
                        bool_j_101 = false;
                        rec_fail_b_18 = bool_j_101;
                        var_j_102 = expr_b_21;
                        m_match_bool_j_104 = var_j_102 ~ any;
                        m_match_bool_j_107 = var_j_102 ~ {bj_actual_rec, _};
                        m_match_cond_j_108 = m_match_bool_j_107 ? (
                                var_j_109 = expr_b_21;
                                proj_j_110 = var_j_109.bj_decl_lbls;
                                m_match_bool_j_112 = proj_j_110 ~ any;
                                m_match_bool_j_115 = proj_j_110 ~ {in_schoool, _};
                                m_match_cond_j_116 = m_match_bool_j_115 ? (
                                        in_schoool_j_17 = proj_j_110.in_schoool;
                                        var_j_117 = expr_b_21;
                                        proj_j_118 = var_j_117.bj_actual_rec;
                                        m_match_bool_j_120 = proj_j_118 ~ any;
                                        m_match_bool_j_123 = proj_j_118 ~ 
                                            {in_schoool, _};
                                        m_match_cond_j_124 = m_match_bool_j_123 ? (
                                                in_schoool = proj_j_118.in_schoool;
                                                bool_j_125 = false;
                                                fail_b_23 = bool_j_125;
                                                flatten_fun_j_134 = fun expr_b_22 -> (
                                                    var_j_126 = expr_b_22;
                                                    m_match_bool_j_128 = var_j_126 ~ any;
                                                    m_match_bool_j_131 = var_j_126 ~ bool;
                                                    m_match_cond_j_132 = m_match_bool_j_131 ? (
                                                            bool_j_133 = true
                                                        ) : (
                                                            m_match_cond_j_129 = m_match_bool_j_128 ? (
                                                                    var_j_130 = fail_b_23
                                                                ) : (
                                                                    void_j_127 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_138 = fun bj_null_j_16 -> (
                                                    int_j_135 = 0;
                                                    input_j_136 = input;
                                                    m_bl_i_484 = int_j_135 ~ int;
                                                    m_br_i_485 = input_j_136 ~ int;
                                                    m_b_i_486 = m_bl_i_484 and m_br_i_485;
                                                    binop_j_137 = m_b_i_486 ? (
                                                            c_binop_i_487 = int_j_135 <= input_j_136
                                                        ) : (
                                                            ab_i_488 = abort
                                                        ));
                                                flatten_fun_j_140 = fun expr_b_24 -> (
                                                    var_j_139 = expr_b_24);
                                                record_j_141 = {checker = flatten_fun_j_134, generator = flatten_fun_j_138, wrapper = flatten_fun_j_140};
                                                proj_j_142 = record_j_141.checker;
                                                var_j_143 = in_schoool;
                                                appl_j_144 = proj_j_142 var_j_143
                                            ) : (
                                                m_match_cond_j_121 = m_match_bool_j_120 ? (
                                                        var_j_122 = rec_fail_b_18
                                                    ) : (
                                                        void_j_119 = 
                                                            {}
                                                    )
                                            )
                                    ) : (
                                        m_match_cond_j_113 = m_match_bool_j_112 ? (
                                                var_j_114 = rec_fail_b_19
                                            ) : (
                                                void_j_111 = {}
                                            )
                                    )
                            ) : (
                                m_match_cond_j_105 = m_match_bool_j_104 ? (
                                        var_j_106 = rec_fail_b_20
                                    ) : (
                                        void_j_103 = {}
                                    )
                            ));
                    flatten_fun_j_171 = fun bj_null_j_19 -> (
                        bool_j_146 = false;
                        fail_b_16 = bool_j_146;
                        flatten_fun_j_155 = fun expr_b_15 -> (
                            var_j_147 = expr_b_15;
                            m_match_bool_j_149 = var_j_147 ~ any;
                            m_match_bool_j_152 = var_j_147 ~ bool;
                            m_match_cond_j_153 = m_match_bool_j_152 ? (
                                    bool_j_154 = true
                                ) : (
                                    m_match_cond_j_150 = m_match_bool_j_149 ? (
                                            var_j_151 = fail_b_16
                                        ) : (
                                            void_j_148 = {}
                                        )
                                ));
                        flatten_fun_j_159 = fun bj_null_j_18 -> (
                            int_j_156 = 0;
                            input_j_157 = input;
                            m_bl_i_489 = int_j_156 ~ int;
                            m_br_i_490 = input_j_157 ~ int;
                            m_b_i_491 = m_bl_i_489 and m_br_i_490;
                            binop_j_158 = m_b_i_491 ? (
                                    c_binop_i_492 = int_j_156 <= input_j_157
                                ) : (
                                    ab_i_493 = abort
                                ));
                        flatten_fun_j_161 = fun expr_b_17 -> (
                            var_j_160 = expr_b_17);
                        record_j_162 = {checker = flatten_fun_j_155, generator = flatten_fun_j_159, wrapper = flatten_fun_j_161};
                        proj_j_163 = record_j_162.generator;
                        int_j_164 = 0;
                        appl_j_165 = proj_j_163 int_j_164;
                        in_schoool_b_14 = appl_j_165;
                        var_j_166 = in_schoool_b_14;
                        record_j_167 = {in_schoool = var_j_166};
                        record_j_168 = {};
                        record_j_169 = {in_schoool = record_j_168};
                        record_j_170 = {bj_actual_rec = record_j_167, bj_decl_lbls = record_j_169});
                    flatten_fun_j_173 = fun expr_b_25 -> (
                        var_j_172 = expr_b_25);
                    record_j_174 = {checker = flatten_fun_j_145, generator = flatten_fun_j_171, wrapper = flatten_fun_j_173}
                )
        ) : (
            ab_i_495 = abort
        ));
mk_rec = mk_rec_j_176;
mk_student_j_331 = fun n_j_10 -> (
    flatten_fun_j_328 = fun n_b_0 -> (
        bool_j_177 = false;
        fail_b_30 = bool_j_177;
        flatten_fun_j_186 = fun expr_b_29 -> (
            var_j_178 = expr_b_29;
            m_match_bool_j_180 = var_j_178 ~ any;
            m_match_bool_j_183 = var_j_178 ~ int;
            m_match_cond_j_184 = m_match_bool_j_183 ? (
                    bool_j_185 = true
                ) : (
                    m_match_cond_j_181 = m_match_bool_j_180 ? (
                            var_j_182 = fail_b_30
                        ) : (
                            void_j_179 = {}
                        )
                ));
        flatten_fun_j_188 = fun bj_null_j_4 -> (
            input_j_187 = input);
        flatten_fun_j_190 = fun expr_b_31 -> (
            var_j_189 = expr_b_31);
        record_j_191 = {checker = flatten_fun_j_186, generator = flatten_fun_j_188, wrapper = flatten_fun_j_190};
        proj_j_192 = record_j_191.checker;
        var_j_193 = n_b_0;
        appl_j_194 = proj_j_192 var_j_193;
        arg_check_b_1 = appl_j_194;
        var_j_195 = arg_check_b_1;
        if_j_327 = var_j_195 ? (
                flatten_fun_j_298 = fun n_j_9 -> (
                    flatten_fun_j_225 = fun expr_b_40 -> (
                        bool_j_196 = false;
                        fail_b_38 = bool_j_196;
                        flatten_fun_j_205 = fun expr_b_37 -> (
                            var_j_197 = expr_b_37;
                            m_match_bool_j_199 = var_j_197 ~ any;
                            m_match_bool_j_202 = var_j_197 ~ bool;
                            m_match_cond_j_203 = m_match_bool_j_202 ? (
                                    bool_j_204 = true
                                ) : (
                                    m_match_cond_j_200 = m_match_bool_j_199 ? (
                                            var_j_201 = fail_b_38
                                        ) : (
                                            void_j_198 = {}
                                        )
                                ));
                        flatten_fun_j_209 = fun bj_null_j_5 -> (
                            int_j_206 = 0;
                            input_j_207 = input;
                            m_bl_i_496 = int_j_206 ~ int;
                            m_br_i_497 = input_j_207 ~ int;
                            m_b_i_498 = m_bl_i_496 and m_br_i_497;
                            binop_j_208 = m_b_i_498 ? (
                                    c_binop_i_499 = int_j_206 <= input_j_207
                                ) : (
                                    ab_i_500 = abort
                                ));
                        flatten_fun_j_211 = fun expr_b_39 -> (
                            var_j_210 = expr_b_39);
                        record_j_212 = {checker = flatten_fun_j_205, generator = flatten_fun_j_209, wrapper = flatten_fun_j_211};
                        proj_j_213 = record_j_212.generator;
                        int_j_214 = 0;
                        appl_j_215 = proj_j_213 int_j_214;
                        arg_assert_b_41 = appl_j_215;
                        var_j_216 = expr_b_40;
                        var_j_217 = arg_assert_b_41;
                        appl_j_218 = var_j_216 var_j_217;
                        fun_ret_b_42 = appl_j_218;
                        var_j_219 = mk_rec;
                        var_j_220 = n_j_9;
                        m_i_501 = var_j_219 ~ fun;
                        appl_j_221 = m_i_501 ? (
                                c_appl_i_502 = var_j_219 var_j_220
                            ) : (
                                ab_i_503 = abort
                            );
                        proj_j_222 = appl_j_221.checker;
                        var_j_223 = fun_ret_b_42;
                        appl_j_224 = proj_j_222 var_j_223);
                    flatten_fun_j_260 = fun bj_null_j_7 -> (
                        flatten_fun_j_259 = fun arg_assume_b_35 -> (
                            bool_j_226 = false;
                            fail_b_33 = bool_j_226;
                            flatten_fun_j_235 = fun expr_b_32 -> (
                                var_j_227 = expr_b_32;
                                m_match_bool_j_229 = var_j_227 ~ any;
                                m_match_bool_j_232 = var_j_227 ~ bool;
                                m_match_cond_j_233 = m_match_bool_j_232 ? (
                                        bool_j_234 = true
                                    ) : (
                                        m_match_cond_j_230 = m_match_bool_j_229 ? (
                                                var_j_231 = fail_b_33
                                            ) : (
                                                void_j_228 = {}
                                            )
                                    ));
                            flatten_fun_j_239 = fun bj_null_j_6 -> (
                                int_j_236 = 0;
                                input_j_237 = input;
                                m_bl_i_504 = int_j_236 ~ int;
                                m_br_i_505 = input_j_237 ~ int;
                                m_b_i_506 = m_bl_i_504 and m_br_i_505;
                                binop_j_238 = m_b_i_506 ? (
                                        c_binop_i_507 = int_j_236 <= input_j_237
                                    ) : (
                                        ab_i_508 = abort
                                    ));
                            flatten_fun_j_241 = fun expr_b_34 -> (
                                var_j_240 = expr_b_34);
                            record_j_242 = {checker = flatten_fun_j_235, generator = flatten_fun_j_239, wrapper = flatten_fun_j_241};
                            proj_j_243 = record_j_242.checker;
                            var_j_244 = arg_assume_b_35;
                            appl_j_245 = proj_j_243 var_j_244;
                            if_j_258 = appl_j_245 ? (
                                    var_j_246 = mk_rec;
                                    var_j_247 = n_j_9;
                                    m_i_509 = var_j_246 ~ fun;
                                    appl_j_248 = m_i_509 ? (
                                            c_appl_i_510 = var_j_246 var_j_247
                                        ) : (
                                            ab_i_511 = abort
                                        );
                                    proj_j_249 = appl_j_248.generator;
                                    int_j_250 = 0;
                                    appl_j_251 = proj_j_249 int_j_250
                                ) : (
                                    bool_j_252 = false;
                                    fail_b_36 = bool_j_252;
                                    var_j_253 = fail_b_36;
                                    assert_pred_j_254 = var_j_253;
                                    assert_res_j_255 = assert_pred_j_254 ? (
                                            assert_res_true_j_256 = {}
                                        ) : (
                                            ab_j_257 = abort
                                        )
                                )));
                    flatten_fun_j_296 = fun expr_b_46 -> (
                        flatten_fun_j_295 = fun arg_b_47 -> (
                            bool_j_261 = false;
                            fail_b_44 = bool_j_261;
                            flatten_fun_j_270 = fun expr_b_43 -> (
                                var_j_262 = expr_b_43;
                                m_match_bool_j_264 = var_j_262 ~ any;
                                m_match_bool_j_267 = var_j_262 ~ bool;
                                m_match_cond_j_268 = m_match_bool_j_267 ? (
                                        bool_j_269 = true
                                    ) : (
                                        m_match_cond_j_265 = m_match_bool_j_264 ? (
                                                var_j_266 = fail_b_44
                                            ) : (
                                                void_j_263 = {}
                                            )
                                    ));
                            flatten_fun_j_274 = fun bj_null_j_8 -> (
                                int_j_271 = 0;
                                input_j_272 = input;
                                m_bl_i_512 = int_j_271 ~ int;
                                m_br_i_513 = input_j_272 ~ int;
                                m_b_i_514 = m_bl_i_512 and m_br_i_513;
                                binop_j_273 = m_b_i_514 ? (
                                        c_binop_i_515 = int_j_271 <= input_j_272
                                    ) : (
                                        ab_i_516 = abort
                                    ));
                            flatten_fun_j_276 = fun expr_b_45 -> (
                                var_j_275 = expr_b_45);
                            record_j_277 = {checker = flatten_fun_j_270, generator = flatten_fun_j_274, wrapper = flatten_fun_j_276};
                            proj_j_278 = record_j_277.checker;
                            var_j_279 = arg_b_47;
                            m_i_517 = proj_j_278 ~ fun;
                            appl_j_280 = m_i_517 ? (
                                    c_appl_i_518 = proj_j_278 var_j_279
                                ) : (
                                    ab_i_519 = abort
                                );
                            m_i_520 = appl_j_280 ~ bool;
                            if_j_294 = m_i_520 ? (
                                    c_cond_i_530 = appl_j_280 ? (
                                            var_j_281 = mk_rec;
                                            var_j_282 = n_j_9;
                                            m_i_521 = var_j_281 ~ fun;
                                            appl_j_283 = m_i_521 ? (
                                                    c_appl_i_522 = var_j_281 var_j_282
                                                ) : (
                                                    ab_i_523 = abort
                                                );
                                            proj_j_284 = appl_j_283.wrapper;
                                            var_j_285 = expr_b_46;
                                            var_j_286 = arg_b_47;
                                            m_i_524 = var_j_285 ~ fun;
                                            appl_j_287 = m_i_524 ? (
                                                    c_appl_i_525 = var_j_285 var_j_286
                                                ) : (
                                                    ab_i_526 = abort
                                                );
                                            m_i_527 = proj_j_284 ~ fun;
                                            appl_j_288 = m_i_527 ? (
                                                    c_appl_i_528 = proj_j_284 appl_j_287
                                                ) : (
                                                    ab_i_529 = abort
                                                )
                                        ) : (
                                            bool_j_289 = false;
                                            assert_pred_j_290 = bool_j_289;
                                            assert_res_j_291 = assert_pred_j_290 ? (
                                                    assert_res_true_j_292 = 
                                                        {}
                                                ) : (
                                                    ab_j_293 = abort
                                                )
                                        )
                                ) : (
                                    ab_i_531 = abort
                                )));
                    record_j_297 = {checker = flatten_fun_j_225, generator = flatten_fun_j_260, wrapper = flatten_fun_j_296});
                var_j_299 = n_b_0;
                appl_j_300 = flatten_fun_j_298 var_j_299;
                proj_j_301 = appl_j_300.wrapper;
                flatten_fun_j_320 = fun employed -> (
                    int_j_302 = 18;
                    var_j_303 = n_j_10;
                    m_bl_i_532 = int_j_302 ~ int;
                    m_br_i_533 = var_j_303 ~ int;
                    m_b_i_534 = m_bl_i_532 and m_br_i_533;
                    binop_j_304 = m_b_i_534 ? (
                            c_binop_i_535 = int_j_302 < var_j_303
                        ) : (
                            ab_i_536 = abort
                        );
                    m_i_537 = binop_j_304 ~ bool;
                    if_j_319 = m_i_537 ? (
                            c_cond_i_538 = binop_j_304 ? (
                                    var_j_305 = n_j_10;
                                    var_j_306 = employed;
                                    record_j_307 = {age = var_j_305, employed = var_j_306};
                                    record_j_308 = {};
                                    record_j_309 = {};
                                    record_j_310 = {age = record_j_308, employed = record_j_309};
                                    record_j_311 = {bj_actual_rec = record_j_307, bj_decl_lbls = record_j_310}
                                ) : (
                                    var_j_312 = n_j_10;
                                    bool_j_313 = true;
                                    record_j_314 = {age = var_j_312, in_school = bool_j_313};
                                    record_j_315 = {};
                                    record_j_316 = {};
                                    record_j_317 = {age = record_j_315, in_school = record_j_316};
                                    record_j_318 = {bj_actual_rec = record_j_314, bj_decl_lbls = record_j_317}
                                )
                        ) : (
                            ab_i_539 = abort
                        ));
                m_i_540 = proj_j_301 ~ fun;
                appl_j_321 = m_i_540 ? (
                        c_appl_i_541 = proj_j_301 flatten_fun_j_320
                    ) : (
                        ab_i_542 = abort
                    )
            ) : (
                bool_j_322 = false;
                assert_pred_j_323 = bool_j_322;
                assert_res_j_324 = assert_pred_j_323 ? (
                        assert_res_true_j_325 = {}
                    ) : (
                        ab_j_326 = abort
                    )
            ));
    var_j_329 = n_j_10;
    appl_j_330 = flatten_fun_j_328 var_j_329);
mk_student = mk_student_j_331;
bool_j_332 = false;
fail_b_27 = bool_j_332;
flatten_fun_j_341 = fun expr_b_26 -> (
    var_j_333 = expr_b_26;
    m_match_bool_j_335 = var_j_333 ~ any;
    m_match_bool_j_338 = var_j_333 ~ int;
    m_match_cond_j_339 = m_match_bool_j_338 ? (
            bool_j_340 = true
        ) : (
            m_match_cond_j_336 = m_match_bool_j_335 ? (
                    var_j_337 = fail_b_27
                ) : (
                    void_j_334 = {}
                )
        ));
flatten_fun_j_343 = fun bj_null -> (
    input_j_342 = input);
flatten_fun_j_345 = fun expr_b_28 -> (
    var_j_344 = expr_b_28);
record_j_346 = {checker = flatten_fun_j_341, generator = flatten_fun_j_343, wrapper = flatten_fun_j_345};
proj_j_347 = record_j_346.generator;
int_j_348 = 0;
appl_j_349 = proj_j_347 int_j_348;
n_b_64 = appl_j_349;
flatten_fun_j_453 = fun n -> (
    flatten_fun_j_379 = fun expr_b_56 -> (
        bool_j_350 = false;
        fail_b_54 = bool_j_350;
        flatten_fun_j_359 = fun expr_b_53 -> (
            var_j_351 = expr_b_53;
            m_match_bool_j_353 = var_j_351 ~ any;
            m_match_bool_j_356 = var_j_351 ~ bool;
            m_match_cond_j_357 = m_match_bool_j_356 ? (
                    bool_j_358 = true
                ) : (
                    m_match_cond_j_354 = m_match_bool_j_353 ? (
                            var_j_355 = fail_b_54
                        ) : (
                            void_j_352 = {}
                        )
                ));
        flatten_fun_j_363 = fun bj_null_j_0 -> (
            int_j_360 = 0;
            input_j_361 = input;
            m_bl_i_543 = int_j_360 ~ int;
            m_br_i_544 = input_j_361 ~ int;
            m_b_i_545 = m_bl_i_543 and m_br_i_544;
            binop_j_362 = m_b_i_545 ? (
                    c_binop_i_546 = int_j_360 <= input_j_361
                ) : (
                    ab_i_547 = abort
                ));
        flatten_fun_j_365 = fun expr_b_55 -> (
            var_j_364 = expr_b_55);
        record_j_366 = {checker = flatten_fun_j_359, generator = flatten_fun_j_363, wrapper = flatten_fun_j_365};
        proj_j_367 = record_j_366.generator;
        int_j_368 = 0;
        appl_j_369 = proj_j_367 int_j_368;
        arg_assert_b_57 = appl_j_369;
        var_j_370 = expr_b_56;
        var_j_371 = arg_assert_b_57;
        appl_j_372 = var_j_370 var_j_371;
        fun_ret_b_58 = appl_j_372;
        var_j_373 = mk_rec;
        var_j_374 = n;
        m_i_548 = var_j_373 ~ fun;
        appl_j_375 = m_i_548 ? (
                c_appl_i_549 = var_j_373 var_j_374
            ) : (
                ab_i_550 = abort
            );
        proj_j_376 = appl_j_375.checker;
        var_j_377 = fun_ret_b_58;
        appl_j_378 = proj_j_376 var_j_377);
    flatten_fun_j_414 = fun bj_null_j_2 -> (
        flatten_fun_j_413 = fun arg_assume_b_51 -> (
            bool_j_380 = false;
            fail_b_49 = bool_j_380;
            flatten_fun_j_389 = fun expr_b_48 -> (
                var_j_381 = expr_b_48;
                m_match_bool_j_383 = var_j_381 ~ any;
                m_match_bool_j_386 = var_j_381 ~ bool;
                m_match_cond_j_387 = m_match_bool_j_386 ? (
                        bool_j_388 = true
                    ) : (
                        m_match_cond_j_384 = m_match_bool_j_383 ? (
                                var_j_385 = fail_b_49
                            ) : (
                                void_j_382 = {}
                            )
                    ));
            flatten_fun_j_393 = fun bj_null_j_1 -> (
                int_j_390 = 0;
                input_j_391 = input;
                m_bl_i_551 = int_j_390 ~ int;
                m_br_i_552 = input_j_391 ~ int;
                m_b_i_553 = m_bl_i_551 and m_br_i_552;
                binop_j_392 = m_b_i_553 ? (
                        c_binop_i_554 = int_j_390 <= input_j_391
                    ) : (
                        ab_i_555 = abort
                    ));
            flatten_fun_j_395 = fun expr_b_50 -> (
                var_j_394 = expr_b_50);
            record_j_396 = {checker = flatten_fun_j_389, generator = flatten_fun_j_393, wrapper = flatten_fun_j_395};
            proj_j_397 = record_j_396.checker;
            var_j_398 = arg_assume_b_51;
            appl_j_399 = proj_j_397 var_j_398;
            if_j_412 = appl_j_399 ? (
                    var_j_400 = mk_rec;
                    var_j_401 = n;
                    m_i_556 = var_j_400 ~ fun;
                    appl_j_402 = m_i_556 ? (
                            c_appl_i_557 = var_j_400 var_j_401
                        ) : (
                            ab_i_558 = abort
                        );
                    proj_j_403 = appl_j_402.generator;
                    int_j_404 = 0;
                    appl_j_405 = proj_j_403 int_j_404
                ) : (
                    bool_j_406 = false;
                    fail_b_52 = bool_j_406;
                    var_j_407 = fail_b_52;
                    assert_pred_j_408 = var_j_407;
                    assert_res_j_409 = assert_pred_j_408 ? (
                            assert_res_true_j_410 = {}
                        ) : (
                            ab_j_411 = abort
                        )
                )));
    flatten_fun_j_450 = fun expr_b_62 -> (
        flatten_fun_j_449 = fun arg_b_63 -> (
            bool_j_415 = false;
            fail_b_60 = bool_j_415;
            flatten_fun_j_424 = fun expr_b_59 -> (
                var_j_416 = expr_b_59;
                m_match_bool_j_418 = var_j_416 ~ any;
                m_match_bool_j_421 = var_j_416 ~ bool;
                m_match_cond_j_422 = m_match_bool_j_421 ? (
                        bool_j_423 = true
                    ) : (
                        m_match_cond_j_419 = m_match_bool_j_418 ? (
                                var_j_420 = fail_b_60
                            ) : (
                                void_j_417 = {}
                            )
                    ));
            flatten_fun_j_428 = fun bj_null_j_3 -> (
                int_j_425 = 0;
                input_j_426 = input;
                m_bl_i_559 = int_j_425 ~ int;
                m_br_i_560 = input_j_426 ~ int;
                m_b_i_561 = m_bl_i_559 and m_br_i_560;
                binop_j_427 = m_b_i_561 ? (
                        c_binop_i_562 = int_j_425 <= input_j_426
                    ) : (
                        ab_i_563 = abort
                    ));
            flatten_fun_j_430 = fun expr_b_61 -> (
                var_j_429 = expr_b_61);
            record_j_431 = {checker = flatten_fun_j_424, generator = flatten_fun_j_428, wrapper = flatten_fun_j_430};
            proj_j_432 = record_j_431.checker;
            var_j_433 = arg_b_63;
            m_i_564 = proj_j_432 ~ fun;
            appl_j_434 = m_i_564 ? (
                    c_appl_i_565 = proj_j_432 var_j_433
                ) : (
                    ab_i_566 = abort
                );
            m_i_567 = appl_j_434 ~ bool;
            if_j_448 = m_i_567 ? (
                    c_cond_i_577 = appl_j_434 ? (
                            var_j_435 = mk_rec;
                            var_j_436 = n;
                            m_i_568 = var_j_435 ~ fun;
                            appl_j_437 = m_i_568 ? (
                                    c_appl_i_569 = var_j_435 var_j_436
                                ) : (
                                    ab_i_570 = abort
                                );
                            proj_j_438 = appl_j_437.wrapper;
                            var_j_439 = expr_b_62;
                            var_j_440 = arg_b_63;
                            m_i_571 = var_j_439 ~ fun;
                            appl_j_441 = m_i_571 ? (
                                    c_appl_i_572 = var_j_439 var_j_440
                                ) : (
                                    ab_i_573 = abort
                                );
                            m_i_574 = proj_j_438 ~ fun;
                            appl_j_442 = m_i_574 ? (
                                    c_appl_i_575 = proj_j_438 appl_j_441
                                ) : (
                                    ab_i_576 = abort
                                )
                        ) : (
                            bool_j_443 = false;
                            assert_pred_j_444 = bool_j_443;
                            assert_res_j_445 = assert_pred_j_444 ? (
                                    assert_res_true_j_446 = {}
                                ) : (
                                    ab_j_447 = abort
                                )
                        )
                ) : (
                    ab_i_578 = abort
                )));
    record_j_451 = {checker = flatten_fun_j_379, generator = flatten_fun_j_414, wrapper = flatten_fun_j_450};
    proj_j_452 = record_j_451.checker);
appl_j_455 = flatten_fun_j_453 n_b_64;
appl_j_458 = mk_student n_b_64;
appl_j_459 = appl_j_455 appl_j_458;
check_res_b_65 = appl_j_459;
if_j_467 = check_res_b_65 ? (
        var_j_461 = mk_student
    ) : (
        error_var_j_462 = check_res_b_65;
        assert_pred_j_463 = error_var_j_462;
        assert_res_j_464 = assert_pred_j_463 ? (
                assert_res_true_j_465 = {}
            ) : (
                ab_j_466 = abort
            )
    );
i_result = if_j_467