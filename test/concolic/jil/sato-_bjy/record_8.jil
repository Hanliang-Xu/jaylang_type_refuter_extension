i_first = {};
create_record_j_480 = fun x_j_43 -> (
    create_record_j_479 = fun y -> (
        flatten_fun_j_476 = fun x_b_2 -> (
            int_j_44 = 0;
            input_j_45 = input;
            m_bl_i_909 = int_j_44 ~ int;
            m_br_i_910 = input_j_45 ~ int;
            m_b_i_911 = m_bl_i_909 and m_br_i_910;
            binop_j_46 = m_b_i_911 ? (
                    c_binop_i_912 = int_j_44 < input_j_45
                ) : (
                    ab_i_913 = abort
                );
            if_j_66 = binop_j_46 ? (
                    bool_j_47 = false;
                    fail_b_11 = bool_j_47;
                    flatten_fun_j_56 = fun expr_b_10 -> (
                        var_j_48 = expr_b_10;
                        m_match_bool_j_50 = var_j_48 ~ any;
                        m_match_bool_j_53 = var_j_48 ~ int;
                        m_match_cond_j_54 = m_match_bool_j_53 ? (
                                bool_j_55 = true
                            ) : (
                                m_match_cond_j_51 = m_match_bool_j_50 ? (
                                        var_j_52 = fail_b_11
                                    ) : (
                                        void_j_49 = {}
                                    )
                            ));
                    flatten_fun_j_58 = fun bj_null_j_20 -> (
                        input_j_57 = input);
                    flatten_fun_j_60 = fun expr_b_12 -> (
                        var_j_59 = expr_b_12);
                    record_j_61 = {checker = flatten_fun_j_56, generator = flatten_fun_j_58, wrapper = flatten_fun_j_60};
                    proj_j_62 = record_j_61.checker;
                    var_j_63 = x_b_2;
                    m_i_914 = proj_j_62 ~ fun;
                    appl_j_64 = m_i_914 ? (
                            c_appl_i_915 = proj_j_62 var_j_63
                        ) : (
                            ab_i_916 = abort
                        )
                ) : (
                    bool_j_65 = true
                );
            arg_check_b_3 = if_j_66;
            var_j_67 = arg_check_b_3;
            if_j_475 = var_j_67 ? (
                    flatten_fun_j_467 = fun y_b_0 -> (
                        int_j_68 = 0;
                        input_j_69 = input;
                        m_bl_i_917 = int_j_68 ~ int;
                        m_br_i_918 = input_j_69 ~ int;
                        m_b_i_919 = m_bl_i_917 and m_br_i_918;
                        binop_j_70 = m_b_i_919 ? (
                                c_binop_i_920 = int_j_68 < input_j_69
                            ) : (
                                ab_i_921 = abort
                            );
                        if_j_92 = binop_j_70 ? (
                                bool_j_71 = false;
                                fail_b_14 = bool_j_71;
                                flatten_fun_j_80 = fun expr_b_13 -> (
                                    var_j_72 = expr_b_13;
                                    m_match_bool_j_74 = var_j_72 ~ any;
                                    m_match_bool_j_77 = var_j_72 ~ bool;
                                    m_match_cond_j_78 = m_match_bool_j_77 ? (
                                            bool_j_79 = true
                                        ) : (
                                            m_match_cond_j_75 = m_match_bool_j_74 ? (
                                                    var_j_76 = fail_b_14
                                                ) : (
                                                    void_j_73 = {}
                                                )
                                        ));
                                flatten_fun_j_84 = fun bj_null_j_21 -> (
                                    int_j_81 = 0;
                                    input_j_82 = input;
                                    m_bl_i_922 = int_j_81 ~ int;
                                    m_br_i_923 = input_j_82 ~ int;
                                    m_b_i_924 = m_bl_i_922 and m_br_i_923;
                                    binop_j_83 = m_b_i_924 ? (
                                            c_binop_i_925 = int_j_81 <= input_j_82
                                        ) : (
                                            ab_i_926 = abort
                                        ));
                                flatten_fun_j_86 = fun expr_b_15 -> (
                                    var_j_85 = expr_b_15);
                                record_j_87 = {checker = flatten_fun_j_80, generator = flatten_fun_j_84, wrapper = flatten_fun_j_86};
                                proj_j_88 = record_j_87.checker;
                                var_j_89 = y_b_0;
                                m_i_927 = proj_j_88 ~ fun;
                                appl_j_90 = m_i_927 ? (
                                        c_appl_i_928 = proj_j_88 var_j_89
                                    ) : (
                                        ab_i_929 = abort
                                    )
                            ) : (
                                bool_j_91 = true
                            );
                        arg_check_b_1 = if_j_92;
                        var_j_93 = arg_check_b_1;
                        if_j_466 = var_j_93 ? (
                                flatten_fun_j_278 = fun expr_b_49 -> (
                                    bool_j_94 = false;
                                    rec_fail_b_48 = bool_j_94;
                                    bool_j_95 = false;
                                    rec_fail_b_47 = bool_j_95;
                                    bool_j_96 = false;
                                    rec_fail_b_46 = bool_j_96;
                                    var_j_97 = expr_b_49;
                                    m_match_bool_j_99 = var_j_97 ~ any;
                                    m_match_bool_j_102 = var_j_97 ~ {bj_actual_rec, _};
                                    m_match_cond_j_103 = m_match_bool_j_102 ? (
                                            var_j_104 = expr_b_49;
                                            proj_j_105 = var_j_104.bj_decl_lbls;
                                            m_match_bool_j_107 = proj_j_105 ~ any;
                                            m_match_bool_j_110 = proj_j_105 ~ 
                                                {a, b, _};
                                            m_match_cond_j_111 = m_match_bool_j_110 ? (
                                                    a_j_33 = proj_j_105.a;
                                                    b_j_32 = proj_j_105.b;
                                                    var_j_112 = expr_b_49;
                                                    proj_j_113 = var_j_112.bj_actual_rec;
                                                    m_match_bool_j_115 = proj_j_113 ~ any;
                                                    m_match_bool_j_118 = proj_j_113 ~ 
                                                        {a, b, _};
                                                    m_match_cond_j_119 = m_match_bool_j_118 ? (
                                                            a_j_31 = proj_j_113.a;
                                                            b_j_30 = proj_j_113.b;
                                                            flatten_fun_j_159 = fun expr_b_68 -> (
                                                                bool_j_120 = false;
                                                                fail_b_63 = bool_j_120;
                                                                flatten_fun_j_129 = fun expr_b_62 -> (
                                                                    var_j_121 = expr_b_62;
                                                                    m_match_bool_j_123 = var_j_121 ~ any;
                                                                    m_match_bool_j_126 = var_j_121 ~ int;
                                                                    m_match_cond_j_127 = m_match_bool_j_126 ? (
                                                                        bool_j_128 = true
                                                                    ) : (
                                                                        m_match_cond_j_124 = m_match_bool_j_123 ? (
                                                                        var_j_125 = fail_b_63
                                                                    ) : (
                                                                        void_j_122 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_131 = fun bj_null_j_22 -> (
                                                                    input_j_130 = input);
                                                                flatten_fun_j_133 = fun expr_b_64 -> (
                                                                    var_j_132 = expr_b_64);
                                                                record_j_134 = 
                                                                    {checker = flatten_fun_j_129, generator = flatten_fun_j_131, wrapper = flatten_fun_j_133};
                                                                proj_j_135 = record_j_134.generator;
                                                                int_j_136 = 0;
                                                                appl_j_137 = proj_j_135 int_j_136;
                                                                arg_assert_b_69 = appl_j_137;
                                                                var_j_138 = expr_b_68;
                                                                var_j_139 = arg_assert_b_69;
                                                                appl_j_140 = var_j_138 var_j_139;
                                                                fun_ret_b_70 = appl_j_140;
                                                                bool_j_141 = false;
                                                                fail_b_66 = bool_j_141;
                                                                flatten_fun_j_150 = fun expr_b_65 -> (
                                                                    var_j_142 = expr_b_65;
                                                                    m_match_bool_j_144 = var_j_142 ~ any;
                                                                    m_match_bool_j_147 = var_j_142 ~ int;
                                                                    m_match_cond_j_148 = m_match_bool_j_147 ? (
                                                                        bool_j_149 = true
                                                                    ) : (
                                                                        m_match_cond_j_145 = m_match_bool_j_144 ? (
                                                                        var_j_146 = fail_b_66
                                                                    ) : (
                                                                        void_j_143 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_152 = fun bj_null_j_23 -> (
                                                                    input_j_151 = input);
                                                                flatten_fun_j_154 = fun expr_b_67 -> (
                                                                    var_j_153 = expr_b_67);
                                                                record_j_155 = 
                                                                    {checker = flatten_fun_j_150, generator = flatten_fun_j_152, wrapper = flatten_fun_j_154};
                                                                proj_j_156 = record_j_155.checker;
                                                                var_j_157 = fun_ret_b_70;
                                                                appl_j_158 = proj_j_156 var_j_157);
                                                            flatten_fun_j_204 = fun bj_null_j_26 -> (
                                                                flatten_fun_j_203 = fun arg_assume_b_60 -> (
                                                                    bool_j_160 = false;
                                                                    fail_b_55 = bool_j_160;
                                                                    flatten_fun_j_169 = fun expr_b_54 -> (
                                                                    var_j_161 = expr_b_54;
                                                                    m_match_bool_j_163 = var_j_161 ~ any;
                                                                    m_match_bool_j_166 = var_j_161 ~ int;
                                                                    m_match_cond_j_167 = m_match_bool_j_166 ? (
                                                                        bool_j_168 = true
                                                                    ) : (
                                                                        m_match_cond_j_164 = m_match_bool_j_163 ? (
                                                                        var_j_165 = fail_b_55
                                                                    ) : (
                                                                        void_j_162 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_171 = fun bj_null_j_24 -> (
                                                                    input_j_170 = input);
                                                                    flatten_fun_j_173 = fun expr_b_56 -> (
                                                                    var_j_172 = expr_b_56);
                                                                    record_j_174 = 
                                                                    {checker = flatten_fun_j_169, generator = flatten_fun_j_171, wrapper = flatten_fun_j_173};
                                                                    proj_j_175 = record_j_174.checker;
                                                                    var_j_176 = arg_assume_b_60;
                                                                    appl_j_177 = proj_j_175 var_j_176;
                                                                    if_j_202 = appl_j_177 ? (
                                                                        bool_j_178 = false;
                                                                    fail_b_58 = bool_j_178;
                                                                    flatten_fun_j_187 = fun expr_b_57 -> (
                                                                    var_j_179 = expr_b_57;
                                                                    m_match_bool_j_181 = var_j_179 ~ any;
                                                                    m_match_bool_j_184 = var_j_179 ~ int;
                                                                    m_match_cond_j_185 = m_match_bool_j_184 ? (
                                                                        bool_j_186 = true
                                                                    ) : (
                                                                        m_match_cond_j_182 = m_match_bool_j_181 ? (
                                                                        var_j_183 = fail_b_58
                                                                    ) : (
                                                                        void_j_180 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_189 = fun bj_null_j_25 -> (
                                                                    input_j_188 = input);
                                                                    flatten_fun_j_191 = fun expr_b_59 -> (
                                                                    var_j_190 = expr_b_59);
                                                                    record_j_192 = 
                                                                    {checker = flatten_fun_j_187, generator = flatten_fun_j_189, wrapper = flatten_fun_j_191};
                                                                    proj_j_193 = record_j_192.generator;
                                                                    int_j_194 = 0;
                                                                    appl_j_195 = proj_j_193 int_j_194
                                                                    ) : (
                                                                        bool_j_196 = false;
                                                                    fail_b_61 = bool_j_196;
                                                                    var_j_197 = fail_b_61;
                                                                    assert_pred_j_198 = var_j_197;
                                                                    assert_res_j_199 = assert_pred_j_198 ? (
                                                                        assert_res_true_j_200 = 
                                                                    {}
                                                                    ) : (
                                                                        ab_j_201 = abort
                                                                    )
                                                                    )));
                                                            flatten_fun_j_250 = fun expr_b_77 -> (
                                                                flatten_fun_j_249 = fun arg_b_78 -> (
                                                                    bool_j_205 = false;
                                                                    fail_b_72 = bool_j_205;
                                                                    flatten_fun_j_214 = fun expr_b_71 -> (
                                                                    var_j_206 = expr_b_71;
                                                                    m_match_bool_j_208 = var_j_206 ~ any;
                                                                    m_match_bool_j_211 = var_j_206 ~ int;
                                                                    m_match_cond_j_212 = m_match_bool_j_211 ? (
                                                                        bool_j_213 = true
                                                                    ) : (
                                                                        m_match_cond_j_209 = m_match_bool_j_208 ? (
                                                                        var_j_210 = fail_b_72
                                                                    ) : (
                                                                        void_j_207 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_216 = fun bj_null_j_27 -> (
                                                                    input_j_215 = input);
                                                                    flatten_fun_j_218 = fun expr_b_73 -> (
                                                                    var_j_217 = expr_b_73);
                                                                    record_j_219 = 
                                                                    {checker = flatten_fun_j_214, generator = flatten_fun_j_216, wrapper = flatten_fun_j_218};
                                                                    proj_j_220 = record_j_219.checker;
                                                                    var_j_221 = arg_b_78;
                                                                    m_i_930 = proj_j_220 ~ fun;
                                                                    appl_j_222 = m_i_930 ? (
                                                                        c_appl_i_931 = proj_j_220 var_j_221
                                                                    ) : (
                                                                        ab_i_932 = abort
                                                                    );
                                                                    m_i_933 = appl_j_222 ~ bool;
                                                                    if_j_248 = m_i_933 ? (
                                                                        c_cond_i_940 = appl_j_222 ? (
                                                                        bool_j_223 = false;
                                                                    fail_b_75 = bool_j_223;
                                                                    flatten_fun_j_232 = fun expr_b_74 -> (
                                                                    var_j_224 = expr_b_74;
                                                                    m_match_bool_j_226 = var_j_224 ~ any;
                                                                    m_match_bool_j_229 = var_j_224 ~ int;
                                                                    m_match_cond_j_230 = m_match_bool_j_229 ? (
                                                                        bool_j_231 = true
                                                                    ) : (
                                                                        m_match_cond_j_227 = m_match_bool_j_226 ? (
                                                                        var_j_228 = fail_b_75
                                                                    ) : (
                                                                        void_j_225 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_234 = fun bj_null_j_28 -> (
                                                                    input_j_233 = input);
                                                                    flatten_fun_j_236 = fun expr_b_76 -> (
                                                                    var_j_235 = expr_b_76);
                                                                    record_j_237 = 
                                                                    {checker = flatten_fun_j_232, generator = flatten_fun_j_234, wrapper = flatten_fun_j_236};
                                                                    proj_j_238 = record_j_237.wrapper;
                                                                    var_j_239 = expr_b_77;
                                                                    var_j_240 = arg_b_78;
                                                                    m_i_934 = var_j_239 ~ fun;
                                                                    appl_j_241 = m_i_934 ? (
                                                                        c_appl_i_935 = var_j_239 var_j_240
                                                                    ) : (
                                                                        ab_i_936 = abort
                                                                    );
                                                                    m_i_937 = proj_j_238 ~ fun;
                                                                    appl_j_242 = m_i_937 ? (
                                                                        c_appl_i_938 = proj_j_238 appl_j_241
                                                                    ) : (
                                                                        ab_i_939 = abort
                                                                    )
                                                                    ) : (
                                                                        bool_j_243 = false;
                                                                    assert_pred_j_244 = bool_j_243;
                                                                    assert_res_j_245 = assert_pred_j_244 ? (
                                                                        assert_res_true_j_246 = 
                                                                    {}
                                                                    ) : (
                                                                        ab_j_247 = abort
                                                                    )
                                                                    )
                                                                    ) : (
                                                                        ab_i_941 = abort
                                                                    )));
                                                            record_j_251 = 
                                                                {checker = flatten_fun_j_159, generator = flatten_fun_j_204, wrapper = flatten_fun_j_250};
                                                            proj_j_252 = record_j_251.checker;
                                                            var_j_253 = a_j_31;
                                                            appl_j_254 = proj_j_252 var_j_253;
                                                            lbl_check_b_53 = appl_j_254;
                                                            var_j_255 = lbl_check_b_53;
                                                            if_j_277 = var_j_255 ? (
                                                                    bool_j_256 = false;
                                                                    fail_b_51 = bool_j_256;
                                                                    flatten_fun_j_265 = fun expr_b_50 -> (
                                                                    var_j_257 = expr_b_50;
                                                                    m_match_bool_j_259 = var_j_257 ~ any;
                                                                    m_match_bool_j_262 = var_j_257 ~ bool;
                                                                    m_match_cond_j_263 = m_match_bool_j_262 ? (
                                                                        bool_j_264 = true
                                                                    ) : (
                                                                        m_match_cond_j_260 = m_match_bool_j_259 ? (
                                                                        var_j_261 = fail_b_51
                                                                    ) : (
                                                                        void_j_258 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_269 = fun bj_null_j_29 -> (
                                                                    int_j_266 = 0;
                                                                    input_j_267 = input;
                                                                    m_bl_i_942 = int_j_266 ~ int;
                                                                    m_br_i_943 = input_j_267 ~ int;
                                                                    m_b_i_944 = m_bl_i_942 and m_br_i_943;
                                                                    binop_j_268 = m_b_i_944 ? (
                                                                        c_binop_i_945 = int_j_266 <= input_j_267
                                                                    ) : (
                                                                        ab_i_946 = abort
                                                                    ));
                                                                    flatten_fun_j_271 = fun expr_b_52 -> (
                                                                    var_j_270 = expr_b_52);
                                                                    record_j_272 = 
                                                                    {checker = flatten_fun_j_265, generator = flatten_fun_j_269, wrapper = flatten_fun_j_271};
                                                                    proj_j_273 = record_j_272.checker;
                                                                    var_j_274 = b_j_30;
                                                                    appl_j_275 = proj_j_273 var_j_274
                                                                ) : (
                                                                    var_j_276 = lbl_check_b_53
                                                                )
                                                        ) : (
                                                            m_match_cond_j_116 = m_match_bool_j_115 ? (
                                                                    var_j_117 = rec_fail_b_46
                                                                ) : (
                                                                    void_j_114 = 
                                                                    {}
                                                                )
                                                        )
                                                ) : (
                                                    m_match_cond_j_108 = m_match_bool_j_107 ? (
                                                            var_j_109 = rec_fail_b_47
                                                        ) : (
                                                            void_j_106 = 
                                                                {}
                                                        )
                                                )
                                        ) : (
                                            m_match_cond_j_100 = m_match_bool_j_99 ? (
                                                    var_j_101 = rec_fail_b_48
                                                ) : (
                                                    void_j_98 = {}
                                                )
                                        ));
                                flatten_fun_j_441 = fun bj_null_j_42 -> (
                                    bool_j_279 = false;
                                    fail_b_44 = bool_j_279;
                                    flatten_fun_j_288 = fun expr_b_43 -> (
                                        var_j_280 = expr_b_43;
                                        m_match_bool_j_282 = var_j_280 ~ any;
                                        m_match_bool_j_285 = var_j_280 ~ bool;
                                        m_match_cond_j_286 = m_match_bool_j_285 ? (
                                                bool_j_287 = true
                                            ) : (
                                                m_match_cond_j_283 = m_match_bool_j_282 ? (
                                                        var_j_284 = fail_b_44
                                                    ) : (
                                                        void_j_281 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_292 = fun bj_null_j_34 -> (
                                        int_j_289 = 0;
                                        input_j_290 = input;
                                        m_bl_i_947 = int_j_289 ~ int;
                                        m_br_i_948 = input_j_290 ~ int;
                                        m_b_i_949 = m_bl_i_947 and m_br_i_948;
                                        binop_j_291 = m_b_i_949 ? (
                                                c_binop_i_950 = int_j_289 <= input_j_290
                                            ) : (
                                                ab_i_951 = abort
                                            ));
                                    flatten_fun_j_294 = fun expr_b_45 -> (
                                        var_j_293 = expr_b_45);
                                    record_j_295 = {checker = flatten_fun_j_288, generator = flatten_fun_j_292, wrapper = flatten_fun_j_294};
                                    proj_j_296 = record_j_295.generator;
                                    int_j_297 = 0;
                                    appl_j_298 = proj_j_296 int_j_297;
                                    b_b_17 = appl_j_298;
                                    flatten_fun_j_338 = fun expr_b_32 -> (
                                        bool_j_299 = false;
                                        fail_b_27 = bool_j_299;
                                        flatten_fun_j_308 = fun expr_b_26 -> (
                                            var_j_300 = expr_b_26;
                                            m_match_bool_j_302 = var_j_300 ~ any;
                                            m_match_bool_j_305 = var_j_300 ~ int;
                                            m_match_cond_j_306 = m_match_bool_j_305 ? (
                                                    bool_j_307 = true
                                                ) : (
                                                    m_match_cond_j_303 = m_match_bool_j_302 ? (
                                                            var_j_304 = fail_b_27
                                                        ) : (
                                                            void_j_301 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_310 = fun bj_null_j_35 -> (
                                            input_j_309 = input);
                                        flatten_fun_j_312 = fun expr_b_28 -> (
                                            var_j_311 = expr_b_28);
                                        record_j_313 = {checker = flatten_fun_j_308, generator = flatten_fun_j_310, wrapper = flatten_fun_j_312};
                                        proj_j_314 = record_j_313.generator;
                                        int_j_315 = 0;
                                        appl_j_316 = proj_j_314 int_j_315;
                                        arg_assert_b_33 = appl_j_316;
                                        var_j_317 = expr_b_32;
                                        var_j_318 = arg_assert_b_33;
                                        appl_j_319 = var_j_317 var_j_318;
                                        fun_ret_b_34 = appl_j_319;
                                        bool_j_320 = false;
                                        fail_b_30 = bool_j_320;
                                        flatten_fun_j_329 = fun expr_b_29 -> (
                                            var_j_321 = expr_b_29;
                                            m_match_bool_j_323 = var_j_321 ~ any;
                                            m_match_bool_j_326 = var_j_321 ~ int;
                                            m_match_cond_j_327 = m_match_bool_j_326 ? (
                                                    bool_j_328 = true
                                                ) : (
                                                    m_match_cond_j_324 = m_match_bool_j_323 ? (
                                                            var_j_325 = fail_b_30
                                                        ) : (
                                                            void_j_322 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_331 = fun bj_null_j_36 -> (
                                            input_j_330 = input);
                                        flatten_fun_j_333 = fun expr_b_31 -> (
                                            var_j_332 = expr_b_31);
                                        record_j_334 = {checker = flatten_fun_j_329, generator = flatten_fun_j_331, wrapper = flatten_fun_j_333};
                                        proj_j_335 = record_j_334.checker;
                                        var_j_336 = fun_ret_b_34;
                                        appl_j_337 = proj_j_335 var_j_336);
                                    flatten_fun_j_383 = fun bj_null_j_39 -> (
                                        flatten_fun_j_382 = fun arg_assume_b_24 -> (
                                            bool_j_339 = false;
                                            fail_b_19 = bool_j_339;
                                            flatten_fun_j_348 = fun expr_b_18 -> (
                                                var_j_340 = expr_b_18;
                                                m_match_bool_j_342 = var_j_340 ~ any;
                                                m_match_bool_j_345 = var_j_340 ~ int;
                                                m_match_cond_j_346 = m_match_bool_j_345 ? (
                                                        bool_j_347 = true
                                                    ) : (
                                                        m_match_cond_j_343 = m_match_bool_j_342 ? (
                                                                var_j_344 = fail_b_19
                                                            ) : (
                                                                void_j_341 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_350 = fun bj_null_j_37 -> (
                                                input_j_349 = input);
                                            flatten_fun_j_352 = fun expr_b_20 -> (
                                                var_j_351 = expr_b_20);
                                            record_j_353 = {checker = flatten_fun_j_348, generator = flatten_fun_j_350, wrapper = flatten_fun_j_352};
                                            proj_j_354 = record_j_353.checker;
                                            var_j_355 = arg_assume_b_24;
                                            appl_j_356 = proj_j_354 var_j_355;
                                            if_j_381 = appl_j_356 ? (
                                                    bool_j_357 = false;
                                                    fail_b_22 = bool_j_357;
                                                    flatten_fun_j_366 = fun expr_b_21 -> (
                                                        var_j_358 = expr_b_21;
                                                        m_match_bool_j_360 = var_j_358 ~ any;
                                                        m_match_bool_j_363 = var_j_358 ~ int;
                                                        m_match_cond_j_364 = m_match_bool_j_363 ? (
                                                                bool_j_365 = true
                                                            ) : (
                                                                m_match_cond_j_361 = m_match_bool_j_360 ? (
                                                                        
                                                                    var_j_362 = fail_b_22
                                                                    ) : (
                                                                        
                                                                    void_j_359 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_368 = fun bj_null_j_38 -> (
                                                        input_j_367 = input);
                                                    flatten_fun_j_370 = fun expr_b_23 -> (
                                                        var_j_369 = expr_b_23);
                                                    record_j_371 = {checker = flatten_fun_j_366, generator = flatten_fun_j_368, wrapper = flatten_fun_j_370};
                                                    proj_j_372 = record_j_371.generator;
                                                    int_j_373 = 0;
                                                    appl_j_374 = proj_j_372 int_j_373
                                                ) : (
                                                    bool_j_375 = false;
                                                    fail_b_25 = bool_j_375;
                                                    var_j_376 = fail_b_25;
                                                    assert_pred_j_377 = var_j_376;
                                                    assert_res_j_378 = assert_pred_j_377 ? (
                                                            assert_res_true_j_379 = 
                                                                {}
                                                        ) : (
                                                            ab_j_380 = abort
                                                        )
                                                )));
                                    flatten_fun_j_429 = fun expr_b_41 -> (
                                        flatten_fun_j_428 = fun arg_b_42 -> (
                                            bool_j_384 = false;
                                            fail_b_36 = bool_j_384;
                                            flatten_fun_j_393 = fun expr_b_35 -> (
                                                var_j_385 = expr_b_35;
                                                m_match_bool_j_387 = var_j_385 ~ any;
                                                m_match_bool_j_390 = var_j_385 ~ int;
                                                m_match_cond_j_391 = m_match_bool_j_390 ? (
                                                        bool_j_392 = true
                                                    ) : (
                                                        m_match_cond_j_388 = m_match_bool_j_387 ? (
                                                                var_j_389 = fail_b_36
                                                            ) : (
                                                                void_j_386 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_395 = fun bj_null_j_40 -> (
                                                input_j_394 = input);
                                            flatten_fun_j_397 = fun expr_b_37 -> (
                                                var_j_396 = expr_b_37);
                                            record_j_398 = {checker = flatten_fun_j_393, generator = flatten_fun_j_395, wrapper = flatten_fun_j_397};
                                            proj_j_399 = record_j_398.checker;
                                            var_j_400 = arg_b_42;
                                            m_i_952 = proj_j_399 ~ fun;
                                            appl_j_401 = m_i_952 ? (
                                                    c_appl_i_953 = proj_j_399 var_j_400
                                                ) : (
                                                    ab_i_954 = abort
                                                );
                                            m_i_955 = appl_j_401 ~ bool;
                                            if_j_427 = m_i_955 ? (
                                                    c_cond_i_962 = appl_j_401 ? (
                                                            bool_j_402 = false;
                                                            fail_b_39 = bool_j_402;
                                                            flatten_fun_j_411 = fun expr_b_38 -> (
                                                                var_j_403 = expr_b_38;
                                                                m_match_bool_j_405 = var_j_403 ~ any;
                                                                m_match_bool_j_408 = var_j_403 ~ int;
                                                                m_match_cond_j_409 = m_match_bool_j_408 ? (
                                                                        
                                                                    bool_j_410 = true
                                                                    ) : (
                                                                        
                                                                    m_match_cond_j_406 = m_match_bool_j_405 ? (
                                                                        var_j_407 = fail_b_39
                                                                    ) : (
                                                                        void_j_404 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                            flatten_fun_j_413 = fun bj_null_j_41 -> (
                                                                input_j_412 = input);
                                                            flatten_fun_j_415 = fun expr_b_40 -> (
                                                                var_j_414 = expr_b_40);
                                                            record_j_416 = 
                                                                {checker = flatten_fun_j_411, generator = flatten_fun_j_413, wrapper = flatten_fun_j_415};
                                                            proj_j_417 = record_j_416.wrapper;
                                                            var_j_418 = expr_b_41;
                                                            var_j_419 = arg_b_42;
                                                            m_i_956 = var_j_418 ~ fun;
                                                            appl_j_420 = m_i_956 ? (
                                                                    c_appl_i_957 = var_j_418 var_j_419
                                                                ) : (
                                                                    ab_i_958 = abort
                                                                );
                                                            m_i_959 = proj_j_417 ~ fun;
                                                            appl_j_421 = m_i_959 ? (
                                                                    c_appl_i_960 = proj_j_417 appl_j_420
                                                                ) : (
                                                                    ab_i_961 = abort
                                                                )
                                                        ) : (
                                                            bool_j_422 = false;
                                                            assert_pred_j_423 = bool_j_422;
                                                            assert_res_j_424 = assert_pred_j_423 ? (
                                                                    assert_res_true_j_425 = 
                                                                    {}
                                                                ) : (
                                                                    ab_j_426 = abort
                                                                )
                                                        )
                                                ) : (
                                                    ab_i_963 = abort
                                                )));
                                    record_j_430 = {checker = flatten_fun_j_338, generator = flatten_fun_j_383, wrapper = flatten_fun_j_429};
                                    proj_j_431 = record_j_430.generator;
                                    int_j_432 = 0;
                                    appl_j_433 = proj_j_431 int_j_432;
                                    a_b_16 = appl_j_433;
                                    var_j_434 = a_b_16;
                                    var_j_435 = b_b_17;
                                    record_j_436 = {a = var_j_434, b = var_j_435};
                                    record_j_437 = {};
                                    record_j_438 = {};
                                    record_j_439 = {a = record_j_437, b = record_j_438};
                                    record_j_440 = {bj_actual_rec = record_j_436, bj_decl_lbls = record_j_439});
                                flatten_fun_j_443 = fun expr_b_79 -> (
                                    var_j_442 = expr_b_79);
                                record_j_444 = {checker = flatten_fun_j_278, generator = flatten_fun_j_441, wrapper = flatten_fun_j_443};
                                proj_j_445 = record_j_444.wrapper;
                                var_j_446 = x_j_43;
                                int_j_447 = 0;
                                m_bl_i_964 = var_j_446 ~ int;
                                m_br_i_965 = int_j_447 ~ int;
                                m_b_i_966 = m_bl_i_964 and m_br_i_965;
                                binop_j_448 = m_b_i_966 ? (
                                        c_binop_i_967 = var_j_446 == int_j_447
                                    ) : (
                                        ab_i_968 = abort
                                    );
                                boo = binop_j_448;
                                flatten_fun_j_452 = fun x -> (
                                    var_j_449 = x;
                                    int_j_450 = 1;
                                    m_bl_i_969 = var_j_449 ~ int;
                                    m_br_i_970 = int_j_450 ~ int;
                                    m_b_i_971 = m_bl_i_969 and m_br_i_970;
                                    binop_j_451 = m_b_i_971 ? (
                                            c_binop_i_972 = var_j_449 + int_j_450
                                        ) : (
                                            ab_i_973 = abort
                                        ));
                                var_j_453 = boo;
                                m_i_974 = var_j_453 ~ bool;
                                notop_j_454 = m_i_974 ? (
                                        c_not_i_975 = not var_j_453
                                    ) : (
                                        ab_i_976 = abort
                                    );
                                record_j_455 = {a = flatten_fun_j_452, b = notop_j_454};
                                record_j_456 = {};
                                record_j_457 = {};
                                record_j_458 = {a = record_j_456, b = record_j_457};
                                record_j_459 = {bj_actual_rec = record_j_455, bj_decl_lbls = record_j_458};
                                m_i_977 = proj_j_445 ~ fun;
                                appl_j_460 = m_i_977 ? (
                                        c_appl_i_978 = proj_j_445 record_j_459
                                    ) : (
                                        ab_i_979 = abort
                                    )
                            ) : (
                                var_j_461 = arg_check_b_1;
                                assert_pred_j_462 = var_j_461;
                                assert_res_j_463 = assert_pred_j_462 ? (
                                        assert_res_true_j_464 = {}
                                    ) : (
                                        ab_j_465 = abort
                                    )
                            ));
                    var_j_468 = y;
                    appl_j_469 = flatten_fun_j_467 var_j_468
                ) : (
                    var_j_470 = arg_check_b_3;
                    assert_pred_j_471 = var_j_470;
                    assert_res_j_472 = assert_pred_j_471 ? (
                            assert_res_true_j_473 = {}
                        ) : (
                            ab_j_474 = abort
                        )
                ));
        var_j_477 = x_j_43;
        appl_j_478 = flatten_fun_j_476 var_j_477));
create_record = create_record_j_480;
bool_j_481 = false;
fail_b_5 = bool_j_481;
flatten_fun_j_490 = fun expr_b_4 -> (
    var_j_482 = expr_b_4;
    m_match_bool_j_484 = var_j_482 ~ any;
    m_match_bool_j_487 = var_j_482 ~ int;
    m_match_cond_j_488 = m_match_bool_j_487 ? (
            bool_j_489 = true
        ) : (
            m_match_cond_j_485 = m_match_bool_j_484 ? (
                    var_j_486 = fail_b_5
                ) : (
                    void_j_483 = {}
                )
        ));
flatten_fun_j_492 = fun bj_null -> (
    input_j_491 = input);
flatten_fun_j_494 = fun expr_b_6 -> (
    var_j_493 = expr_b_6);
record_j_495 = {checker = flatten_fun_j_490, generator = flatten_fun_j_492, wrapper = flatten_fun_j_494};
proj_j_496 = record_j_495.generator;
int_j_497 = 0;
appl_j_498 = proj_j_496 int_j_497;
x_b_145 = appl_j_498;
bool_j_499 = false;
fail_b_8 = bool_j_499;
flatten_fun_j_508 = fun expr_b_7 -> (
    var_j_500 = expr_b_7;
    m_match_bool_j_502 = var_j_500 ~ any;
    m_match_bool_j_505 = var_j_500 ~ bool;
    m_match_cond_j_506 = m_match_bool_j_505 ? (
            bool_j_507 = true
        ) : (
            m_match_cond_j_503 = m_match_bool_j_502 ? (
                    var_j_504 = fail_b_8
                ) : (
                    void_j_501 = {}
                )
        ));
flatten_fun_j_512 = fun bj_null_j_0 -> (
    int_j_509 = 0;
    input_j_510 = input;
    m_bl_i_980 = int_j_509 ~ int;
    m_br_i_981 = input_j_510 ~ int;
    m_b_i_982 = m_bl_i_980 and m_br_i_981;
    binop_j_511 = m_b_i_982 ? (
            c_binop_i_983 = int_j_509 <= input_j_510
        ) : (
            ab_i_984 = abort
        ));
flatten_fun_j_514 = fun expr_b_9 -> (
    var_j_513 = expr_b_9);
record_j_515 = {checker = flatten_fun_j_508, generator = flatten_fun_j_512, wrapper = flatten_fun_j_514};
proj_j_516 = record_j_515.generator;
int_j_517 = 0;
appl_j_518 = proj_j_516 int_j_517;
y_b_144 = appl_j_518;
flatten_fun_j_703 = fun expr_b_113 -> (
    bool_j_519 = false;
    rec_fail_b_112 = bool_j_519;
    bool_j_520 = false;
    rec_fail_b_111 = bool_j_520;
    bool_j_521 = false;
    rec_fail_b_110 = bool_j_521;
    var_j_522 = expr_b_113;
    m_match_bool_j_524 = var_j_522 ~ any;
    m_match_bool_j_527 = var_j_522 ~ {bj_actual_rec, _};
    m_match_cond_j_528 = m_match_bool_j_527 ? (
            var_j_529 = expr_b_113;
            proj_j_530 = var_j_529.bj_decl_lbls;
            m_match_bool_j_532 = proj_j_530 ~ any;
            m_match_bool_j_535 = proj_j_530 ~ {a, b, _};
            m_match_cond_j_536 = m_match_bool_j_535 ? (
                    a_j_10 = proj_j_530.a;
                    b_j_9 = proj_j_530.b;
                    var_j_537 = expr_b_113;
                    proj_j_538 = var_j_537.bj_actual_rec;
                    m_match_bool_j_540 = proj_j_538 ~ any;
                    m_match_bool_j_543 = proj_j_538 ~ {a, b, _};
                    m_match_cond_j_544 = m_match_bool_j_543 ? (
                            a = proj_j_538.a;
                            b = proj_j_538.b;
                            flatten_fun_j_584 = fun expr_b_132 -> (
                                bool_j_545 = false;
                                fail_b_127 = bool_j_545;
                                flatten_fun_j_554 = fun expr_b_126 -> (
                                    var_j_546 = expr_b_126;
                                    m_match_bool_j_548 = var_j_546 ~ any;
                                    m_match_bool_j_551 = var_j_546 ~ int;
                                    m_match_cond_j_552 = m_match_bool_j_551 ? (
                                            bool_j_553 = true
                                        ) : (
                                            m_match_cond_j_549 = m_match_bool_j_548 ? (
                                                    var_j_550 = fail_b_127
                                                ) : (
                                                    void_j_547 = {}
                                                )
                                        ));
                                flatten_fun_j_556 = fun bj_null_j_1 -> (
                                    input_j_555 = input);
                                flatten_fun_j_558 = fun expr_b_128 -> (
                                    var_j_557 = expr_b_128);
                                record_j_559 = {checker = flatten_fun_j_554, generator = flatten_fun_j_556, wrapper = flatten_fun_j_558};
                                proj_j_560 = record_j_559.generator;
                                int_j_561 = 0;
                                appl_j_562 = proj_j_560 int_j_561;
                                arg_assert_b_133 = appl_j_562;
                                var_j_563 = expr_b_132;
                                var_j_564 = arg_assert_b_133;
                                appl_j_565 = var_j_563 var_j_564;
                                fun_ret_b_134 = appl_j_565;
                                bool_j_566 = false;
                                fail_b_130 = bool_j_566;
                                flatten_fun_j_575 = fun expr_b_129 -> (
                                    var_j_567 = expr_b_129;
                                    m_match_bool_j_569 = var_j_567 ~ any;
                                    m_match_bool_j_572 = var_j_567 ~ int;
                                    m_match_cond_j_573 = m_match_bool_j_572 ? (
                                            bool_j_574 = true
                                        ) : (
                                            m_match_cond_j_570 = m_match_bool_j_569 ? (
                                                    var_j_571 = fail_b_130
                                                ) : (
                                                    void_j_568 = {}
                                                )
                                        ));
                                flatten_fun_j_577 = fun bj_null_j_2 -> (
                                    input_j_576 = input);
                                flatten_fun_j_579 = fun expr_b_131 -> (
                                    var_j_578 = expr_b_131);
                                record_j_580 = {checker = flatten_fun_j_575, generator = flatten_fun_j_577, wrapper = flatten_fun_j_579};
                                proj_j_581 = record_j_580.checker;
                                var_j_582 = fun_ret_b_134;
                                appl_j_583 = proj_j_581 var_j_582);
                            flatten_fun_j_629 = fun bj_null_j_5 -> (
                                flatten_fun_j_628 = fun arg_assume_b_124 -> (
                                    bool_j_585 = false;
                                    fail_b_119 = bool_j_585;
                                    flatten_fun_j_594 = fun expr_b_118 -> (
                                        var_j_586 = expr_b_118;
                                        m_match_bool_j_588 = var_j_586 ~ any;
                                        m_match_bool_j_591 = var_j_586 ~ int;
                                        m_match_cond_j_592 = m_match_bool_j_591 ? (
                                                bool_j_593 = true
                                            ) : (
                                                m_match_cond_j_589 = m_match_bool_j_588 ? (
                                                        var_j_590 = fail_b_119
                                                    ) : (
                                                        void_j_587 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_596 = fun bj_null_j_3 -> (
                                        input_j_595 = input);
                                    flatten_fun_j_598 = fun expr_b_120 -> (
                                        var_j_597 = expr_b_120);
                                    record_j_599 = {checker = flatten_fun_j_594, generator = flatten_fun_j_596, wrapper = flatten_fun_j_598};
                                    proj_j_600 = record_j_599.checker;
                                    var_j_601 = arg_assume_b_124;
                                    appl_j_602 = proj_j_600 var_j_601;
                                    if_j_627 = appl_j_602 ? (
                                            bool_j_603 = false;
                                            fail_b_122 = bool_j_603;
                                            flatten_fun_j_612 = fun expr_b_121 -> (
                                                var_j_604 = expr_b_121;
                                                m_match_bool_j_606 = var_j_604 ~ any;
                                                m_match_bool_j_609 = var_j_604 ~ int;
                                                m_match_cond_j_610 = m_match_bool_j_609 ? (
                                                        bool_j_611 = true
                                                    ) : (
                                                        m_match_cond_j_607 = m_match_bool_j_606 ? (
                                                                var_j_608 = fail_b_122
                                                            ) : (
                                                                void_j_605 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_614 = fun bj_null_j_4 -> (
                                                input_j_613 = input);
                                            flatten_fun_j_616 = fun expr_b_123 -> (
                                                var_j_615 = expr_b_123);
                                            record_j_617 = {checker = flatten_fun_j_612, generator = flatten_fun_j_614, wrapper = flatten_fun_j_616};
                                            proj_j_618 = record_j_617.generator;
                                            int_j_619 = 0;
                                            appl_j_620 = proj_j_618 int_j_619
                                        ) : (
                                            bool_j_621 = false;
                                            fail_b_125 = bool_j_621;
                                            var_j_622 = fail_b_125;
                                            assert_pred_j_623 = var_j_622;
                                            assert_res_j_624 = assert_pred_j_623 ? (
                                                    assert_res_true_j_625 = 
                                                        {}
                                                ) : (
                                                    ab_j_626 = abort
                                                )
                                        )));
                            flatten_fun_j_675 = fun expr_b_141 -> (
                                flatten_fun_j_674 = fun arg_b_142 -> (
                                    bool_j_630 = false;
                                    fail_b_136 = bool_j_630;
                                    flatten_fun_j_639 = fun expr_b_135 -> (
                                        var_j_631 = expr_b_135;
                                        m_match_bool_j_633 = var_j_631 ~ any;
                                        m_match_bool_j_636 = var_j_631 ~ int;
                                        m_match_cond_j_637 = m_match_bool_j_636 ? (
                                                bool_j_638 = true
                                            ) : (
                                                m_match_cond_j_634 = m_match_bool_j_633 ? (
                                                        var_j_635 = fail_b_136
                                                    ) : (
                                                        void_j_632 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_641 = fun bj_null_j_6 -> (
                                        input_j_640 = input);
                                    flatten_fun_j_643 = fun expr_b_137 -> (
                                        var_j_642 = expr_b_137);
                                    record_j_644 = {checker = flatten_fun_j_639, generator = flatten_fun_j_641, wrapper = flatten_fun_j_643};
                                    proj_j_645 = record_j_644.checker;
                                    var_j_646 = arg_b_142;
                                    m_i_985 = proj_j_645 ~ fun;
                                    appl_j_647 = m_i_985 ? (
                                            c_appl_i_986 = proj_j_645 var_j_646
                                        ) : (
                                            ab_i_987 = abort
                                        );
                                    m_i_988 = appl_j_647 ~ bool;
                                    if_j_673 = m_i_988 ? (
                                            c_cond_i_995 = appl_j_647 ? (
                                                    bool_j_648 = false;
                                                    fail_b_139 = bool_j_648;
                                                    flatten_fun_j_657 = fun expr_b_138 -> (
                                                        var_j_649 = expr_b_138;
                                                        m_match_bool_j_651 = var_j_649 ~ any;
                                                        m_match_bool_j_654 = var_j_649 ~ int;
                                                        m_match_cond_j_655 = m_match_bool_j_654 ? (
                                                                bool_j_656 = true
                                                            ) : (
                                                                m_match_cond_j_652 = m_match_bool_j_651 ? (
                                                                        
                                                                    var_j_653 = fail_b_139
                                                                    ) : (
                                                                        
                                                                    void_j_650 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_659 = fun bj_null_j_7 -> (
                                                        input_j_658 = input);
                                                    flatten_fun_j_661 = fun expr_b_140 -> (
                                                        var_j_660 = expr_b_140);
                                                    record_j_662 = {checker = flatten_fun_j_657, generator = flatten_fun_j_659, wrapper = flatten_fun_j_661};
                                                    proj_j_663 = record_j_662.wrapper;
                                                    var_j_664 = expr_b_141;
                                                    var_j_665 = arg_b_142;
                                                    m_i_989 = var_j_664 ~ fun;
                                                    appl_j_666 = m_i_989 ? (
                                                            c_appl_i_990 = var_j_664 var_j_665
                                                        ) : (
                                                            ab_i_991 = abort
                                                        );
                                                    m_i_992 = proj_j_663 ~ fun;
                                                    appl_j_667 = m_i_992 ? (
                                                            c_appl_i_993 = proj_j_663 appl_j_666
                                                        ) : (
                                                            ab_i_994 = abort
                                                        )
                                                ) : (
                                                    bool_j_668 = false;
                                                    assert_pred_j_669 = bool_j_668;
                                                    assert_res_j_670 = assert_pred_j_669 ? (
                                                            assert_res_true_j_671 = 
                                                                {}
                                                        ) : (
                                                            ab_j_672 = abort
                                                        )
                                                )
                                        ) : (
                                            ab_i_996 = abort
                                        )));
                            record_j_676 = {checker = flatten_fun_j_584, generator = flatten_fun_j_629, wrapper = flatten_fun_j_675};
                            proj_j_677 = record_j_676.checker;
                            var_j_678 = a;
                            appl_j_679 = proj_j_677 var_j_678;
                            lbl_check_b_117 = appl_j_679;
                            var_j_680 = lbl_check_b_117;
                            if_j_702 = var_j_680 ? (
                                    bool_j_681 = false;
                                    fail_b_115 = bool_j_681;
                                    flatten_fun_j_690 = fun expr_b_114 -> (
                                        var_j_682 = expr_b_114;
                                        m_match_bool_j_684 = var_j_682 ~ any;
                                        m_match_bool_j_687 = var_j_682 ~ bool;
                                        m_match_cond_j_688 = m_match_bool_j_687 ? (
                                                bool_j_689 = true
                                            ) : (
                                                m_match_cond_j_685 = m_match_bool_j_684 ? (
                                                        var_j_686 = fail_b_115
                                                    ) : (
                                                        void_j_683 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_694 = fun bj_null_j_8 -> (
                                        int_j_691 = 0;
                                        input_j_692 = input;
                                        m_bl_i_997 = int_j_691 ~ int;
                                        m_br_i_998 = input_j_692 ~ int;
                                        m_b_i_999 = m_bl_i_997 and m_br_i_998;
                                        binop_j_693 = m_b_i_999 ? (
                                                c_binop_i_1000 = int_j_691 <= input_j_692
                                            ) : (
                                                ab_i_1001 = abort
                                            ));
                                    flatten_fun_j_696 = fun expr_b_116 -> (
                                        var_j_695 = expr_b_116);
                                    record_j_697 = {checker = flatten_fun_j_690, generator = flatten_fun_j_694, wrapper = flatten_fun_j_696};
                                    proj_j_698 = record_j_697.checker;
                                    var_j_699 = b;
                                    appl_j_700 = proj_j_698 var_j_699
                                ) : (
                                    var_j_701 = lbl_check_b_117
                                )
                        ) : (
                            m_match_cond_j_541 = m_match_bool_j_540 ? (
                                    var_j_542 = rec_fail_b_110
                                ) : (
                                    void_j_539 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_533 = m_match_bool_j_532 ? (
                            var_j_534 = rec_fail_b_111
                        ) : (
                            void_j_531 = {}
                        )
                )
        ) : (
            m_match_cond_j_525 = m_match_bool_j_524 ? (
                    var_j_526 = rec_fail_b_112
                ) : (
                    void_j_523 = {}
                )
        ));
flatten_fun_j_866 = fun bj_null_j_19 -> (
    bool_j_704 = false;
    fail_b_108 = bool_j_704;
    flatten_fun_j_713 = fun expr_b_107 -> (
        var_j_705 = expr_b_107;
        m_match_bool_j_707 = var_j_705 ~ any;
        m_match_bool_j_710 = var_j_705 ~ bool;
        m_match_cond_j_711 = m_match_bool_j_710 ? (
                bool_j_712 = true
            ) : (
                m_match_cond_j_708 = m_match_bool_j_707 ? (
                        var_j_709 = fail_b_108
                    ) : (
                        void_j_706 = {}
                    )
            ));
    flatten_fun_j_717 = fun bj_null_j_11 -> (
        int_j_714 = 0;
        input_j_715 = input;
        m_bl_i_1002 = int_j_714 ~ int;
        m_br_i_1003 = input_j_715 ~ int;
        m_b_i_1004 = m_bl_i_1002 and m_br_i_1003;
        binop_j_716 = m_b_i_1004 ? (
                c_binop_i_1005 = int_j_714 <= input_j_715
            ) : (
                ab_i_1006 = abort
            ));
    flatten_fun_j_719 = fun expr_b_109 -> (
        var_j_718 = expr_b_109);
    record_j_720 = {checker = flatten_fun_j_713, generator = flatten_fun_j_717, wrapper = flatten_fun_j_719};
    proj_j_721 = record_j_720.generator;
    int_j_722 = 0;
    appl_j_723 = proj_j_721 int_j_722;
    b_b_81 = appl_j_723;
    flatten_fun_j_763 = fun expr_b_96 -> (
        bool_j_724 = false;
        fail_b_91 = bool_j_724;
        flatten_fun_j_733 = fun expr_b_90 -> (
            var_j_725 = expr_b_90;
            m_match_bool_j_727 = var_j_725 ~ any;
            m_match_bool_j_730 = var_j_725 ~ int;
            m_match_cond_j_731 = m_match_bool_j_730 ? (
                    bool_j_732 = true
                ) : (
                    m_match_cond_j_728 = m_match_bool_j_727 ? (
                            var_j_729 = fail_b_91
                        ) : (
                            void_j_726 = {}
                        )
                ));
        flatten_fun_j_735 = fun bj_null_j_12 -> (
            input_j_734 = input);
        flatten_fun_j_737 = fun expr_b_92 -> (
            var_j_736 = expr_b_92);
        record_j_738 = {checker = flatten_fun_j_733, generator = flatten_fun_j_735, wrapper = flatten_fun_j_737};
        proj_j_739 = record_j_738.generator;
        int_j_740 = 0;
        appl_j_741 = proj_j_739 int_j_740;
        arg_assert_b_97 = appl_j_741;
        var_j_742 = expr_b_96;
        var_j_743 = arg_assert_b_97;
        appl_j_744 = var_j_742 var_j_743;
        fun_ret_b_98 = appl_j_744;
        bool_j_745 = false;
        fail_b_94 = bool_j_745;
        flatten_fun_j_754 = fun expr_b_93 -> (
            var_j_746 = expr_b_93;
            m_match_bool_j_748 = var_j_746 ~ any;
            m_match_bool_j_751 = var_j_746 ~ int;
            m_match_cond_j_752 = m_match_bool_j_751 ? (
                    bool_j_753 = true
                ) : (
                    m_match_cond_j_749 = m_match_bool_j_748 ? (
                            var_j_750 = fail_b_94
                        ) : (
                            void_j_747 = {}
                        )
                ));
        flatten_fun_j_756 = fun bj_null_j_13 -> (
            input_j_755 = input);
        flatten_fun_j_758 = fun expr_b_95 -> (
            var_j_757 = expr_b_95);
        record_j_759 = {checker = flatten_fun_j_754, generator = flatten_fun_j_756, wrapper = flatten_fun_j_758};
        proj_j_760 = record_j_759.checker;
        var_j_761 = fun_ret_b_98;
        appl_j_762 = proj_j_760 var_j_761);
    flatten_fun_j_808 = fun bj_null_j_16 -> (
        flatten_fun_j_807 = fun arg_assume_b_88 -> (
            bool_j_764 = false;
            fail_b_83 = bool_j_764;
            flatten_fun_j_773 = fun expr_b_82 -> (
                var_j_765 = expr_b_82;
                m_match_bool_j_767 = var_j_765 ~ any;
                m_match_bool_j_770 = var_j_765 ~ int;
                m_match_cond_j_771 = m_match_bool_j_770 ? (
                        bool_j_772 = true
                    ) : (
                        m_match_cond_j_768 = m_match_bool_j_767 ? (
                                var_j_769 = fail_b_83
                            ) : (
                                void_j_766 = {}
                            )
                    ));
            flatten_fun_j_775 = fun bj_null_j_14 -> (
                input_j_774 = input);
            flatten_fun_j_777 = fun expr_b_84 -> (
                var_j_776 = expr_b_84);
            record_j_778 = {checker = flatten_fun_j_773, generator = flatten_fun_j_775, wrapper = flatten_fun_j_777};
            proj_j_779 = record_j_778.checker;
            var_j_780 = arg_assume_b_88;
            appl_j_781 = proj_j_779 var_j_780;
            if_j_806 = appl_j_781 ? (
                    bool_j_782 = false;
                    fail_b_86 = bool_j_782;
                    flatten_fun_j_791 = fun expr_b_85 -> (
                        var_j_783 = expr_b_85;
                        m_match_bool_j_785 = var_j_783 ~ any;
                        m_match_bool_j_788 = var_j_783 ~ int;
                        m_match_cond_j_789 = m_match_bool_j_788 ? (
                                bool_j_790 = true
                            ) : (
                                m_match_cond_j_786 = m_match_bool_j_785 ? (
                                        var_j_787 = fail_b_86
                                    ) : (
                                        void_j_784 = {}
                                    )
                            ));
                    flatten_fun_j_793 = fun bj_null_j_15 -> (
                        input_j_792 = input);
                    flatten_fun_j_795 = fun expr_b_87 -> (
                        var_j_794 = expr_b_87);
                    record_j_796 = {checker = flatten_fun_j_791, generator = flatten_fun_j_793, wrapper = flatten_fun_j_795};
                    proj_j_797 = record_j_796.generator;
                    int_j_798 = 0;
                    appl_j_799 = proj_j_797 int_j_798
                ) : (
                    bool_j_800 = false;
                    fail_b_89 = bool_j_800;
                    var_j_801 = fail_b_89;
                    assert_pred_j_802 = var_j_801;
                    assert_res_j_803 = assert_pred_j_802 ? (
                            assert_res_true_j_804 = {}
                        ) : (
                            ab_j_805 = abort
                        )
                )));
    flatten_fun_j_854 = fun expr_b_105 -> (
        flatten_fun_j_853 = fun arg_b_106 -> (
            bool_j_809 = false;
            fail_b_100 = bool_j_809;
            flatten_fun_j_818 = fun expr_b_99 -> (
                var_j_810 = expr_b_99;
                m_match_bool_j_812 = var_j_810 ~ any;
                m_match_bool_j_815 = var_j_810 ~ int;
                m_match_cond_j_816 = m_match_bool_j_815 ? (
                        bool_j_817 = true
                    ) : (
                        m_match_cond_j_813 = m_match_bool_j_812 ? (
                                var_j_814 = fail_b_100
                            ) : (
                                void_j_811 = {}
                            )
                    ));
            flatten_fun_j_820 = fun bj_null_j_17 -> (
                input_j_819 = input);
            flatten_fun_j_822 = fun expr_b_101 -> (
                var_j_821 = expr_b_101);
            record_j_823 = {checker = flatten_fun_j_818, generator = flatten_fun_j_820, wrapper = flatten_fun_j_822};
            proj_j_824 = record_j_823.checker;
            var_j_825 = arg_b_106;
            m_i_1007 = proj_j_824 ~ fun;
            appl_j_826 = m_i_1007 ? (
                    c_appl_i_1008 = proj_j_824 var_j_825
                ) : (
                    ab_i_1009 = abort
                );
            m_i_1010 = appl_j_826 ~ bool;
            if_j_852 = m_i_1010 ? (
                    c_cond_i_1017 = appl_j_826 ? (
                            bool_j_827 = false;
                            fail_b_103 = bool_j_827;
                            flatten_fun_j_836 = fun expr_b_102 -> (
                                var_j_828 = expr_b_102;
                                m_match_bool_j_830 = var_j_828 ~ any;
                                m_match_bool_j_833 = var_j_828 ~ int;
                                m_match_cond_j_834 = m_match_bool_j_833 ? (
                                        bool_j_835 = true
                                    ) : (
                                        m_match_cond_j_831 = m_match_bool_j_830 ? (
                                                var_j_832 = fail_b_103
                                            ) : (
                                                void_j_829 = {}
                                            )
                                    ));
                            flatten_fun_j_838 = fun bj_null_j_18 -> (
                                input_j_837 = input);
                            flatten_fun_j_840 = fun expr_b_104 -> (
                                var_j_839 = expr_b_104);
                            record_j_841 = {checker = flatten_fun_j_836, generator = flatten_fun_j_838, wrapper = flatten_fun_j_840};
                            proj_j_842 = record_j_841.wrapper;
                            var_j_843 = expr_b_105;
                            var_j_844 = arg_b_106;
                            m_i_1011 = var_j_843 ~ fun;
                            appl_j_845 = m_i_1011 ? (
                                    c_appl_i_1012 = var_j_843 var_j_844
                                ) : (
                                    ab_i_1013 = abort
                                );
                            m_i_1014 = proj_j_842 ~ fun;
                            appl_j_846 = m_i_1014 ? (
                                    c_appl_i_1015 = proj_j_842 appl_j_845
                                ) : (
                                    ab_i_1016 = abort
                                )
                        ) : (
                            bool_j_847 = false;
                            assert_pred_j_848 = bool_j_847;
                            assert_res_j_849 = assert_pred_j_848 ? (
                                    assert_res_true_j_850 = {}
                                ) : (
                                    ab_j_851 = abort
                                )
                        )
                ) : (
                    ab_i_1018 = abort
                )));
    record_j_855 = {checker = flatten_fun_j_763, generator = flatten_fun_j_808, wrapper = flatten_fun_j_854};
    proj_j_856 = record_j_855.generator;
    int_j_857 = 0;
    appl_j_858 = proj_j_856 int_j_857;
    a_b_80 = appl_j_858;
    var_j_859 = a_b_80;
    var_j_860 = b_b_81;
    record_j_861 = {a = var_j_859, b = var_j_860};
    record_j_862 = {};
    record_j_863 = {};
    record_j_864 = {a = record_j_862, b = record_j_863};
    record_j_865 = {bj_actual_rec = record_j_861, bj_decl_lbls = record_j_864});
flatten_fun_j_868 = fun expr_b_143 -> (
    var_j_867 = expr_b_143);
record_j_869 = {checker = flatten_fun_j_703, generator = flatten_fun_j_866, wrapper = flatten_fun_j_868};
proj_j_870 = record_j_869.checker;
appl_j_873 = create_record x_b_145;
appl_j_875 = appl_j_873 y_b_144;
appl_j_876 = proj_j_870 appl_j_875;
check_res_b_146 = appl_j_876;
if_j_908 = check_res_b_146 ? (
        var_j_878 = create_record;
        int_j_879 = 1;
        m_i_1019 = var_j_878 ~ fun;
        appl_j_880 = m_i_1019 ? (
                c_appl_i_1020 = var_j_878 int_j_879
            ) : (
                ab_i_1021 = abort
            );
        bool_j_881 = true;
        m_i_1022 = appl_j_880 ~ fun;
        appl_j_882 = m_i_1022 ? (
                c_appl_i_1023 = appl_j_880 bool_j_881
            ) : (
                ab_i_1024 = abort
            );
        proj_j_883 = appl_j_882.bj_decl_lbls;
        m_match_bool_j_885 = proj_j_883 ~ any;
        m_match_bool_j_892 = proj_j_883 ~ {b, _};
        m_match_cond_j_893 = m_match_bool_j_892 ? (
                var_j_894 = create_record;
                int_j_895 = 1;
                m_i_1025 = var_j_894 ~ fun;
                appl_j_896 = m_i_1025 ? (
                        c_appl_i_1026 = var_j_894 int_j_895
                    ) : (
                        ab_i_1027 = abort
                    );
                bool_j_897 = true;
                m_i_1028 = appl_j_896 ~ fun;
                appl_j_898 = m_i_1028 ? (
                        c_appl_i_1029 = appl_j_896 bool_j_897
                    ) : (
                        ab_i_1030 = abort
                    );
                proj_j_899 = appl_j_898.bj_actual_rec;
                proj_j_900 = proj_j_899.b
            ) : (
                m_match_cond_j_886 = m_match_bool_j_885 ? (
                        bool_j_887 = false;
                        assert_pred_j_888 = bool_j_887;
                        assert_res_j_889 = assert_pred_j_888 ? (
                                assert_res_true_j_890 = {}
                            ) : (
                                ab_j_891 = abort
                            )
                    ) : (
                        void_j_884 = {}
                    )
            );
        int_j_901 = 1;
        m_i_1031 = m_match_cond_j_893 ~ fun;
        appl_j_902 = m_i_1031 ? (
                c_appl_i_1032 = m_match_cond_j_893 int_j_901
            ) : (
                ab_i_1033 = abort
            )
    ) : (
        error_var_j_903 = check_res_b_146;
        assert_pred_j_904 = error_var_j_903;
        assert_res_j_905 = assert_pred_j_904 ? (
                assert_res_true_j_906 = {}
            ) : (
                ab_j_907 = abort
            )
    );
i_result = if_j_908