i_first = {};
g_j_452 = fun f -> (
    g_j_451 = fun x -> (
        flatten_fun_j_448 = fun f_b_2 -> (
            int_j_48 = 0;
            input_j_49 = input;
            m_bl_i_832 = int_j_48 ~ int;
            m_br_i_833 = input_j_49 ~ int;
            m_b_i_834 = m_bl_i_832 and m_br_i_833;
            binop_j_50 = m_b_i_834 ? (
                    c_binop_i_835 = int_j_48 < input_j_49
                ) : (
                    ab_i_836 = abort
                );
            if_j_334 = binop_j_50 ? (
                    flatten_fun_j_139 = fun expr_b_86 -> (
                        bool_j_51 = false;
                        fail_b_73 = bool_j_51;
                        flatten_fun_j_60 = fun expr_b_72 -> (
                            var_j_52 = expr_b_72;
                            m_match_bool_j_54 = var_j_52 ~ any;
                            m_match_bool_j_57 = var_j_52 ~ int;
                            m_match_cond_j_58 = m_match_bool_j_57 ? (
                                    bool_j_59 = true
                                ) : (
                                    m_match_cond_j_55 = m_match_bool_j_54 ? (
                                            var_j_56 = fail_b_73
                                        ) : (
                                            void_j_53 = {}
                                        )
                                ));
                        flatten_fun_j_62 = fun bj_null_j_23 -> (
                            input_j_61 = input);
                        flatten_fun_j_64 = fun expr_b_74 -> (
                            var_j_63 = expr_b_74);
                        record_j_65 = {checker = flatten_fun_j_60, generator = flatten_fun_j_62, wrapper = flatten_fun_j_64};
                        proj_j_66 = record_j_65.generator;
                        int_j_67 = 0;
                        appl_j_68 = proj_j_66 int_j_67;
                        arg_assert_b_87 = appl_j_68;
                        var_j_69 = expr_b_86;
                        var_j_70 = arg_assert_b_87;
                        appl_j_71 = var_j_69 var_j_70;
                        fun_ret_b_88 = appl_j_71;
                        flatten_fun_j_103 = fun expr_b_82 -> (
                            bool_j_72 = false;
                            fail_b_80 = bool_j_72;
                            flatten_fun_j_81 = fun expr_b_79 -> (
                                var_j_73 = expr_b_79;
                                m_match_bool_j_75 = var_j_73 ~ any;
                                m_match_bool_j_78 = var_j_73 ~ int;
                                m_match_cond_j_79 = m_match_bool_j_78 ? (
                                        bool_j_80 = true
                                    ) : (
                                        m_match_cond_j_76 = m_match_bool_j_75 ? (
                                                var_j_77 = fail_b_80
                                            ) : (
                                                void_j_74 = {}
                                            )
                                    ));
                            flatten_fun_j_83 = fun bj_null_j_24 -> (
                                input_j_82 = input);
                            flatten_fun_j_85 = fun expr_b_81 -> (
                                var_j_84 = expr_b_81);
                            record_j_86 = {checker = flatten_fun_j_81, generator = flatten_fun_j_83, wrapper = flatten_fun_j_85};
                            proj_j_87 = record_j_86.checker;
                            var_j_88 = expr_b_82;
                            appl_j_89 = proj_j_87 var_j_88;
                            t_check_b_83 = appl_j_89;
                            var_j_90 = t_check_b_83;
                            if_j_102 = var_j_90 ? (
                                    bool_j_91 = false;
                                    pred_check_b_84 = bool_j_91;
                                    flatten_fun_j_95 = fun n_j_25 -> (
                                        int_j_92 = 0;
                                        var_j_93 = n_j_25;
                                        m_bl_i_837 = int_j_92 ~ int;
                                        m_br_i_838 = var_j_93 ~ int;
                                        m_b_i_839 = m_bl_i_837 and m_br_i_838;
                                        binop_j_94 = m_b_i_839 ? (
                                                c_binop_i_840 = int_j_92 < var_j_93
                                            ) : (
                                                ab_i_841 = abort
                                            ));
                                    var_j_96 = expr_b_82;
                                    appl_j_97 = flatten_fun_j_95 var_j_96;
                                    if_j_100 = appl_j_97 ? (
                                            bool_j_98 = true
                                        ) : (
                                            var_j_99 = pred_check_b_84
                                        )
                                ) : (
                                    var_j_101 = t_check_b_83
                                ));
                        flatten_fun_j_132 = fun bj_null_j_28 -> (
                            bool_j_104 = false;
                            fail_b_76 = bool_j_104;
                            flatten_fun_j_113 = fun expr_b_75 -> (
                                var_j_105 = expr_b_75;
                                m_match_bool_j_107 = var_j_105 ~ any;
                                m_match_bool_j_110 = var_j_105 ~ int;
                                m_match_cond_j_111 = m_match_bool_j_110 ? (
                                        bool_j_112 = true
                                    ) : (
                                        m_match_cond_j_108 = m_match_bool_j_107 ? (
                                                var_j_109 = fail_b_76
                                            ) : (
                                                void_j_106 = {}
                                            )
                                    ));
                            flatten_fun_j_115 = fun bj_null_j_26 -> (
                                input_j_114 = input);
                            flatten_fun_j_117 = fun expr_b_77 -> (
                                var_j_116 = expr_b_77);
                            record_j_118 = {checker = flatten_fun_j_113, generator = flatten_fun_j_115, wrapper = flatten_fun_j_117};
                            proj_j_119 = record_j_118.generator;
                            int_j_120 = 0;
                            appl_j_121 = proj_j_119 int_j_120;
                            candidate_b_78 = appl_j_121;
                            flatten_fun_j_125 = fun n_j_27 -> (
                                int_j_122 = 0;
                                var_j_123 = n_j_27;
                                m_bl_i_842 = int_j_122 ~ int;
                                m_br_i_843 = var_j_123 ~ int;
                                m_b_i_844 = m_bl_i_842 and m_br_i_843;
                                binop_j_124 = m_b_i_844 ? (
                                        c_binop_i_845 = int_j_122 < var_j_123
                                    ) : (
                                        ab_i_846 = abort
                                    ));
                            var_j_126 = candidate_b_78;
                            appl_j_127 = flatten_fun_j_125 var_j_126;
                            if_j_131 = appl_j_127 ? (
                                    var_j_128 = candidate_b_78
                                ) : (
                                    bool_j_129 = false;
                                    assume_j_130 = assume bool_j_129
                                ));
                        flatten_fun_j_134 = fun expr_b_85 -> (
                            var_j_133 = expr_b_85);
                        record_j_135 = {checker = flatten_fun_j_103, generator = flatten_fun_j_132, wrapper = flatten_fun_j_134};
                        proj_j_136 = record_j_135.checker;
                        var_j_137 = fun_ret_b_88;
                        appl_j_138 = proj_j_136 var_j_137);
                    flatten_fun_j_233 = fun bj_null_j_35 -> (
                        flatten_fun_j_232 = fun arg_assume_b_70 -> (
                            bool_j_140 = false;
                            fail_b_57 = bool_j_140;
                            flatten_fun_j_149 = fun expr_b_56 -> (
                                var_j_141 = expr_b_56;
                                m_match_bool_j_143 = var_j_141 ~ any;
                                m_match_bool_j_146 = var_j_141 ~ int;
                                m_match_cond_j_147 = m_match_bool_j_146 ? (
                                        bool_j_148 = true
                                    ) : (
                                        m_match_cond_j_144 = m_match_bool_j_143 ? (
                                                var_j_145 = fail_b_57
                                            ) : (
                                                void_j_142 = {}
                                            )
                                    ));
                            flatten_fun_j_151 = fun bj_null_j_29 -> (
                                input_j_150 = input);
                            flatten_fun_j_153 = fun expr_b_58 -> (
                                var_j_152 = expr_b_58);
                            record_j_154 = {checker = flatten_fun_j_149, generator = flatten_fun_j_151, wrapper = flatten_fun_j_153};
                            proj_j_155 = record_j_154.checker;
                            var_j_156 = arg_assume_b_70;
                            appl_j_157 = proj_j_155 var_j_156;
                            if_j_231 = appl_j_157 ? (
                                    flatten_fun_j_189 = fun expr_b_66 -> (
                                        bool_j_158 = false;
                                        fail_b_64 = bool_j_158;
                                        flatten_fun_j_167 = fun expr_b_63 -> (
                                            var_j_159 = expr_b_63;
                                            m_match_bool_j_161 = var_j_159 ~ any;
                                            m_match_bool_j_164 = var_j_159 ~ int;
                                            m_match_cond_j_165 = m_match_bool_j_164 ? (
                                                    bool_j_166 = true
                                                ) : (
                                                    m_match_cond_j_162 = m_match_bool_j_161 ? (
                                                            var_j_163 = fail_b_64
                                                        ) : (
                                                            void_j_160 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_169 = fun bj_null_j_30 -> (
                                            input_j_168 = input);
                                        flatten_fun_j_171 = fun expr_b_65 -> (
                                            var_j_170 = expr_b_65);
                                        record_j_172 = {checker = flatten_fun_j_167, generator = flatten_fun_j_169, wrapper = flatten_fun_j_171};
                                        proj_j_173 = record_j_172.checker;
                                        var_j_174 = expr_b_66;
                                        appl_j_175 = proj_j_173 var_j_174;
                                        t_check_b_67 = appl_j_175;
                                        var_j_176 = t_check_b_67;
                                        if_j_188 = var_j_176 ? (
                                                bool_j_177 = false;
                                                pred_check_b_68 = bool_j_177;
                                                flatten_fun_j_181 = fun n_j_31 -> (
                                                    int_j_178 = 0;
                                                    var_j_179 = n_j_31;
                                                    m_bl_i_847 = int_j_178 ~ int;
                                                    m_br_i_848 = var_j_179 ~ int;
                                                    m_b_i_849 = m_bl_i_847 and m_br_i_848;
                                                    binop_j_180 = m_b_i_849 ? (
                                                            c_binop_i_850 = int_j_178 < var_j_179
                                                        ) : (
                                                            ab_i_851 = abort
                                                        ));
                                                var_j_182 = expr_b_66;
                                                appl_j_183 = flatten_fun_j_181 var_j_182;
                                                if_j_186 = appl_j_183 ? (
                                                        bool_j_184 = true
                                                    ) : (
                                                        var_j_185 = pred_check_b_68
                                                    )
                                            ) : (
                                                var_j_187 = t_check_b_67
                                            ));
                                    flatten_fun_j_218 = fun bj_null_j_34 -> (
                                        bool_j_190 = false;
                                        fail_b_60 = bool_j_190;
                                        flatten_fun_j_199 = fun expr_b_59 -> (
                                            var_j_191 = expr_b_59;
                                            m_match_bool_j_193 = var_j_191 ~ any;
                                            m_match_bool_j_196 = var_j_191 ~ int;
                                            m_match_cond_j_197 = m_match_bool_j_196 ? (
                                                    bool_j_198 = true
                                                ) : (
                                                    m_match_cond_j_194 = m_match_bool_j_193 ? (
                                                            var_j_195 = fail_b_60
                                                        ) : (
                                                            void_j_192 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_201 = fun bj_null_j_32 -> (
                                            input_j_200 = input);
                                        flatten_fun_j_203 = fun expr_b_61 -> (
                                            var_j_202 = expr_b_61);
                                        record_j_204 = {checker = flatten_fun_j_199, generator = flatten_fun_j_201, wrapper = flatten_fun_j_203};
                                        proj_j_205 = record_j_204.generator;
                                        int_j_206 = 0;
                                        appl_j_207 = proj_j_205 int_j_206;
                                        candidate_b_62 = appl_j_207;
                                        flatten_fun_j_211 = fun n_j_33 -> (
                                            int_j_208 = 0;
                                            var_j_209 = n_j_33;
                                            m_bl_i_852 = int_j_208 ~ int;
                                            m_br_i_853 = var_j_209 ~ int;
                                            m_b_i_854 = m_bl_i_852 and m_br_i_853;
                                            binop_j_210 = m_b_i_854 ? (
                                                    c_binop_i_855 = int_j_208 < var_j_209
                                                ) : (
                                                    ab_i_856 = abort
                                                ));
                                        var_j_212 = candidate_b_62;
                                        appl_j_213 = flatten_fun_j_211 var_j_212;
                                        if_j_217 = appl_j_213 ? (
                                                var_j_214 = candidate_b_62
                                            ) : (
                                                bool_j_215 = false;
                                                assume_j_216 = assume bool_j_215
                                            ));
                                    flatten_fun_j_220 = fun expr_b_69 -> (
                                        var_j_219 = expr_b_69);
                                    record_j_221 = {checker = flatten_fun_j_189, generator = flatten_fun_j_218, wrapper = flatten_fun_j_220};
                                    proj_j_222 = record_j_221.generator;
                                    int_j_223 = 0;
                                    appl_j_224 = proj_j_222 int_j_223
                                ) : (
                                    bool_j_225 = false;
                                    fail_b_71 = bool_j_225;
                                    var_j_226 = fail_b_71;
                                    assert_pred_j_227 = var_j_226;
                                    assert_res_j_228 = assert_pred_j_227 ? (
                                            assert_res_true_j_229 = {}
                                        ) : (
                                            ab_j_230 = abort
                                        )
                                )));
                    flatten_fun_j_328 = fun expr_b_103 -> (
                        flatten_fun_j_327 = fun arg_b_104 -> (
                            bool_j_234 = false;
                            fail_b_90 = bool_j_234;
                            flatten_fun_j_243 = fun expr_b_89 -> (
                                var_j_235 = expr_b_89;
                                m_match_bool_j_237 = var_j_235 ~ any;
                                m_match_bool_j_240 = var_j_235 ~ int;
                                m_match_cond_j_241 = m_match_bool_j_240 ? (
                                        bool_j_242 = true
                                    ) : (
                                        m_match_cond_j_238 = m_match_bool_j_237 ? (
                                                var_j_239 = fail_b_90
                                            ) : (
                                                void_j_236 = {}
                                            )
                                    ));
                            flatten_fun_j_245 = fun bj_null_j_36 -> (
                                input_j_244 = input);
                            flatten_fun_j_247 = fun expr_b_91 -> (
                                var_j_246 = expr_b_91);
                            record_j_248 = {checker = flatten_fun_j_243, generator = flatten_fun_j_245, wrapper = flatten_fun_j_247};
                            proj_j_249 = record_j_248.checker;
                            var_j_250 = arg_b_104;
                            m_i_857 = proj_j_249 ~ fun;
                            appl_j_251 = m_i_857 ? (
                                    c_appl_i_858 = proj_j_249 var_j_250
                                ) : (
                                    ab_i_859 = abort
                                );
                            m_i_860 = appl_j_251 ~ bool;
                            if_j_326 = m_i_860 ? (
                                    c_cond_i_877 = appl_j_251 ? (
                                            flatten_fun_j_283 = fun expr_b_99 -> (
                                                bool_j_252 = false;
                                                fail_b_97 = bool_j_252;
                                                flatten_fun_j_261 = fun expr_b_96 -> (
                                                    var_j_253 = expr_b_96;
                                                    m_match_bool_j_255 = var_j_253 ~ any;
                                                    m_match_bool_j_258 = var_j_253 ~ int;
                                                    m_match_cond_j_259 = m_match_bool_j_258 ? (
                                                            bool_j_260 = true
                                                        ) : (
                                                            m_match_cond_j_256 = m_match_bool_j_255 ? (
                                                                    var_j_257 = fail_b_97
                                                                ) : (
                                                                    void_j_254 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_263 = fun bj_null_j_37 -> (
                                                    input_j_262 = input);
                                                flatten_fun_j_265 = fun expr_b_98 -> (
                                                    var_j_264 = expr_b_98);
                                                record_j_266 = {checker = flatten_fun_j_261, generator = flatten_fun_j_263, wrapper = flatten_fun_j_265};
                                                proj_j_267 = record_j_266.checker;
                                                var_j_268 = expr_b_99;
                                                appl_j_269 = proj_j_267 var_j_268;
                                                t_check_b_100 = appl_j_269;
                                                var_j_270 = t_check_b_100;
                                                if_j_282 = var_j_270 ? (
                                                        bool_j_271 = false;
                                                        pred_check_b_101 = bool_j_271;
                                                        flatten_fun_j_275 = fun n_j_38 -> (
                                                            int_j_272 = 0;
                                                            var_j_273 = n_j_38;
                                                            m_bl_i_861 = int_j_272 ~ int;
                                                            m_br_i_862 = var_j_273 ~ int;
                                                            m_b_i_863 = m_bl_i_861 and m_br_i_862;
                                                            binop_j_274 = m_b_i_863 ? (
                                                                    c_binop_i_864 = int_j_272 < var_j_273
                                                                ) : (
                                                                    ab_i_865 = abort
                                                                ));
                                                        var_j_276 = expr_b_99;
                                                        appl_j_277 = flatten_fun_j_275 var_j_276;
                                                        if_j_280 = appl_j_277 ? (
                                                                bool_j_278 = true
                                                            ) : (
                                                                var_j_279 = pred_check_b_101
                                                            )
                                                    ) : (
                                                        var_j_281 = t_check_b_100
                                                    ));
                                            flatten_fun_j_312 = fun bj_null_j_41 -> (
                                                bool_j_284 = false;
                                                fail_b_93 = bool_j_284;
                                                flatten_fun_j_293 = fun expr_b_92 -> (
                                                    var_j_285 = expr_b_92;
                                                    m_match_bool_j_287 = var_j_285 ~ any;
                                                    m_match_bool_j_290 = var_j_285 ~ int;
                                                    m_match_cond_j_291 = m_match_bool_j_290 ? (
                                                            bool_j_292 = true
                                                        ) : (
                                                            m_match_cond_j_288 = m_match_bool_j_287 ? (
                                                                    var_j_289 = fail_b_93
                                                                ) : (
                                                                    void_j_286 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_295 = fun bj_null_j_39 -> (
                                                    input_j_294 = input);
                                                flatten_fun_j_297 = fun expr_b_94 -> (
                                                    var_j_296 = expr_b_94);
                                                record_j_298 = {checker = flatten_fun_j_293, generator = flatten_fun_j_295, wrapper = flatten_fun_j_297};
                                                proj_j_299 = record_j_298.generator;
                                                int_j_300 = 0;
                                                appl_j_301 = proj_j_299 int_j_300;
                                                candidate_b_95 = appl_j_301;
                                                flatten_fun_j_305 = fun n_j_40 -> (
                                                    int_j_302 = 0;
                                                    var_j_303 = n_j_40;
                                                    m_bl_i_866 = int_j_302 ~ int;
                                                    m_br_i_867 = var_j_303 ~ int;
                                                    m_b_i_868 = m_bl_i_866 and m_br_i_867;
                                                    binop_j_304 = m_b_i_868 ? (
                                                            c_binop_i_869 = int_j_302 < var_j_303
                                                        ) : (
                                                            ab_i_870 = abort
                                                        ));
                                                var_j_306 = candidate_b_95;
                                                appl_j_307 = flatten_fun_j_305 var_j_306;
                                                if_j_311 = appl_j_307 ? (
                                                        var_j_308 = candidate_b_95
                                                    ) : (
                                                        bool_j_309 = false;
                                                        assume_j_310 = assume bool_j_309
                                                    ));
                                            flatten_fun_j_314 = fun expr_b_102 -> (
                                                var_j_313 = expr_b_102);
                                            record_j_315 = {checker = flatten_fun_j_283, generator = flatten_fun_j_312, wrapper = flatten_fun_j_314};
                                            proj_j_316 = record_j_315.wrapper;
                                            var_j_317 = expr_b_103;
                                            var_j_318 = arg_b_104;
                                            m_i_871 = var_j_317 ~ fun;
                                            appl_j_319 = m_i_871 ? (
                                                    c_appl_i_872 = var_j_317 var_j_318
                                                ) : (
                                                    ab_i_873 = abort
                                                );
                                            m_i_874 = proj_j_316 ~ fun;
                                            appl_j_320 = m_i_874 ? (
                                                    c_appl_i_875 = proj_j_316 appl_j_319
                                                ) : (
                                                    ab_i_876 = abort
                                                )
                                        ) : (
                                            bool_j_321 = false;
                                            assert_pred_j_322 = bool_j_321;
                                            assert_res_j_323 = assert_pred_j_322 ? (
                                                    assert_res_true_j_324 = 
                                                        {}
                                                ) : (
                                                    ab_j_325 = abort
                                                )
                                        )
                                ) : (
                                    ab_i_878 = abort
                                )));
                    record_j_329 = {checker = flatten_fun_j_139, generator = flatten_fun_j_233, wrapper = flatten_fun_j_328};
                    proj_j_330 = record_j_329.checker;
                    var_j_331 = f_b_2;
                    m_i_879 = proj_j_330 ~ fun;
                    appl_j_332 = m_i_879 ? (
                            c_appl_i_880 = proj_j_330 var_j_331
                        ) : (
                            ab_i_881 = abort
                        )
                ) : (
                    bool_j_333 = true
                );
            arg_check_b_3 = if_j_334;
            var_j_335 = arg_check_b_3;
            if_j_447 = var_j_335 ? (
                    flatten_fun_j_439 = fun x_b_0 -> (
                        int_j_336 = 0;
                        input_j_337 = input;
                        m_bl_i_882 = int_j_336 ~ int;
                        m_br_i_883 = input_j_337 ~ int;
                        m_b_i_884 = m_bl_i_882 and m_br_i_883;
                        binop_j_338 = m_b_i_884 ? (
                                c_binop_i_885 = int_j_336 < input_j_337
                            ) : (
                                ab_i_886 = abort
                            );
                        if_j_358 = binop_j_338 ? (
                                bool_j_339 = false;
                                fail_b_106 = bool_j_339;
                                flatten_fun_j_348 = fun expr_b_105 -> (
                                    var_j_340 = expr_b_105;
                                    m_match_bool_j_342 = var_j_340 ~ any;
                                    m_match_bool_j_345 = var_j_340 ~ int;
                                    m_match_cond_j_346 = m_match_bool_j_345 ? (
                                            bool_j_347 = true
                                        ) : (
                                            m_match_cond_j_343 = m_match_bool_j_342 ? (
                                                    var_j_344 = fail_b_106
                                                ) : (
                                                    void_j_341 = {}
                                                )
                                        ));
                                flatten_fun_j_350 = fun bj_null_j_42 -> (
                                    input_j_349 = input);
                                flatten_fun_j_352 = fun expr_b_107 -> (
                                    var_j_351 = expr_b_107);
                                record_j_353 = {checker = flatten_fun_j_348, generator = flatten_fun_j_350, wrapper = flatten_fun_j_352};
                                proj_j_354 = record_j_353.checker;
                                var_j_355 = x_b_0;
                                m_i_887 = proj_j_354 ~ fun;
                                appl_j_356 = m_i_887 ? (
                                        c_appl_i_888 = proj_j_354 var_j_355
                                    ) : (
                                        ab_i_889 = abort
                                    )
                            ) : (
                                bool_j_357 = true
                            );
                        arg_check_b_1 = if_j_358;
                        var_j_359 = arg_check_b_1;
                        if_j_438 = var_j_359 ? (
                                flatten_fun_j_391 = fun expr_b_115 -> (
                                    bool_j_360 = false;
                                    fail_b_113 = bool_j_360;
                                    flatten_fun_j_369 = fun expr_b_112 -> (
                                        var_j_361 = expr_b_112;
                                        m_match_bool_j_363 = var_j_361 ~ any;
                                        m_match_bool_j_366 = var_j_361 ~ int;
                                        m_match_cond_j_367 = m_match_bool_j_366 ? (
                                                bool_j_368 = true
                                            ) : (
                                                m_match_cond_j_364 = m_match_bool_j_363 ? (
                                                        var_j_365 = fail_b_113
                                                    ) : (
                                                        void_j_362 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_371 = fun bj_null_j_43 -> (
                                        input_j_370 = input);
                                    flatten_fun_j_373 = fun expr_b_114 -> (
                                        var_j_372 = expr_b_114);
                                    record_j_374 = {checker = flatten_fun_j_369, generator = flatten_fun_j_371, wrapper = flatten_fun_j_373};
                                    proj_j_375 = record_j_374.checker;
                                    var_j_376 = expr_b_115;
                                    appl_j_377 = proj_j_375 var_j_376;
                                    t_check_b_116 = appl_j_377;
                                    var_j_378 = t_check_b_116;
                                    if_j_390 = var_j_378 ? (
                                            bool_j_379 = false;
                                            pred_check_b_117 = bool_j_379;
                                            flatten_fun_j_383 = fun n_j_44 -> (
                                                int_j_380 = 0;
                                                var_j_381 = n_j_44;
                                                m_bl_i_890 = int_j_380 ~ int;
                                                m_br_i_891 = var_j_381 ~ int;
                                                m_b_i_892 = m_bl_i_890 and m_br_i_891;
                                                binop_j_382 = m_b_i_892 ? (
                                                        c_binop_i_893 = int_j_380 < var_j_381
                                                    ) : (
                                                        ab_i_894 = abort
                                                    ));
                                            var_j_384 = expr_b_115;
                                            appl_j_385 = flatten_fun_j_383 var_j_384;
                                            if_j_388 = appl_j_385 ? (
                                                    bool_j_386 = true
                                                ) : (
                                                    var_j_387 = pred_check_b_117
                                                )
                                        ) : (
                                            var_j_389 = t_check_b_116
                                        ));
                                flatten_fun_j_420 = fun bj_null_j_47 -> (
                                    bool_j_392 = false;
                                    fail_b_109 = bool_j_392;
                                    flatten_fun_j_401 = fun expr_b_108 -> (
                                        var_j_393 = expr_b_108;
                                        m_match_bool_j_395 = var_j_393 ~ any;
                                        m_match_bool_j_398 = var_j_393 ~ int;
                                        m_match_cond_j_399 = m_match_bool_j_398 ? (
                                                bool_j_400 = true
                                            ) : (
                                                m_match_cond_j_396 = m_match_bool_j_395 ? (
                                                        var_j_397 = fail_b_109
                                                    ) : (
                                                        void_j_394 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_403 = fun bj_null_j_45 -> (
                                        input_j_402 = input);
                                    flatten_fun_j_405 = fun expr_b_110 -> (
                                        var_j_404 = expr_b_110);
                                    record_j_406 = {checker = flatten_fun_j_401, generator = flatten_fun_j_403, wrapper = flatten_fun_j_405};
                                    proj_j_407 = record_j_406.generator;
                                    int_j_408 = 0;
                                    appl_j_409 = proj_j_407 int_j_408;
                                    candidate_b_111 = appl_j_409;
                                    flatten_fun_j_413 = fun n_j_46 -> (
                                        int_j_410 = 0;
                                        var_j_411 = n_j_46;
                                        m_bl_i_895 = int_j_410 ~ int;
                                        m_br_i_896 = var_j_411 ~ int;
                                        m_b_i_897 = m_bl_i_895 and m_br_i_896;
                                        binop_j_412 = m_b_i_897 ? (
                                                c_binop_i_898 = int_j_410 < var_j_411
                                            ) : (
                                                ab_i_899 = abort
                                            ));
                                    var_j_414 = candidate_b_111;
                                    appl_j_415 = flatten_fun_j_413 var_j_414;
                                    if_j_419 = appl_j_415 ? (
                                            var_j_416 = candidate_b_111
                                        ) : (
                                            bool_j_417 = false;
                                            assume_j_418 = assume bool_j_417
                                        ));
                                flatten_fun_j_422 = fun expr_b_118 -> (
                                    var_j_421 = expr_b_118);
                                record_j_423 = {checker = flatten_fun_j_391, generator = flatten_fun_j_420, wrapper = flatten_fun_j_422};
                                proj_j_424 = record_j_423.wrapper;
                                var_j_425 = f;
                                var_j_426 = x;
                                m_i_900 = var_j_425 ~ fun;
                                appl_j_427 = m_i_900 ? (
                                        c_appl_i_901 = var_j_425 var_j_426
                                    ) : (
                                        ab_i_902 = abort
                                    );
                                var_j_428 = f;
                                var_j_429 = x;
                                m_i_903 = var_j_428 ~ fun;
                                appl_j_430 = m_i_903 ? (
                                        c_appl_i_904 = var_j_428 var_j_429
                                    ) : (
                                        ab_i_905 = abort
                                    );
                                m_bl_i_906 = appl_j_427 ~ int;
                                m_br_i_907 = appl_j_430 ~ int;
                                m_b_i_908 = m_bl_i_906 and m_br_i_907;
                                binop_j_431 = m_b_i_908 ? (
                                        c_binop_i_909 = appl_j_427 * appl_j_430
                                    ) : (
                                        ab_i_910 = abort
                                    );
                                m_i_911 = proj_j_424 ~ fun;
                                appl_j_432 = m_i_911 ? (
                                        c_appl_i_912 = proj_j_424 binop_j_431
                                    ) : (
                                        ab_i_913 = abort
                                    )
                            ) : (
                                var_j_433 = arg_check_b_1;
                                assert_pred_j_434 = var_j_433;
                                assert_res_j_435 = assert_pred_j_434 ? (
                                        assert_res_true_j_436 = {}
                                    ) : (
                                        ab_j_437 = abort
                                    )
                            ));
                    var_j_440 = x;
                    appl_j_441 = flatten_fun_j_439 var_j_440
                ) : (
                    var_j_442 = arg_check_b_3;
                    assert_pred_j_443 = var_j_442;
                    assert_res_j_444 = assert_pred_j_443 ? (
                            assert_res_true_j_445 = {}
                        ) : (
                            ab_j_446 = abort
                        )
                ));
        var_j_449 = f;
        appl_j_450 = flatten_fun_j_448 var_j_449));
g = g_j_452;
flatten_fun_j_541 = fun expr_b_34 -> (
    bool_j_453 = false;
    fail_b_21 = bool_j_453;
    flatten_fun_j_462 = fun expr_b_20 -> (
        var_j_454 = expr_b_20;
        m_match_bool_j_456 = var_j_454 ~ any;
        m_match_bool_j_459 = var_j_454 ~ int;
        m_match_cond_j_460 = m_match_bool_j_459 ? (
                bool_j_461 = true
            ) : (
                m_match_cond_j_457 = m_match_bool_j_456 ? (
                        var_j_458 = fail_b_21
                    ) : (
                        void_j_455 = {}
                    )
            ));
    flatten_fun_j_464 = fun bj_null -> (
        input_j_463 = input);
    flatten_fun_j_466 = fun expr_b_22 -> (
        var_j_465 = expr_b_22);
    record_j_467 = {checker = flatten_fun_j_462, generator = flatten_fun_j_464, wrapper = flatten_fun_j_466};
    proj_j_468 = record_j_467.generator;
    int_j_469 = 0;
    appl_j_470 = proj_j_468 int_j_469;
    arg_assert_b_35 = appl_j_470;
    var_j_471 = expr_b_34;
    var_j_472 = arg_assert_b_35;
    appl_j_473 = var_j_471 var_j_472;
    fun_ret_b_36 = appl_j_473;
    flatten_fun_j_505 = fun expr_b_30 -> (
        bool_j_474 = false;
        fail_b_28 = bool_j_474;
        flatten_fun_j_483 = fun expr_b_27 -> (
            var_j_475 = expr_b_27;
            m_match_bool_j_477 = var_j_475 ~ any;
            m_match_bool_j_480 = var_j_475 ~ int;
            m_match_cond_j_481 = m_match_bool_j_480 ? (
                    bool_j_482 = true
                ) : (
                    m_match_cond_j_478 = m_match_bool_j_477 ? (
                            var_j_479 = fail_b_28
                        ) : (
                            void_j_476 = {}
                        )
                ));
        flatten_fun_j_485 = fun bj_null_j_0 -> (
            input_j_484 = input);
        flatten_fun_j_487 = fun expr_b_29 -> (
            var_j_486 = expr_b_29);
        record_j_488 = {checker = flatten_fun_j_483, generator = flatten_fun_j_485, wrapper = flatten_fun_j_487};
        proj_j_489 = record_j_488.checker;
        var_j_490 = expr_b_30;
        appl_j_491 = proj_j_489 var_j_490;
        t_check_b_31 = appl_j_491;
        var_j_492 = t_check_b_31;
        if_j_504 = var_j_492 ? (
                bool_j_493 = false;
                pred_check_b_32 = bool_j_493;
                flatten_fun_j_497 = fun n -> (
                    int_j_494 = 0;
                    var_j_495 = n;
                    m_bl_i_914 = int_j_494 ~ int;
                    m_br_i_915 = var_j_495 ~ int;
                    m_b_i_916 = m_bl_i_914 and m_br_i_915;
                    binop_j_496 = m_b_i_916 ? (
                            c_binop_i_917 = int_j_494 < var_j_495
                        ) : (
                            ab_i_918 = abort
                        ));
                var_j_498 = expr_b_30;
                appl_j_499 = flatten_fun_j_497 var_j_498;
                if_j_502 = appl_j_499 ? (
                        bool_j_500 = true
                    ) : (
                        var_j_501 = pred_check_b_32
                    )
            ) : (
                var_j_503 = t_check_b_31
            ));
    flatten_fun_j_534 = fun bj_null_j_3 -> (
        bool_j_506 = false;
        fail_b_24 = bool_j_506;
        flatten_fun_j_515 = fun expr_b_23 -> (
            var_j_507 = expr_b_23;
            m_match_bool_j_509 = var_j_507 ~ any;
            m_match_bool_j_512 = var_j_507 ~ int;
            m_match_cond_j_513 = m_match_bool_j_512 ? (
                    bool_j_514 = true
                ) : (
                    m_match_cond_j_510 = m_match_bool_j_509 ? (
                            var_j_511 = fail_b_24
                        ) : (
                            void_j_508 = {}
                        )
                ));
        flatten_fun_j_517 = fun bj_null_j_1 -> (
            input_j_516 = input);
        flatten_fun_j_519 = fun expr_b_25 -> (
            var_j_518 = expr_b_25);
        record_j_520 = {checker = flatten_fun_j_515, generator = flatten_fun_j_517, wrapper = flatten_fun_j_519};
        proj_j_521 = record_j_520.generator;
        int_j_522 = 0;
        appl_j_523 = proj_j_521 int_j_522;
        candidate_b_26 = appl_j_523;
        flatten_fun_j_527 = fun n_j_2 -> (
            int_j_524 = 0;
            var_j_525 = n_j_2;
            m_bl_i_919 = int_j_524 ~ int;
            m_br_i_920 = var_j_525 ~ int;
            m_b_i_921 = m_bl_i_919 and m_br_i_920;
            binop_j_526 = m_b_i_921 ? (
                    c_binop_i_922 = int_j_524 < var_j_525
                ) : (
                    ab_i_923 = abort
                ));
        var_j_528 = candidate_b_26;
        appl_j_529 = flatten_fun_j_527 var_j_528;
        if_j_533 = appl_j_529 ? (
                var_j_530 = candidate_b_26
            ) : (
                bool_j_531 = false;
                assume_j_532 = assume bool_j_531
            ));
    flatten_fun_j_536 = fun expr_b_33 -> (
        var_j_535 = expr_b_33);
    record_j_537 = {checker = flatten_fun_j_505, generator = flatten_fun_j_534, wrapper = flatten_fun_j_536};
    proj_j_538 = record_j_537.checker;
    var_j_539 = fun_ret_b_36;
    appl_j_540 = proj_j_538 var_j_539);
flatten_fun_j_635 = fun bj_null_j_10 -> (
    flatten_fun_j_634 = fun arg_assume_b_18 -> (
        bool_j_542 = false;
        fail_b_5 = bool_j_542;
        flatten_fun_j_551 = fun expr_b_4 -> (
            var_j_543 = expr_b_4;
            m_match_bool_j_545 = var_j_543 ~ any;
            m_match_bool_j_548 = var_j_543 ~ int;
            m_match_cond_j_549 = m_match_bool_j_548 ? (
                    bool_j_550 = true
                ) : (
                    m_match_cond_j_546 = m_match_bool_j_545 ? (
                            var_j_547 = fail_b_5
                        ) : (
                            void_j_544 = {}
                        )
                ));
        flatten_fun_j_553 = fun bj_null_j_4 -> (
            input_j_552 = input);
        flatten_fun_j_555 = fun expr_b_6 -> (
            var_j_554 = expr_b_6);
        record_j_556 = {checker = flatten_fun_j_551, generator = flatten_fun_j_553, wrapper = flatten_fun_j_555};
        proj_j_557 = record_j_556.checker;
        var_j_558 = arg_assume_b_18;
        appl_j_559 = proj_j_557 var_j_558;
        if_j_633 = appl_j_559 ? (
                flatten_fun_j_591 = fun expr_b_14 -> (
                    bool_j_560 = false;
                    fail_b_12 = bool_j_560;
                    flatten_fun_j_569 = fun expr_b_11 -> (
                        var_j_561 = expr_b_11;
                        m_match_bool_j_563 = var_j_561 ~ any;
                        m_match_bool_j_566 = var_j_561 ~ int;
                        m_match_cond_j_567 = m_match_bool_j_566 ? (
                                bool_j_568 = true
                            ) : (
                                m_match_cond_j_564 = m_match_bool_j_563 ? (
                                        var_j_565 = fail_b_12
                                    ) : (
                                        void_j_562 = {}
                                    )
                            ));
                    flatten_fun_j_571 = fun bj_null_j_5 -> (
                        input_j_570 = input);
                    flatten_fun_j_573 = fun expr_b_13 -> (
                        var_j_572 = expr_b_13);
                    record_j_574 = {checker = flatten_fun_j_569, generator = flatten_fun_j_571, wrapper = flatten_fun_j_573};
                    proj_j_575 = record_j_574.checker;
                    var_j_576 = expr_b_14;
                    appl_j_577 = proj_j_575 var_j_576;
                    t_check_b_15 = appl_j_577;
                    var_j_578 = t_check_b_15;
                    if_j_590 = var_j_578 ? (
                            bool_j_579 = false;
                            pred_check_b_16 = bool_j_579;
                            flatten_fun_j_583 = fun n_j_6 -> (
                                int_j_580 = 0;
                                var_j_581 = n_j_6;
                                m_bl_i_924 = int_j_580 ~ int;
                                m_br_i_925 = var_j_581 ~ int;
                                m_b_i_926 = m_bl_i_924 and m_br_i_925;
                                binop_j_582 = m_b_i_926 ? (
                                        c_binop_i_927 = int_j_580 < var_j_581
                                    ) : (
                                        ab_i_928 = abort
                                    ));
                            var_j_584 = expr_b_14;
                            appl_j_585 = flatten_fun_j_583 var_j_584;
                            if_j_588 = appl_j_585 ? (
                                    bool_j_586 = true
                                ) : (
                                    var_j_587 = pred_check_b_16
                                )
                        ) : (
                            var_j_589 = t_check_b_15
                        ));
                flatten_fun_j_620 = fun bj_null_j_9 -> (
                    bool_j_592 = false;
                    fail_b_8 = bool_j_592;
                    flatten_fun_j_601 = fun expr_b_7 -> (
                        var_j_593 = expr_b_7;
                        m_match_bool_j_595 = var_j_593 ~ any;
                        m_match_bool_j_598 = var_j_593 ~ int;
                        m_match_cond_j_599 = m_match_bool_j_598 ? (
                                bool_j_600 = true
                            ) : (
                                m_match_cond_j_596 = m_match_bool_j_595 ? (
                                        var_j_597 = fail_b_8
                                    ) : (
                                        void_j_594 = {}
                                    )
                            ));
                    flatten_fun_j_603 = fun bj_null_j_7 -> (
                        input_j_602 = input);
                    flatten_fun_j_605 = fun expr_b_9 -> (
                        var_j_604 = expr_b_9);
                    record_j_606 = {checker = flatten_fun_j_601, generator = flatten_fun_j_603, wrapper = flatten_fun_j_605};
                    proj_j_607 = record_j_606.generator;
                    int_j_608 = 0;
                    appl_j_609 = proj_j_607 int_j_608;
                    candidate_b_10 = appl_j_609;
                    flatten_fun_j_613 = fun n_j_8 -> (
                        int_j_610 = 0;
                        var_j_611 = n_j_8;
                        m_bl_i_929 = int_j_610 ~ int;
                        m_br_i_930 = var_j_611 ~ int;
                        m_b_i_931 = m_bl_i_929 and m_br_i_930;
                        binop_j_612 = m_b_i_931 ? (
                                c_binop_i_932 = int_j_610 < var_j_611
                            ) : (
                                ab_i_933 = abort
                            ));
                    var_j_614 = candidate_b_10;
                    appl_j_615 = flatten_fun_j_613 var_j_614;
                    if_j_619 = appl_j_615 ? (
                            var_j_616 = candidate_b_10
                        ) : (
                            bool_j_617 = false;
                            assume_j_618 = assume bool_j_617
                        ));
                flatten_fun_j_622 = fun expr_b_17 -> (
                    var_j_621 = expr_b_17);
                record_j_623 = {checker = flatten_fun_j_591, generator = flatten_fun_j_620, wrapper = flatten_fun_j_622};
                proj_j_624 = record_j_623.generator;
                int_j_625 = 0;
                appl_j_626 = proj_j_624 int_j_625
            ) : (
                bool_j_627 = false;
                fail_b_19 = bool_j_627;
                var_j_628 = fail_b_19;
                assert_pred_j_629 = var_j_628;
                assert_res_j_630 = assert_pred_j_629 ? (
                        assert_res_true_j_631 = {}
                    ) : (
                        ab_j_632 = abort
                    )
            )));
flatten_fun_j_730 = fun expr_b_51 -> (
    flatten_fun_j_729 = fun arg_b_52 -> (
        bool_j_636 = false;
        fail_b_38 = bool_j_636;
        flatten_fun_j_645 = fun expr_b_37 -> (
            var_j_637 = expr_b_37;
            m_match_bool_j_639 = var_j_637 ~ any;
            m_match_bool_j_642 = var_j_637 ~ int;
            m_match_cond_j_643 = m_match_bool_j_642 ? (
                    bool_j_644 = true
                ) : (
                    m_match_cond_j_640 = m_match_bool_j_639 ? (
                            var_j_641 = fail_b_38
                        ) : (
                            void_j_638 = {}
                        )
                ));
        flatten_fun_j_647 = fun bj_null_j_11 -> (
            input_j_646 = input);
        flatten_fun_j_649 = fun expr_b_39 -> (
            var_j_648 = expr_b_39);
        record_j_650 = {checker = flatten_fun_j_645, generator = flatten_fun_j_647, wrapper = flatten_fun_j_649};
        proj_j_651 = record_j_650.checker;
        var_j_652 = arg_b_52;
        m_i_934 = proj_j_651 ~ fun;
        appl_j_653 = m_i_934 ? (
                c_appl_i_935 = proj_j_651 var_j_652
            ) : (
                ab_i_936 = abort
            );
        m_i_937 = appl_j_653 ~ bool;
        if_j_728 = m_i_937 ? (
                c_cond_i_954 = appl_j_653 ? (
                        flatten_fun_j_685 = fun expr_b_47 -> (
                            bool_j_654 = false;
                            fail_b_45 = bool_j_654;
                            flatten_fun_j_663 = fun expr_b_44 -> (
                                var_j_655 = expr_b_44;
                                m_match_bool_j_657 = var_j_655 ~ any;
                                m_match_bool_j_660 = var_j_655 ~ int;
                                m_match_cond_j_661 = m_match_bool_j_660 ? (
                                        bool_j_662 = true
                                    ) : (
                                        m_match_cond_j_658 = m_match_bool_j_657 ? (
                                                var_j_659 = fail_b_45
                                            ) : (
                                                void_j_656 = {}
                                            )
                                    ));
                            flatten_fun_j_665 = fun bj_null_j_12 -> (
                                input_j_664 = input);
                            flatten_fun_j_667 = fun expr_b_46 -> (
                                var_j_666 = expr_b_46);
                            record_j_668 = {checker = flatten_fun_j_663, generator = flatten_fun_j_665, wrapper = flatten_fun_j_667};
                            proj_j_669 = record_j_668.checker;
                            var_j_670 = expr_b_47;
                            appl_j_671 = proj_j_669 var_j_670;
                            t_check_b_48 = appl_j_671;
                            var_j_672 = t_check_b_48;
                            if_j_684 = var_j_672 ? (
                                    bool_j_673 = false;
                                    pred_check_b_49 = bool_j_673;
                                    flatten_fun_j_677 = fun n_j_13 -> (
                                        int_j_674 = 0;
                                        var_j_675 = n_j_13;
                                        m_bl_i_938 = int_j_674 ~ int;
                                        m_br_i_939 = var_j_675 ~ int;
                                        m_b_i_940 = m_bl_i_938 and m_br_i_939;
                                        binop_j_676 = m_b_i_940 ? (
                                                c_binop_i_941 = int_j_674 < var_j_675
                                            ) : (
                                                ab_i_942 = abort
                                            ));
                                    var_j_678 = expr_b_47;
                                    appl_j_679 = flatten_fun_j_677 var_j_678;
                                    if_j_682 = appl_j_679 ? (
                                            bool_j_680 = true
                                        ) : (
                                            var_j_681 = pred_check_b_49
                                        )
                                ) : (
                                    var_j_683 = t_check_b_48
                                ));
                        flatten_fun_j_714 = fun bj_null_j_16 -> (
                            bool_j_686 = false;
                            fail_b_41 = bool_j_686;
                            flatten_fun_j_695 = fun expr_b_40 -> (
                                var_j_687 = expr_b_40;
                                m_match_bool_j_689 = var_j_687 ~ any;
                                m_match_bool_j_692 = var_j_687 ~ int;
                                m_match_cond_j_693 = m_match_bool_j_692 ? (
                                        bool_j_694 = true
                                    ) : (
                                        m_match_cond_j_690 = m_match_bool_j_689 ? (
                                                var_j_691 = fail_b_41
                                            ) : (
                                                void_j_688 = {}
                                            )
                                    ));
                            flatten_fun_j_697 = fun bj_null_j_14 -> (
                                input_j_696 = input);
                            flatten_fun_j_699 = fun expr_b_42 -> (
                                var_j_698 = expr_b_42);
                            record_j_700 = {checker = flatten_fun_j_695, generator = flatten_fun_j_697, wrapper = flatten_fun_j_699};
                            proj_j_701 = record_j_700.generator;
                            int_j_702 = 0;
                            appl_j_703 = proj_j_701 int_j_702;
                            candidate_b_43 = appl_j_703;
                            flatten_fun_j_707 = fun n_j_15 -> (
                                int_j_704 = 0;
                                var_j_705 = n_j_15;
                                m_bl_i_943 = int_j_704 ~ int;
                                m_br_i_944 = var_j_705 ~ int;
                                m_b_i_945 = m_bl_i_943 and m_br_i_944;
                                binop_j_706 = m_b_i_945 ? (
                                        c_binop_i_946 = int_j_704 < var_j_705
                                    ) : (
                                        ab_i_947 = abort
                                    ));
                            var_j_708 = candidate_b_43;
                            appl_j_709 = flatten_fun_j_707 var_j_708;
                            if_j_713 = appl_j_709 ? (
                                    var_j_710 = candidate_b_43
                                ) : (
                                    bool_j_711 = false;
                                    assume_j_712 = assume bool_j_711
                                ));
                        flatten_fun_j_716 = fun expr_b_50 -> (
                            var_j_715 = expr_b_50);
                        record_j_717 = {checker = flatten_fun_j_685, generator = flatten_fun_j_714, wrapper = flatten_fun_j_716};
                        proj_j_718 = record_j_717.wrapper;
                        var_j_719 = expr_b_51;
                        var_j_720 = arg_b_52;
                        m_i_948 = var_j_719 ~ fun;
                        appl_j_721 = m_i_948 ? (
                                c_appl_i_949 = var_j_719 var_j_720
                            ) : (
                                ab_i_950 = abort
                            );
                        m_i_951 = proj_j_718 ~ fun;
                        appl_j_722 = m_i_951 ? (
                                c_appl_i_952 = proj_j_718 appl_j_721
                            ) : (
                                ab_i_953 = abort
                            )
                    ) : (
                        bool_j_723 = false;
                        assert_pred_j_724 = bool_j_723;
                        assert_res_j_725 = assert_pred_j_724 ? (
                                assert_res_true_j_726 = {}
                            ) : (
                                ab_j_727 = abort
                            )
                    )
            ) : (
                ab_i_955 = abort
            )));
record_j_731 = {checker = flatten_fun_j_541, generator = flatten_fun_j_635, wrapper = flatten_fun_j_730};
proj_j_732 = record_j_731.generator;
int_j_733 = 0;
appl_j_734 = proj_j_732 int_j_733;
f_b_131 = appl_j_734;
bool_j_735 = false;
fail_b_54 = bool_j_735;
flatten_fun_j_744 = fun expr_b_53 -> (
    var_j_736 = expr_b_53;
    m_match_bool_j_738 = var_j_736 ~ any;
    m_match_bool_j_741 = var_j_736 ~ int;
    m_match_cond_j_742 = m_match_bool_j_741 ? (
            bool_j_743 = true
        ) : (
            m_match_cond_j_739 = m_match_bool_j_738 ? (
                    var_j_740 = fail_b_54
                ) : (
                    void_j_737 = {}
                )
        ));
flatten_fun_j_746 = fun bj_null_j_17 -> (
    input_j_745 = input);
flatten_fun_j_748 = fun expr_b_55 -> (
    var_j_747 = expr_b_55);
record_j_749 = {checker = flatten_fun_j_744, generator = flatten_fun_j_746, wrapper = flatten_fun_j_748};
proj_j_750 = record_j_749.generator;
int_j_751 = 0;
appl_j_752 = proj_j_750 int_j_751;
x_b_130 = appl_j_752;
flatten_fun_j_784 = fun expr_b_126 -> (
    bool_j_753 = false;
    fail_b_124 = bool_j_753;
    flatten_fun_j_762 = fun expr_b_123 -> (
        var_j_754 = expr_b_123;
        m_match_bool_j_756 = var_j_754 ~ any;
        m_match_bool_j_759 = var_j_754 ~ int;
        m_match_cond_j_760 = m_match_bool_j_759 ? (
                bool_j_761 = true
            ) : (
                m_match_cond_j_757 = m_match_bool_j_756 ? (
                        var_j_758 = fail_b_124
                    ) : (
                        void_j_755 = {}
                    )
            ));
    flatten_fun_j_764 = fun bj_null_j_18 -> (
        input_j_763 = input);
    flatten_fun_j_766 = fun expr_b_125 -> (
        var_j_765 = expr_b_125);
    record_j_767 = {checker = flatten_fun_j_762, generator = flatten_fun_j_764, wrapper = flatten_fun_j_766};
    proj_j_768 = record_j_767.checker;
    var_j_769 = expr_b_126;
    appl_j_770 = proj_j_768 var_j_769;
    t_check_b_127 = appl_j_770;
    var_j_771 = t_check_b_127;
    if_j_783 = var_j_771 ? (
            bool_j_772 = false;
            pred_check_b_128 = bool_j_772;
            flatten_fun_j_776 = fun n_j_19 -> (
                int_j_773 = 0;
                var_j_774 = n_j_19;
                m_bl_i_956 = int_j_773 ~ int;
                m_br_i_957 = var_j_774 ~ int;
                m_b_i_958 = m_bl_i_956 and m_br_i_957;
                binop_j_775 = m_b_i_958 ? (
                        c_binop_i_959 = int_j_773 < var_j_774
                    ) : (
                        ab_i_960 = abort
                    ));
            var_j_777 = expr_b_126;
            appl_j_778 = flatten_fun_j_776 var_j_777;
            if_j_781 = appl_j_778 ? (
                    bool_j_779 = true
                ) : (
                    var_j_780 = pred_check_b_128
                )
        ) : (
            var_j_782 = t_check_b_127
        ));
flatten_fun_j_813 = fun bj_null_j_22 -> (
    bool_j_785 = false;
    fail_b_120 = bool_j_785;
    flatten_fun_j_794 = fun expr_b_119 -> (
        var_j_786 = expr_b_119;
        m_match_bool_j_788 = var_j_786 ~ any;
        m_match_bool_j_791 = var_j_786 ~ int;
        m_match_cond_j_792 = m_match_bool_j_791 ? (
                bool_j_793 = true
            ) : (
                m_match_cond_j_789 = m_match_bool_j_788 ? (
                        var_j_790 = fail_b_120
                    ) : (
                        void_j_787 = {}
                    )
            ));
    flatten_fun_j_796 = fun bj_null_j_20 -> (
        input_j_795 = input);
    flatten_fun_j_798 = fun expr_b_121 -> (
        var_j_797 = expr_b_121);
    record_j_799 = {checker = flatten_fun_j_794, generator = flatten_fun_j_796, wrapper = flatten_fun_j_798};
    proj_j_800 = record_j_799.generator;
    int_j_801 = 0;
    appl_j_802 = proj_j_800 int_j_801;
    candidate_b_122 = appl_j_802;
    flatten_fun_j_806 = fun n_j_21 -> (
        int_j_803 = 0;
        var_j_804 = n_j_21;
        m_bl_i_961 = int_j_803 ~ int;
        m_br_i_962 = var_j_804 ~ int;
        m_b_i_963 = m_bl_i_961 and m_br_i_962;
        binop_j_805 = m_b_i_963 ? (
                c_binop_i_964 = int_j_803 < var_j_804
            ) : (
                ab_i_965 = abort
            ));
    var_j_807 = candidate_b_122;
    appl_j_808 = flatten_fun_j_806 var_j_807;
    if_j_812 = appl_j_808 ? (
            var_j_809 = candidate_b_122
        ) : (
            bool_j_810 = false;
            assume_j_811 = assume bool_j_810
        ));
flatten_fun_j_815 = fun expr_b_129 -> (
    var_j_814 = expr_b_129);
record_j_816 = {checker = flatten_fun_j_784, generator = flatten_fun_j_813, wrapper = flatten_fun_j_815};
proj_j_817 = record_j_816.checker;
appl_j_820 = g f_b_131;
appl_j_822 = appl_j_820 x_b_130;
appl_j_823 = proj_j_817 appl_j_822;
check_res_b_132 = appl_j_823;
if_j_831 = check_res_b_132 ? (
        var_j_825 = g
    ) : (
        error_var_j_826 = check_res_b_132;
        assert_pred_j_827 = error_var_j_826;
        assert_res_j_828 = assert_pred_j_827 ? (
                assert_res_true_j_829 = {}
            ) : (
                ab_j_830 = abort
            )
    );
i_result = if_j_831