i_first = {};
test_j_412 = fun f -> (
    flatten_fun_j_409 = fun f_b_0 -> (
        int_j_46 = 0;
        input_j_47 = input;
        m_bl_i_772 = int_j_46 ~ int;
        m_br_i_773 = input_j_47 ~ int;
        m_b_i_774 = m_bl_i_772 and m_br_i_773;
        binop_j_48 = m_b_i_774 ? (
                c_binop_i_775 = int_j_46 < input_j_47
            ) : (
                ab_i_776 = abort
            );
        if_j_332 = binop_j_48 ? (
                flatten_fun_j_137 = fun expr_b_81 -> (
                    bool_j_49 = false;
                    fail_b_68 = bool_j_49;
                    flatten_fun_j_58 = fun expr_b_67 -> (
                        var_j_50 = expr_b_67;
                        m_match_bool_j_52 = var_j_50 ~ any;
                        m_match_bool_j_55 = var_j_50 ~ int;
                        m_match_cond_j_56 = m_match_bool_j_55 ? (
                                bool_j_57 = true
                            ) : (
                                m_match_cond_j_53 = m_match_bool_j_52 ? (
                                        var_j_54 = fail_b_68
                                    ) : (
                                        void_j_51 = {}
                                    )
                            ));
                    flatten_fun_j_60 = fun bj_null_j_22 -> (
                        input_j_59 = input);
                    flatten_fun_j_62 = fun expr_b_69 -> (
                        var_j_61 = expr_b_69);
                    record_j_63 = {checker = flatten_fun_j_58, generator = flatten_fun_j_60, wrapper = flatten_fun_j_62};
                    proj_j_64 = record_j_63.generator;
                    int_j_65 = 0;
                    appl_j_66 = proj_j_64 int_j_65;
                    arg_assert_b_82 = appl_j_66;
                    var_j_67 = expr_b_81;
                    var_j_68 = arg_assert_b_82;
                    appl_j_69 = var_j_67 var_j_68;
                    fun_ret_b_83 = appl_j_69;
                    flatten_fun_j_101 = fun expr_b_77 -> (
                        bool_j_70 = false;
                        fail_b_75 = bool_j_70;
                        flatten_fun_j_79 = fun expr_b_74 -> (
                            var_j_71 = expr_b_74;
                            m_match_bool_j_73 = var_j_71 ~ any;
                            m_match_bool_j_76 = var_j_71 ~ int;
                            m_match_cond_j_77 = m_match_bool_j_76 ? (
                                    bool_j_78 = true
                                ) : (
                                    m_match_cond_j_74 = m_match_bool_j_73 ? (
                                            var_j_75 = fail_b_75
                                        ) : (
                                            void_j_72 = {}
                                        )
                                ));
                        flatten_fun_j_81 = fun bj_null_j_23 -> (
                            input_j_80 = input);
                        flatten_fun_j_83 = fun expr_b_76 -> (
                            var_j_82 = expr_b_76);
                        record_j_84 = {checker = flatten_fun_j_79, generator = flatten_fun_j_81, wrapper = flatten_fun_j_83};
                        proj_j_85 = record_j_84.checker;
                        var_j_86 = expr_b_77;
                        appl_j_87 = proj_j_85 var_j_86;
                        t_check_b_78 = appl_j_87;
                        var_j_88 = t_check_b_78;
                        if_j_100 = var_j_88 ? (
                                bool_j_89 = false;
                                pred_check_b_79 = bool_j_89;
                                flatten_fun_j_93 = fun a_j_24 -> (
                                    int_j_90 = 0;
                                    var_j_91 = a_j_24;
                                    m_bl_i_777 = int_j_90 ~ int;
                                    m_br_i_778 = var_j_91 ~ int;
                                    m_b_i_779 = m_bl_i_777 and m_br_i_778;
                                    binop_j_92 = m_b_i_779 ? (
                                            c_binop_i_780 = int_j_90 < var_j_91
                                        ) : (
                                            ab_i_781 = abort
                                        ));
                                var_j_94 = expr_b_77;
                                appl_j_95 = flatten_fun_j_93 var_j_94;
                                if_j_98 = appl_j_95 ? (
                                        bool_j_96 = true
                                    ) : (
                                        var_j_97 = pred_check_b_79
                                    )
                            ) : (
                                var_j_99 = t_check_b_78
                            ));
                    flatten_fun_j_130 = fun bj_null_j_27 -> (
                        bool_j_102 = false;
                        fail_b_71 = bool_j_102;
                        flatten_fun_j_111 = fun expr_b_70 -> (
                            var_j_103 = expr_b_70;
                            m_match_bool_j_105 = var_j_103 ~ any;
                            m_match_bool_j_108 = var_j_103 ~ int;
                            m_match_cond_j_109 = m_match_bool_j_108 ? (
                                    bool_j_110 = true
                                ) : (
                                    m_match_cond_j_106 = m_match_bool_j_105 ? (
                                            var_j_107 = fail_b_71
                                        ) : (
                                            void_j_104 = {}
                                        )
                                ));
                        flatten_fun_j_113 = fun bj_null_j_25 -> (
                            input_j_112 = input);
                        flatten_fun_j_115 = fun expr_b_72 -> (
                            var_j_114 = expr_b_72);
                        record_j_116 = {checker = flatten_fun_j_111, generator = flatten_fun_j_113, wrapper = flatten_fun_j_115};
                        proj_j_117 = record_j_116.generator;
                        int_j_118 = 0;
                        appl_j_119 = proj_j_117 int_j_118;
                        candidate_b_73 = appl_j_119;
                        flatten_fun_j_123 = fun a_j_26 -> (
                            int_j_120 = 0;
                            var_j_121 = a_j_26;
                            m_bl_i_782 = int_j_120 ~ int;
                            m_br_i_783 = var_j_121 ~ int;
                            m_b_i_784 = m_bl_i_782 and m_br_i_783;
                            binop_j_122 = m_b_i_784 ? (
                                    c_binop_i_785 = int_j_120 < var_j_121
                                ) : (
                                    ab_i_786 = abort
                                ));
                        var_j_124 = candidate_b_73;
                        appl_j_125 = flatten_fun_j_123 var_j_124;
                        if_j_129 = appl_j_125 ? (
                                var_j_126 = candidate_b_73
                            ) : (
                                bool_j_127 = false;
                                assume_j_128 = assume bool_j_127
                            ));
                    flatten_fun_j_132 = fun expr_b_80 -> (
                        var_j_131 = expr_b_80);
                    record_j_133 = {checker = flatten_fun_j_101, generator = flatten_fun_j_130, wrapper = flatten_fun_j_132};
                    proj_j_134 = record_j_133.checker;
                    var_j_135 = fun_ret_b_83;
                    appl_j_136 = proj_j_134 var_j_135);
                flatten_fun_j_231 = fun bj_null_j_34 -> (
                    flatten_fun_j_230 = fun arg_assume_b_65 -> (
                        bool_j_138 = false;
                        fail_b_52 = bool_j_138;
                        flatten_fun_j_147 = fun expr_b_51 -> (
                            var_j_139 = expr_b_51;
                            m_match_bool_j_141 = var_j_139 ~ any;
                            m_match_bool_j_144 = var_j_139 ~ int;
                            m_match_cond_j_145 = m_match_bool_j_144 ? (
                                    bool_j_146 = true
                                ) : (
                                    m_match_cond_j_142 = m_match_bool_j_141 ? (
                                            var_j_143 = fail_b_52
                                        ) : (
                                            void_j_140 = {}
                                        )
                                ));
                        flatten_fun_j_149 = fun bj_null_j_28 -> (
                            input_j_148 = input);
                        flatten_fun_j_151 = fun expr_b_53 -> (
                            var_j_150 = expr_b_53);
                        record_j_152 = {checker = flatten_fun_j_147, generator = flatten_fun_j_149, wrapper = flatten_fun_j_151};
                        proj_j_153 = record_j_152.checker;
                        var_j_154 = arg_assume_b_65;
                        appl_j_155 = proj_j_153 var_j_154;
                        if_j_229 = appl_j_155 ? (
                                flatten_fun_j_187 = fun expr_b_61 -> (
                                    bool_j_156 = false;
                                    fail_b_59 = bool_j_156;
                                    flatten_fun_j_165 = fun expr_b_58 -> (
                                        var_j_157 = expr_b_58;
                                        m_match_bool_j_159 = var_j_157 ~ any;
                                        m_match_bool_j_162 = var_j_157 ~ int;
                                        m_match_cond_j_163 = m_match_bool_j_162 ? (
                                                bool_j_164 = true
                                            ) : (
                                                m_match_cond_j_160 = m_match_bool_j_159 ? (
                                                        var_j_161 = fail_b_59
                                                    ) : (
                                                        void_j_158 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_167 = fun bj_null_j_29 -> (
                                        input_j_166 = input);
                                    flatten_fun_j_169 = fun expr_b_60 -> (
                                        var_j_168 = expr_b_60);
                                    record_j_170 = {checker = flatten_fun_j_165, generator = flatten_fun_j_167, wrapper = flatten_fun_j_169};
                                    proj_j_171 = record_j_170.checker;
                                    var_j_172 = expr_b_61;
                                    appl_j_173 = proj_j_171 var_j_172;
                                    t_check_b_62 = appl_j_173;
                                    var_j_174 = t_check_b_62;
                                    if_j_186 = var_j_174 ? (
                                            bool_j_175 = false;
                                            pred_check_b_63 = bool_j_175;
                                            flatten_fun_j_179 = fun a_j_30 -> (
                                                int_j_176 = 0;
                                                var_j_177 = a_j_30;
                                                m_bl_i_787 = int_j_176 ~ int;
                                                m_br_i_788 = var_j_177 ~ int;
                                                m_b_i_789 = m_bl_i_787 and m_br_i_788;
                                                binop_j_178 = m_b_i_789 ? (
                                                        c_binop_i_790 = int_j_176 < var_j_177
                                                    ) : (
                                                        ab_i_791 = abort
                                                    ));
                                            var_j_180 = expr_b_61;
                                            appl_j_181 = flatten_fun_j_179 var_j_180;
                                            if_j_184 = appl_j_181 ? (
                                                    bool_j_182 = true
                                                ) : (
                                                    var_j_183 = pred_check_b_63
                                                )
                                        ) : (
                                            var_j_185 = t_check_b_62
                                        ));
                                flatten_fun_j_216 = fun bj_null_j_33 -> (
                                    bool_j_188 = false;
                                    fail_b_55 = bool_j_188;
                                    flatten_fun_j_197 = fun expr_b_54 -> (
                                        var_j_189 = expr_b_54;
                                        m_match_bool_j_191 = var_j_189 ~ any;
                                        m_match_bool_j_194 = var_j_189 ~ int;
                                        m_match_cond_j_195 = m_match_bool_j_194 ? (
                                                bool_j_196 = true
                                            ) : (
                                                m_match_cond_j_192 = m_match_bool_j_191 ? (
                                                        var_j_193 = fail_b_55
                                                    ) : (
                                                        void_j_190 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_199 = fun bj_null_j_31 -> (
                                        input_j_198 = input);
                                    flatten_fun_j_201 = fun expr_b_56 -> (
                                        var_j_200 = expr_b_56);
                                    record_j_202 = {checker = flatten_fun_j_197, generator = flatten_fun_j_199, wrapper = flatten_fun_j_201};
                                    proj_j_203 = record_j_202.generator;
                                    int_j_204 = 0;
                                    appl_j_205 = proj_j_203 int_j_204;
                                    candidate_b_57 = appl_j_205;
                                    flatten_fun_j_209 = fun a_j_32 -> (
                                        int_j_206 = 0;
                                        var_j_207 = a_j_32;
                                        m_bl_i_792 = int_j_206 ~ int;
                                        m_br_i_793 = var_j_207 ~ int;
                                        m_b_i_794 = m_bl_i_792 and m_br_i_793;
                                        binop_j_208 = m_b_i_794 ? (
                                                c_binop_i_795 = int_j_206 < var_j_207
                                            ) : (
                                                ab_i_796 = abort
                                            ));
                                    var_j_210 = candidate_b_57;
                                    appl_j_211 = flatten_fun_j_209 var_j_210;
                                    if_j_215 = appl_j_211 ? (
                                            var_j_212 = candidate_b_57
                                        ) : (
                                            bool_j_213 = false;
                                            assume_j_214 = assume bool_j_213
                                        ));
                                flatten_fun_j_218 = fun expr_b_64 -> (
                                    var_j_217 = expr_b_64);
                                record_j_219 = {checker = flatten_fun_j_187, generator = flatten_fun_j_216, wrapper = flatten_fun_j_218};
                                proj_j_220 = record_j_219.generator;
                                int_j_221 = 0;
                                appl_j_222 = proj_j_220 int_j_221
                            ) : (
                                bool_j_223 = false;
                                fail_b_66 = bool_j_223;
                                var_j_224 = fail_b_66;
                                assert_pred_j_225 = var_j_224;
                                assert_res_j_226 = assert_pred_j_225 ? (
                                        assert_res_true_j_227 = {}
                                    ) : (
                                        ab_j_228 = abort
                                    )
                            )));
                flatten_fun_j_326 = fun expr_b_98 -> (
                    flatten_fun_j_325 = fun arg_b_99 -> (
                        bool_j_232 = false;
                        fail_b_85 = bool_j_232;
                        flatten_fun_j_241 = fun expr_b_84 -> (
                            var_j_233 = expr_b_84;
                            m_match_bool_j_235 = var_j_233 ~ any;
                            m_match_bool_j_238 = var_j_233 ~ int;
                            m_match_cond_j_239 = m_match_bool_j_238 ? (
                                    bool_j_240 = true
                                ) : (
                                    m_match_cond_j_236 = m_match_bool_j_235 ? (
                                            var_j_237 = fail_b_85
                                        ) : (
                                            void_j_234 = {}
                                        )
                                ));
                        flatten_fun_j_243 = fun bj_null_j_35 -> (
                            input_j_242 = input);
                        flatten_fun_j_245 = fun expr_b_86 -> (
                            var_j_244 = expr_b_86);
                        record_j_246 = {checker = flatten_fun_j_241, generator = flatten_fun_j_243, wrapper = flatten_fun_j_245};
                        proj_j_247 = record_j_246.checker;
                        var_j_248 = arg_b_99;
                        m_i_797 = proj_j_247 ~ fun;
                        appl_j_249 = m_i_797 ? (
                                c_appl_i_798 = proj_j_247 var_j_248
                            ) : (
                                ab_i_799 = abort
                            );
                        m_i_800 = appl_j_249 ~ bool;
                        if_j_324 = m_i_800 ? (
                                c_cond_i_817 = appl_j_249 ? (
                                        flatten_fun_j_281 = fun expr_b_94 -> (
                                            bool_j_250 = false;
                                            fail_b_92 = bool_j_250;
                                            flatten_fun_j_259 = fun expr_b_91 -> (
                                                var_j_251 = expr_b_91;
                                                m_match_bool_j_253 = var_j_251 ~ any;
                                                m_match_bool_j_256 = var_j_251 ~ int;
                                                m_match_cond_j_257 = m_match_bool_j_256 ? (
                                                        bool_j_258 = true
                                                    ) : (
                                                        m_match_cond_j_254 = m_match_bool_j_253 ? (
                                                                var_j_255 = fail_b_92
                                                            ) : (
                                                                void_j_252 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_261 = fun bj_null_j_36 -> (
                                                input_j_260 = input);
                                            flatten_fun_j_263 = fun expr_b_93 -> (
                                                var_j_262 = expr_b_93);
                                            record_j_264 = {checker = flatten_fun_j_259, generator = flatten_fun_j_261, wrapper = flatten_fun_j_263};
                                            proj_j_265 = record_j_264.checker;
                                            var_j_266 = expr_b_94;
                                            appl_j_267 = proj_j_265 var_j_266;
                                            t_check_b_95 = appl_j_267;
                                            var_j_268 = t_check_b_95;
                                            if_j_280 = var_j_268 ? (
                                                    bool_j_269 = false;
                                                    pred_check_b_96 = bool_j_269;
                                                    flatten_fun_j_273 = fun a_j_37 -> (
                                                        int_j_270 = 0;
                                                        var_j_271 = a_j_37;
                                                        m_bl_i_801 = int_j_270 ~ int;
                                                        m_br_i_802 = var_j_271 ~ int;
                                                        m_b_i_803 = m_bl_i_801 and m_br_i_802;
                                                        binop_j_272 = m_b_i_803 ? (
                                                                c_binop_i_804 = int_j_270 < var_j_271
                                                            ) : (
                                                                ab_i_805 = abort
                                                            ));
                                                    var_j_274 = expr_b_94;
                                                    appl_j_275 = flatten_fun_j_273 var_j_274;
                                                    if_j_278 = appl_j_275 ? (
                                                            bool_j_276 = true
                                                        ) : (
                                                            var_j_277 = pred_check_b_96
                                                        )
                                                ) : (
                                                    var_j_279 = t_check_b_95
                                                ));
                                        flatten_fun_j_310 = fun bj_null_j_40 -> (
                                            bool_j_282 = false;
                                            fail_b_88 = bool_j_282;
                                            flatten_fun_j_291 = fun expr_b_87 -> (
                                                var_j_283 = expr_b_87;
                                                m_match_bool_j_285 = var_j_283 ~ any;
                                                m_match_bool_j_288 = var_j_283 ~ int;
                                                m_match_cond_j_289 = m_match_bool_j_288 ? (
                                                        bool_j_290 = true
                                                    ) : (
                                                        m_match_cond_j_286 = m_match_bool_j_285 ? (
                                                                var_j_287 = fail_b_88
                                                            ) : (
                                                                void_j_284 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_293 = fun bj_null_j_38 -> (
                                                input_j_292 = input);
                                            flatten_fun_j_295 = fun expr_b_89 -> (
                                                var_j_294 = expr_b_89);
                                            record_j_296 = {checker = flatten_fun_j_291, generator = flatten_fun_j_293, wrapper = flatten_fun_j_295};
                                            proj_j_297 = record_j_296.generator;
                                            int_j_298 = 0;
                                            appl_j_299 = proj_j_297 int_j_298;
                                            candidate_b_90 = appl_j_299;
                                            flatten_fun_j_303 = fun a_j_39 -> (
                                                int_j_300 = 0;
                                                var_j_301 = a_j_39;
                                                m_bl_i_806 = int_j_300 ~ int;
                                                m_br_i_807 = var_j_301 ~ int;
                                                m_b_i_808 = m_bl_i_806 and m_br_i_807;
                                                binop_j_302 = m_b_i_808 ? (
                                                        c_binop_i_809 = int_j_300 < var_j_301
                                                    ) : (
                                                        ab_i_810 = abort
                                                    ));
                                            var_j_304 = candidate_b_90;
                                            appl_j_305 = flatten_fun_j_303 var_j_304;
                                            if_j_309 = appl_j_305 ? (
                                                    var_j_306 = candidate_b_90
                                                ) : (
                                                    bool_j_307 = false;
                                                    assume_j_308 = assume bool_j_307
                                                ));
                                        flatten_fun_j_312 = fun expr_b_97 -> (
                                            var_j_311 = expr_b_97);
                                        record_j_313 = {checker = flatten_fun_j_281, generator = flatten_fun_j_310, wrapper = flatten_fun_j_312};
                                        proj_j_314 = record_j_313.wrapper;
                                        var_j_315 = expr_b_98;
                                        var_j_316 = arg_b_99;
                                        m_i_811 = var_j_315 ~ fun;
                                        appl_j_317 = m_i_811 ? (
                                                c_appl_i_812 = var_j_315 var_j_316
                                            ) : (
                                                ab_i_813 = abort
                                            );
                                        m_i_814 = proj_j_314 ~ fun;
                                        appl_j_318 = m_i_814 ? (
                                                c_appl_i_815 = proj_j_314 appl_j_317
                                            ) : (
                                                ab_i_816 = abort
                                            )
                                    ) : (
                                        bool_j_319 = false;
                                        assert_pred_j_320 = bool_j_319;
                                        assert_res_j_321 = assert_pred_j_320 ? (
                                                assert_res_true_j_322 = 
                                                    {}
                                            ) : (
                                                ab_j_323 = abort
                                            )
                                    )
                            ) : (
                                ab_i_818 = abort
                            )));
                record_j_327 = {checker = flatten_fun_j_137, generator = flatten_fun_j_231, wrapper = flatten_fun_j_326};
                proj_j_328 = record_j_327.checker;
                var_j_329 = f_b_0;
                m_i_819 = proj_j_328 ~ fun;
                appl_j_330 = m_i_819 ? (
                        c_appl_i_820 = proj_j_328 var_j_329
                    ) : (
                        ab_i_821 = abort
                    )
            ) : (
                bool_j_331 = true
            );
        arg_check_b_1 = if_j_332;
        var_j_333 = arg_check_b_1;
        if_j_408 = var_j_333 ? (
                flatten_fun_j_365 = fun expr_b_107 -> (
                    bool_j_334 = false;
                    fail_b_105 = bool_j_334;
                    flatten_fun_j_343 = fun expr_b_104 -> (
                        var_j_335 = expr_b_104;
                        m_match_bool_j_337 = var_j_335 ~ any;
                        m_match_bool_j_340 = var_j_335 ~ int;
                        m_match_cond_j_341 = m_match_bool_j_340 ? (
                                bool_j_342 = true
                            ) : (
                                m_match_cond_j_338 = m_match_bool_j_337 ? (
                                        var_j_339 = fail_b_105
                                    ) : (
                                        void_j_336 = {}
                                    )
                            ));
                    flatten_fun_j_345 = fun bj_null_j_41 -> (
                        input_j_344 = input);
                    flatten_fun_j_347 = fun expr_b_106 -> (
                        var_j_346 = expr_b_106);
                    record_j_348 = {checker = flatten_fun_j_343, generator = flatten_fun_j_345, wrapper = flatten_fun_j_347};
                    proj_j_349 = record_j_348.checker;
                    var_j_350 = expr_b_107;
                    appl_j_351 = proj_j_349 var_j_350;
                    t_check_b_108 = appl_j_351;
                    var_j_352 = t_check_b_108;
                    if_j_364 = var_j_352 ? (
                            bool_j_353 = false;
                            pred_check_b_109 = bool_j_353;
                            flatten_fun_j_357 = fun a_j_42 -> (
                                var_j_354 = a_j_42;
                                int_j_355 = 0;
                                m_bl_i_822 = var_j_354 ~ int;
                                m_br_i_823 = int_j_355 ~ int;
                                m_b_i_824 = m_bl_i_822 and m_br_i_823;
                                binop_j_356 = m_b_i_824 ? (
                                        c_binop_i_825 = var_j_354 < int_j_355
                                    ) : (
                                        ab_i_826 = abort
                                    ));
                            var_j_358 = expr_b_107;
                            appl_j_359 = flatten_fun_j_357 var_j_358;
                            if_j_362 = appl_j_359 ? (
                                    bool_j_360 = true
                                ) : (
                                    var_j_361 = pred_check_b_109
                                )
                        ) : (
                            var_j_363 = t_check_b_108
                        ));
                flatten_fun_j_394 = fun bj_null_j_45 -> (
                    bool_j_366 = false;
                    fail_b_101 = bool_j_366;
                    flatten_fun_j_375 = fun expr_b_100 -> (
                        var_j_367 = expr_b_100;
                        m_match_bool_j_369 = var_j_367 ~ any;
                        m_match_bool_j_372 = var_j_367 ~ int;
                        m_match_cond_j_373 = m_match_bool_j_372 ? (
                                bool_j_374 = true
                            ) : (
                                m_match_cond_j_370 = m_match_bool_j_369 ? (
                                        var_j_371 = fail_b_101
                                    ) : (
                                        void_j_368 = {}
                                    )
                            ));
                    flatten_fun_j_377 = fun bj_null_j_43 -> (
                        input_j_376 = input);
                    flatten_fun_j_379 = fun expr_b_102 -> (
                        var_j_378 = expr_b_102);
                    record_j_380 = {checker = flatten_fun_j_375, generator = flatten_fun_j_377, wrapper = flatten_fun_j_379};
                    proj_j_381 = record_j_380.generator;
                    int_j_382 = 0;
                    appl_j_383 = proj_j_381 int_j_382;
                    candidate_b_103 = appl_j_383;
                    flatten_fun_j_387 = fun a_j_44 -> (
                        var_j_384 = a_j_44;
                        int_j_385 = 0;
                        m_bl_i_827 = var_j_384 ~ int;
                        m_br_i_828 = int_j_385 ~ int;
                        m_b_i_829 = m_bl_i_827 and m_br_i_828;
                        binop_j_386 = m_b_i_829 ? (
                                c_binop_i_830 = var_j_384 < int_j_385
                            ) : (
                                ab_i_831 = abort
                            ));
                    var_j_388 = candidate_b_103;
                    appl_j_389 = flatten_fun_j_387 var_j_388;
                    if_j_393 = appl_j_389 ? (
                            var_j_390 = candidate_b_103
                        ) : (
                            bool_j_391 = false;
                            assume_j_392 = assume bool_j_391
                        ));
                flatten_fun_j_396 = fun expr_b_110 -> (
                    var_j_395 = expr_b_110);
                record_j_397 = {checker = flatten_fun_j_365, generator = flatten_fun_j_394, wrapper = flatten_fun_j_396};
                proj_j_398 = record_j_397.wrapper;
                var_j_399 = f;
                int_j_400 = 1;
                m_i_832 = var_j_399 ~ fun;
                appl_j_401 = m_i_832 ? (
                        c_appl_i_833 = var_j_399 int_j_400
                    ) : (
                        ab_i_834 = abort
                    );
                m_i_835 = proj_j_398 ~ fun;
                appl_j_402 = m_i_835 ? (
                        c_appl_i_836 = proj_j_398 appl_j_401
                    ) : (
                        ab_i_837 = abort
                    )
            ) : (
                var_j_403 = arg_check_b_1;
                assert_pred_j_404 = var_j_403;
                assert_res_j_405 = assert_pred_j_404 ? (
                        assert_res_true_j_406 = {}
                    ) : (
                        ab_j_407 = abort
                    )
            ));
    var_j_410 = f;
    appl_j_411 = flatten_fun_j_409 var_j_410);
test = test_j_412;
flatten_fun_j_501 = fun expr_b_32 -> (
    bool_j_413 = false;
    fail_b_19 = bool_j_413;
    flatten_fun_j_422 = fun expr_b_18 -> (
        var_j_414 = expr_b_18;
        m_match_bool_j_416 = var_j_414 ~ any;
        m_match_bool_j_419 = var_j_414 ~ int;
        m_match_cond_j_420 = m_match_bool_j_419 ? (
                bool_j_421 = true
            ) : (
                m_match_cond_j_417 = m_match_bool_j_416 ? (
                        var_j_418 = fail_b_19
                    ) : (
                        void_j_415 = {}
                    )
            ));
    flatten_fun_j_424 = fun bj_null -> (
        input_j_423 = input);
    flatten_fun_j_426 = fun expr_b_20 -> (
        var_j_425 = expr_b_20);
    record_j_427 = {checker = flatten_fun_j_422, generator = flatten_fun_j_424, wrapper = flatten_fun_j_426};
    proj_j_428 = record_j_427.generator;
    int_j_429 = 0;
    appl_j_430 = proj_j_428 int_j_429;
    arg_assert_b_33 = appl_j_430;
    var_j_431 = expr_b_32;
    var_j_432 = arg_assert_b_33;
    appl_j_433 = var_j_431 var_j_432;
    fun_ret_b_34 = appl_j_433;
    flatten_fun_j_465 = fun expr_b_28 -> (
        bool_j_434 = false;
        fail_b_26 = bool_j_434;
        flatten_fun_j_443 = fun expr_b_25 -> (
            var_j_435 = expr_b_25;
            m_match_bool_j_437 = var_j_435 ~ any;
            m_match_bool_j_440 = var_j_435 ~ int;
            m_match_cond_j_441 = m_match_bool_j_440 ? (
                    bool_j_442 = true
                ) : (
                    m_match_cond_j_438 = m_match_bool_j_437 ? (
                            var_j_439 = fail_b_26
                        ) : (
                            void_j_436 = {}
                        )
                ));
        flatten_fun_j_445 = fun bj_null_j_0 -> (
            input_j_444 = input);
        flatten_fun_j_447 = fun expr_b_27 -> (
            var_j_446 = expr_b_27);
        record_j_448 = {checker = flatten_fun_j_443, generator = flatten_fun_j_445, wrapper = flatten_fun_j_447};
        proj_j_449 = record_j_448.checker;
        var_j_450 = expr_b_28;
        appl_j_451 = proj_j_449 var_j_450;
        t_check_b_29 = appl_j_451;
        var_j_452 = t_check_b_29;
        if_j_464 = var_j_452 ? (
                bool_j_453 = false;
                pred_check_b_30 = bool_j_453;
                flatten_fun_j_457 = fun a -> (
                    int_j_454 = 0;
                    var_j_455 = a;
                    m_bl_i_838 = int_j_454 ~ int;
                    m_br_i_839 = var_j_455 ~ int;
                    m_b_i_840 = m_bl_i_838 and m_br_i_839;
                    binop_j_456 = m_b_i_840 ? (
                            c_binop_i_841 = int_j_454 < var_j_455
                        ) : (
                            ab_i_842 = abort
                        ));
                var_j_458 = expr_b_28;
                appl_j_459 = flatten_fun_j_457 var_j_458;
                if_j_462 = appl_j_459 ? (
                        bool_j_460 = true
                    ) : (
                        var_j_461 = pred_check_b_30
                    )
            ) : (
                var_j_463 = t_check_b_29
            ));
    flatten_fun_j_494 = fun bj_null_j_3 -> (
        bool_j_466 = false;
        fail_b_22 = bool_j_466;
        flatten_fun_j_475 = fun expr_b_21 -> (
            var_j_467 = expr_b_21;
            m_match_bool_j_469 = var_j_467 ~ any;
            m_match_bool_j_472 = var_j_467 ~ int;
            m_match_cond_j_473 = m_match_bool_j_472 ? (
                    bool_j_474 = true
                ) : (
                    m_match_cond_j_470 = m_match_bool_j_469 ? (
                            var_j_471 = fail_b_22
                        ) : (
                            void_j_468 = {}
                        )
                ));
        flatten_fun_j_477 = fun bj_null_j_1 -> (
            input_j_476 = input);
        flatten_fun_j_479 = fun expr_b_23 -> (
            var_j_478 = expr_b_23);
        record_j_480 = {checker = flatten_fun_j_475, generator = flatten_fun_j_477, wrapper = flatten_fun_j_479};
        proj_j_481 = record_j_480.generator;
        int_j_482 = 0;
        appl_j_483 = proj_j_481 int_j_482;
        candidate_b_24 = appl_j_483;
        flatten_fun_j_487 = fun a_j_2 -> (
            int_j_484 = 0;
            var_j_485 = a_j_2;
            m_bl_i_843 = int_j_484 ~ int;
            m_br_i_844 = var_j_485 ~ int;
            m_b_i_845 = m_bl_i_843 and m_br_i_844;
            binop_j_486 = m_b_i_845 ? (
                    c_binop_i_846 = int_j_484 < var_j_485
                ) : (
                    ab_i_847 = abort
                ));
        var_j_488 = candidate_b_24;
        appl_j_489 = flatten_fun_j_487 var_j_488;
        if_j_493 = appl_j_489 ? (
                var_j_490 = candidate_b_24
            ) : (
                bool_j_491 = false;
                assume_j_492 = assume bool_j_491
            ));
    flatten_fun_j_496 = fun expr_b_31 -> (
        var_j_495 = expr_b_31);
    record_j_497 = {checker = flatten_fun_j_465, generator = flatten_fun_j_494, wrapper = flatten_fun_j_496};
    proj_j_498 = record_j_497.checker;
    var_j_499 = fun_ret_b_34;
    appl_j_500 = proj_j_498 var_j_499);
flatten_fun_j_595 = fun bj_null_j_10 -> (
    flatten_fun_j_594 = fun arg_assume_b_16 -> (
        bool_j_502 = false;
        fail_b_3 = bool_j_502;
        flatten_fun_j_511 = fun expr_b_2 -> (
            var_j_503 = expr_b_2;
            m_match_bool_j_505 = var_j_503 ~ any;
            m_match_bool_j_508 = var_j_503 ~ int;
            m_match_cond_j_509 = m_match_bool_j_508 ? (
                    bool_j_510 = true
                ) : (
                    m_match_cond_j_506 = m_match_bool_j_505 ? (
                            var_j_507 = fail_b_3
                        ) : (
                            void_j_504 = {}
                        )
                ));
        flatten_fun_j_513 = fun bj_null_j_4 -> (
            input_j_512 = input);
        flatten_fun_j_515 = fun expr_b_4 -> (
            var_j_514 = expr_b_4);
        record_j_516 = {checker = flatten_fun_j_511, generator = flatten_fun_j_513, wrapper = flatten_fun_j_515};
        proj_j_517 = record_j_516.checker;
        var_j_518 = arg_assume_b_16;
        appl_j_519 = proj_j_517 var_j_518;
        if_j_593 = appl_j_519 ? (
                flatten_fun_j_551 = fun expr_b_12 -> (
                    bool_j_520 = false;
                    fail_b_10 = bool_j_520;
                    flatten_fun_j_529 = fun expr_b_9 -> (
                        var_j_521 = expr_b_9;
                        m_match_bool_j_523 = var_j_521 ~ any;
                        m_match_bool_j_526 = var_j_521 ~ int;
                        m_match_cond_j_527 = m_match_bool_j_526 ? (
                                bool_j_528 = true
                            ) : (
                                m_match_cond_j_524 = m_match_bool_j_523 ? (
                                        var_j_525 = fail_b_10
                                    ) : (
                                        void_j_522 = {}
                                    )
                            ));
                    flatten_fun_j_531 = fun bj_null_j_5 -> (
                        input_j_530 = input);
                    flatten_fun_j_533 = fun expr_b_11 -> (
                        var_j_532 = expr_b_11);
                    record_j_534 = {checker = flatten_fun_j_529, generator = flatten_fun_j_531, wrapper = flatten_fun_j_533};
                    proj_j_535 = record_j_534.checker;
                    var_j_536 = expr_b_12;
                    appl_j_537 = proj_j_535 var_j_536;
                    t_check_b_13 = appl_j_537;
                    var_j_538 = t_check_b_13;
                    if_j_550 = var_j_538 ? (
                            bool_j_539 = false;
                            pred_check_b_14 = bool_j_539;
                            flatten_fun_j_543 = fun a_j_6 -> (
                                int_j_540 = 0;
                                var_j_541 = a_j_6;
                                m_bl_i_848 = int_j_540 ~ int;
                                m_br_i_849 = var_j_541 ~ int;
                                m_b_i_850 = m_bl_i_848 and m_br_i_849;
                                binop_j_542 = m_b_i_850 ? (
                                        c_binop_i_851 = int_j_540 < var_j_541
                                    ) : (
                                        ab_i_852 = abort
                                    ));
                            var_j_544 = expr_b_12;
                            appl_j_545 = flatten_fun_j_543 var_j_544;
                            if_j_548 = appl_j_545 ? (
                                    bool_j_546 = true
                                ) : (
                                    var_j_547 = pred_check_b_14
                                )
                        ) : (
                            var_j_549 = t_check_b_13
                        ));
                flatten_fun_j_580 = fun bj_null_j_9 -> (
                    bool_j_552 = false;
                    fail_b_6 = bool_j_552;
                    flatten_fun_j_561 = fun expr_b_5 -> (
                        var_j_553 = expr_b_5;
                        m_match_bool_j_555 = var_j_553 ~ any;
                        m_match_bool_j_558 = var_j_553 ~ int;
                        m_match_cond_j_559 = m_match_bool_j_558 ? (
                                bool_j_560 = true
                            ) : (
                                m_match_cond_j_556 = m_match_bool_j_555 ? (
                                        var_j_557 = fail_b_6
                                    ) : (
                                        void_j_554 = {}
                                    )
                            ));
                    flatten_fun_j_563 = fun bj_null_j_7 -> (
                        input_j_562 = input);
                    flatten_fun_j_565 = fun expr_b_7 -> (
                        var_j_564 = expr_b_7);
                    record_j_566 = {checker = flatten_fun_j_561, generator = flatten_fun_j_563, wrapper = flatten_fun_j_565};
                    proj_j_567 = record_j_566.generator;
                    int_j_568 = 0;
                    appl_j_569 = proj_j_567 int_j_568;
                    candidate_b_8 = appl_j_569;
                    flatten_fun_j_573 = fun a_j_8 -> (
                        int_j_570 = 0;
                        var_j_571 = a_j_8;
                        m_bl_i_853 = int_j_570 ~ int;
                        m_br_i_854 = var_j_571 ~ int;
                        m_b_i_855 = m_bl_i_853 and m_br_i_854;
                        binop_j_572 = m_b_i_855 ? (
                                c_binop_i_856 = int_j_570 < var_j_571
                            ) : (
                                ab_i_857 = abort
                            ));
                    var_j_574 = candidate_b_8;
                    appl_j_575 = flatten_fun_j_573 var_j_574;
                    if_j_579 = appl_j_575 ? (
                            var_j_576 = candidate_b_8
                        ) : (
                            bool_j_577 = false;
                            assume_j_578 = assume bool_j_577
                        ));
                flatten_fun_j_582 = fun expr_b_15 -> (
                    var_j_581 = expr_b_15);
                record_j_583 = {checker = flatten_fun_j_551, generator = flatten_fun_j_580, wrapper = flatten_fun_j_582};
                proj_j_584 = record_j_583.generator;
                int_j_585 = 0;
                appl_j_586 = proj_j_584 int_j_585
            ) : (
                bool_j_587 = false;
                fail_b_17 = bool_j_587;
                var_j_588 = fail_b_17;
                assert_pred_j_589 = var_j_588;
                assert_res_j_590 = assert_pred_j_589 ? (
                        assert_res_true_j_591 = {}
                    ) : (
                        ab_j_592 = abort
                    )
            )));
flatten_fun_j_690 = fun expr_b_49 -> (
    flatten_fun_j_689 = fun arg_b_50 -> (
        bool_j_596 = false;
        fail_b_36 = bool_j_596;
        flatten_fun_j_605 = fun expr_b_35 -> (
            var_j_597 = expr_b_35;
            m_match_bool_j_599 = var_j_597 ~ any;
            m_match_bool_j_602 = var_j_597 ~ int;
            m_match_cond_j_603 = m_match_bool_j_602 ? (
                    bool_j_604 = true
                ) : (
                    m_match_cond_j_600 = m_match_bool_j_599 ? (
                            var_j_601 = fail_b_36
                        ) : (
                            void_j_598 = {}
                        )
                ));
        flatten_fun_j_607 = fun bj_null_j_11 -> (
            input_j_606 = input);
        flatten_fun_j_609 = fun expr_b_37 -> (
            var_j_608 = expr_b_37);
        record_j_610 = {checker = flatten_fun_j_605, generator = flatten_fun_j_607, wrapper = flatten_fun_j_609};
        proj_j_611 = record_j_610.checker;
        var_j_612 = arg_b_50;
        m_i_858 = proj_j_611 ~ fun;
        appl_j_613 = m_i_858 ? (
                c_appl_i_859 = proj_j_611 var_j_612
            ) : (
                ab_i_860 = abort
            );
        m_i_861 = appl_j_613 ~ bool;
        if_j_688 = m_i_861 ? (
                c_cond_i_878 = appl_j_613 ? (
                        flatten_fun_j_645 = fun expr_b_45 -> (
                            bool_j_614 = false;
                            fail_b_43 = bool_j_614;
                            flatten_fun_j_623 = fun expr_b_42 -> (
                                var_j_615 = expr_b_42;
                                m_match_bool_j_617 = var_j_615 ~ any;
                                m_match_bool_j_620 = var_j_615 ~ int;
                                m_match_cond_j_621 = m_match_bool_j_620 ? (
                                        bool_j_622 = true
                                    ) : (
                                        m_match_cond_j_618 = m_match_bool_j_617 ? (
                                                var_j_619 = fail_b_43
                                            ) : (
                                                void_j_616 = {}
                                            )
                                    ));
                            flatten_fun_j_625 = fun bj_null_j_12 -> (
                                input_j_624 = input);
                            flatten_fun_j_627 = fun expr_b_44 -> (
                                var_j_626 = expr_b_44);
                            record_j_628 = {checker = flatten_fun_j_623, generator = flatten_fun_j_625, wrapper = flatten_fun_j_627};
                            proj_j_629 = record_j_628.checker;
                            var_j_630 = expr_b_45;
                            appl_j_631 = proj_j_629 var_j_630;
                            t_check_b_46 = appl_j_631;
                            var_j_632 = t_check_b_46;
                            if_j_644 = var_j_632 ? (
                                    bool_j_633 = false;
                                    pred_check_b_47 = bool_j_633;
                                    flatten_fun_j_637 = fun a_j_13 -> (
                                        int_j_634 = 0;
                                        var_j_635 = a_j_13;
                                        m_bl_i_862 = int_j_634 ~ int;
                                        m_br_i_863 = var_j_635 ~ int;
                                        m_b_i_864 = m_bl_i_862 and m_br_i_863;
                                        binop_j_636 = m_b_i_864 ? (
                                                c_binop_i_865 = int_j_634 < var_j_635
                                            ) : (
                                                ab_i_866 = abort
                                            ));
                                    var_j_638 = expr_b_45;
                                    appl_j_639 = flatten_fun_j_637 var_j_638;
                                    if_j_642 = appl_j_639 ? (
                                            bool_j_640 = true
                                        ) : (
                                            var_j_641 = pred_check_b_47
                                        )
                                ) : (
                                    var_j_643 = t_check_b_46
                                ));
                        flatten_fun_j_674 = fun bj_null_j_16 -> (
                            bool_j_646 = false;
                            fail_b_39 = bool_j_646;
                            flatten_fun_j_655 = fun expr_b_38 -> (
                                var_j_647 = expr_b_38;
                                m_match_bool_j_649 = var_j_647 ~ any;
                                m_match_bool_j_652 = var_j_647 ~ int;
                                m_match_cond_j_653 = m_match_bool_j_652 ? (
                                        bool_j_654 = true
                                    ) : (
                                        m_match_cond_j_650 = m_match_bool_j_649 ? (
                                                var_j_651 = fail_b_39
                                            ) : (
                                                void_j_648 = {}
                                            )
                                    ));
                            flatten_fun_j_657 = fun bj_null_j_14 -> (
                                input_j_656 = input);
                            flatten_fun_j_659 = fun expr_b_40 -> (
                                var_j_658 = expr_b_40);
                            record_j_660 = {checker = flatten_fun_j_655, generator = flatten_fun_j_657, wrapper = flatten_fun_j_659};
                            proj_j_661 = record_j_660.generator;
                            int_j_662 = 0;
                            appl_j_663 = proj_j_661 int_j_662;
                            candidate_b_41 = appl_j_663;
                            flatten_fun_j_667 = fun a_j_15 -> (
                                int_j_664 = 0;
                                var_j_665 = a_j_15;
                                m_bl_i_867 = int_j_664 ~ int;
                                m_br_i_868 = var_j_665 ~ int;
                                m_b_i_869 = m_bl_i_867 and m_br_i_868;
                                binop_j_666 = m_b_i_869 ? (
                                        c_binop_i_870 = int_j_664 < var_j_665
                                    ) : (
                                        ab_i_871 = abort
                                    ));
                            var_j_668 = candidate_b_41;
                            appl_j_669 = flatten_fun_j_667 var_j_668;
                            if_j_673 = appl_j_669 ? (
                                    var_j_670 = candidate_b_41
                                ) : (
                                    bool_j_671 = false;
                                    assume_j_672 = assume bool_j_671
                                ));
                        flatten_fun_j_676 = fun expr_b_48 -> (
                            var_j_675 = expr_b_48);
                        record_j_677 = {checker = flatten_fun_j_645, generator = flatten_fun_j_674, wrapper = flatten_fun_j_676};
                        proj_j_678 = record_j_677.wrapper;
                        var_j_679 = expr_b_49;
                        var_j_680 = arg_b_50;
                        m_i_872 = var_j_679 ~ fun;
                        appl_j_681 = m_i_872 ? (
                                c_appl_i_873 = var_j_679 var_j_680
                            ) : (
                                ab_i_874 = abort
                            );
                        m_i_875 = proj_j_678 ~ fun;
                        appl_j_682 = m_i_875 ? (
                                c_appl_i_876 = proj_j_678 appl_j_681
                            ) : (
                                ab_i_877 = abort
                            )
                    ) : (
                        bool_j_683 = false;
                        assert_pred_j_684 = bool_j_683;
                        assert_res_j_685 = assert_pred_j_684 ? (
                                assert_res_true_j_686 = {}
                            ) : (
                                ab_j_687 = abort
                            )
                    )
            ) : (
                ab_i_879 = abort
            )));
record_j_691 = {checker = flatten_fun_j_501, generator = flatten_fun_j_595, wrapper = flatten_fun_j_690};
proj_j_692 = record_j_691.generator;
int_j_693 = 0;
appl_j_694 = proj_j_692 int_j_693;
f_b_122 = appl_j_694;
flatten_fun_j_726 = fun expr_b_118 -> (
    bool_j_695 = false;
    fail_b_116 = bool_j_695;
    flatten_fun_j_704 = fun expr_b_115 -> (
        var_j_696 = expr_b_115;
        m_match_bool_j_698 = var_j_696 ~ any;
        m_match_bool_j_701 = var_j_696 ~ int;
        m_match_cond_j_702 = m_match_bool_j_701 ? (
                bool_j_703 = true
            ) : (
                m_match_cond_j_699 = m_match_bool_j_698 ? (
                        var_j_700 = fail_b_116
                    ) : (
                        void_j_697 = {}
                    )
            ));
    flatten_fun_j_706 = fun bj_null_j_17 -> (
        input_j_705 = input);
    flatten_fun_j_708 = fun expr_b_117 -> (
        var_j_707 = expr_b_117);
    record_j_709 = {checker = flatten_fun_j_704, generator = flatten_fun_j_706, wrapper = flatten_fun_j_708};
    proj_j_710 = record_j_709.checker;
    var_j_711 = expr_b_118;
    appl_j_712 = proj_j_710 var_j_711;
    t_check_b_119 = appl_j_712;
    var_j_713 = t_check_b_119;
    if_j_725 = var_j_713 ? (
            bool_j_714 = false;
            pred_check_b_120 = bool_j_714;
            flatten_fun_j_718 = fun a_j_18 -> (
                var_j_715 = a_j_18;
                int_j_716 = 0;
                m_bl_i_880 = var_j_715 ~ int;
                m_br_i_881 = int_j_716 ~ int;
                m_b_i_882 = m_bl_i_880 and m_br_i_881;
                binop_j_717 = m_b_i_882 ? (
                        c_binop_i_883 = var_j_715 < int_j_716
                    ) : (
                        ab_i_884 = abort
                    ));
            var_j_719 = expr_b_118;
            appl_j_720 = flatten_fun_j_718 var_j_719;
            if_j_723 = appl_j_720 ? (
                    bool_j_721 = true
                ) : (
                    var_j_722 = pred_check_b_120
                )
        ) : (
            var_j_724 = t_check_b_119
        ));
flatten_fun_j_755 = fun bj_null_j_21 -> (
    bool_j_727 = false;
    fail_b_112 = bool_j_727;
    flatten_fun_j_736 = fun expr_b_111 -> (
        var_j_728 = expr_b_111;
        m_match_bool_j_730 = var_j_728 ~ any;
        m_match_bool_j_733 = var_j_728 ~ int;
        m_match_cond_j_734 = m_match_bool_j_733 ? (
                bool_j_735 = true
            ) : (
                m_match_cond_j_731 = m_match_bool_j_730 ? (
                        var_j_732 = fail_b_112
                    ) : (
                        void_j_729 = {}
                    )
            ));
    flatten_fun_j_738 = fun bj_null_j_19 -> (
        input_j_737 = input);
    flatten_fun_j_740 = fun expr_b_113 -> (
        var_j_739 = expr_b_113);
    record_j_741 = {checker = flatten_fun_j_736, generator = flatten_fun_j_738, wrapper = flatten_fun_j_740};
    proj_j_742 = record_j_741.generator;
    int_j_743 = 0;
    appl_j_744 = proj_j_742 int_j_743;
    candidate_b_114 = appl_j_744;
    flatten_fun_j_748 = fun a_j_20 -> (
        var_j_745 = a_j_20;
        int_j_746 = 0;
        m_bl_i_885 = var_j_745 ~ int;
        m_br_i_886 = int_j_746 ~ int;
        m_b_i_887 = m_bl_i_885 and m_br_i_886;
        binop_j_747 = m_b_i_887 ? (
                c_binop_i_888 = var_j_745 < int_j_746
            ) : (
                ab_i_889 = abort
            ));
    var_j_749 = candidate_b_114;
    appl_j_750 = flatten_fun_j_748 var_j_749;
    if_j_754 = appl_j_750 ? (
            var_j_751 = candidate_b_114
        ) : (
            bool_j_752 = false;
            assume_j_753 = assume bool_j_752
        ));
flatten_fun_j_757 = fun expr_b_121 -> (
    var_j_756 = expr_b_121);
record_j_758 = {checker = flatten_fun_j_726, generator = flatten_fun_j_755, wrapper = flatten_fun_j_757};
proj_j_759 = record_j_758.checker;
appl_j_762 = test f_b_122;
appl_j_763 = proj_j_759 appl_j_762;
check_res_b_123 = appl_j_763;
if_j_771 = check_res_b_123 ? (
        var_j_765 = test
    ) : (
        error_var_j_766 = check_res_b_123;
        assert_pred_j_767 = error_var_j_766;
        assert_res_j_768 = assert_pred_j_767 ? (
                assert_res_true_j_769 = {}
            ) : (
                ab_j_770 = abort
            )
    );
i_result = if_j_771