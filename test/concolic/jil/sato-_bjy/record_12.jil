i_first = {};
flatten_fun_j_139 = fun expr_b_20 -> (
    bool_j_13 = false;
    rec_fail_b_19 = bool_j_13;
    bool_j_14 = false;
    rec_fail_b_18 = bool_j_14;
    bool_j_15 = false;
    rec_fail_b_17 = bool_j_15;
    var_j_16 = expr_b_20;
    m_match_bool_j_18 = var_j_16 ~ any;
    m_match_bool_j_21 = var_j_16 ~ {bj_actual_rec, _};
    m_match_cond_j_22 = m_match_bool_j_21 ? (
            var_j_23 = expr_b_20;
            proj_j_24 = var_j_23.bj_decl_lbls;
            m_match_bool_j_26 = proj_j_24 ~ any;
            m_match_bool_j_29 = proj_j_24 ~ {item, left, _};
            m_match_cond_j_30 = m_match_bool_j_29 ? (
                    item_j_5 = proj_j_24.item;
                    left_j_4 = proj_j_24.left;
                    var_j_31 = expr_b_20;
                    proj_j_32 = var_j_31.bj_actual_rec;
                    m_match_bool_j_34 = proj_j_32 ~ any;
                    m_match_bool_j_37 = proj_j_32 ~ {item, left, _};
                    m_match_cond_j_38 = m_match_bool_j_37 ? (
                            item = proj_j_32.item;
                            left = proj_j_32.left;
                            bool_j_39 = false;
                            fail_b_35 = bool_j_39;
                            flatten_fun_j_48 = fun expr_b_34 -> (
                                var_j_40 = expr_b_34;
                                m_match_bool_j_42 = var_j_40 ~ any;
                                m_match_bool_j_45 = var_j_40 ~ int;
                                m_match_cond_j_46 = m_match_bool_j_45 ? (
                                        bool_j_47 = true
                                    ) : (
                                        m_match_cond_j_43 = m_match_bool_j_42 ? (
                                                var_j_44 = fail_b_35
                                            ) : (
                                                void_j_41 = {}
                                            )
                                    ));
                            flatten_fun_j_50 = fun bj_null -> (
                                input_j_49 = input);
                            flatten_fun_j_52 = fun expr_b_36 -> (
                                var_j_51 = expr_b_36);
                            record_j_53 = {checker = flatten_fun_j_48, generator = flatten_fun_j_50, wrapper = flatten_fun_j_52};
                            proj_j_54 = record_j_53.checker;
                            var_j_55 = item;
                            appl_j_56 = proj_j_54 var_j_55;
                            lbl_check_b_33 = appl_j_56;
                            var_j_57 = lbl_check_b_33;
                            if_j_138 = var_j_57 ? (
                                    flatten_fun_j_104 = fun expr_b_28 -> (
                                        bool_j_58 = false;
                                        rec_fail_b_27 = bool_j_58;
                                        bool_j_59 = false;
                                        rec_fail_b_26 = bool_j_59;
                                        bool_j_60 = false;
                                        rec_fail_b_25 = bool_j_60;
                                        var_j_61 = expr_b_28;
                                        m_match_bool_j_63 = var_j_61 ~ any;
                                        m_match_bool_j_66 = var_j_61 ~ 
                                            {bj_actual_rec, _};
                                        m_match_cond_j_67 = m_match_bool_j_66 ? (
                                                var_j_68 = expr_b_28;
                                                proj_j_69 = var_j_68.bj_decl_lbls;
                                                m_match_bool_j_71 = proj_j_69 ~ any;
                                                m_match_bool_j_74 = proj_j_69 ~ 
                                                    {leaf, _};
                                                m_match_cond_j_75 = m_match_bool_j_74 ? (
                                                        leaf_j_1 = proj_j_69.leaf;
                                                        var_j_76 = expr_b_28;
                                                        proj_j_77 = var_j_76.bj_actual_rec;
                                                        m_match_bool_j_79 = proj_j_77 ~ any;
                                                        m_match_bool_j_82 = proj_j_77 ~ 
                                                            {leaf, _};
                                                        m_match_cond_j_83 = m_match_bool_j_82 ? (
                                                                leaf = proj_j_77.leaf;
                                                                bool_j_84 = false;
                                                                fail_b_30 = bool_j_84;
                                                                flatten_fun_j_93 = fun expr_b_29 -> (
                                                                    var_j_85 = expr_b_29;
                                                                    m_match_bool_j_87 = var_j_85 ~ any;
                                                                    m_match_bool_j_90 = var_j_85 ~ bool;
                                                                    m_match_cond_j_91 = m_match_bool_j_90 ? (
                                                                        bool_j_92 = true
                                                                    ) : (
                                                                        m_match_cond_j_88 = m_match_bool_j_87 ? (
                                                                        var_j_89 = fail_b_30
                                                                    ) : (
                                                                        void_j_86 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_97 = fun bj_null_j_0 -> (
                                                                    int_j_94 = 0;
                                                                    input_j_95 = input;
                                                                    m_bl_i_275 = int_j_94 ~ int;
                                                                    m_br_i_276 = input_j_95 ~ int;
                                                                    m_b_i_277 = m_bl_i_275 and m_br_i_276;
                                                                    binop_j_96 = m_b_i_277 ? (
                                                                        c_binop_i_278 = int_j_94 <= input_j_95
                                                                    ) : (
                                                                        ab_i_279 = abort
                                                                    ));
                                                                flatten_fun_j_99 = fun expr_b_31 -> (
                                                                    var_j_98 = expr_b_31);
                                                                record_j_100 = 
                                                                    {checker = flatten_fun_j_93, generator = flatten_fun_j_97, wrapper = flatten_fun_j_99};
                                                                proj_j_101 = record_j_100.checker;
                                                                var_j_102 = leaf;
                                                                appl_j_103 = proj_j_101 var_j_102
                                                            ) : (
                                                                m_match_cond_j_80 = m_match_bool_j_79 ? (
                                                                        
                                                                    var_j_81 = rec_fail_b_25
                                                                    ) : (
                                                                        
                                                                    void_j_78 = 
                                                                    {}
                                                                    )
                                                            )
                                                    ) : (
                                                        m_match_cond_j_72 = m_match_bool_j_71 ? (
                                                                var_j_73 = rec_fail_b_26
                                                            ) : (
                                                                void_j_70 = 
                                                                    {}
                                                            )
                                                    )
                                            ) : (
                                                m_match_cond_j_64 = m_match_bool_j_63 ? (
                                                        var_j_65 = rec_fail_b_27
                                                    ) : (
                                                        void_j_62 = {}
                                                    )
                                            ));
                                    flatten_fun_j_130 = fun bj_null_j_3 -> (
                                        bool_j_105 = false;
                                        fail_b_23 = bool_j_105;
                                        flatten_fun_j_114 = fun expr_b_22 -> (
                                            var_j_106 = expr_b_22;
                                            m_match_bool_j_108 = var_j_106 ~ any;
                                            m_match_bool_j_111 = var_j_106 ~ bool;
                                            m_match_cond_j_112 = m_match_bool_j_111 ? (
                                                    bool_j_113 = true
                                                ) : (
                                                    m_match_cond_j_109 = m_match_bool_j_108 ? (
                                                            var_j_110 = fail_b_23
                                                        ) : (
                                                            void_j_107 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_118 = fun bj_null_j_2 -> (
                                            int_j_115 = 0;
                                            input_j_116 = input;
                                            m_bl_i_280 = int_j_115 ~ int;
                                            m_br_i_281 = input_j_116 ~ int;
                                            m_b_i_282 = m_bl_i_280 and m_br_i_281;
                                            binop_j_117 = m_b_i_282 ? (
                                                    c_binop_i_283 = int_j_115 <= input_j_116
                                                ) : (
                                                    ab_i_284 = abort
                                                ));
                                        flatten_fun_j_120 = fun expr_b_24 -> (
                                            var_j_119 = expr_b_24);
                                        record_j_121 = {checker = flatten_fun_j_114, generator = flatten_fun_j_118, wrapper = flatten_fun_j_120};
                                        proj_j_122 = record_j_121.generator;
                                        int_j_123 = 0;
                                        appl_j_124 = proj_j_122 int_j_123;
                                        leaf_b_21 = appl_j_124;
                                        var_j_125 = leaf_b_21;
                                        record_j_126 = {leaf = var_j_125};
                                        record_j_127 = {};
                                        record_j_128 = {leaf = record_j_127};
                                        record_j_129 = {bj_actual_rec = record_j_126, bj_decl_lbls = record_j_128});
                                    flatten_fun_j_132 = fun expr_b_32 -> (
                                        var_j_131 = expr_b_32);
                                    record_j_133 = {checker = flatten_fun_j_104, generator = flatten_fun_j_130, wrapper = flatten_fun_j_132};
                                    proj_j_134 = record_j_133.checker;
                                    var_j_135 = left;
                                    appl_j_136 = proj_j_134 var_j_135
                                ) : (
                                    var_j_137 = lbl_check_b_33
                                )
                        ) : (
                            m_match_cond_j_35 = m_match_bool_j_34 ? (
                                    var_j_36 = rec_fail_b_17
                                ) : (
                                    void_j_33 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_27 = m_match_bool_j_26 ? (
                            var_j_28 = rec_fail_b_18
                        ) : (
                            void_j_25 = {}
                        )
                )
        ) : (
            m_match_cond_j_19 = m_match_bool_j_18 ? (
                    var_j_20 = rec_fail_b_19
                ) : (
                    void_j_17 = {}
                )
        ));
flatten_fun_j_244 = fun bj_null_j_12 -> (
    flatten_fun_j_186 = fun expr_b_12 -> (
        bool_j_140 = false;
        rec_fail_b_11 = bool_j_140;
        bool_j_141 = false;
        rec_fail_b_10 = bool_j_141;
        bool_j_142 = false;
        rec_fail_b_9 = bool_j_142;
        var_j_143 = expr_b_12;
        m_match_bool_j_145 = var_j_143 ~ any;
        m_match_bool_j_148 = var_j_143 ~ {bj_actual_rec, _};
        m_match_cond_j_149 = m_match_bool_j_148 ? (
                var_j_150 = expr_b_12;
                proj_j_151 = var_j_150.bj_decl_lbls;
                m_match_bool_j_153 = proj_j_151 ~ any;
                m_match_bool_j_156 = proj_j_151 ~ {leaf, _};
                m_match_cond_j_157 = m_match_bool_j_156 ? (
                        leaf_j_8 = proj_j_151.leaf;
                        var_j_158 = expr_b_12;
                        proj_j_159 = var_j_158.bj_actual_rec;
                        m_match_bool_j_161 = proj_j_159 ~ any;
                        m_match_bool_j_164 = proj_j_159 ~ {leaf, _};
                        m_match_cond_j_165 = m_match_bool_j_164 ? (
                                leaf_j_7 = proj_j_159.leaf;
                                bool_j_166 = false;
                                fail_b_14 = bool_j_166;
                                flatten_fun_j_175 = fun expr_b_13 -> (
                                    var_j_167 = expr_b_13;
                                    m_match_bool_j_169 = var_j_167 ~ any;
                                    m_match_bool_j_172 = var_j_167 ~ bool;
                                    m_match_cond_j_173 = m_match_bool_j_172 ? (
                                            bool_j_174 = true
                                        ) : (
                                            m_match_cond_j_170 = m_match_bool_j_169 ? (
                                                    var_j_171 = fail_b_14
                                                ) : (
                                                    void_j_168 = {}
                                                )
                                        ));
                                flatten_fun_j_179 = fun bj_null_j_6 -> (
                                    int_j_176 = 0;
                                    input_j_177 = input;
                                    m_bl_i_285 = int_j_176 ~ int;
                                    m_br_i_286 = input_j_177 ~ int;
                                    m_b_i_287 = m_bl_i_285 and m_br_i_286;
                                    binop_j_178 = m_b_i_287 ? (
                                            c_binop_i_288 = int_j_176 <= input_j_177
                                        ) : (
                                            ab_i_289 = abort
                                        ));
                                flatten_fun_j_181 = fun expr_b_15 -> (
                                    var_j_180 = expr_b_15);
                                record_j_182 = {checker = flatten_fun_j_175, generator = flatten_fun_j_179, wrapper = flatten_fun_j_181};
                                proj_j_183 = record_j_182.checker;
                                var_j_184 = leaf_j_7;
                                appl_j_185 = proj_j_183 var_j_184
                            ) : (
                                m_match_cond_j_162 = m_match_bool_j_161 ? (
                                        var_j_163 = rec_fail_b_9
                                    ) : (
                                        void_j_160 = {}
                                    )
                            )
                    ) : (
                        m_match_cond_j_154 = m_match_bool_j_153 ? (
                                var_j_155 = rec_fail_b_10
                            ) : (
                                void_j_152 = {}
                            )
                    )
            ) : (
                m_match_cond_j_146 = m_match_bool_j_145 ? (
                        var_j_147 = rec_fail_b_11
                    ) : (
                        void_j_144 = {}
                    )
            ));
    flatten_fun_j_212 = fun bj_null_j_10 -> (
        bool_j_187 = false;
        fail_b_7 = bool_j_187;
        flatten_fun_j_196 = fun expr_b_6 -> (
            var_j_188 = expr_b_6;
            m_match_bool_j_190 = var_j_188 ~ any;
            m_match_bool_j_193 = var_j_188 ~ bool;
            m_match_cond_j_194 = m_match_bool_j_193 ? (
                    bool_j_195 = true
                ) : (
                    m_match_cond_j_191 = m_match_bool_j_190 ? (
                            var_j_192 = fail_b_7
                        ) : (
                            void_j_189 = {}
                        )
                ));
        flatten_fun_j_200 = fun bj_null_j_9 -> (
            int_j_197 = 0;
            input_j_198 = input;
            m_bl_i_290 = int_j_197 ~ int;
            m_br_i_291 = input_j_198 ~ int;
            m_b_i_292 = m_bl_i_290 and m_br_i_291;
            binop_j_199 = m_b_i_292 ? (
                    c_binop_i_293 = int_j_197 <= input_j_198
                ) : (
                    ab_i_294 = abort
                ));
        flatten_fun_j_202 = fun expr_b_8 -> (
            var_j_201 = expr_b_8);
        record_j_203 = {checker = flatten_fun_j_196, generator = flatten_fun_j_200, wrapper = flatten_fun_j_202};
        proj_j_204 = record_j_203.generator;
        int_j_205 = 0;
        appl_j_206 = proj_j_204 int_j_205;
        leaf_b_5 = appl_j_206;
        var_j_207 = leaf_b_5;
        record_j_208 = {leaf = var_j_207};
        record_j_209 = {};
        record_j_210 = {leaf = record_j_209};
        record_j_211 = {bj_actual_rec = record_j_208, bj_decl_lbls = record_j_210});
    flatten_fun_j_214 = fun expr_b_16 -> (
        var_j_213 = expr_b_16);
    record_j_215 = {checker = flatten_fun_j_186, generator = flatten_fun_j_212, wrapper = flatten_fun_j_214};
    proj_j_216 = record_j_215.generator;
    int_j_217 = 0;
    appl_j_218 = proj_j_216 int_j_217;
    left_b_1 = appl_j_218;
    bool_j_219 = false;
    fail_b_3 = bool_j_219;
    flatten_fun_j_228 = fun expr_b_2 -> (
        var_j_220 = expr_b_2;
        m_match_bool_j_222 = var_j_220 ~ any;
        m_match_bool_j_225 = var_j_220 ~ int;
        m_match_cond_j_226 = m_match_bool_j_225 ? (
                bool_j_227 = true
            ) : (
                m_match_cond_j_223 = m_match_bool_j_222 ? (
                        var_j_224 = fail_b_3
                    ) : (
                        void_j_221 = {}
                    )
            ));
    flatten_fun_j_230 = fun bj_null_j_11 -> (
        input_j_229 = input);
    flatten_fun_j_232 = fun expr_b_4 -> (
        var_j_231 = expr_b_4);
    record_j_233 = {checker = flatten_fun_j_228, generator = flatten_fun_j_230, wrapper = flatten_fun_j_232};
    proj_j_234 = record_j_233.generator;
    int_j_235 = 0;
    appl_j_236 = proj_j_234 int_j_235;
    item_b_0 = appl_j_236;
    var_j_237 = item_b_0;
    var_j_238 = left_b_1;
    record_j_239 = {item = var_j_237, left = var_j_238};
    record_j_240 = {};
    record_j_241 = {};
    record_j_242 = {item = record_j_240, left = record_j_241};
    record_j_243 = {bj_actual_rec = record_j_239, bj_decl_lbls = record_j_242});
flatten_fun_j_246 = fun expr_b_37 -> (
    var_j_245 = expr_b_37);
record_j_247 = {checker = flatten_fun_j_139, generator = flatten_fun_j_244, wrapper = flatten_fun_j_246};
tree_type = record_j_247;
proj_j_249 = tree_type.wrapper;
int_j_250 = 6;
bool_j_251 = true;
record_j_252 = {leaf = bool_j_251};
record_j_253 = {};
record_j_254 = {leaf = record_j_253};
record_j_255 = {bj_actual_rec = record_j_252, bj_decl_lbls = record_j_254};
record_j_256 = {item = int_j_250, left = record_j_255};
record_j_257 = {};
record_j_258 = {};
record_j_259 = {item = record_j_257, left = record_j_258};
record_j_260 = {bj_actual_rec = record_j_256, bj_decl_lbls = record_j_259};
m_i_295 = proj_j_249 ~ fun;
appl_j_261 = m_i_295 ? (
        c_appl_i_296 = proj_j_249 record_j_260
    ) : (
        ab_i_297 = abort
    );
x_b_38 = appl_j_261;
x = x_b_38;
proj_j_264 = tree_type.checker;
appl_j_266 = proj_j_264 x_b_38;
check_res_b_39 = appl_j_266;
if_j_274 = check_res_b_39 ? (
        var_j_268 = x
    ) : (
        error_var_j_269 = check_res_b_39;
        assert_pred_j_270 = error_var_j_269;
        assert_res_j_271 = assert_pred_j_270 ? (
                assert_res_true_j_272 = {}
            ) : (
                ab_j_273 = abort
            )
    );
i_result = if_j_274