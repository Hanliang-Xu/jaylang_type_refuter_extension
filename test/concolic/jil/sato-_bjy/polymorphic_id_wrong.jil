i_first = {};
id_j_46 = fun x -> (
    bool_j_2 = false;
    fail_b_4 = bool_j_2;
    flatten_fun_j_18 = fun expr_b_5 -> (
        var_j_3 = expr_b_5;
        m_match_bool_j_5 = var_j_3 ~ any;
        m_match_bool_j_8 = var_j_3 ~ {bj_untouched, _};
        m_match_cond_j_9 = m_match_bool_j_8 ? (
                bj_poly_var_b_6 = var_j_3.bj_untouched;
                var_j_10 = bj_poly_var_b_6;
                m_match_bool_j_12 = var_j_10 ~ any;
                m_match_bool_j_15 = var_j_10 ~ {bj_ticka, _};
                m_match_cond_j_16 = m_match_bool_j_15 ? (
                        bool_j_17 = true
                    ) : (
                        m_match_cond_j_13 = m_match_bool_j_12 ? (
                                var_j_14 = fail_b_4
                            ) : (
                                void_j_11 = {}
                            )
                    )
            ) : (
                m_match_cond_j_6 = m_match_bool_j_5 ? (
                        var_j_7 = fail_b_4
                    ) : (
                        void_j_4 = {}
                    )
            ));
    flatten_fun_j_22 = fun bj_null_j_1 -> (
        record_j_19 = {};
        record_j_20 = {bj_ticka = record_j_19};
        record_j_21 = {bj_untouched = record_j_20});
    flatten_fun_j_24 = fun expr_b_7 -> (
        var_j_23 = expr_b_7);
    record_j_25 = {checker = flatten_fun_j_18, generator = flatten_fun_j_22, wrapper = flatten_fun_j_24};
    proj_j_26 = record_j_25.wrapper;
    bool_j_27 = false;
    fail_b_8 = bool_j_27;
    var_j_28 = x;
    m_match_bool_j_30 = var_j_28 ~ any;
    m_match_bool_j_33 = var_j_28 ~ int;
    m_match_bool_j_38 = var_j_28 ~ {bj_untouched, _};
    m_match_cond_j_39 = m_match_bool_j_38 ? (
            var_j_40 = fail_b_8;
            assert_pred_j_41 = var_j_40;
            assert_res_j_42 = assert_pred_j_41 ? (
                    assert_res_true_j_43 = {}
                ) : (
                    ab_j_44 = abort
                )
        ) : (
            m_match_cond_j_34 = m_match_bool_j_33 ? (
                    var_j_35 = x;
                    int_j_36 = 1;
                    m_bl_i_111 = var_j_35 ~ int;
                    m_br_i_112 = int_j_36 ~ int;
                    m_b_i_113 = m_bl_i_111 and m_br_i_112;
                    binop_j_37 = m_b_i_113 ? (
                            c_binop_i_114 = var_j_35 + int_j_36
                        ) : (
                            ab_i_115 = abort
                        )
                ) : (
                    m_match_cond_j_31 = m_match_bool_j_30 ? (
                            any = var_j_28;
                            var_j_32 = x
                        ) : (
                            ab_j_29 = abort
                        )
                )
        );
    m_i_116 = proj_j_26 ~ fun;
    appl_j_45 = m_i_116 ? (
            c_appl_i_117 = proj_j_26 m_match_cond_j_39
        ) : (
            ab_i_118 = abort
        ));
id = id_j_46;
bool_j_47 = false;
fail_b_0 = bool_j_47;
flatten_fun_j_63 = fun expr_b_1 -> (
    var_j_48 = expr_b_1;
    m_match_bool_j_50 = var_j_48 ~ any;
    m_match_bool_j_53 = var_j_48 ~ {bj_untouched, _};
    m_match_cond_j_54 = m_match_bool_j_53 ? (
            bj_poly_var_b_2 = var_j_48.bj_untouched;
            var_j_55 = bj_poly_var_b_2;
            m_match_bool_j_57 = var_j_55 ~ any;
            m_match_bool_j_60 = var_j_55 ~ {bj_ticka, _};
            m_match_cond_j_61 = m_match_bool_j_60 ? (
                    bool_j_62 = true
                ) : (
                    m_match_cond_j_58 = m_match_bool_j_57 ? (
                            var_j_59 = fail_b_0
                        ) : (
                            void_j_56 = {}
                        )
                )
        ) : (
            m_match_cond_j_51 = m_match_bool_j_50 ? (
                    var_j_52 = fail_b_0
                ) : (
                    void_j_49 = {}
                )
        ));
flatten_fun_j_67 = fun bj_null -> (
    record_j_64 = {};
    record_j_65 = {bj_ticka = record_j_64};
    record_j_66 = {bj_untouched = record_j_65});
flatten_fun_j_69 = fun expr_b_3 -> (
    var_j_68 = expr_b_3);
record_j_70 = {checker = flatten_fun_j_63, generator = flatten_fun_j_67, wrapper = flatten_fun_j_69};
proj_j_71 = record_j_70.generator;
int_j_72 = 0;
appl_j_73 = proj_j_71 int_j_72;
x_b_13 = appl_j_73;
bool_j_74 = false;
fail_b_9 = bool_j_74;
flatten_fun_j_90 = fun expr_b_10 -> (
    var_j_75 = expr_b_10;
    m_match_bool_j_77 = var_j_75 ~ any;
    m_match_bool_j_80 = var_j_75 ~ {bj_untouched, _};
    m_match_cond_j_81 = m_match_bool_j_80 ? (
            bj_poly_var_b_11 = var_j_75.bj_untouched;
            var_j_82 = bj_poly_var_b_11;
            m_match_bool_j_84 = var_j_82 ~ any;
            m_match_bool_j_87 = var_j_82 ~ {bj_ticka, _};
            m_match_cond_j_88 = m_match_bool_j_87 ? (
                    bool_j_89 = true
                ) : (
                    m_match_cond_j_85 = m_match_bool_j_84 ? (
                            var_j_86 = fail_b_9
                        ) : (
                            void_j_83 = {}
                        )
                )
        ) : (
            m_match_cond_j_78 = m_match_bool_j_77 ? (
                    var_j_79 = fail_b_9
                ) : (
                    void_j_76 = {}
                )
        ));
flatten_fun_j_94 = fun bj_null_j_0 -> (
    record_j_91 = {};
    record_j_92 = {bj_ticka = record_j_91};
    record_j_93 = {bj_untouched = record_j_92});
flatten_fun_j_96 = fun expr_b_12 -> (
    var_j_95 = expr_b_12);
record_j_97 = {checker = flatten_fun_j_90, generator = flatten_fun_j_94, wrapper = flatten_fun_j_96};
proj_j_98 = record_j_97.checker;
appl_j_101 = id x_b_13;
appl_j_102 = proj_j_98 appl_j_101;
check_res_b_14 = appl_j_102;
if_j_110 = check_res_b_14 ? (
        var_j_104 = id
    ) : (
        error_var_j_105 = check_res_b_14;
        assert_pred_j_106 = error_var_j_105;
        assert_res_j_107 = assert_pred_j_106 ? (
                assert_res_true_j_108 = {}
            ) : (
                ab_j_109 = abort
            )
    );
i_result = if_j_110