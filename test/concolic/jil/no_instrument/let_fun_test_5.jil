i_first = {};
f_j_5 = fun x -> (
    var_j_1 = x;
    var_j_2 = x;
    binop_j_3 = var_j_1 + var_j_2;
    ret = binop_j_3;
    int_j_4 = 1);
f = f_j_5;
bool_j_6 = false;
fail_b_1 = bool_j_6;
flatten_fun_j_15 = fun expr_b_0 -> (
    var_j_7 = expr_b_0;
    m_match_bool_j_9 = var_j_7 ~ any;
    m_match_bool_j_12 = var_j_7 ~ bool;
    m_match_cond_j_13 = m_match_bool_j_12 ? (
            bool_j_14 = true
        ) : (
            m_match_cond_j_10 = m_match_bool_j_9 ? (
                    var_j_11 = fail_b_1
                ) : (
                    void_j_8 = {}
                )
        ));
flatten_fun_j_19 = fun bj_null -> (
    int_j_16 = 0;
    input_j_17 = input;
    binop_j_18 = int_j_16 <= input_j_17);
record_j_20 = {checker = flatten_fun_j_15, generator = flatten_fun_j_19};
proj_j_21 = record_j_20.generator;
int_j_22 = 0;
appl_j_23 = proj_j_21 int_j_22;
x_b_6 = appl_j_23;
bool_j_24 = false;
fail_b_4 = bool_j_24;
flatten_fun_j_33 = fun expr_b_3 -> (
    var_j_25 = expr_b_3;
    m_match_bool_j_27 = var_j_25 ~ any;
    m_match_bool_j_30 = var_j_25 ~ int;
    m_match_cond_j_31 = m_match_bool_j_30 ? (
            bool_j_32 = true
        ) : (
            m_match_cond_j_28 = m_match_bool_j_27 ? (
                    var_j_29 = fail_b_4
                ) : (
                    void_j_26 = {}
                )
        ));
flatten_fun_j_35 = fun bj_null_j_0 -> (
    input_j_34 = input);
record_j_36 = {checker = flatten_fun_j_33, generator = flatten_fun_j_35};
proj_j_37 = record_j_36.checker;
appl_j_40 = f x_b_6;
appl_j_41 = proj_j_37 appl_j_40;
check_res_b_7 = appl_j_41;
if_j_49 = check_res_b_7 ? (
        var_j_43 = f
    ) : (
        error_var_j_44 = check_res_b_7;
        assert_pred_j_45 = error_var_j_44;
        assert_res_j_46 = assert_pred_j_45 ? (
                assert_res_true_j_47 = {}
            ) : (
                ab_j_48 = abort
            )
    );
i_result = if_j_49