int_j_9 = 1;
record_j_10 = {};
record_j_11 = {j_empty = record_j_10};
record_j_12 = {j_head = int_j_9, j_tail = record_j_11};
record_j_13 = {};
record_j_14 = {j_empty = record_j_13};
record_j_15 = {j_head = record_j_12, j_tail = record_j_14};
x_b_15 = record_j_15;
x = x_b_15;
flatten_fun_j_68 = fun expr_b_12 -> (
    bool_j_17 = false;
    lst_fail_b_13 = bool_j_17;
    var_j_18 = expr_b_12;
    m_match_bool_j_20 = var_j_18 ~ any;
    m_match_bool_j_23 = var_j_18 ~ {j_head, j_tail, _};
    m_match_bool_j_65 = var_j_18 ~ {j_empty, _};
    m_match_cond_j_66 = m_match_bool_j_65 ? (
            bool_j_67 = true
        ) : (
            m_match_cond_j_24 = m_match_bool_j_23 ? (
                    bj_underscore = var_j_18.j_head;
                    bj_underscore2 = var_j_18.j_tail;
                    flatten_fun_j_58 = fun test_fun_b_9_j_0 -> (
                        flatten_fun_j_57 = fun test_list_b_10 -> (
                            var_j_25 = test_fun_b_9_j_0;
                            var_j_26 = test_fun_b_9_j_0;
                            appl_j_27 = var_j_25 var_j_26;
                            test_fun_b_9 = appl_j_27;
                            var_j_28 = test_list_b_10;
                            m_match_bool_j_30 = var_j_28 ~ {j_head, j_tail, _};
                            m_match_bool_j_54 = var_j_28 ~ {j_empty, _};
                            m_match_cond_j_55 = m_match_bool_j_54 ? (
                                    bool_j_56 = true
                                ) : (
                                    m_match_cond_j_31 = m_match_bool_j_30 ? (
                                            hd = var_j_28.j_head;
                                            tl = var_j_28.j_tail;
                                            bool_j_32 = false;
                                            fail_b_7 = bool_j_32;
                                            flatten_fun_j_41 = fun expr_b_6 -> (
                                                var_j_33 = expr_b_6;
                                                m_match_bool_j_35 = var_j_33 ~ any;
                                                m_match_bool_j_38 = var_j_33 ~ int;
                                                m_match_cond_j_39 = m_match_bool_j_38 ? (
                                                        bool_j_40 = true
                                                    ) : (
                                                        m_match_cond_j_36 = m_match_bool_j_35 ? (
                                                                var_j_37 = fail_b_7
                                                            ) : (
                                                                void_j_34 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_43 = fun bj_null -> (
                                                input_j_42 = input);
                                            record_j_44 = {checker = flatten_fun_j_41, generator = flatten_fun_j_43};
                                            proj_j_45 = record_j_44.checker;
                                            var_j_46 = hd;
                                            appl_j_47 = proj_j_45 var_j_46;
                                            elm_check_b_11 = appl_j_47;
                                            var_j_48 = elm_check_b_11;
                                            if_j_53 = var_j_48 ? (
                                                    var_j_49 = test_fun_b_9;
                                                    var_j_50 = tl;
                                                    appl_j_51 = var_j_49 var_j_50
                                                ) : (
                                                    var_j_52 = elm_check_b_11
                                                )
                                        ) : (
                                            void_j_29 = {}
                                        )
                                )));
                    test_fun_b_9_j_0_j_3 = flatten_fun_j_58;
                    var_j_59 = test_fun_b_9_j_0_j_3;
                    var_j_60 = test_fun_b_9_j_0_j_3;
                    appl_j_61 = var_j_59 var_j_60;
                    test_fun_b_9_j_2 = appl_j_61;
                    var_j_62 = test_fun_b_9_j_2;
                    var_j_63 = expr_b_12;
                    appl_j_64 = var_j_62 var_j_63
                ) : (
                    m_match_cond_j_21 = m_match_bool_j_20 ? (
                            var_j_22 = lst_fail_b_13
                        ) : (
                            void_j_19 = {}
                        )
                )
        ));
flatten_fun_j_117 = fun bj_null_j_8 -> (
    flatten_fun_j_103 = fun list_maker_b_4_j_1 -> (
        flatten_fun_j_102 = fun len_b_3 -> (
            var_j_69 = list_maker_b_4_j_1;
            var_j_70 = list_maker_b_4_j_1;
            appl_j_71 = var_j_69 var_j_70;
            list_maker_b_4 = appl_j_71;
            var_j_72 = len_b_3;
            int_j_73 = 0;
            binop_j_74 = var_j_72 == int_j_73;
            if_j_101 = binop_j_74 ? (
                    record_j_75 = {};
                    record_j_76 = {j_empty = record_j_75}
                ) : (
                    bool_j_77 = false;
                    fail_b_1 = bool_j_77;
                    flatten_fun_j_86 = fun expr_b_0 -> (
                        var_j_78 = expr_b_0;
                        m_match_bool_j_80 = var_j_78 ~ any;
                        m_match_bool_j_83 = var_j_78 ~ int;
                        m_match_cond_j_84 = m_match_bool_j_83 ? (
                                bool_j_85 = true
                            ) : (
                                m_match_cond_j_81 = m_match_bool_j_80 ? (
                                        var_j_82 = fail_b_1
                                    ) : (
                                        void_j_79 = {}
                                    )
                            ));
                    flatten_fun_j_88 = fun bj_null_j_4 -> (
                        input_j_87 = input);
                    record_j_89 = {checker = flatten_fun_j_86, generator = flatten_fun_j_88};
                    proj_j_90 = record_j_89.generator;
                    int_j_91 = 0;
                    appl_j_92 = proj_j_90 int_j_91;
                    elm_b_5 = appl_j_92;
                    record_j_93 = {};
                    var_j_94 = elm_b_5;
                    var_j_95 = list_maker_b_4;
                    var_j_96 = len_b_3;
                    int_j_97 = 1;
                    binop_j_98 = var_j_96 - int_j_97;
                    appl_j_99 = var_j_95 binop_j_98;
                    record_j_100 = {j_cons = record_j_93, j_head = var_j_94, j_tail = appl_j_99}
                )));
    list_maker_b_4_j_1_j_7 = flatten_fun_j_103;
    var_j_104 = list_maker_b_4_j_1_j_7;
    var_j_105 = list_maker_b_4_j_1_j_7;
    appl_j_106 = var_j_104 var_j_105;
    list_maker_b_4_j_6 = appl_j_106;
    input_j_107 = input;
    len_b_3_j_5 = input_j_107;
    int_j_108 = 0;
    var_j_109 = len_b_3_j_5;
    binop_j_110 = int_j_108 <= var_j_109;
    if_j_116 = binop_j_110 ? (
            var_j_111 = list_maker_b_4_j_6;
            var_j_112 = len_b_3_j_5;
            appl_j_113 = var_j_111 var_j_112
        ) : (
            bool_j_114 = false;
            assume_j_115 = assume bool_j_114
        ));
record_j_118 = {checker = flatten_fun_j_68, generator = flatten_fun_j_117};
proj_j_119 = record_j_118.checker;
appl_j_121 = proj_j_119 x_b_15;
check_res_b_16 = appl_j_121;
if_j_129 = check_res_b_16 ? (
        var_j_123 = x
    ) : (
        error_var_j_124 = check_res_b_16;
        assert_pred_j_125 = error_var_j_124;
        assert_res_j_126 = assert_pred_j_125 ? (
                assert_res_true_j_127 = {}
            ) : (
                ab_j_128 = abort
            )
    );
i_result = if_j_129