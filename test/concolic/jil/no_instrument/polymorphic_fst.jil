i_first = {};
fst_j_4 = fun x -> (
    fst_j_3 = fun y -> (
        var_j_2 = y));
fst = fst_j_4;
bool_j_5 = false;
fail_b_0 = bool_j_5;
flatten_fun_j_21 = fun expr_b_1 -> (
    var_j_6 = expr_b_1;
    m_match_bool_j_8 = var_j_6 ~ any;
    m_match_bool_j_11 = var_j_6 ~ {bj_untouched, _};
    m_match_cond_j_12 = m_match_bool_j_11 ? (
            bj_poly_var_b_2 = var_j_6.bj_untouched;
            var_j_13 = bj_poly_var_b_2;
            m_match_bool_j_15 = var_j_13 ~ any;
            m_match_bool_j_18 = var_j_13 ~ {bj_ticka, _};
            m_match_cond_j_19 = m_match_bool_j_18 ? (
                    bool_j_20 = true
                ) : (
                    m_match_cond_j_16 = m_match_bool_j_15 ? (
                            var_j_17 = fail_b_0
                        ) : (
                            void_j_14 = {}
                        )
                )
        ) : (
            m_match_cond_j_9 = m_match_bool_j_8 ? (
                    var_j_10 = fail_b_0
                ) : (
                    void_j_7 = {}
                )
        ));
flatten_fun_j_25 = fun bj_null -> (
    record_j_22 = {};
    record_j_23 = {bj_ticka = record_j_22};
    record_j_24 = {bj_untouched = record_j_23});
record_j_26 = {checker = flatten_fun_j_21, generator = flatten_fun_j_25};
proj_j_27 = record_j_26.generator;
int_j_28 = 0;
appl_j_29 = proj_j_27 int_j_28;
x_b_13 = appl_j_29;
bool_j_30 = false;
fail_b_4 = bool_j_30;
flatten_fun_j_46 = fun expr_b_5 -> (
    var_j_31 = expr_b_5;
    m_match_bool_j_33 = var_j_31 ~ any;
    m_match_bool_j_36 = var_j_31 ~ {bj_untouched, _};
    m_match_cond_j_37 = m_match_bool_j_36 ? (
            bj_poly_var_b_6 = var_j_31.bj_untouched;
            var_j_38 = bj_poly_var_b_6;
            m_match_bool_j_40 = var_j_38 ~ any;
            m_match_bool_j_43 = var_j_38 ~ {bj_tickb, _};
            m_match_cond_j_44 = m_match_bool_j_43 ? (
                    bool_j_45 = true
                ) : (
                    m_match_cond_j_41 = m_match_bool_j_40 ? (
                            var_j_42 = fail_b_4
                        ) : (
                            void_j_39 = {}
                        )
                )
        ) : (
            m_match_cond_j_34 = m_match_bool_j_33 ? (
                    var_j_35 = fail_b_4
                ) : (
                    void_j_32 = {}
                )
        ));
flatten_fun_j_50 = fun bj_null_j_0 -> (
    record_j_47 = {};
    record_j_48 = {bj_tickb = record_j_47};
    record_j_49 = {bj_untouched = record_j_48});
record_j_51 = {checker = flatten_fun_j_46, generator = flatten_fun_j_50};
proj_j_52 = record_j_51.generator;
int_j_53 = 0;
appl_j_54 = proj_j_52 int_j_53;
y_b_12 = appl_j_54;
bool_j_55 = false;
fail_b_8 = bool_j_55;
flatten_fun_j_71 = fun expr_b_9 -> (
    var_j_56 = expr_b_9;
    m_match_bool_j_58 = var_j_56 ~ any;
    m_match_bool_j_61 = var_j_56 ~ {bj_untouched, _};
    m_match_cond_j_62 = m_match_bool_j_61 ? (
            bj_poly_var_b_10 = var_j_56.bj_untouched;
            var_j_63 = bj_poly_var_b_10;
            m_match_bool_j_65 = var_j_63 ~ any;
            m_match_bool_j_68 = var_j_63 ~ {bj_ticka, _};
            m_match_cond_j_69 = m_match_bool_j_68 ? (
                    bool_j_70 = true
                ) : (
                    m_match_cond_j_66 = m_match_bool_j_65 ? (
                            var_j_67 = fail_b_8
                        ) : (
                            void_j_64 = {}
                        )
                )
        ) : (
            m_match_cond_j_59 = m_match_bool_j_58 ? (
                    var_j_60 = fail_b_8
                ) : (
                    void_j_57 = {}
                )
        ));
flatten_fun_j_75 = fun bj_null_j_1 -> (
    record_j_72 = {};
    record_j_73 = {bj_ticka = record_j_72};
    record_j_74 = {bj_untouched = record_j_73});
record_j_76 = {checker = flatten_fun_j_71, generator = flatten_fun_j_75};
proj_j_77 = record_j_76.checker;
appl_j_80 = fst x_b_13;
appl_j_82 = appl_j_80 y_b_12;
appl_j_83 = proj_j_77 appl_j_82;
check_res_b_14 = appl_j_83;
if_j_91 = check_res_b_14 ? (
        var_j_85 = fst
    ) : (
        error_var_j_86 = check_res_b_14;
        assert_pred_j_87 = error_var_j_86;
        assert_res_j_88 = assert_pred_j_87 ? (
                assert_res_true_j_89 = {}
            ) : (
                ab_j_90 = abort
            )
    );
i_result = if_j_91