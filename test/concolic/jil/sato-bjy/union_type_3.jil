i_first = {};
flatten_fun_j_225 = fun expr_b_52 -> (
    bool_j_47 = false;
    lst_fail_b_53 = bool_j_47;
    var_j_48 = expr_b_52;
    m_match_bool_j_50 = var_j_48 ~ any;
    m_match_bool_j_53 = var_j_48 ~ {j_head, j_tail, _};
    m_match_bool_j_222 = var_j_48 ~ {j_empty, _};
    m_match_cond_j_223 = m_match_bool_j_222 ? (
            bool_j_224 = true
        ) : (
            m_match_cond_j_54 = m_match_bool_j_53 ? (
                    bj_underscore = var_j_48.j_head;
                    bj_underscore2 = var_j_48.j_tail;
                    flatten_fun_j_215 = fun test_fun_b_49_j_0 -> (
                        flatten_fun_j_214 = fun test_list_b_50 -> (
                            var_j_55 = test_fun_b_49_j_0;
                            var_j_56 = test_fun_b_49_j_0;
                            appl_j_57 = var_j_55 var_j_56;
                            test_fun_b_49 = appl_j_57;
                            var_j_58 = test_list_b_50;
                            m_match_bool_j_60 = var_j_58 ~ {j_head, j_tail, _};
                            m_match_bool_j_211 = var_j_58 ~ {j_empty, _};
                            m_match_cond_j_212 = m_match_bool_j_211 ? (
                                    bool_j_213 = true
                                ) : (
                                    m_match_cond_j_61 = m_match_bool_j_60 ? (
                                            hd = var_j_58.j_head;
                                            tl = var_j_58.j_tail;
                                            flatten_fun_j_154 = fun expr_b_45 -> (
                                                input_j_62 = input;
                                                select_int_b_46 = input_j_62;
                                                bool_j_63 = false;
                                                fail_b_47 = bool_j_63;
                                                int_j_64 = 0;
                                                var_j_65 = select_int_b_46;
                                                binop_j_66 = int_j_64 <= var_j_65;
                                                if_j_153 = binop_j_66 ? (
                                                        bool_j_67 = false;
                                                        fail_b_34 = bool_j_67;
                                                        flatten_fun_j_76 = fun expr_b_33 -> (
                                                            var_j_68 = expr_b_33;
                                                            m_match_bool_j_70 = var_j_68 ~ any;
                                                            m_match_bool_j_73 = var_j_68 ~ int;
                                                            m_match_cond_j_74 = m_match_bool_j_73 ? (
                                                                    bool_j_75 = true
                                                                ) : (
                                                                    m_match_cond_j_71 = m_match_bool_j_70 ? (
                                                                        var_j_72 = fail_b_34
                                                                    ) : (
                                                                        void_j_69 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_78 = fun bj_null -> (
                                                            input_j_77 = input);
                                                        flatten_fun_j_80 = fun expr_b_35 -> (
                                                            var_j_79 = expr_b_35);
                                                        record_j_81 = 
                                                            {checker = flatten_fun_j_76, generator = flatten_fun_j_78, wrapper = flatten_fun_j_80};
                                                        proj_j_82 = record_j_81.checker;
                                                        var_j_83 = expr_b_45;
                                                        appl_j_84 = proj_j_82 var_j_83;
                                                        if_j_109 = appl_j_84 ? (
                                                                bool_j_85 = true
                                                            ) : (
                                                                bool_j_86 = false;
                                                                fail_b_37 = bool_j_86;
                                                                flatten_fun_j_95 = fun expr_b_36 -> (
                                                                    var_j_87 = expr_b_36;
                                                                    m_match_bool_j_89 = var_j_87 ~ any;
                                                                    m_match_bool_j_92 = var_j_87 ~ bool;
                                                                    m_match_cond_j_93 = m_match_bool_j_92 ? (
                                                                        bool_j_94 = true
                                                                    ) : (
                                                                        m_match_cond_j_90 = m_match_bool_j_89 ? (
                                                                        var_j_91 = fail_b_37
                                                                    ) : (
                                                                        void_j_88 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_99 = fun bj_null_j_4 -> (
                                                                    int_j_96 = 0;
                                                                    input_j_97 = input;
                                                                    m_bl_i_785 = int_j_96 ~ int;
                                                                    m_br_i_786 = input_j_97 ~ int;
                                                                    m_b_i_787 = m_bl_i_785 and m_br_i_786;
                                                                    binop_j_98 = m_b_i_787 ? (
                                                                        c_binop_i_788 = int_j_96 <= input_j_97
                                                                    ) : (
                                                                        ab_i_789 = abort
                                                                    ));
                                                                flatten_fun_j_101 = fun expr_b_38 -> (
                                                                    var_j_100 = expr_b_38);
                                                                record_j_102 = 
                                                                    {checker = flatten_fun_j_95, generator = flatten_fun_j_99, wrapper = flatten_fun_j_101};
                                                                proj_j_103 = record_j_102.checker;
                                                                var_j_104 = expr_b_45;
                                                                appl_j_105 = proj_j_103 var_j_104;
                                                                if_j_108 = appl_j_105 ? (
                                                                        
                                                                    bool_j_106 = true
                                                                    ) : (
                                                                        
                                                                    var_j_107 = fail_b_47
                                                                    )
                                                            )
                                                    ) : (
                                                        bool_j_110 = false;
                                                        fail_b_43 = bool_j_110;
                                                        flatten_fun_j_119 = fun expr_b_42 -> (
                                                            var_j_111 = expr_b_42;
                                                            m_match_bool_j_113 = var_j_111 ~ any;
                                                            m_match_bool_j_116 = var_j_111 ~ bool;
                                                            m_match_cond_j_117 = m_match_bool_j_116 ? (
                                                                    bool_j_118 = true
                                                                ) : (
                                                                    m_match_cond_j_114 = m_match_bool_j_113 ? (
                                                                        var_j_115 = fail_b_43
                                                                    ) : (
                                                                        void_j_112 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_123 = fun bj_null_j_5 -> (
                                                            int_j_120 = 0;
                                                            input_j_121 = input;
                                                            m_bl_i_790 = int_j_120 ~ int;
                                                            m_br_i_791 = input_j_121 ~ int;
                                                            m_b_i_792 = m_bl_i_790 and m_br_i_791;
                                                            binop_j_122 = m_b_i_792 ? (
                                                                    c_binop_i_793 = int_j_120 <= input_j_121
                                                                ) : (
                                                                    ab_i_794 = abort
                                                                ));
                                                        flatten_fun_j_125 = fun expr_b_44 -> (
                                                            var_j_124 = expr_b_44);
                                                        record_j_126 = 
                                                            {checker = flatten_fun_j_119, generator = flatten_fun_j_123, wrapper = flatten_fun_j_125};
                                                        proj_j_127 = record_j_126.checker;
                                                        var_j_128 = expr_b_45;
                                                        appl_j_129 = proj_j_127 var_j_128;
                                                        if_j_152 = appl_j_129 ? (
                                                                bool_j_130 = true
                                                            ) : (
                                                                bool_j_131 = false;
                                                                fail_b_40 = bool_j_131;
                                                                flatten_fun_j_140 = fun expr_b_39 -> (
                                                                    var_j_132 = expr_b_39;
                                                                    m_match_bool_j_134 = var_j_132 ~ any;
                                                                    m_match_bool_j_137 = var_j_132 ~ int;
                                                                    m_match_cond_j_138 = m_match_bool_j_137 ? (
                                                                        bool_j_139 = true
                                                                    ) : (
                                                                        m_match_cond_j_135 = m_match_bool_j_134 ? (
                                                                        var_j_136 = fail_b_40
                                                                    ) : (
                                                                        void_j_133 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_142 = fun bj_null_j_6 -> (
                                                                    input_j_141 = input);
                                                                flatten_fun_j_144 = fun expr_b_41 -> (
                                                                    var_j_143 = expr_b_41);
                                                                record_j_145 = 
                                                                    {checker = flatten_fun_j_140, generator = flatten_fun_j_142, wrapper = flatten_fun_j_144};
                                                                proj_j_146 = record_j_145.checker;
                                                                var_j_147 = expr_b_45;
                                                                appl_j_148 = proj_j_146 var_j_147;
                                                                if_j_151 = appl_j_148 ? (
                                                                        
                                                                    bool_j_149 = true
                                                                    ) : (
                                                                        
                                                                    var_j_150 = fail_b_47
                                                                    )
                                                            )
                                                    ));
                                            flatten_fun_j_198 = fun bj_null_j_9 -> (
                                                input_j_155 = input;
                                                select_int_b_32 = input_j_155;
                                                int_j_156 = 0;
                                                var_j_157 = select_int_b_32;
                                                binop_j_158 = int_j_156 <= var_j_157;
                                                if_j_197 = binop_j_158 ? (
                                                        bool_j_159 = false;
                                                        fail_b_27 = bool_j_159;
                                                        flatten_fun_j_168 = fun expr_b_26 -> (
                                                            var_j_160 = expr_b_26;
                                                            m_match_bool_j_162 = var_j_160 ~ any;
                                                            m_match_bool_j_165 = var_j_160 ~ int;
                                                            m_match_cond_j_166 = m_match_bool_j_165 ? (
                                                                    bool_j_167 = true
                                                                ) : (
                                                                    m_match_cond_j_163 = m_match_bool_j_162 ? (
                                                                        var_j_164 = fail_b_27
                                                                    ) : (
                                                                        void_j_161 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_170 = fun bj_null_j_7 -> (
                                                            input_j_169 = input);
                                                        flatten_fun_j_172 = fun expr_b_28 -> (
                                                            var_j_171 = expr_b_28);
                                                        record_j_173 = 
                                                            {checker = flatten_fun_j_168, generator = flatten_fun_j_170, wrapper = flatten_fun_j_172};
                                                        proj_j_174 = record_j_173.generator;
                                                        int_j_175 = 0;
                                                        appl_j_176 = proj_j_174 int_j_175
                                                    ) : (
                                                        bool_j_177 = false;
                                                        fail_b_30 = bool_j_177;
                                                        flatten_fun_j_186 = fun expr_b_29 -> (
                                                            var_j_178 = expr_b_29;
                                                            m_match_bool_j_180 = var_j_178 ~ any;
                                                            m_match_bool_j_183 = var_j_178 ~ bool;
                                                            m_match_cond_j_184 = m_match_bool_j_183 ? (
                                                                    bool_j_185 = true
                                                                ) : (
                                                                    m_match_cond_j_181 = m_match_bool_j_180 ? (
                                                                        var_j_182 = fail_b_30
                                                                    ) : (
                                                                        void_j_179 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_190 = fun bj_null_j_8 -> (
                                                            int_j_187 = 0;
                                                            input_j_188 = input;
                                                            m_bl_i_795 = int_j_187 ~ int;
                                                            m_br_i_796 = input_j_188 ~ int;
                                                            m_b_i_797 = m_bl_i_795 and m_br_i_796;
                                                            binop_j_189 = m_b_i_797 ? (
                                                                    c_binop_i_798 = int_j_187 <= input_j_188
                                                                ) : (
                                                                    ab_i_799 = abort
                                                                ));
                                                        flatten_fun_j_192 = fun expr_b_31 -> (
                                                            var_j_191 = expr_b_31);
                                                        record_j_193 = 
                                                            {checker = flatten_fun_j_186, generator = flatten_fun_j_190, wrapper = flatten_fun_j_192};
                                                        proj_j_194 = record_j_193.generator;
                                                        int_j_195 = 0;
                                                        appl_j_196 = proj_j_194 int_j_195
                                                    ));
                                            flatten_fun_j_200 = fun expr_b_48 -> (
                                                var_j_199 = expr_b_48);
                                            record_j_201 = {checker = flatten_fun_j_154, generator = flatten_fun_j_198, wrapper = flatten_fun_j_200};
                                            proj_j_202 = record_j_201.checker;
                                            var_j_203 = hd;
                                            appl_j_204 = proj_j_202 var_j_203;
                                            elm_check_b_51 = appl_j_204;
                                            var_j_205 = elm_check_b_51;
                                            if_j_210 = var_j_205 ? (
                                                    var_j_206 = test_fun_b_49;
                                                    var_j_207 = tl;
                                                    appl_j_208 = var_j_206 var_j_207
                                                ) : (
                                                    var_j_209 = elm_check_b_51
                                                )
                                        ) : (
                                            void_j_59 = {}
                                        )
                                )));
                    test_fun_b_49_j_0_j_11 = flatten_fun_j_215;
                    var_j_216 = test_fun_b_49_j_0_j_11;
                    var_j_217 = test_fun_b_49_j_0_j_11;
                    appl_j_218 = var_j_216 var_j_217;
                    test_fun_b_49_j_10 = appl_j_218;
                    var_j_219 = test_fun_b_49_j_10;
                    var_j_220 = expr_b_52;
                    appl_j_221 = var_j_219 var_j_220
                ) : (
                    m_match_cond_j_51 = m_match_bool_j_50 ? (
                            var_j_52 = lst_fail_b_53
                        ) : (
                            void_j_49 = {}
                        )
                )
        ));
flatten_fun_j_401 = fun bj_null_j_22 -> (
    flatten_fun_j_387 = fun list_maker_b_24_j_1 -> (
        flatten_fun_j_386 = fun len_b_23 -> (
            var_j_226 = list_maker_b_24_j_1;
            var_j_227 = list_maker_b_24_j_1;
            appl_j_228 = var_j_226 var_j_227;
            list_maker_b_24 = appl_j_228;
            var_j_229 = len_b_23;
            int_j_230 = 0;
            binop_j_231 = var_j_229 == int_j_230;
            if_j_385 = binop_j_231 ? (
                    record_j_232 = {};
                    record_j_233 = {j_empty = record_j_232}
                ) : (
                    flatten_fun_j_326 = fun expr_b_19 -> (
                        input_j_234 = input;
                        select_int_b_20 = input_j_234;
                        bool_j_235 = false;
                        fail_b_21 = bool_j_235;
                        int_j_236 = 0;
                        var_j_237 = select_int_b_20;
                        binop_j_238 = int_j_236 <= var_j_237;
                        if_j_325 = binop_j_238 ? (
                                bool_j_239 = false;
                                fail_b_8 = bool_j_239;
                                flatten_fun_j_248 = fun expr_b_7 -> (
                                    var_j_240 = expr_b_7;
                                    m_match_bool_j_242 = var_j_240 ~ any;
                                    m_match_bool_j_245 = var_j_240 ~ int;
                                    m_match_cond_j_246 = m_match_bool_j_245 ? (
                                            bool_j_247 = true
                                        ) : (
                                            m_match_cond_j_243 = m_match_bool_j_242 ? (
                                                    var_j_244 = fail_b_8
                                                ) : (
                                                    void_j_241 = {}
                                                )
                                        ));
                                flatten_fun_j_250 = fun bj_null_j_12 -> (
                                    input_j_249 = input);
                                flatten_fun_j_252 = fun expr_b_9 -> (
                                    var_j_251 = expr_b_9);
                                record_j_253 = {checker = flatten_fun_j_248, generator = flatten_fun_j_250, wrapper = flatten_fun_j_252};
                                proj_j_254 = record_j_253.checker;
                                var_j_255 = expr_b_19;
                                appl_j_256 = proj_j_254 var_j_255;
                                if_j_281 = appl_j_256 ? (
                                        bool_j_257 = true
                                    ) : (
                                        bool_j_258 = false;
                                        fail_b_11 = bool_j_258;
                                        flatten_fun_j_267 = fun expr_b_10 -> (
                                            var_j_259 = expr_b_10;
                                            m_match_bool_j_261 = var_j_259 ~ any;
                                            m_match_bool_j_264 = var_j_259 ~ bool;
                                            m_match_cond_j_265 = m_match_bool_j_264 ? (
                                                    bool_j_266 = true
                                                ) : (
                                                    m_match_cond_j_262 = m_match_bool_j_261 ? (
                                                            var_j_263 = fail_b_11
                                                        ) : (
                                                            void_j_260 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_271 = fun bj_null_j_13 -> (
                                            int_j_268 = 0;
                                            input_j_269 = input;
                                            m_bl_i_800 = int_j_268 ~ int;
                                            m_br_i_801 = input_j_269 ~ int;
                                            m_b_i_802 = m_bl_i_800 and m_br_i_801;
                                            binop_j_270 = m_b_i_802 ? (
                                                    c_binop_i_803 = int_j_268 <= input_j_269
                                                ) : (
                                                    ab_i_804 = abort
                                                ));
                                        flatten_fun_j_273 = fun expr_b_12 -> (
                                            var_j_272 = expr_b_12);
                                        record_j_274 = {checker = flatten_fun_j_267, generator = flatten_fun_j_271, wrapper = flatten_fun_j_273};
                                        proj_j_275 = record_j_274.checker;
                                        var_j_276 = expr_b_19;
                                        appl_j_277 = proj_j_275 var_j_276;
                                        if_j_280 = appl_j_277 ? (
                                                bool_j_278 = true
                                            ) : (
                                                var_j_279 = fail_b_21
                                            )
                                    )
                            ) : (
                                bool_j_282 = false;
                                fail_b_17 = bool_j_282;
                                flatten_fun_j_291 = fun expr_b_16 -> (
                                    var_j_283 = expr_b_16;
                                    m_match_bool_j_285 = var_j_283 ~ any;
                                    m_match_bool_j_288 = var_j_283 ~ bool;
                                    m_match_cond_j_289 = m_match_bool_j_288 ? (
                                            bool_j_290 = true
                                        ) : (
                                            m_match_cond_j_286 = m_match_bool_j_285 ? (
                                                    var_j_287 = fail_b_17
                                                ) : (
                                                    void_j_284 = {}
                                                )
                                        ));
                                flatten_fun_j_295 = fun bj_null_j_14 -> (
                                    int_j_292 = 0;
                                    input_j_293 = input;
                                    m_bl_i_805 = int_j_292 ~ int;
                                    m_br_i_806 = input_j_293 ~ int;
                                    m_b_i_807 = m_bl_i_805 and m_br_i_806;
                                    binop_j_294 = m_b_i_807 ? (
                                            c_binop_i_808 = int_j_292 <= input_j_293
                                        ) : (
                                            ab_i_809 = abort
                                        ));
                                flatten_fun_j_297 = fun expr_b_18 -> (
                                    var_j_296 = expr_b_18);
                                record_j_298 = {checker = flatten_fun_j_291, generator = flatten_fun_j_295, wrapper = flatten_fun_j_297};
                                proj_j_299 = record_j_298.checker;
                                var_j_300 = expr_b_19;
                                appl_j_301 = proj_j_299 var_j_300;
                                if_j_324 = appl_j_301 ? (
                                        bool_j_302 = true
                                    ) : (
                                        bool_j_303 = false;
                                        fail_b_14 = bool_j_303;
                                        flatten_fun_j_312 = fun expr_b_13 -> (
                                            var_j_304 = expr_b_13;
                                            m_match_bool_j_306 = var_j_304 ~ any;
                                            m_match_bool_j_309 = var_j_304 ~ int;
                                            m_match_cond_j_310 = m_match_bool_j_309 ? (
                                                    bool_j_311 = true
                                                ) : (
                                                    m_match_cond_j_307 = m_match_bool_j_306 ? (
                                                            var_j_308 = fail_b_14
                                                        ) : (
                                                            void_j_305 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_314 = fun bj_null_j_15 -> (
                                            input_j_313 = input);
                                        flatten_fun_j_316 = fun expr_b_15 -> (
                                            var_j_315 = expr_b_15);
                                        record_j_317 = {checker = flatten_fun_j_312, generator = flatten_fun_j_314, wrapper = flatten_fun_j_316};
                                        proj_j_318 = record_j_317.checker;
                                        var_j_319 = expr_b_19;
                                        appl_j_320 = proj_j_318 var_j_319;
                                        if_j_323 = appl_j_320 ? (
                                                bool_j_321 = true
                                            ) : (
                                                var_j_322 = fail_b_21
                                            )
                                    )
                            ));
                    flatten_fun_j_370 = fun bj_null_j_18 -> (
                        input_j_327 = input;
                        select_int_b_6 = input_j_327;
                        int_j_328 = 0;
                        var_j_329 = select_int_b_6;
                        binop_j_330 = int_j_328 <= var_j_329;
                        if_j_369 = binop_j_330 ? (
                                bool_j_331 = false;
                                fail_b_1 = bool_j_331;
                                flatten_fun_j_340 = fun expr_b_0 -> (
                                    var_j_332 = expr_b_0;
                                    m_match_bool_j_334 = var_j_332 ~ any;
                                    m_match_bool_j_337 = var_j_332 ~ int;
                                    m_match_cond_j_338 = m_match_bool_j_337 ? (
                                            bool_j_339 = true
                                        ) : (
                                            m_match_cond_j_335 = m_match_bool_j_334 ? (
                                                    var_j_336 = fail_b_1
                                                ) : (
                                                    void_j_333 = {}
                                                )
                                        ));
                                flatten_fun_j_342 = fun bj_null_j_16 -> (
                                    input_j_341 = input);
                                flatten_fun_j_344 = fun expr_b_2 -> (
                                    var_j_343 = expr_b_2);
                                record_j_345 = {checker = flatten_fun_j_340, generator = flatten_fun_j_342, wrapper = flatten_fun_j_344};
                                proj_j_346 = record_j_345.generator;
                                int_j_347 = 0;
                                appl_j_348 = proj_j_346 int_j_347
                            ) : (
                                bool_j_349 = false;
                                fail_b_4 = bool_j_349;
                                flatten_fun_j_358 = fun expr_b_3 -> (
                                    var_j_350 = expr_b_3;
                                    m_match_bool_j_352 = var_j_350 ~ any;
                                    m_match_bool_j_355 = var_j_350 ~ bool;
                                    m_match_cond_j_356 = m_match_bool_j_355 ? (
                                            bool_j_357 = true
                                        ) : (
                                            m_match_cond_j_353 = m_match_bool_j_352 ? (
                                                    var_j_354 = fail_b_4
                                                ) : (
                                                    void_j_351 = {}
                                                )
                                        ));
                                flatten_fun_j_362 = fun bj_null_j_17 -> (
                                    int_j_359 = 0;
                                    input_j_360 = input;
                                    m_bl_i_810 = int_j_359 ~ int;
                                    m_br_i_811 = input_j_360 ~ int;
                                    m_b_i_812 = m_bl_i_810 and m_br_i_811;
                                    binop_j_361 = m_b_i_812 ? (
                                            c_binop_i_813 = int_j_359 <= input_j_360
                                        ) : (
                                            ab_i_814 = abort
                                        ));
                                flatten_fun_j_364 = fun expr_b_5 -> (
                                    var_j_363 = expr_b_5);
                                record_j_365 = {checker = flatten_fun_j_358, generator = flatten_fun_j_362, wrapper = flatten_fun_j_364};
                                proj_j_366 = record_j_365.generator;
                                int_j_367 = 0;
                                appl_j_368 = proj_j_366 int_j_367
                            ));
                    flatten_fun_j_372 = fun expr_b_22 -> (
                        var_j_371 = expr_b_22);
                    record_j_373 = {checker = flatten_fun_j_326, generator = flatten_fun_j_370, wrapper = flatten_fun_j_372};
                    proj_j_374 = record_j_373.generator;
                    int_j_375 = 0;
                    appl_j_376 = proj_j_374 int_j_375;
                    elm_b_25 = appl_j_376;
                    record_j_377 = {};
                    var_j_378 = elm_b_25;
                    var_j_379 = list_maker_b_24;
                    var_j_380 = len_b_23;
                    int_j_381 = 1;
                    binop_j_382 = var_j_380 - int_j_381;
                    appl_j_383 = var_j_379 binop_j_382;
                    record_j_384 = {j_cons = record_j_377, j_head = var_j_378, j_tail = appl_j_383}
                )));
    list_maker_b_24_j_1_j_21 = flatten_fun_j_387;
    var_j_388 = list_maker_b_24_j_1_j_21;
    var_j_389 = list_maker_b_24_j_1_j_21;
    appl_j_390 = var_j_388 var_j_389;
    list_maker_b_24_j_20 = appl_j_390;
    input_j_391 = input;
    len_b_23_j_19 = input_j_391;
    int_j_392 = 0;
    var_j_393 = len_b_23_j_19;
    binop_j_394 = int_j_392 <= var_j_393;
    if_j_400 = binop_j_394 ? (
            var_j_395 = list_maker_b_24_j_20;
            var_j_396 = len_b_23_j_19;
            appl_j_397 = var_j_395 var_j_396
        ) : (
            bool_j_398 = false;
            assume_j_399 = assume bool_j_398
        ));
flatten_fun_j_403 = fun expr_b_54 -> (
    var_j_402 = expr_b_54);
record_j_404 = {checker = flatten_fun_j_225, generator = flatten_fun_j_401, wrapper = flatten_fun_j_403};
proj_j_405 = record_j_404.wrapper;
int_j_406 = 1;
record_j_407 = {a = int_j_406};
record_j_408 = {};
record_j_409 = {a = record_j_408};
record_j_410 = {bj_actual_rec = record_j_407, bj_decl_lbls = record_j_409};
record_j_411 = {};
record_j_412 = {j_empty = record_j_411};
record_j_413 = {j_head = record_j_410, j_tail = record_j_412};
m_i_815 = proj_j_405 ~ fun;
appl_j_414 = m_i_815 ? (
        c_appl_i_816 = proj_j_405 record_j_413
    ) : (
        ab_i_817 = abort
    );
x_b_110 = appl_j_414;
x = x_b_110;
flatten_fun_j_594 = fun expr_b_107 -> (
    bool_j_416 = false;
    lst_fail_b_108 = bool_j_416;
    var_j_417 = expr_b_107;
    m_match_bool_j_419 = var_j_417 ~ any;
    m_match_bool_j_422 = var_j_417 ~ {j_head, j_tail, _};
    m_match_bool_j_591 = var_j_417 ~ {j_empty, _};
    m_match_cond_j_592 = m_match_bool_j_591 ? (
            bool_j_593 = true
        ) : (
            m_match_cond_j_423 = m_match_bool_j_422 ? (
                    bj_underscore_j_35 = var_j_417.j_head;
                    bj_underscore2_j_34 = var_j_417.j_tail;
                    flatten_fun_j_584 = fun test_fun_b_104_j_2 -> (
                        flatten_fun_j_583 = fun test_list_b_105 -> (
                            var_j_424 = test_fun_b_104_j_2;
                            var_j_425 = test_fun_b_104_j_2;
                            appl_j_426 = var_j_424 var_j_425;
                            test_fun_b_104 = appl_j_426;
                            var_j_427 = test_list_b_105;
                            m_match_bool_j_429 = var_j_427 ~ {j_head, j_tail, _};
                            m_match_bool_j_580 = var_j_427 ~ {j_empty, _};
                            m_match_cond_j_581 = m_match_bool_j_580 ? (
                                    bool_j_582 = true
                                ) : (
                                    m_match_cond_j_430 = m_match_bool_j_429 ? (
                                            hd_j_31 = var_j_427.j_head;
                                            tl_j_30 = var_j_427.j_tail;
                                            flatten_fun_j_523 = fun expr_b_100 -> (
                                                input_j_431 = input;
                                                select_int_b_101 = input_j_431;
                                                bool_j_432 = false;
                                                fail_b_102 = bool_j_432;
                                                int_j_433 = 0;
                                                var_j_434 = select_int_b_101;
                                                binop_j_435 = int_j_433 <= var_j_434;
                                                if_j_522 = binop_j_435 ? (
                                                        bool_j_436 = false;
                                                        fail_b_89 = bool_j_436;
                                                        flatten_fun_j_445 = fun expr_b_88 -> (
                                                            var_j_437 = expr_b_88;
                                                            m_match_bool_j_439 = var_j_437 ~ any;
                                                            m_match_bool_j_442 = var_j_437 ~ int;
                                                            m_match_cond_j_443 = m_match_bool_j_442 ? (
                                                                    bool_j_444 = true
                                                                ) : (
                                                                    m_match_cond_j_440 = m_match_bool_j_439 ? (
                                                                        var_j_441 = fail_b_89
                                                                    ) : (
                                                                        void_j_438 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_447 = fun bj_null_j_23 -> (
                                                            input_j_446 = input);
                                                        flatten_fun_j_449 = fun expr_b_90 -> (
                                                            var_j_448 = expr_b_90);
                                                        record_j_450 = 
                                                            {checker = flatten_fun_j_445, generator = flatten_fun_j_447, wrapper = flatten_fun_j_449};
                                                        proj_j_451 = record_j_450.checker;
                                                        var_j_452 = expr_b_100;
                                                        appl_j_453 = proj_j_451 var_j_452;
                                                        if_j_478 = appl_j_453 ? (
                                                                bool_j_454 = true
                                                            ) : (
                                                                bool_j_455 = false;
                                                                fail_b_92 = bool_j_455;
                                                                flatten_fun_j_464 = fun expr_b_91 -> (
                                                                    var_j_456 = expr_b_91;
                                                                    m_match_bool_j_458 = var_j_456 ~ any;
                                                                    m_match_bool_j_461 = var_j_456 ~ bool;
                                                                    m_match_cond_j_462 = m_match_bool_j_461 ? (
                                                                        bool_j_463 = true
                                                                    ) : (
                                                                        m_match_cond_j_459 = m_match_bool_j_458 ? (
                                                                        var_j_460 = fail_b_92
                                                                    ) : (
                                                                        void_j_457 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_468 = fun bj_null_j_24 -> (
                                                                    int_j_465 = 0;
                                                                    input_j_466 = input;
                                                                    m_bl_i_818 = int_j_465 ~ int;
                                                                    m_br_i_819 = input_j_466 ~ int;
                                                                    m_b_i_820 = m_bl_i_818 and m_br_i_819;
                                                                    binop_j_467 = m_b_i_820 ? (
                                                                        c_binop_i_821 = int_j_465 <= input_j_466
                                                                    ) : (
                                                                        ab_i_822 = abort
                                                                    ));
                                                                flatten_fun_j_470 = fun expr_b_93 -> (
                                                                    var_j_469 = expr_b_93);
                                                                record_j_471 = 
                                                                    {checker = flatten_fun_j_464, generator = flatten_fun_j_468, wrapper = flatten_fun_j_470};
                                                                proj_j_472 = record_j_471.checker;
                                                                var_j_473 = expr_b_100;
                                                                appl_j_474 = proj_j_472 var_j_473;
                                                                if_j_477 = appl_j_474 ? (
                                                                        
                                                                    bool_j_475 = true
                                                                    ) : (
                                                                        
                                                                    var_j_476 = fail_b_102
                                                                    )
                                                            )
                                                    ) : (
                                                        bool_j_479 = false;
                                                        fail_b_98 = bool_j_479;
                                                        flatten_fun_j_488 = fun expr_b_97 -> (
                                                            var_j_480 = expr_b_97;
                                                            m_match_bool_j_482 = var_j_480 ~ any;
                                                            m_match_bool_j_485 = var_j_480 ~ bool;
                                                            m_match_cond_j_486 = m_match_bool_j_485 ? (
                                                                    bool_j_487 = true
                                                                ) : (
                                                                    m_match_cond_j_483 = m_match_bool_j_482 ? (
                                                                        var_j_484 = fail_b_98
                                                                    ) : (
                                                                        void_j_481 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_492 = fun bj_null_j_25 -> (
                                                            int_j_489 = 0;
                                                            input_j_490 = input;
                                                            m_bl_i_823 = int_j_489 ~ int;
                                                            m_br_i_824 = input_j_490 ~ int;
                                                            m_b_i_825 = m_bl_i_823 and m_br_i_824;
                                                            binop_j_491 = m_b_i_825 ? (
                                                                    c_binop_i_826 = int_j_489 <= input_j_490
                                                                ) : (
                                                                    ab_i_827 = abort
                                                                ));
                                                        flatten_fun_j_494 = fun expr_b_99 -> (
                                                            var_j_493 = expr_b_99);
                                                        record_j_495 = 
                                                            {checker = flatten_fun_j_488, generator = flatten_fun_j_492, wrapper = flatten_fun_j_494};
                                                        proj_j_496 = record_j_495.checker;
                                                        var_j_497 = expr_b_100;
                                                        appl_j_498 = proj_j_496 var_j_497;
                                                        if_j_521 = appl_j_498 ? (
                                                                bool_j_499 = true
                                                            ) : (
                                                                bool_j_500 = false;
                                                                fail_b_95 = bool_j_500;
                                                                flatten_fun_j_509 = fun expr_b_94 -> (
                                                                    var_j_501 = expr_b_94;
                                                                    m_match_bool_j_503 = var_j_501 ~ any;
                                                                    m_match_bool_j_506 = var_j_501 ~ int;
                                                                    m_match_cond_j_507 = m_match_bool_j_506 ? (
                                                                        bool_j_508 = true
                                                                    ) : (
                                                                        m_match_cond_j_504 = m_match_bool_j_503 ? (
                                                                        var_j_505 = fail_b_95
                                                                    ) : (
                                                                        void_j_502 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_511 = fun bj_null_j_26 -> (
                                                                    input_j_510 = input);
                                                                flatten_fun_j_513 = fun expr_b_96 -> (
                                                                    var_j_512 = expr_b_96);
                                                                record_j_514 = 
                                                                    {checker = flatten_fun_j_509, generator = flatten_fun_j_511, wrapper = flatten_fun_j_513};
                                                                proj_j_515 = record_j_514.checker;
                                                                var_j_516 = expr_b_100;
                                                                appl_j_517 = proj_j_515 var_j_516;
                                                                if_j_520 = appl_j_517 ? (
                                                                        
                                                                    bool_j_518 = true
                                                                    ) : (
                                                                        
                                                                    var_j_519 = fail_b_102
                                                                    )
                                                            )
                                                    ));
                                            flatten_fun_j_567 = fun bj_null_j_29 -> (
                                                input_j_524 = input;
                                                select_int_b_87 = input_j_524;
                                                int_j_525 = 0;
                                                var_j_526 = select_int_b_87;
                                                binop_j_527 = int_j_525 <= var_j_526;
                                                if_j_566 = binop_j_527 ? (
                                                        bool_j_528 = false;
                                                        fail_b_82 = bool_j_528;
                                                        flatten_fun_j_537 = fun expr_b_81 -> (
                                                            var_j_529 = expr_b_81;
                                                            m_match_bool_j_531 = var_j_529 ~ any;
                                                            m_match_bool_j_534 = var_j_529 ~ int;
                                                            m_match_cond_j_535 = m_match_bool_j_534 ? (
                                                                    bool_j_536 = true
                                                                ) : (
                                                                    m_match_cond_j_532 = m_match_bool_j_531 ? (
                                                                        var_j_533 = fail_b_82
                                                                    ) : (
                                                                        void_j_530 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_539 = fun bj_null_j_27 -> (
                                                            input_j_538 = input);
                                                        flatten_fun_j_541 = fun expr_b_83 -> (
                                                            var_j_540 = expr_b_83);
                                                        record_j_542 = 
                                                            {checker = flatten_fun_j_537, generator = flatten_fun_j_539, wrapper = flatten_fun_j_541};
                                                        proj_j_543 = record_j_542.generator;
                                                        int_j_544 = 0;
                                                        appl_j_545 = proj_j_543 int_j_544
                                                    ) : (
                                                        bool_j_546 = false;
                                                        fail_b_85 = bool_j_546;
                                                        flatten_fun_j_555 = fun expr_b_84 -> (
                                                            var_j_547 = expr_b_84;
                                                            m_match_bool_j_549 = var_j_547 ~ any;
                                                            m_match_bool_j_552 = var_j_547 ~ bool;
                                                            m_match_cond_j_553 = m_match_bool_j_552 ? (
                                                                    bool_j_554 = true
                                                                ) : (
                                                                    m_match_cond_j_550 = m_match_bool_j_549 ? (
                                                                        var_j_551 = fail_b_85
                                                                    ) : (
                                                                        void_j_548 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_559 = fun bj_null_j_28 -> (
                                                            int_j_556 = 0;
                                                            input_j_557 = input;
                                                            m_bl_i_828 = int_j_556 ~ int;
                                                            m_br_i_829 = input_j_557 ~ int;
                                                            m_b_i_830 = m_bl_i_828 and m_br_i_829;
                                                            binop_j_558 = m_b_i_830 ? (
                                                                    c_binop_i_831 = int_j_556 <= input_j_557
                                                                ) : (
                                                                    ab_i_832 = abort
                                                                ));
                                                        flatten_fun_j_561 = fun expr_b_86 -> (
                                                            var_j_560 = expr_b_86);
                                                        record_j_562 = 
                                                            {checker = flatten_fun_j_555, generator = flatten_fun_j_559, wrapper = flatten_fun_j_561};
                                                        proj_j_563 = record_j_562.generator;
                                                        int_j_564 = 0;
                                                        appl_j_565 = proj_j_563 int_j_564
                                                    ));
                                            flatten_fun_j_569 = fun expr_b_103 -> (
                                                var_j_568 = expr_b_103);
                                            record_j_570 = {checker = flatten_fun_j_523, generator = flatten_fun_j_567, wrapper = flatten_fun_j_569};
                                            proj_j_571 = record_j_570.checker;
                                            var_j_572 = hd_j_31;
                                            appl_j_573 = proj_j_571 var_j_572;
                                            elm_check_b_106 = appl_j_573;
                                            var_j_574 = elm_check_b_106;
                                            if_j_579 = var_j_574 ? (
                                                    var_j_575 = test_fun_b_104;
                                                    var_j_576 = tl_j_30;
                                                    appl_j_577 = var_j_575 var_j_576
                                                ) : (
                                                    var_j_578 = elm_check_b_106
                                                )
                                        ) : (
                                            void_j_428 = {}
                                        )
                                )));
                    test_fun_b_104_j_2_j_33 = flatten_fun_j_584;
                    var_j_585 = test_fun_b_104_j_2_j_33;
                    var_j_586 = test_fun_b_104_j_2_j_33;
                    appl_j_587 = var_j_585 var_j_586;
                    test_fun_b_104_j_32 = appl_j_587;
                    var_j_588 = test_fun_b_104_j_32;
                    var_j_589 = expr_b_107;
                    appl_j_590 = var_j_588 var_j_589
                ) : (
                    m_match_cond_j_420 = m_match_bool_j_419 ? (
                            var_j_421 = lst_fail_b_108
                        ) : (
                            void_j_418 = {}
                        )
                )
        ));
flatten_fun_j_770 = fun bj_null_j_46 -> (
    flatten_fun_j_756 = fun list_maker_b_79_j_3 -> (
        flatten_fun_j_755 = fun len_b_78 -> (
            var_j_595 = list_maker_b_79_j_3;
            var_j_596 = list_maker_b_79_j_3;
            appl_j_597 = var_j_595 var_j_596;
            list_maker_b_79 = appl_j_597;
            var_j_598 = len_b_78;
            int_j_599 = 0;
            binop_j_600 = var_j_598 == int_j_599;
            if_j_754 = binop_j_600 ? (
                    record_j_601 = {};
                    record_j_602 = {j_empty = record_j_601}
                ) : (
                    flatten_fun_j_695 = fun expr_b_74 -> (
                        input_j_603 = input;
                        select_int_b_75 = input_j_603;
                        bool_j_604 = false;
                        fail_b_76 = bool_j_604;
                        int_j_605 = 0;
                        var_j_606 = select_int_b_75;
                        binop_j_607 = int_j_605 <= var_j_606;
                        if_j_694 = binop_j_607 ? (
                                bool_j_608 = false;
                                fail_b_63 = bool_j_608;
                                flatten_fun_j_617 = fun expr_b_62 -> (
                                    var_j_609 = expr_b_62;
                                    m_match_bool_j_611 = var_j_609 ~ any;
                                    m_match_bool_j_614 = var_j_609 ~ int;
                                    m_match_cond_j_615 = m_match_bool_j_614 ? (
                                            bool_j_616 = true
                                        ) : (
                                            m_match_cond_j_612 = m_match_bool_j_611 ? (
                                                    var_j_613 = fail_b_63
                                                ) : (
                                                    void_j_610 = {}
                                                )
                                        ));
                                flatten_fun_j_619 = fun bj_null_j_36 -> (
                                    input_j_618 = input);
                                flatten_fun_j_621 = fun expr_b_64 -> (
                                    var_j_620 = expr_b_64);
                                record_j_622 = {checker = flatten_fun_j_617, generator = flatten_fun_j_619, wrapper = flatten_fun_j_621};
                                proj_j_623 = record_j_622.checker;
                                var_j_624 = expr_b_74;
                                appl_j_625 = proj_j_623 var_j_624;
                                if_j_650 = appl_j_625 ? (
                                        bool_j_626 = true
                                    ) : (
                                        bool_j_627 = false;
                                        fail_b_66 = bool_j_627;
                                        flatten_fun_j_636 = fun expr_b_65 -> (
                                            var_j_628 = expr_b_65;
                                            m_match_bool_j_630 = var_j_628 ~ any;
                                            m_match_bool_j_633 = var_j_628 ~ bool;
                                            m_match_cond_j_634 = m_match_bool_j_633 ? (
                                                    bool_j_635 = true
                                                ) : (
                                                    m_match_cond_j_631 = m_match_bool_j_630 ? (
                                                            var_j_632 = fail_b_66
                                                        ) : (
                                                            void_j_629 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_640 = fun bj_null_j_37 -> (
                                            int_j_637 = 0;
                                            input_j_638 = input;
                                            m_bl_i_833 = int_j_637 ~ int;
                                            m_br_i_834 = input_j_638 ~ int;
                                            m_b_i_835 = m_bl_i_833 and m_br_i_834;
                                            binop_j_639 = m_b_i_835 ? (
                                                    c_binop_i_836 = int_j_637 <= input_j_638
                                                ) : (
                                                    ab_i_837 = abort
                                                ));
                                        flatten_fun_j_642 = fun expr_b_67 -> (
                                            var_j_641 = expr_b_67);
                                        record_j_643 = {checker = flatten_fun_j_636, generator = flatten_fun_j_640, wrapper = flatten_fun_j_642};
                                        proj_j_644 = record_j_643.checker;
                                        var_j_645 = expr_b_74;
                                        appl_j_646 = proj_j_644 var_j_645;
                                        if_j_649 = appl_j_646 ? (
                                                bool_j_647 = true
                                            ) : (
                                                var_j_648 = fail_b_76
                                            )
                                    )
                            ) : (
                                bool_j_651 = false;
                                fail_b_72 = bool_j_651;
                                flatten_fun_j_660 = fun expr_b_71 -> (
                                    var_j_652 = expr_b_71;
                                    m_match_bool_j_654 = var_j_652 ~ any;
                                    m_match_bool_j_657 = var_j_652 ~ bool;
                                    m_match_cond_j_658 = m_match_bool_j_657 ? (
                                            bool_j_659 = true
                                        ) : (
                                            m_match_cond_j_655 = m_match_bool_j_654 ? (
                                                    var_j_656 = fail_b_72
                                                ) : (
                                                    void_j_653 = {}
                                                )
                                        ));
                                flatten_fun_j_664 = fun bj_null_j_38 -> (
                                    int_j_661 = 0;
                                    input_j_662 = input;
                                    m_bl_i_838 = int_j_661 ~ int;
                                    m_br_i_839 = input_j_662 ~ int;
                                    m_b_i_840 = m_bl_i_838 and m_br_i_839;
                                    binop_j_663 = m_b_i_840 ? (
                                            c_binop_i_841 = int_j_661 <= input_j_662
                                        ) : (
                                            ab_i_842 = abort
                                        ));
                                flatten_fun_j_666 = fun expr_b_73 -> (
                                    var_j_665 = expr_b_73);
                                record_j_667 = {checker = flatten_fun_j_660, generator = flatten_fun_j_664, wrapper = flatten_fun_j_666};
                                proj_j_668 = record_j_667.checker;
                                var_j_669 = expr_b_74;
                                appl_j_670 = proj_j_668 var_j_669;
                                if_j_693 = appl_j_670 ? (
                                        bool_j_671 = true
                                    ) : (
                                        bool_j_672 = false;
                                        fail_b_69 = bool_j_672;
                                        flatten_fun_j_681 = fun expr_b_68 -> (
                                            var_j_673 = expr_b_68;
                                            m_match_bool_j_675 = var_j_673 ~ any;
                                            m_match_bool_j_678 = var_j_673 ~ int;
                                            m_match_cond_j_679 = m_match_bool_j_678 ? (
                                                    bool_j_680 = true
                                                ) : (
                                                    m_match_cond_j_676 = m_match_bool_j_675 ? (
                                                            var_j_677 = fail_b_69
                                                        ) : (
                                                            void_j_674 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_683 = fun bj_null_j_39 -> (
                                            input_j_682 = input);
                                        flatten_fun_j_685 = fun expr_b_70 -> (
                                            var_j_684 = expr_b_70);
                                        record_j_686 = {checker = flatten_fun_j_681, generator = flatten_fun_j_683, wrapper = flatten_fun_j_685};
                                        proj_j_687 = record_j_686.checker;
                                        var_j_688 = expr_b_74;
                                        appl_j_689 = proj_j_687 var_j_688;
                                        if_j_692 = appl_j_689 ? (
                                                bool_j_690 = true
                                            ) : (
                                                var_j_691 = fail_b_76
                                            )
                                    )
                            ));
                    flatten_fun_j_739 = fun bj_null_j_42 -> (
                        input_j_696 = input;
                        select_int_b_61 = input_j_696;
                        int_j_697 = 0;
                        var_j_698 = select_int_b_61;
                        binop_j_699 = int_j_697 <= var_j_698;
                        if_j_738 = binop_j_699 ? (
                                bool_j_700 = false;
                                fail_b_56 = bool_j_700;
                                flatten_fun_j_709 = fun expr_b_55 -> (
                                    var_j_701 = expr_b_55;
                                    m_match_bool_j_703 = var_j_701 ~ any;
                                    m_match_bool_j_706 = var_j_701 ~ int;
                                    m_match_cond_j_707 = m_match_bool_j_706 ? (
                                            bool_j_708 = true
                                        ) : (
                                            m_match_cond_j_704 = m_match_bool_j_703 ? (
                                                    var_j_705 = fail_b_56
                                                ) : (
                                                    void_j_702 = {}
                                                )
                                        ));
                                flatten_fun_j_711 = fun bj_null_j_40 -> (
                                    input_j_710 = input);
                                flatten_fun_j_713 = fun expr_b_57 -> (
                                    var_j_712 = expr_b_57);
                                record_j_714 = {checker = flatten_fun_j_709, generator = flatten_fun_j_711, wrapper = flatten_fun_j_713};
                                proj_j_715 = record_j_714.generator;
                                int_j_716 = 0;
                                appl_j_717 = proj_j_715 int_j_716
                            ) : (
                                bool_j_718 = false;
                                fail_b_59 = bool_j_718;
                                flatten_fun_j_727 = fun expr_b_58 -> (
                                    var_j_719 = expr_b_58;
                                    m_match_bool_j_721 = var_j_719 ~ any;
                                    m_match_bool_j_724 = var_j_719 ~ bool;
                                    m_match_cond_j_725 = m_match_bool_j_724 ? (
                                            bool_j_726 = true
                                        ) : (
                                            m_match_cond_j_722 = m_match_bool_j_721 ? (
                                                    var_j_723 = fail_b_59
                                                ) : (
                                                    void_j_720 = {}
                                                )
                                        ));
                                flatten_fun_j_731 = fun bj_null_j_41 -> (
                                    int_j_728 = 0;
                                    input_j_729 = input;
                                    m_bl_i_843 = int_j_728 ~ int;
                                    m_br_i_844 = input_j_729 ~ int;
                                    m_b_i_845 = m_bl_i_843 and m_br_i_844;
                                    binop_j_730 = m_b_i_845 ? (
                                            c_binop_i_846 = int_j_728 <= input_j_729
                                        ) : (
                                            ab_i_847 = abort
                                        ));
                                flatten_fun_j_733 = fun expr_b_60 -> (
                                    var_j_732 = expr_b_60);
                                record_j_734 = {checker = flatten_fun_j_727, generator = flatten_fun_j_731, wrapper = flatten_fun_j_733};
                                proj_j_735 = record_j_734.generator;
                                int_j_736 = 0;
                                appl_j_737 = proj_j_735 int_j_736
                            ));
                    flatten_fun_j_741 = fun expr_b_77 -> (
                        var_j_740 = expr_b_77);
                    record_j_742 = {checker = flatten_fun_j_695, generator = flatten_fun_j_739, wrapper = flatten_fun_j_741};
                    proj_j_743 = record_j_742.generator;
                    int_j_744 = 0;
                    appl_j_745 = proj_j_743 int_j_744;
                    elm_b_80 = appl_j_745;
                    record_j_746 = {};
                    var_j_747 = elm_b_80;
                    var_j_748 = list_maker_b_79;
                    var_j_749 = len_b_78;
                    int_j_750 = 1;
                    binop_j_751 = var_j_749 - int_j_750;
                    appl_j_752 = var_j_748 binop_j_751;
                    record_j_753 = {j_cons = record_j_746, j_head = var_j_747, j_tail = appl_j_752}
                )));
    list_maker_b_79_j_3_j_45 = flatten_fun_j_756;
    var_j_757 = list_maker_b_79_j_3_j_45;
    var_j_758 = list_maker_b_79_j_3_j_45;
    appl_j_759 = var_j_757 var_j_758;
    list_maker_b_79_j_44 = appl_j_759;
    input_j_760 = input;
    len_b_78_j_43 = input_j_760;
    int_j_761 = 0;
    var_j_762 = len_b_78_j_43;
    binop_j_763 = int_j_761 <= var_j_762;
    if_j_769 = binop_j_763 ? (
            var_j_764 = list_maker_b_79_j_44;
            var_j_765 = len_b_78_j_43;
            appl_j_766 = var_j_764 var_j_765
        ) : (
            bool_j_767 = false;
            assume_j_768 = assume bool_j_767
        ));
flatten_fun_j_772 = fun expr_b_109 -> (
    var_j_771 = expr_b_109);
record_j_773 = {checker = flatten_fun_j_594, generator = flatten_fun_j_770, wrapper = flatten_fun_j_772};
proj_j_774 = record_j_773.checker;
appl_j_776 = proj_j_774 x_b_110;
check_res_b_111 = appl_j_776;
if_j_784 = check_res_b_111 ? (
        var_j_778 = x
    ) : (
        error_var_j_779 = check_res_b_111;
        assert_pred_j_780 = error_var_j_779;
        assert_res_j_781 = assert_pred_j_780 ? (
                assert_res_true_j_782 = {}
            ) : (
                ab_j_783 = abort
            )
    );
i_result = if_j_784