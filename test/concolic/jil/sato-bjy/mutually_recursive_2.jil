i_first = {};
flatten_fun_j_91 = fun f_j_0 -> (
    flatten_fun_j_90 = fun g_j_1 -> (
        flatten_fun_j_89 = fun x -> (
            var_j_17 = f_j_0;
            var_j_18 = f_j_0;
            appl_j_19 = var_j_17 var_j_18;
            var_j_20 = g_j_1;
            appl_j_21 = appl_j_19 var_j_20;
            f = appl_j_21;
            var_j_22 = g_j_1;
            var_j_23 = f_j_0;
            appl_j_24 = var_j_22 var_j_23;
            var_j_25 = g_j_1;
            appl_j_26 = appl_j_24 var_j_25;
            g = appl_j_26;
            flatten_fun_j_86 = fun x_b_0 -> (
                int_j_27 = 0;
                input_j_28 = input;
                m_bl_i_270 = int_j_27 ~ int;
                m_br_i_271 = input_j_28 ~ int;
                m_b_i_272 = m_bl_i_270 and m_br_i_271;
                binop_j_29 = m_b_i_272 ? (
                        c_binop_i_273 = int_j_27 < input_j_28
                    ) : (
                        ab_i_274 = abort
                    );
                if_j_49 = binop_j_29 ? (
                        bool_j_30 = false;
                        fail_b_8 = bool_j_30;
                        flatten_fun_j_39 = fun expr_b_7 -> (
                            var_j_31 = expr_b_7;
                            m_match_bool_j_33 = var_j_31 ~ any;
                            m_match_bool_j_36 = var_j_31 ~ int;
                            m_match_cond_j_37 = m_match_bool_j_36 ? (
                                    bool_j_38 = true
                                ) : (
                                    m_match_cond_j_34 = m_match_bool_j_33 ? (
                                            var_j_35 = fail_b_8
                                        ) : (
                                            void_j_32 = {}
                                        )
                                ));
                        flatten_fun_j_41 = fun bj_null -> (
                            input_j_40 = input);
                        flatten_fun_j_43 = fun expr_b_9 -> (
                            var_j_42 = expr_b_9);
                        record_j_44 = {checker = flatten_fun_j_39, generator = flatten_fun_j_41, wrapper = flatten_fun_j_43};
                        proj_j_45 = record_j_44.checker;
                        var_j_46 = x_b_0;
                        m_i_275 = proj_j_45 ~ fun;
                        appl_j_47 = m_i_275 ? (
                                c_appl_i_276 = proj_j_45 var_j_46
                            ) : (
                                ab_i_277 = abort
                            )
                    ) : (
                        bool_j_48 = true
                    );
                arg_check_b_1 = if_j_49;
                var_j_50 = arg_check_b_1;
                if_j_85 = var_j_50 ? (
                        bool_j_51 = false;
                        fail_b_11 = bool_j_51;
                        flatten_fun_j_60 = fun expr_b_10 -> (
                            var_j_52 = expr_b_10;
                            m_match_bool_j_54 = var_j_52 ~ any;
                            m_match_bool_j_57 = var_j_52 ~ bool;
                            m_match_cond_j_58 = m_match_bool_j_57 ? (
                                    bool_j_59 = true
                                ) : (
                                    m_match_cond_j_55 = m_match_bool_j_54 ? (
                                            var_j_56 = fail_b_11
                                        ) : (
                                            void_j_53 = {}
                                        )
                                ));
                        flatten_fun_j_64 = fun bj_null_j_2 -> (
                            int_j_61 = 0;
                            input_j_62 = input;
                            m_bl_i_278 = int_j_61 ~ int;
                            m_br_i_279 = input_j_62 ~ int;
                            m_b_i_280 = m_bl_i_278 and m_br_i_279;
                            binop_j_63 = m_b_i_280 ? (
                                    c_binop_i_281 = int_j_61 <= input_j_62
                                ) : (
                                    ab_i_282 = abort
                                ));
                        flatten_fun_j_66 = fun expr_b_12 -> (
                            var_j_65 = expr_b_12);
                        record_j_67 = {checker = flatten_fun_j_60, generator = flatten_fun_j_64, wrapper = flatten_fun_j_66};
                        proj_j_68 = record_j_67.wrapper;
                        var_j_69 = x;
                        int_j_70 = 0;
                        m_bl_i_283 = var_j_69 ~ int;
                        m_br_i_284 = int_j_70 ~ int;
                        m_b_i_285 = m_bl_i_283 and m_br_i_284;
                        binop_j_71 = m_b_i_285 ? (
                                c_binop_i_286 = var_j_69 == int_j_70
                            ) : (
                                ab_i_287 = abort
                            );
                        m_i_288 = binop_j_71 ~ bool;
                        if_j_78 = m_i_288 ? (
                                c_cond_i_297 = binop_j_71 ? (
                                        int_j_72 = 0
                                    ) : (
                                        var_j_73 = g;
                                        var_j_74 = x;
                                        int_j_75 = 1;
                                        m_bl_i_289 = var_j_74 ~ int;
                                        m_br_i_290 = int_j_75 ~ int;
                                        m_b_i_291 = m_bl_i_289 and m_br_i_290;
                                        binop_j_76 = m_b_i_291 ? (
                                                c_binop_i_292 = var_j_74 - int_j_75
                                            ) : (
                                                ab_i_293 = abort
                                            );
                                        m_i_294 = var_j_73 ~ fun;
                                        appl_j_77 = m_i_294 ? (
                                                c_appl_i_295 = var_j_73 binop_j_76
                                            ) : (
                                                ab_i_296 = abort
                                            )
                                    )
                            ) : (
                                ab_i_298 = abort
                            );
                        m_i_299 = proj_j_68 ~ fun;
                        appl_j_79 = m_i_299 ? (
                                c_appl_i_300 = proj_j_68 if_j_78
                            ) : (
                                ab_i_301 = abort
                            )
                    ) : (
                        var_j_80 = arg_check_b_1;
                        assert_pred_j_81 = var_j_80;
                        assert_res_j_82 = assert_pred_j_81 ? (
                                assert_res_true_j_83 = {}
                            ) : (
                                ab_j_84 = abort
                            )
                    ));
            var_j_87 = x;
            appl_j_88 = flatten_fun_j_86 var_j_87)));
flatten_fun_j_164 = fun f_j_0_j_8 -> (
    flatten_fun_j_163 = fun g_j_1_j_7 -> (
        flatten_fun_j_162 = fun y -> (
            var_j_92 = f_j_0_j_8;
            var_j_93 = f_j_0_j_8;
            appl_j_94 = var_j_92 var_j_93;
            var_j_95 = g_j_1_j_7;
            appl_j_96 = appl_j_94 var_j_95;
            f_j_6 = appl_j_96;
            var_j_97 = g_j_1_j_7;
            var_j_98 = f_j_0_j_8;
            appl_j_99 = var_j_97 var_j_98;
            var_j_100 = g_j_1_j_7;
            appl_j_101 = appl_j_99 var_j_100;
            g_j_5 = appl_j_101;
            flatten_fun_j_159 = fun y_b_2 -> (
                int_j_102 = 0;
                input_j_103 = input;
                m_bl_i_302 = int_j_102 ~ int;
                m_br_i_303 = input_j_103 ~ int;
                m_b_i_304 = m_bl_i_302 and m_br_i_303;
                binop_j_104 = m_b_i_304 ? (
                        c_binop_i_305 = int_j_102 < input_j_103
                    ) : (
                        ab_i_306 = abort
                    );
                if_j_124 = binop_j_104 ? (
                        bool_j_105 = false;
                        fail_b_20 = bool_j_105;
                        flatten_fun_j_114 = fun expr_b_19 -> (
                            var_j_106 = expr_b_19;
                            m_match_bool_j_108 = var_j_106 ~ any;
                            m_match_bool_j_111 = var_j_106 ~ int;
                            m_match_cond_j_112 = m_match_bool_j_111 ? (
                                    bool_j_113 = true
                                ) : (
                                    m_match_cond_j_109 = m_match_bool_j_108 ? (
                                            var_j_110 = fail_b_20
                                        ) : (
                                            void_j_107 = {}
                                        )
                                ));
                        flatten_fun_j_116 = fun bj_null_j_3 -> (
                            input_j_115 = input);
                        flatten_fun_j_118 = fun expr_b_21 -> (
                            var_j_117 = expr_b_21);
                        record_j_119 = {checker = flatten_fun_j_114, generator = flatten_fun_j_116, wrapper = flatten_fun_j_118};
                        proj_j_120 = record_j_119.checker;
                        var_j_121 = y_b_2;
                        m_i_307 = proj_j_120 ~ fun;
                        appl_j_122 = m_i_307 ? (
                                c_appl_i_308 = proj_j_120 var_j_121
                            ) : (
                                ab_i_309 = abort
                            )
                    ) : (
                        bool_j_123 = true
                    );
                arg_check_b_3 = if_j_124;
                var_j_125 = arg_check_b_3;
                if_j_158 = var_j_125 ? (
                        bool_j_126 = false;
                        fail_b_23 = bool_j_126;
                        flatten_fun_j_135 = fun expr_b_22 -> (
                            var_j_127 = expr_b_22;
                            m_match_bool_j_129 = var_j_127 ~ any;
                            m_match_bool_j_132 = var_j_127 ~ int;
                            m_match_cond_j_133 = m_match_bool_j_132 ? (
                                    bool_j_134 = true
                                ) : (
                                    m_match_cond_j_130 = m_match_bool_j_129 ? (
                                            var_j_131 = fail_b_23
                                        ) : (
                                            void_j_128 = {}
                                        )
                                ));
                        flatten_fun_j_137 = fun bj_null_j_4 -> (
                            input_j_136 = input);
                        flatten_fun_j_139 = fun expr_b_24 -> (
                            var_j_138 = expr_b_24);
                        record_j_140 = {checker = flatten_fun_j_135, generator = flatten_fun_j_137, wrapper = flatten_fun_j_139};
                        proj_j_141 = record_j_140.wrapper;
                        var_j_142 = y;
                        int_j_143 = 0;
                        m_bl_i_310 = var_j_142 ~ int;
                        m_br_i_311 = int_j_143 ~ int;
                        m_b_i_312 = m_bl_i_310 and m_br_i_311;
                        binop_j_144 = m_b_i_312 ? (
                                c_binop_i_313 = var_j_142 < int_j_143
                            ) : (
                                ab_i_314 = abort
                            );
                        m_i_315 = binop_j_144 ~ bool;
                        if_j_151 = m_i_315 ? (
                                c_cond_i_324 = binop_j_144 ? (
                                        bool_j_145 = false
                                    ) : (
                                        var_j_146 = f_j_6;
                                        var_j_147 = y;
                                        int_j_148 = 1;
                                        m_bl_i_316 = var_j_147 ~ int;
                                        m_br_i_317 = int_j_148 ~ int;
                                        m_b_i_318 = m_bl_i_316 and m_br_i_317;
                                        binop_j_149 = m_b_i_318 ? (
                                                c_binop_i_319 = var_j_147 - int_j_148
                                            ) : (
                                                ab_i_320 = abort
                                            );
                                        m_i_321 = var_j_146 ~ fun;
                                        appl_j_150 = m_i_321 ? (
                                                c_appl_i_322 = var_j_146 binop_j_149
                                            ) : (
                                                ab_i_323 = abort
                                            )
                                    )
                            ) : (
                                ab_i_325 = abort
                            );
                        m_i_326 = proj_j_141 ~ fun;
                        appl_j_152 = m_i_326 ? (
                                c_appl_i_327 = proj_j_141 if_j_151
                            ) : (
                                ab_i_328 = abort
                            )
                    ) : (
                        var_j_153 = arg_check_b_3;
                        assert_pred_j_154 = var_j_153;
                        assert_res_j_155 = assert_pred_j_154 ? (
                                assert_res_true_j_156 = {}
                            ) : (
                                ab_j_157 = abort
                            )
                    ));
            var_j_160 = y;
            appl_j_161 = flatten_fun_j_159 var_j_160)));
appl_j_167 = flatten_fun_j_91 flatten_fun_j_91;
appl_j_169 = appl_j_167 flatten_fun_j_164;
appl_j_172 = flatten_fun_j_164 flatten_fun_j_91;
appl_j_174 = appl_j_172 flatten_fun_j_164;
bool_j_175 = false;
fail_b_5 = bool_j_175;
flatten_fun_j_184 = fun expr_b_4 -> (
    var_j_176 = expr_b_4;
    m_match_bool_j_178 = var_j_176 ~ any;
    m_match_bool_j_181 = var_j_176 ~ int;
    m_match_cond_j_182 = m_match_bool_j_181 ? (
            bool_j_183 = true
        ) : (
            m_match_cond_j_179 = m_match_bool_j_178 ? (
                    var_j_180 = fail_b_5
                ) : (
                    void_j_177 = {}
                )
        ));
flatten_fun_j_186 = fun bj_null_j_9 -> (
    input_j_185 = input);
flatten_fun_j_188 = fun expr_b_6 -> (
    var_j_187 = expr_b_6);
record_j_189 = {checker = flatten_fun_j_184, generator = flatten_fun_j_186, wrapper = flatten_fun_j_188};
proj_j_190 = record_j_189.generator;
int_j_191 = 0;
appl_j_192 = proj_j_190 int_j_191;
x_b_31 = appl_j_192;
bool_j_193 = false;
fail_b_14 = bool_j_193;
flatten_fun_j_202 = fun expr_b_13 -> (
    var_j_194 = expr_b_13;
    m_match_bool_j_196 = var_j_194 ~ any;
    m_match_bool_j_199 = var_j_194 ~ bool;
    m_match_cond_j_200 = m_match_bool_j_199 ? (
            bool_j_201 = true
        ) : (
            m_match_cond_j_197 = m_match_bool_j_196 ? (
                    var_j_198 = fail_b_14
                ) : (
                    void_j_195 = {}
                )
        ));
flatten_fun_j_206 = fun bj_null_j_10 -> (
    int_j_203 = 0;
    input_j_204 = input;
    m_bl_i_329 = int_j_203 ~ int;
    m_br_i_330 = input_j_204 ~ int;
    m_b_i_331 = m_bl_i_329 and m_br_i_330;
    binop_j_205 = m_b_i_331 ? (
            c_binop_i_332 = int_j_203 <= input_j_204
        ) : (
            ab_i_333 = abort
        ));
flatten_fun_j_208 = fun expr_b_15 -> (
    var_j_207 = expr_b_15);
record_j_209 = {checker = flatten_fun_j_202, generator = flatten_fun_j_206, wrapper = flatten_fun_j_208};
proj_j_210 = record_j_209.checker;
appl_j_213 = appl_j_169 x_b_31;
appl_j_214 = proj_j_210 appl_j_213;
check_res_b_30 = appl_j_214;
if_j_269 = check_res_b_30 ? (
        bool_j_216 = false;
        fail_b_17 = bool_j_216;
        flatten_fun_j_225 = fun expr_b_16 -> (
            var_j_217 = expr_b_16;
            m_match_bool_j_219 = var_j_217 ~ any;
            m_match_bool_j_222 = var_j_217 ~ int;
            m_match_cond_j_223 = m_match_bool_j_222 ? (
                    bool_j_224 = true
                ) : (
                    m_match_cond_j_220 = m_match_bool_j_219 ? (
                            var_j_221 = fail_b_17
                        ) : (
                            void_j_218 = {}
                        )
                ));
        flatten_fun_j_227 = fun bj_null_j_11 -> (
            input_j_226 = input);
        flatten_fun_j_229 = fun expr_b_18 -> (
            var_j_228 = expr_b_18);
        record_j_230 = {checker = flatten_fun_j_225, generator = flatten_fun_j_227, wrapper = flatten_fun_j_229};
        proj_j_231 = record_j_230.generator;
        int_j_232 = 0;
        appl_j_233 = proj_j_231 int_j_232;
        y_b_29 = appl_j_233;
        bool_j_234 = false;
        fail_b_26 = bool_j_234;
        flatten_fun_j_243 = fun expr_b_25 -> (
            var_j_235 = expr_b_25;
            m_match_bool_j_237 = var_j_235 ~ any;
            m_match_bool_j_240 = var_j_235 ~ int;
            m_match_cond_j_241 = m_match_bool_j_240 ? (
                    bool_j_242 = true
                ) : (
                    m_match_cond_j_238 = m_match_bool_j_237 ? (
                            var_j_239 = fail_b_26
                        ) : (
                            void_j_236 = {}
                        )
                ));
        flatten_fun_j_245 = fun bj_null_j_12 -> (
            input_j_244 = input);
        flatten_fun_j_247 = fun expr_b_27 -> (
            var_j_246 = expr_b_27);
        record_j_248 = {checker = flatten_fun_j_243, generator = flatten_fun_j_245, wrapper = flatten_fun_j_247};
        proj_j_249 = record_j_248.checker;
        var_j_250 = appl_j_174;
        var_j_251 = y_b_29;
        appl_j_252 = var_j_250 var_j_251;
        appl_j_253 = proj_j_249 appl_j_252;
        check_res_b_28 = appl_j_253;
        var_j_254 = check_res_b_28;
        if_j_263 = var_j_254 ? (
                var_j_255 = appl_j_169;
                int_j_256 = 1;
                m_i_334 = var_j_255 ~ fun;
                appl_j_257 = m_i_334 ? (
                        c_appl_i_335 = var_j_255 int_j_256
                    ) : (
                        ab_i_336 = abort
                    )
            ) : (
                error_var_j_258 = check_res_b_28;
                assert_pred_j_259 = error_var_j_258;
                assert_res_j_260 = assert_pred_j_259 ? (
                        assert_res_true_j_261 = {}
                    ) : (
                        ab_j_262 = abort
                    )
            )
    ) : (
        error_var_j_264 = check_res_b_30;
        assert_pred_j_265 = error_var_j_264;
        assert_res_j_266 = assert_pred_j_265 ? (
                assert_res_true_j_267 = {}
            ) : (
                ab_j_268 = abort
            )
    );
i_result = if_j_269