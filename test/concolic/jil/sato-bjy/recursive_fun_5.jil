i_first = {};
flatten_fun_j_70 = fun f_j_0 -> (
    flatten_fun_j_69 = fun x -> (
        var_j_6 = f_j_0;
        var_j_7 = f_j_0;
        appl_j_8 = var_j_6 var_j_7;
        f = appl_j_8;
        flatten_fun_j_66 = fun x_b_0 -> (
            int_j_9 = 0;
            input_j_10 = input;
            m_bl_i_120 = int_j_9 ~ int;
            m_br_i_121 = input_j_10 ~ int;
            m_b_i_122 = m_bl_i_120 and m_br_i_121;
            binop_j_11 = m_b_i_122 ? (
                    c_binop_i_123 = int_j_9 < input_j_10
                ) : (
                    ab_i_124 = abort
                );
            if_j_31 = binop_j_11 ? (
                    bool_j_12 = false;
                    fail_b_6 = bool_j_12;
                    flatten_fun_j_21 = fun expr_b_5 -> (
                        var_j_13 = expr_b_5;
                        m_match_bool_j_15 = var_j_13 ~ any;
                        m_match_bool_j_18 = var_j_13 ~ int;
                        m_match_cond_j_19 = m_match_bool_j_18 ? (
                                bool_j_20 = true
                            ) : (
                                m_match_cond_j_16 = m_match_bool_j_15 ? (
                                        var_j_17 = fail_b_6
                                    ) : (
                                        void_j_14 = {}
                                    )
                            ));
                    flatten_fun_j_23 = fun bj_null -> (
                        input_j_22 = input);
                    flatten_fun_j_25 = fun expr_b_7 -> (
                        var_j_24 = expr_b_7);
                    record_j_26 = {checker = flatten_fun_j_21, generator = flatten_fun_j_23, wrapper = flatten_fun_j_25};
                    proj_j_27 = record_j_26.checker;
                    var_j_28 = x_b_0;
                    m_i_125 = proj_j_27 ~ fun;
                    appl_j_29 = m_i_125 ? (
                            c_appl_i_126 = proj_j_27 var_j_28
                        ) : (
                            ab_i_127 = abort
                        )
                ) : (
                    bool_j_30 = true
                );
            arg_check_b_1 = if_j_31;
            var_j_32 = arg_check_b_1;
            if_j_65 = var_j_32 ? (
                    bool_j_33 = false;
                    fail_b_9 = bool_j_33;
                    flatten_fun_j_42 = fun expr_b_8 -> (
                        var_j_34 = expr_b_8;
                        m_match_bool_j_36 = var_j_34 ~ any;
                        m_match_bool_j_39 = var_j_34 ~ int;
                        m_match_cond_j_40 = m_match_bool_j_39 ? (
                                bool_j_41 = true
                            ) : (
                                m_match_cond_j_37 = m_match_bool_j_36 ? (
                                        var_j_38 = fail_b_9
                                    ) : (
                                        void_j_35 = {}
                                    )
                            ));
                    flatten_fun_j_44 = fun bj_null_j_1 -> (
                        input_j_43 = input);
                    flatten_fun_j_46 = fun expr_b_10 -> (
                        var_j_45 = expr_b_10);
                    record_j_47 = {checker = flatten_fun_j_42, generator = flatten_fun_j_44, wrapper = flatten_fun_j_46};
                    proj_j_48 = record_j_47.wrapper;
                    var_j_49 = x;
                    int_j_50 = 0;
                    m_bl_i_128 = var_j_49 ~ int;
                    m_br_i_129 = int_j_50 ~ int;
                    m_b_i_130 = m_bl_i_128 and m_br_i_129;
                    binop_j_51 = m_b_i_130 ? (
                            c_binop_i_131 = var_j_49 == int_j_50
                        ) : (
                            ab_i_132 = abort
                        );
                    m_i_133 = binop_j_51 ~ bool;
                    if_j_58 = m_i_133 ? (
                            c_cond_i_142 = binop_j_51 ? (
                                    bool_j_52 = false
                                ) : (
                                    var_j_53 = f;
                                    var_j_54 = x;
                                    int_j_55 = 1;
                                    m_bl_i_134 = var_j_54 ~ int;
                                    m_br_i_135 = int_j_55 ~ int;
                                    m_b_i_136 = m_bl_i_134 and m_br_i_135;
                                    binop_j_56 = m_b_i_136 ? (
                                            c_binop_i_137 = var_j_54 - int_j_55
                                        ) : (
                                            ab_i_138 = abort
                                        );
                                    m_i_139 = var_j_53 ~ fun;
                                    appl_j_57 = m_i_139 ? (
                                            c_appl_i_140 = var_j_53 binop_j_56
                                        ) : (
                                            ab_i_141 = abort
                                        )
                                )
                        ) : (
                            ab_i_143 = abort
                        );
                    m_i_144 = proj_j_48 ~ fun;
                    appl_j_59 = m_i_144 ? (
                            c_appl_i_145 = proj_j_48 if_j_58
                        ) : (
                            ab_i_146 = abort
                        )
                ) : (
                    var_j_60 = arg_check_b_1;
                    assert_pred_j_61 = var_j_60;
                    assert_res_j_62 = assert_pred_j_61 ? (
                            assert_res_true_j_63 = {}
                        ) : (
                            ab_j_64 = abort
                        )
                ));
        var_j_67 = x;
        appl_j_68 = flatten_fun_j_66 var_j_67));
appl_j_73 = flatten_fun_j_70 flatten_fun_j_70;
bool_j_74 = false;
fail_b_3 = bool_j_74;
flatten_fun_j_83 = fun expr_b_2 -> (
    var_j_75 = expr_b_2;
    m_match_bool_j_77 = var_j_75 ~ any;
    m_match_bool_j_80 = var_j_75 ~ int;
    m_match_cond_j_81 = m_match_bool_j_80 ? (
            bool_j_82 = true
        ) : (
            m_match_cond_j_78 = m_match_bool_j_77 ? (
                    var_j_79 = fail_b_3
                ) : (
                    void_j_76 = {}
                )
        ));
flatten_fun_j_85 = fun bj_null_j_2 -> (
    input_j_84 = input);
flatten_fun_j_87 = fun expr_b_4 -> (
    var_j_86 = expr_b_4);
record_j_88 = {checker = flatten_fun_j_83, generator = flatten_fun_j_85, wrapper = flatten_fun_j_87};
proj_j_89 = record_j_88.generator;
int_j_90 = 0;
appl_j_91 = proj_j_89 int_j_90;
x_b_15 = appl_j_91;
bool_j_92 = false;
fail_b_12 = bool_j_92;
flatten_fun_j_101 = fun expr_b_11 -> (
    var_j_93 = expr_b_11;
    m_match_bool_j_95 = var_j_93 ~ any;
    m_match_bool_j_98 = var_j_93 ~ int;
    m_match_cond_j_99 = m_match_bool_j_98 ? (
            bool_j_100 = true
        ) : (
            m_match_cond_j_96 = m_match_bool_j_95 ? (
                    var_j_97 = fail_b_12
                ) : (
                    void_j_94 = {}
                )
        ));
flatten_fun_j_103 = fun bj_null_j_3 -> (
    input_j_102 = input);
flatten_fun_j_105 = fun expr_b_13 -> (
    var_j_104 = expr_b_13);
record_j_106 = {checker = flatten_fun_j_101, generator = flatten_fun_j_103, wrapper = flatten_fun_j_105};
proj_j_107 = record_j_106.checker;
appl_j_110 = appl_j_73 x_b_15;
appl_j_111 = proj_j_107 appl_j_110;
check_res_b_14 = appl_j_111;
if_j_119 = check_res_b_14 ? (
        var_j_113 = appl_j_73
    ) : (
        error_var_j_114 = check_res_b_14;
        assert_pred_j_115 = error_var_j_114;
        assert_res_j_116 = assert_pred_j_115 ? (
                assert_res_true_j_117 = {}
            ) : (
                ab_j_118 = abort
            )
    );
i_result = if_j_119