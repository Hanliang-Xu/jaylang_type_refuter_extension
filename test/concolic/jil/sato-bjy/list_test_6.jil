i_first = {};
flatten_fun_j_76 = fun expr_b_12 -> (
    bool_j_23 = false;
    lst_fail_b_13 = bool_j_23;
    var_j_24 = expr_b_12;
    m_match_bool_j_26 = var_j_24 ~ any;
    m_match_bool_j_29 = var_j_24 ~ {j_head, j_tail, _};
    m_match_bool_j_73 = var_j_24 ~ {j_empty, _};
    m_match_cond_j_74 = m_match_bool_j_73 ? (
            bool_j_75 = true
        ) : (
            m_match_cond_j_30 = m_match_bool_j_29 ? (
                    bj_underscore = var_j_24.j_head;
                    bj_underscore2 = var_j_24.j_tail;
                    flatten_fun_j_66 = fun test_fun_b_9_j_0 -> (
                        flatten_fun_j_65 = fun test_list_b_10 -> (
                            var_j_31 = test_fun_b_9_j_0;
                            var_j_32 = test_fun_b_9_j_0;
                            appl_j_33 = var_j_31 var_j_32;
                            test_fun_b_9 = appl_j_33;
                            var_j_34 = test_list_b_10;
                            m_match_bool_j_36 = var_j_34 ~ {j_head, j_tail, _};
                            m_match_bool_j_62 = var_j_34 ~ {j_empty, _};
                            m_match_cond_j_63 = m_match_bool_j_62 ? (
                                    bool_j_64 = true
                                ) : (
                                    m_match_cond_j_37 = m_match_bool_j_36 ? (
                                            hd = var_j_34.j_head;
                                            tl = var_j_34.j_tail;
                                            bool_j_38 = false;
                                            fail_b_7 = bool_j_38;
                                            flatten_fun_j_47 = fun expr_b_6 -> (
                                                var_j_39 = expr_b_6;
                                                m_match_bool_j_41 = var_j_39 ~ any;
                                                m_match_bool_j_44 = var_j_39 ~ int;
                                                m_match_cond_j_45 = m_match_bool_j_44 ? (
                                                        bool_j_46 = true
                                                    ) : (
                                                        m_match_cond_j_42 = m_match_bool_j_41 ? (
                                                                var_j_43 = fail_b_7
                                                            ) : (
                                                                void_j_40 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_49 = fun bj_null -> (
                                                input_j_48 = input);
                                            flatten_fun_j_51 = fun expr_b_8 -> (
                                                var_j_50 = expr_b_8);
                                            record_j_52 = {checker = flatten_fun_j_47, generator = flatten_fun_j_49, wrapper = flatten_fun_j_51};
                                            proj_j_53 = record_j_52.checker;
                                            var_j_54 = hd;
                                            appl_j_55 = proj_j_53 var_j_54;
                                            elm_check_b_11 = appl_j_55;
                                            var_j_56 = elm_check_b_11;
                                            if_j_61 = var_j_56 ? (
                                                    var_j_57 = test_fun_b_9;
                                                    var_j_58 = tl;
                                                    appl_j_59 = var_j_57 var_j_58
                                                ) : (
                                                    var_j_60 = elm_check_b_11
                                                )
                                        ) : (
                                            void_j_35 = {}
                                        )
                                )));
                    test_fun_b_9_j_0_j_5 = flatten_fun_j_66;
                    var_j_67 = test_fun_b_9_j_0_j_5;
                    var_j_68 = test_fun_b_9_j_0_j_5;
                    appl_j_69 = var_j_67 var_j_68;
                    test_fun_b_9_j_4 = appl_j_69;
                    var_j_70 = test_fun_b_9_j_4;
                    var_j_71 = expr_b_12;
                    appl_j_72 = var_j_70 var_j_71
                ) : (
                    m_match_cond_j_27 = m_match_bool_j_26 ? (
                            var_j_28 = lst_fail_b_13
                        ) : (
                            void_j_25 = {}
                        )
                )
        ));
flatten_fun_j_127 = fun bj_null_j_10 -> (
    flatten_fun_j_113 = fun list_maker_b_4_j_1 -> (
        flatten_fun_j_112 = fun len_b_3 -> (
            var_j_77 = list_maker_b_4_j_1;
            var_j_78 = list_maker_b_4_j_1;
            appl_j_79 = var_j_77 var_j_78;
            list_maker_b_4 = appl_j_79;
            var_j_80 = len_b_3;
            int_j_81 = 0;
            binop_j_82 = var_j_80 == int_j_81;
            if_j_111 = binop_j_82 ? (
                    record_j_83 = {};
                    record_j_84 = {j_empty = record_j_83}
                ) : (
                    bool_j_85 = false;
                    fail_b_1 = bool_j_85;
                    flatten_fun_j_94 = fun expr_b_0 -> (
                        var_j_86 = expr_b_0;
                        m_match_bool_j_88 = var_j_86 ~ any;
                        m_match_bool_j_91 = var_j_86 ~ int;
                        m_match_cond_j_92 = m_match_bool_j_91 ? (
                                bool_j_93 = true
                            ) : (
                                m_match_cond_j_89 = m_match_bool_j_88 ? (
                                        var_j_90 = fail_b_1
                                    ) : (
                                        void_j_87 = {}
                                    )
                            ));
                    flatten_fun_j_96 = fun bj_null_j_6 -> (
                        input_j_95 = input);
                    flatten_fun_j_98 = fun expr_b_2 -> (
                        var_j_97 = expr_b_2);
                    record_j_99 = {checker = flatten_fun_j_94, generator = flatten_fun_j_96, wrapper = flatten_fun_j_98};
                    proj_j_100 = record_j_99.generator;
                    int_j_101 = 0;
                    appl_j_102 = proj_j_100 int_j_101;
                    elm_b_5 = appl_j_102;
                    record_j_103 = {};
                    var_j_104 = elm_b_5;
                    var_j_105 = list_maker_b_4;
                    var_j_106 = len_b_3;
                    int_j_107 = 1;
                    binop_j_108 = var_j_106 - int_j_107;
                    appl_j_109 = var_j_105 binop_j_108;
                    record_j_110 = {j_cons = record_j_103, j_head = var_j_104, j_tail = appl_j_109}
                )));
    list_maker_b_4_j_1_j_9 = flatten_fun_j_113;
    var_j_114 = list_maker_b_4_j_1_j_9;
    var_j_115 = list_maker_b_4_j_1_j_9;
    appl_j_116 = var_j_114 var_j_115;
    list_maker_b_4_j_8 = appl_j_116;
    input_j_117 = input;
    len_b_3_j_7 = input_j_117;
    int_j_118 = 0;
    var_j_119 = len_b_3_j_7;
    binop_j_120 = int_j_118 <= var_j_119;
    if_j_126 = binop_j_120 ? (
            var_j_121 = list_maker_b_4_j_8;
            var_j_122 = len_b_3_j_7;
            appl_j_123 = var_j_121 var_j_122
        ) : (
            bool_j_124 = false;
            assume_j_125 = assume bool_j_124
        ));
flatten_fun_j_129 = fun expr_b_14 -> (
    var_j_128 = expr_b_14);
record_j_130 = {checker = flatten_fun_j_76, generator = flatten_fun_j_127, wrapper = flatten_fun_j_129};
proj_j_131 = record_j_130.wrapper;
int_j_132 = 1;
record_j_133 = {};
record_j_134 = {j_empty = record_j_133};
record_j_135 = {j_head = int_j_132, j_tail = record_j_134};
m_i_257 = proj_j_131 ~ fun;
appl_j_136 = m_i_257 ? (
        c_appl_i_258 = proj_j_131 record_j_135
    ) : (
        ab_i_259 = abort
    );
int_list_b_30 = appl_j_136;
int_list = int_list_b_30;
flatten_fun_j_191 = fun expr_b_27 -> (
    bool_j_138 = false;
    lst_fail_b_28 = bool_j_138;
    var_j_139 = expr_b_27;
    m_match_bool_j_141 = var_j_139 ~ any;
    m_match_bool_j_144 = var_j_139 ~ {j_head, j_tail, _};
    m_match_bool_j_188 = var_j_139 ~ {j_empty, _};
    m_match_cond_j_189 = m_match_bool_j_188 ? (
            bool_j_190 = true
        ) : (
            m_match_cond_j_145 = m_match_bool_j_144 ? (
                    bj_underscore_j_17 = var_j_139.j_head;
                    bj_underscore2_j_16 = var_j_139.j_tail;
                    flatten_fun_j_181 = fun test_fun_b_24_j_2 -> (
                        flatten_fun_j_180 = fun test_list_b_25 -> (
                            var_j_146 = test_fun_b_24_j_2;
                            var_j_147 = test_fun_b_24_j_2;
                            appl_j_148 = var_j_146 var_j_147;
                            test_fun_b_24 = appl_j_148;
                            var_j_149 = test_list_b_25;
                            m_match_bool_j_151 = var_j_149 ~ {j_head, j_tail, _};
                            m_match_bool_j_177 = var_j_149 ~ {j_empty, _};
                            m_match_cond_j_178 = m_match_bool_j_177 ? (
                                    bool_j_179 = true
                                ) : (
                                    m_match_cond_j_152 = m_match_bool_j_151 ? (
                                            hd_j_13 = var_j_149.j_head;
                                            tl_j_12 = var_j_149.j_tail;
                                            bool_j_153 = false;
                                            fail_b_22 = bool_j_153;
                                            flatten_fun_j_162 = fun expr_b_21 -> (
                                                var_j_154 = expr_b_21;
                                                m_match_bool_j_156 = var_j_154 ~ any;
                                                m_match_bool_j_159 = var_j_154 ~ int;
                                                m_match_cond_j_160 = m_match_bool_j_159 ? (
                                                        bool_j_161 = true
                                                    ) : (
                                                        m_match_cond_j_157 = m_match_bool_j_156 ? (
                                                                var_j_158 = fail_b_22
                                                            ) : (
                                                                void_j_155 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_164 = fun bj_null_j_11 -> (
                                                input_j_163 = input);
                                            flatten_fun_j_166 = fun expr_b_23 -> (
                                                var_j_165 = expr_b_23);
                                            record_j_167 = {checker = flatten_fun_j_162, generator = flatten_fun_j_164, wrapper = flatten_fun_j_166};
                                            proj_j_168 = record_j_167.checker;
                                            var_j_169 = hd_j_13;
                                            appl_j_170 = proj_j_168 var_j_169;
                                            elm_check_b_26 = appl_j_170;
                                            var_j_171 = elm_check_b_26;
                                            if_j_176 = var_j_171 ? (
                                                    var_j_172 = test_fun_b_24;
                                                    var_j_173 = tl_j_12;
                                                    appl_j_174 = var_j_172 var_j_173
                                                ) : (
                                                    var_j_175 = elm_check_b_26
                                                )
                                        ) : (
                                            void_j_150 = {}
                                        )
                                )));
                    test_fun_b_24_j_2_j_15 = flatten_fun_j_181;
                    var_j_182 = test_fun_b_24_j_2_j_15;
                    var_j_183 = test_fun_b_24_j_2_j_15;
                    appl_j_184 = var_j_182 var_j_183;
                    test_fun_b_24_j_14 = appl_j_184;
                    var_j_185 = test_fun_b_24_j_14;
                    var_j_186 = expr_b_27;
                    appl_j_187 = var_j_185 var_j_186
                ) : (
                    m_match_cond_j_142 = m_match_bool_j_141 ? (
                            var_j_143 = lst_fail_b_28
                        ) : (
                            void_j_140 = {}
                        )
                )
        ));
flatten_fun_j_242 = fun bj_null_j_22 -> (
    flatten_fun_j_228 = fun list_maker_b_19_j_3 -> (
        flatten_fun_j_227 = fun len_b_18 -> (
            var_j_192 = list_maker_b_19_j_3;
            var_j_193 = list_maker_b_19_j_3;
            appl_j_194 = var_j_192 var_j_193;
            list_maker_b_19 = appl_j_194;
            var_j_195 = len_b_18;
            int_j_196 = 0;
            binop_j_197 = var_j_195 == int_j_196;
            if_j_226 = binop_j_197 ? (
                    record_j_198 = {};
                    record_j_199 = {j_empty = record_j_198}
                ) : (
                    bool_j_200 = false;
                    fail_b_16 = bool_j_200;
                    flatten_fun_j_209 = fun expr_b_15 -> (
                        var_j_201 = expr_b_15;
                        m_match_bool_j_203 = var_j_201 ~ any;
                        m_match_bool_j_206 = var_j_201 ~ int;
                        m_match_cond_j_207 = m_match_bool_j_206 ? (
                                bool_j_208 = true
                            ) : (
                                m_match_cond_j_204 = m_match_bool_j_203 ? (
                                        var_j_205 = fail_b_16
                                    ) : (
                                        void_j_202 = {}
                                    )
                            ));
                    flatten_fun_j_211 = fun bj_null_j_18 -> (
                        input_j_210 = input);
                    flatten_fun_j_213 = fun expr_b_17 -> (
                        var_j_212 = expr_b_17);
                    record_j_214 = {checker = flatten_fun_j_209, generator = flatten_fun_j_211, wrapper = flatten_fun_j_213};
                    proj_j_215 = record_j_214.generator;
                    int_j_216 = 0;
                    appl_j_217 = proj_j_215 int_j_216;
                    elm_b_20 = appl_j_217;
                    record_j_218 = {};
                    var_j_219 = elm_b_20;
                    var_j_220 = list_maker_b_19;
                    var_j_221 = len_b_18;
                    int_j_222 = 1;
                    binop_j_223 = var_j_221 - int_j_222;
                    appl_j_224 = var_j_220 binop_j_223;
                    record_j_225 = {j_cons = record_j_218, j_head = var_j_219, j_tail = appl_j_224}
                )));
    list_maker_b_19_j_3_j_21 = flatten_fun_j_228;
    var_j_229 = list_maker_b_19_j_3_j_21;
    var_j_230 = list_maker_b_19_j_3_j_21;
    appl_j_231 = var_j_229 var_j_230;
    list_maker_b_19_j_20 = appl_j_231;
    input_j_232 = input;
    len_b_18_j_19 = input_j_232;
    int_j_233 = 0;
    var_j_234 = len_b_18_j_19;
    binop_j_235 = int_j_233 <= var_j_234;
    if_j_241 = binop_j_235 ? (
            var_j_236 = list_maker_b_19_j_20;
            var_j_237 = len_b_18_j_19;
            appl_j_238 = var_j_236 var_j_237
        ) : (
            bool_j_239 = false;
            assume_j_240 = assume bool_j_239
        ));
flatten_fun_j_244 = fun expr_b_29 -> (
    var_j_243 = expr_b_29);
record_j_245 = {checker = flatten_fun_j_191, generator = flatten_fun_j_242, wrapper = flatten_fun_j_244};
proj_j_246 = record_j_245.checker;
appl_j_248 = proj_j_246 int_list_b_30;
check_res_b_31 = appl_j_248;
if_j_256 = check_res_b_31 ? (
        var_j_250 = int_list
    ) : (
        error_var_j_251 = check_res_b_31;
        assert_pred_j_252 = error_var_j_251;
        assert_res_j_253 = assert_pred_j_252 ? (
                assert_res_true_j_254 = {}
            ) : (
                ab_j_255 = abort
            )
    );
i_result = if_j_256