i_first = {};
flatten_fun_j_45 = fun expr_b_7 -> (
    bool_j_11 = false;
    fail_b_5 = bool_j_11;
    flatten_fun_j_20 = fun expr_b_4 -> (
        var_j_12 = expr_b_4;
        m_match_bool_j_14 = var_j_12 ~ any;
        m_match_bool_j_17 = var_j_12 ~ int;
        m_match_cond_j_18 = m_match_bool_j_17 ? (
                bool_j_19 = true
            ) : (
                m_match_cond_j_15 = m_match_bool_j_14 ? (
                        var_j_16 = fail_b_5
                    ) : (
                        void_j_13 = {}
                    )
            ));
    flatten_fun_j_22 = fun bj_null -> (
        input_j_21 = input);
    flatten_fun_j_24 = fun expr_b_6 -> (
        var_j_23 = expr_b_6);
    record_j_25 = {checker = flatten_fun_j_20, generator = flatten_fun_j_22, wrapper = flatten_fun_j_24};
    proj_j_26 = record_j_25.checker;
    var_j_27 = expr_b_7;
    appl_j_28 = proj_j_26 var_j_27;
    t_check_b_8 = appl_j_28;
    var_j_29 = t_check_b_8;
    if_j_44 = var_j_29 ? (
            bool_j_30 = false;
            pred_check_b_9 = bool_j_30;
            flatten_fun_j_37 = fun a -> (
                flatten_fun_j_34 = fun b -> (
                    var_j_31 = b;
                    int_j_32 = 0;
                    m_bl_i_166 = var_j_31 ~ int;
                    m_br_i_167 = int_j_32 ~ int;
                    m_b_i_168 = m_bl_i_166 and m_br_i_167;
                    binop_j_33 = m_b_i_168 ? (
                            c_binop_i_169 = var_j_31 < int_j_32
                        ) : (
                            ab_i_170 = abort
                        ));
                var_j_35 = a;
                m_i_171 = flatten_fun_j_34 ~ fun;
                appl_j_36 = m_i_171 ? (
                        c_appl_i_172 = flatten_fun_j_34 var_j_35
                    ) : (
                        ab_i_173 = abort
                    ));
            var_j_38 = expr_b_7;
            appl_j_39 = flatten_fun_j_37 var_j_38;
            if_j_42 = appl_j_39 ? (
                    bool_j_40 = true
                ) : (
                    var_j_41 = pred_check_b_9
                )
        ) : (
            var_j_43 = t_check_b_8
        ));
flatten_fun_j_77 = fun bj_null_j_3 -> (
    bool_j_46 = false;
    fail_b_1 = bool_j_46;
    flatten_fun_j_55 = fun expr_b_0 -> (
        var_j_47 = expr_b_0;
        m_match_bool_j_49 = var_j_47 ~ any;
        m_match_bool_j_52 = var_j_47 ~ int;
        m_match_cond_j_53 = m_match_bool_j_52 ? (
                bool_j_54 = true
            ) : (
                m_match_cond_j_50 = m_match_bool_j_49 ? (
                        var_j_51 = fail_b_1
                    ) : (
                        void_j_48 = {}
                    )
            ));
    flatten_fun_j_57 = fun bj_null_j_0 -> (
        input_j_56 = input);
    flatten_fun_j_59 = fun expr_b_2 -> (
        var_j_58 = expr_b_2);
    record_j_60 = {checker = flatten_fun_j_55, generator = flatten_fun_j_57, wrapper = flatten_fun_j_59};
    proj_j_61 = record_j_60.generator;
    int_j_62 = 0;
    appl_j_63 = proj_j_61 int_j_62;
    candidate_b_3 = appl_j_63;
    flatten_fun_j_70 = fun a_j_2 -> (
        flatten_fun_j_67 = fun b_j_1 -> (
            var_j_64 = b_j_1;
            int_j_65 = 0;
            m_bl_i_174 = var_j_64 ~ int;
            m_br_i_175 = int_j_65 ~ int;
            m_b_i_176 = m_bl_i_174 and m_br_i_175;
            binop_j_66 = m_b_i_176 ? (
                    c_binop_i_177 = var_j_64 < int_j_65
                ) : (
                    ab_i_178 = abort
                ));
        var_j_68 = a_j_2;
        m_i_179 = flatten_fun_j_67 ~ fun;
        appl_j_69 = m_i_179 ? (
                c_appl_i_180 = flatten_fun_j_67 var_j_68
            ) : (
                ab_i_181 = abort
            ));
    var_j_71 = candidate_b_3;
    appl_j_72 = flatten_fun_j_70 var_j_71;
    if_j_76 = appl_j_72 ? (
            var_j_73 = candidate_b_3
        ) : (
            bool_j_74 = false;
            assume_j_75 = assume bool_j_74
        ));
flatten_fun_j_79 = fun expr_b_10 -> (
    var_j_78 = expr_b_10);
record_j_80 = {checker = flatten_fun_j_45, generator = flatten_fun_j_77, wrapper = flatten_fun_j_79};
proj_j_81 = record_j_80.wrapper;
int_j_82 = 1;
m_i_182 = proj_j_81 ~ fun;
appl_j_83 = m_i_182 ? (
        c_appl_i_183 = proj_j_81 int_j_82
    ) : (
        ab_i_184 = abort
    );
x_b_22 = appl_j_83;
x = x_b_22;
flatten_fun_j_119 = fun expr_b_18 -> (
    bool_j_85 = false;
    fail_b_16 = bool_j_85;
    flatten_fun_j_94 = fun expr_b_15 -> (
        var_j_86 = expr_b_15;
        m_match_bool_j_88 = var_j_86 ~ any;
        m_match_bool_j_91 = var_j_86 ~ int;
        m_match_cond_j_92 = m_match_bool_j_91 ? (
                bool_j_93 = true
            ) : (
                m_match_cond_j_89 = m_match_bool_j_88 ? (
                        var_j_90 = fail_b_16
                    ) : (
                        void_j_87 = {}
                    )
            ));
    flatten_fun_j_96 = fun bj_null_j_4 -> (
        input_j_95 = input);
    flatten_fun_j_98 = fun expr_b_17 -> (
        var_j_97 = expr_b_17);
    record_j_99 = {checker = flatten_fun_j_94, generator = flatten_fun_j_96, wrapper = flatten_fun_j_98};
    proj_j_100 = record_j_99.checker;
    var_j_101 = expr_b_18;
    appl_j_102 = proj_j_100 var_j_101;
    t_check_b_19 = appl_j_102;
    var_j_103 = t_check_b_19;
    if_j_118 = var_j_103 ? (
            bool_j_104 = false;
            pred_check_b_20 = bool_j_104;
            flatten_fun_j_111 = fun a_j_6 -> (
                flatten_fun_j_108 = fun b_j_5 -> (
                    var_j_105 = b_j_5;
                    int_j_106 = 0;
                    m_bl_i_185 = var_j_105 ~ int;
                    m_br_i_186 = int_j_106 ~ int;
                    m_b_i_187 = m_bl_i_185 and m_br_i_186;
                    binop_j_107 = m_b_i_187 ? (
                            c_binop_i_188 = var_j_105 < int_j_106
                        ) : (
                            ab_i_189 = abort
                        ));
                var_j_109 = a_j_6;
                m_i_190 = flatten_fun_j_108 ~ fun;
                appl_j_110 = m_i_190 ? (
                        c_appl_i_191 = flatten_fun_j_108 var_j_109
                    ) : (
                        ab_i_192 = abort
                    ));
            var_j_112 = expr_b_18;
            appl_j_113 = flatten_fun_j_111 var_j_112;
            if_j_116 = appl_j_113 ? (
                    bool_j_114 = true
                ) : (
                    var_j_115 = pred_check_b_20
                )
        ) : (
            var_j_117 = t_check_b_19
        ));
flatten_fun_j_151 = fun bj_null_j_10 -> (
    bool_j_120 = false;
    fail_b_12 = bool_j_120;
    flatten_fun_j_129 = fun expr_b_11 -> (
        var_j_121 = expr_b_11;
        m_match_bool_j_123 = var_j_121 ~ any;
        m_match_bool_j_126 = var_j_121 ~ int;
        m_match_cond_j_127 = m_match_bool_j_126 ? (
                bool_j_128 = true
            ) : (
                m_match_cond_j_124 = m_match_bool_j_123 ? (
                        var_j_125 = fail_b_12
                    ) : (
                        void_j_122 = {}
                    )
            ));
    flatten_fun_j_131 = fun bj_null_j_7 -> (
        input_j_130 = input);
    flatten_fun_j_133 = fun expr_b_13 -> (
        var_j_132 = expr_b_13);
    record_j_134 = {checker = flatten_fun_j_129, generator = flatten_fun_j_131, wrapper = flatten_fun_j_133};
    proj_j_135 = record_j_134.generator;
    int_j_136 = 0;
    appl_j_137 = proj_j_135 int_j_136;
    candidate_b_14 = appl_j_137;
    flatten_fun_j_144 = fun a_j_9 -> (
        flatten_fun_j_141 = fun b_j_8 -> (
            var_j_138 = b_j_8;
            int_j_139 = 0;
            m_bl_i_193 = var_j_138 ~ int;
            m_br_i_194 = int_j_139 ~ int;
            m_b_i_195 = m_bl_i_193 and m_br_i_194;
            binop_j_140 = m_b_i_195 ? (
                    c_binop_i_196 = var_j_138 < int_j_139
                ) : (
                    ab_i_197 = abort
                ));
        var_j_142 = a_j_9;
        m_i_198 = flatten_fun_j_141 ~ fun;
        appl_j_143 = m_i_198 ? (
                c_appl_i_199 = flatten_fun_j_141 var_j_142
            ) : (
                ab_i_200 = abort
            ));
    var_j_145 = candidate_b_14;
    appl_j_146 = flatten_fun_j_144 var_j_145;
    if_j_150 = appl_j_146 ? (
            var_j_147 = candidate_b_14
        ) : (
            bool_j_148 = false;
            assume_j_149 = assume bool_j_148
        ));
flatten_fun_j_153 = fun expr_b_21 -> (
    var_j_152 = expr_b_21);
record_j_154 = {checker = flatten_fun_j_119, generator = flatten_fun_j_151, wrapper = flatten_fun_j_153};
proj_j_155 = record_j_154.checker;
appl_j_157 = proj_j_155 x_b_22;
check_res_b_23 = appl_j_157;
if_j_165 = check_res_b_23 ? (
        var_j_159 = x
    ) : (
        error_var_j_160 = check_res_b_23;
        assert_pred_j_161 = error_var_j_160;
        assert_res_j_162 = assert_pred_j_161 ? (
                assert_res_true_j_163 = {}
            ) : (
                ab_j_164 = abort
            )
    );
i_result = if_j_165