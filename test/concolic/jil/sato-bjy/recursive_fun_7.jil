i_first = {};
flatten_fun_j_817 = fun fold_j_4 -> (
    flatten_fun_j_816 = fun acc -> (
        flatten_fun_j_815 = fun foldf -> (
            flatten_fun_j_814 = fun lst -> (
                var_j_82 = fold_j_4;
                var_j_83 = fold_j_4;
                appl_j_84 = var_j_82 var_j_83;
                fold = appl_j_84;
                flatten_fun_j_811 = fun acc_b_4 -> (
                    int_j_85 = 0;
                    input_j_86 = input;
                    m_bl_i_1494 = int_j_85 ~ int;
                    m_br_i_1495 = input_j_86 ~ int;
                    m_b_i_1496 = m_bl_i_1494 and m_br_i_1495;
                    binop_j_87 = m_b_i_1496 ? (
                            c_binop_i_1497 = int_j_85 < input_j_86
                        ) : (
                            ab_i_1498 = abort
                        );
                    if_j_109 = binop_j_87 ? (
                            bool_j_88 = false;
                            fail_b_116 = bool_j_88;
                            flatten_fun_j_97 = fun expr_b_115 -> (
                                var_j_89 = expr_b_115;
                                m_match_bool_j_91 = var_j_89 ~ any;
                                m_match_bool_j_94 = var_j_89 ~ bool;
                                m_match_cond_j_95 = m_match_bool_j_94 ? (
                                        bool_j_96 = true
                                    ) : (
                                        m_match_cond_j_92 = m_match_bool_j_91 ? (
                                                var_j_93 = fail_b_116
                                            ) : (
                                                void_j_90 = {}
                                            )
                                    ));
                            flatten_fun_j_101 = fun bj_null -> (
                                int_j_98 = 0;
                                input_j_99 = input;
                                m_bl_i_1499 = int_j_98 ~ int;
                                m_br_i_1500 = input_j_99 ~ int;
                                m_b_i_1501 = m_bl_i_1499 and m_br_i_1500;
                                binop_j_100 = m_b_i_1501 ? (
                                        c_binop_i_1502 = int_j_98 <= input_j_99
                                    ) : (
                                        ab_i_1503 = abort
                                    ));
                            flatten_fun_j_103 = fun expr_b_117 -> (
                                var_j_102 = expr_b_117);
                            record_j_104 = {checker = flatten_fun_j_97, generator = flatten_fun_j_101, wrapper = flatten_fun_j_103};
                            proj_j_105 = record_j_104.checker;
                            var_j_106 = acc_b_4;
                            m_i_1504 = proj_j_105 ~ fun;
                            appl_j_107 = m_i_1504 ? (
                                    c_appl_i_1505 = proj_j_105 var_j_106
                                ) : (
                                    ab_i_1506 = abort
                                )
                        ) : (
                            bool_j_108 = true
                        );
                    arg_check_b_5 = if_j_109;
                    var_j_110 = arg_check_b_5;
                    if_j_810 = var_j_110 ? (
                            flatten_fun_j_802 = fun foldf_b_2 -> (
                                int_j_111 = 0;
                                input_j_112 = input;
                                m_bl_i_1507 = int_j_111 ~ int;
                                m_br_i_1508 = input_j_112 ~ int;
                                m_b_i_1509 = m_bl_i_1507 and m_br_i_1508;
                                binop_j_113 = m_b_i_1509 ? (
                                        c_binop_i_1510 = int_j_111 < input_j_112
                                    ) : (
                                        ab_i_1511 = abort
                                    );
                                if_j_625 = binop_j_113 ? (
                                        flatten_fun_j_278 = fun expr_b_176 -> (
                                            bool_j_114 = false;
                                            fail_b_149 = bool_j_114;
                                            flatten_fun_j_123 = fun expr_b_148 -> (
                                                var_j_115 = expr_b_148;
                                                m_match_bool_j_117 = var_j_115 ~ any;
                                                m_match_bool_j_120 = var_j_115 ~ bool;
                                                m_match_cond_j_121 = m_match_bool_j_120 ? (
                                                        bool_j_122 = true
                                                    ) : (
                                                        m_match_cond_j_118 = m_match_bool_j_117 ? (
                                                                var_j_119 = fail_b_149
                                                            ) : (
                                                                void_j_116 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_127 = fun bj_null_j_5 -> (
                                                int_j_124 = 0;
                                                input_j_125 = input;
                                                m_bl_i_1512 = int_j_124 ~ int;
                                                m_br_i_1513 = input_j_125 ~ int;
                                                m_b_i_1514 = m_bl_i_1512 and m_br_i_1513;
                                                binop_j_126 = m_b_i_1514 ? (
                                                        c_binop_i_1515 = int_j_124 <= input_j_125
                                                    ) : (
                                                        ab_i_1516 = abort
                                                    ));
                                            flatten_fun_j_129 = fun expr_b_150 -> (
                                                var_j_128 = expr_b_150);
                                            record_j_130 = {checker = flatten_fun_j_123, generator = flatten_fun_j_127, wrapper = flatten_fun_j_129};
                                            proj_j_131 = record_j_130.generator;
                                            int_j_132 = 0;
                                            appl_j_133 = proj_j_131 int_j_132;
                                            arg_assert_b_177 = appl_j_133;
                                            var_j_134 = expr_b_176;
                                            var_j_135 = arg_assert_b_177;
                                            appl_j_136 = var_j_134 var_j_135;
                                            fun_ret_b_178 = appl_j_136;
                                            flatten_fun_j_178 = fun expr_b_165 -> (
                                                bool_j_137 = false;
                                                fail_b_160 = bool_j_137;
                                                flatten_fun_j_146 = fun expr_b_159 -> (
                                                    var_j_138 = expr_b_159;
                                                    m_match_bool_j_140 = var_j_138 ~ any;
                                                    m_match_bool_j_143 = var_j_138 ~ int;
                                                    m_match_cond_j_144 = m_match_bool_j_143 ? (
                                                            bool_j_145 = true
                                                        ) : (
                                                            m_match_cond_j_141 = m_match_bool_j_140 ? (
                                                                    var_j_142 = fail_b_160
                                                                ) : (
                                                                    void_j_139 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_148 = fun bj_null_j_6 -> (
                                                    input_j_147 = input);
                                                flatten_fun_j_150 = fun expr_b_161 -> (
                                                    var_j_149 = expr_b_161);
                                                record_j_151 = {checker = flatten_fun_j_146, generator = flatten_fun_j_148, wrapper = flatten_fun_j_150};
                                                proj_j_152 = record_j_151.generator;
                                                int_j_153 = 0;
                                                appl_j_154 = proj_j_152 int_j_153;
                                                arg_assert_b_166 = appl_j_154;
                                                var_j_155 = expr_b_165;
                                                var_j_156 = arg_assert_b_166;
                                                appl_j_157 = var_j_155 var_j_156;
                                                fun_ret_b_167 = appl_j_157;
                                                bool_j_158 = false;
                                                fail_b_163 = bool_j_158;
                                                flatten_fun_j_167 = fun expr_b_162 -> (
                                                    var_j_159 = expr_b_162;
                                                    m_match_bool_j_161 = var_j_159 ~ any;
                                                    m_match_bool_j_164 = var_j_159 ~ bool;
                                                    m_match_cond_j_165 = m_match_bool_j_164 ? (
                                                            bool_j_166 = true
                                                        ) : (
                                                            m_match_cond_j_162 = m_match_bool_j_161 ? (
                                                                    var_j_163 = fail_b_163
                                                                ) : (
                                                                    void_j_160 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_171 = fun bj_null_j_7 -> (
                                                    int_j_168 = 0;
                                                    input_j_169 = input;
                                                    m_bl_i_1517 = int_j_168 ~ int;
                                                    m_br_i_1518 = input_j_169 ~ int;
                                                    m_b_i_1519 = m_bl_i_1517 and m_br_i_1518;
                                                    binop_j_170 = m_b_i_1519 ? (
                                                            c_binop_i_1520 = int_j_168 <= input_j_169
                                                        ) : (
                                                            ab_i_1521 = abort
                                                        ));
                                                flatten_fun_j_173 = fun expr_b_164 -> (
                                                    var_j_172 = expr_b_164);
                                                record_j_174 = {checker = flatten_fun_j_167, generator = flatten_fun_j_171, wrapper = flatten_fun_j_173};
                                                proj_j_175 = record_j_174.checker;
                                                var_j_176 = fun_ret_b_167;
                                                appl_j_177 = proj_j_175 var_j_176);
                                            flatten_fun_j_225 = fun bj_null_j_10 -> (
                                                flatten_fun_j_224 = fun arg_assume_b_157 -> (
                                                    bool_j_179 = false;
                                                    fail_b_152 = bool_j_179;
                                                    flatten_fun_j_188 = fun expr_b_151 -> (
                                                        var_j_180 = expr_b_151;
                                                        m_match_bool_j_182 = var_j_180 ~ any;
                                                        m_match_bool_j_185 = var_j_180 ~ int;
                                                        m_match_cond_j_186 = m_match_bool_j_185 ? (
                                                                bool_j_187 = true
                                                            ) : (
                                                                m_match_cond_j_183 = m_match_bool_j_182 ? (
                                                                        
                                                                    var_j_184 = fail_b_152
                                                                    ) : (
                                                                        
                                                                    void_j_181 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_190 = fun bj_null_j_8 -> (
                                                        input_j_189 = input);
                                                    flatten_fun_j_192 = fun expr_b_153 -> (
                                                        var_j_191 = expr_b_153);
                                                    record_j_193 = {checker = flatten_fun_j_188, generator = flatten_fun_j_190, wrapper = flatten_fun_j_192};
                                                    proj_j_194 = record_j_193.checker;
                                                    var_j_195 = arg_assume_b_157;
                                                    appl_j_196 = proj_j_194 var_j_195;
                                                    if_j_223 = appl_j_196 ? (
                                                            bool_j_197 = false;
                                                            fail_b_155 = bool_j_197;
                                                            flatten_fun_j_206 = fun expr_b_154 -> (
                                                                var_j_198 = expr_b_154;
                                                                m_match_bool_j_200 = var_j_198 ~ any;
                                                                m_match_bool_j_203 = var_j_198 ~ bool;
                                                                m_match_cond_j_204 = m_match_bool_j_203 ? (
                                                                        
                                                                    bool_j_205 = true
                                                                    ) : (
                                                                        
                                                                    m_match_cond_j_201 = m_match_bool_j_200 ? (
                                                                        var_j_202 = fail_b_155
                                                                    ) : (
                                                                        void_j_199 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                            flatten_fun_j_210 = fun bj_null_j_9 -> (
                                                                int_j_207 = 0;
                                                                input_j_208 = input;
                                                                m_bl_i_1522 = int_j_207 ~ int;
                                                                m_br_i_1523 = input_j_208 ~ int;
                                                                m_b_i_1524 = m_bl_i_1522 and m_br_i_1523;
                                                                binop_j_209 = m_b_i_1524 ? (
                                                                        
                                                                    c_binop_i_1525 = int_j_207 <= input_j_208
                                                                    ) : (
                                                                        
                                                                    ab_i_1526 = abort
                                                                    ));
                                                            flatten_fun_j_212 = fun expr_b_156 -> (
                                                                var_j_211 = expr_b_156);
                                                            record_j_213 = 
                                                                {checker = flatten_fun_j_206, generator = flatten_fun_j_210, wrapper = flatten_fun_j_212};
                                                            proj_j_214 = record_j_213.generator;
                                                            int_j_215 = 0;
                                                            appl_j_216 = proj_j_214 int_j_215
                                                        ) : (
                                                            bool_j_217 = false;
                                                            fail_b_158 = bool_j_217;
                                                            var_j_218 = fail_b_158;
                                                            assert_pred_j_219 = var_j_218;
                                                            assert_res_j_220 = assert_pred_j_219 ? (
                                                                    assert_res_true_j_221 = 
                                                                    {}
                                                                ) : (
                                                                    ab_j_222 = abort
                                                                )
                                                        )));
                                            flatten_fun_j_273 = fun expr_b_174 -> (
                                                flatten_fun_j_272 = fun arg_b_175 -> (
                                                    bool_j_226 = false;
                                                    fail_b_169 = bool_j_226;
                                                    flatten_fun_j_235 = fun expr_b_168 -> (
                                                        var_j_227 = expr_b_168;
                                                        m_match_bool_j_229 = var_j_227 ~ any;
                                                        m_match_bool_j_232 = var_j_227 ~ int;
                                                        m_match_cond_j_233 = m_match_bool_j_232 ? (
                                                                bool_j_234 = true
                                                            ) : (
                                                                m_match_cond_j_230 = m_match_bool_j_229 ? (
                                                                        
                                                                    var_j_231 = fail_b_169
                                                                    ) : (
                                                                        
                                                                    void_j_228 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_237 = fun bj_null_j_11 -> (
                                                        input_j_236 = input);
                                                    flatten_fun_j_239 = fun expr_b_170 -> (
                                                        var_j_238 = expr_b_170);
                                                    record_j_240 = {checker = flatten_fun_j_235, generator = flatten_fun_j_237, wrapper = flatten_fun_j_239};
                                                    proj_j_241 = record_j_240.checker;
                                                    var_j_242 = arg_b_175;
                                                    m_i_1527 = proj_j_241 ~ fun;
                                                    appl_j_243 = m_i_1527 ? (
                                                            c_appl_i_1528 = proj_j_241 var_j_242
                                                        ) : (
                                                            ab_i_1529 = abort
                                                        );
                                                    m_i_1530 = appl_j_243 ~ bool;
                                                    if_j_271 = m_i_1530 ? (
                                                            c_cond_i_1542 = appl_j_243 ? (
                                                                    bool_j_244 = false;
                                                                    fail_b_172 = bool_j_244;
                                                                    flatten_fun_j_253 = fun expr_b_171 -> (
                                                                    var_j_245 = expr_b_171;
                                                                    m_match_bool_j_247 = var_j_245 ~ any;
                                                                    m_match_bool_j_250 = var_j_245 ~ bool;
                                                                    m_match_cond_j_251 = m_match_bool_j_250 ? (
                                                                        bool_j_252 = true
                                                                    ) : (
                                                                        m_match_cond_j_248 = m_match_bool_j_247 ? (
                                                                        var_j_249 = fail_b_172
                                                                    ) : (
                                                                        void_j_246 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_257 = fun bj_null_j_12 -> (
                                                                    int_j_254 = 0;
                                                                    input_j_255 = input;
                                                                    m_bl_i_1531 = int_j_254 ~ int;
                                                                    m_br_i_1532 = input_j_255 ~ int;
                                                                    m_b_i_1533 = m_bl_i_1531 and m_br_i_1532;
                                                                    binop_j_256 = m_b_i_1533 ? (
                                                                        c_binop_i_1534 = int_j_254 <= input_j_255
                                                                    ) : (
                                                                        ab_i_1535 = abort
                                                                    ));
                                                                    flatten_fun_j_259 = fun expr_b_173 -> (
                                                                    var_j_258 = expr_b_173);
                                                                    record_j_260 = 
                                                                    {checker = flatten_fun_j_253, generator = flatten_fun_j_257, wrapper = flatten_fun_j_259};
                                                                    proj_j_261 = record_j_260.wrapper;
                                                                    var_j_262 = expr_b_174;
                                                                    var_j_263 = arg_b_175;
                                                                    m_i_1536 = var_j_262 ~ fun;
                                                                    appl_j_264 = m_i_1536 ? (
                                                                        c_appl_i_1537 = var_j_262 var_j_263
                                                                    ) : (
                                                                        ab_i_1538 = abort
                                                                    );
                                                                    m_i_1539 = proj_j_261 ~ fun;
                                                                    appl_j_265 = m_i_1539 ? (
                                                                        c_appl_i_1540 = proj_j_261 appl_j_264
                                                                    ) : (
                                                                        ab_i_1541 = abort
                                                                    )
                                                                ) : (
                                                                    bool_j_266 = false;
                                                                    assert_pred_j_267 = bool_j_266;
                                                                    assert_res_j_268 = assert_pred_j_267 ? (
                                                                        assert_res_true_j_269 = 
                                                                    {}
                                                                    ) : (
                                                                        ab_j_270 = abort
                                                                    )
                                                                )
                                                        ) : (
                                                            ab_i_1543 = abort
                                                        )));
                                            record_j_274 = {checker = flatten_fun_j_178, generator = flatten_fun_j_225, wrapper = flatten_fun_j_273};
                                            proj_j_275 = record_j_274.checker;
                                            var_j_276 = fun_ret_b_178;
                                            appl_j_277 = proj_j_275 var_j_276);
                                        flatten_fun_j_448 = fun bj_null_j_21 -> (
                                            flatten_fun_j_447 = fun arg_assume_b_146 -> (
                                                bool_j_279 = false;
                                                fail_b_119 = bool_j_279;
                                                flatten_fun_j_288 = fun expr_b_118 -> (
                                                    var_j_280 = expr_b_118;
                                                    m_match_bool_j_282 = var_j_280 ~ any;
                                                    m_match_bool_j_285 = var_j_280 ~ bool;
                                                    m_match_cond_j_286 = m_match_bool_j_285 ? (
                                                            bool_j_287 = true
                                                        ) : (
                                                            m_match_cond_j_283 = m_match_bool_j_282 ? (
                                                                    var_j_284 = fail_b_119
                                                                ) : (
                                                                    void_j_281 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_292 = fun bj_null_j_13 -> (
                                                    int_j_289 = 0;
                                                    input_j_290 = input;
                                                    m_bl_i_1544 = int_j_289 ~ int;
                                                    m_br_i_1545 = input_j_290 ~ int;
                                                    m_b_i_1546 = m_bl_i_1544 and m_br_i_1545;
                                                    binop_j_291 = m_b_i_1546 ? (
                                                            c_binop_i_1547 = int_j_289 <= input_j_290
                                                        ) : (
                                                            ab_i_1548 = abort
                                                        ));
                                                flatten_fun_j_294 = fun expr_b_120 -> (
                                                    var_j_293 = expr_b_120);
                                                record_j_295 = {checker = flatten_fun_j_288, generator = flatten_fun_j_292, wrapper = flatten_fun_j_294};
                                                proj_j_296 = record_j_295.checker;
                                                var_j_297 = arg_assume_b_146;
                                                appl_j_298 = proj_j_296 var_j_297;
                                                if_j_446 = appl_j_298 ? (
                                                        flatten_fun_j_340 = fun expr_b_135 -> (
                                                            bool_j_299 = false;
                                                            fail_b_130 = bool_j_299;
                                                            flatten_fun_j_308 = fun expr_b_129 -> (
                                                                var_j_300 = expr_b_129;
                                                                m_match_bool_j_302 = var_j_300 ~ any;
                                                                m_match_bool_j_305 = var_j_300 ~ int;
                                                                m_match_cond_j_306 = m_match_bool_j_305 ? (
                                                                        
                                                                    bool_j_307 = true
                                                                    ) : (
                                                                        
                                                                    m_match_cond_j_303 = m_match_bool_j_302 ? (
                                                                        var_j_304 = fail_b_130
                                                                    ) : (
                                                                        void_j_301 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                            flatten_fun_j_310 = fun bj_null_j_14 -> (
                                                                input_j_309 = input);
                                                            flatten_fun_j_312 = fun expr_b_131 -> (
                                                                var_j_311 = expr_b_131);
                                                            record_j_313 = 
                                                                {checker = flatten_fun_j_308, generator = flatten_fun_j_310, wrapper = flatten_fun_j_312};
                                                            proj_j_314 = record_j_313.generator;
                                                            int_j_315 = 0;
                                                            appl_j_316 = proj_j_314 int_j_315;
                                                            arg_assert_b_136 = appl_j_316;
                                                            var_j_317 = expr_b_135;
                                                            var_j_318 = arg_assert_b_136;
                                                            appl_j_319 = var_j_317 var_j_318;
                                                            fun_ret_b_137 = appl_j_319;
                                                            bool_j_320 = false;
                                                            fail_b_133 = bool_j_320;
                                                            flatten_fun_j_329 = fun expr_b_132 -> (
                                                                var_j_321 = expr_b_132;
                                                                m_match_bool_j_323 = var_j_321 ~ any;
                                                                m_match_bool_j_326 = var_j_321 ~ bool;
                                                                m_match_cond_j_327 = m_match_bool_j_326 ? (
                                                                        
                                                                    bool_j_328 = true
                                                                    ) : (
                                                                        
                                                                    m_match_cond_j_324 = m_match_bool_j_323 ? (
                                                                        var_j_325 = fail_b_133
                                                                    ) : (
                                                                        void_j_322 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                            flatten_fun_j_333 = fun bj_null_j_15 -> (
                                                                int_j_330 = 0;
                                                                input_j_331 = input;
                                                                m_bl_i_1549 = int_j_330 ~ int;
                                                                m_br_i_1550 = input_j_331 ~ int;
                                                                m_b_i_1551 = m_bl_i_1549 and m_br_i_1550;
                                                                binop_j_332 = m_b_i_1551 ? (
                                                                        
                                                                    c_binop_i_1552 = int_j_330 <= input_j_331
                                                                    ) : (
                                                                        
                                                                    ab_i_1553 = abort
                                                                    ));
                                                            flatten_fun_j_335 = fun expr_b_134 -> (
                                                                var_j_334 = expr_b_134);
                                                            record_j_336 = 
                                                                {checker = flatten_fun_j_329, generator = flatten_fun_j_333, wrapper = flatten_fun_j_335};
                                                            proj_j_337 = record_j_336.checker;
                                                            var_j_338 = fun_ret_b_137;
                                                            appl_j_339 = proj_j_337 var_j_338);
                                                        flatten_fun_j_387 = fun bj_null_j_18 -> (
                                                            flatten_fun_j_386 = fun arg_assume_b_127 -> (
                                                                bool_j_341 = false;
                                                                fail_b_122 = bool_j_341;
                                                                flatten_fun_j_350 = fun expr_b_121 -> (
                                                                    var_j_342 = expr_b_121;
                                                                    m_match_bool_j_344 = var_j_342 ~ any;
                                                                    m_match_bool_j_347 = var_j_342 ~ int;
                                                                    m_match_cond_j_348 = m_match_bool_j_347 ? (
                                                                        bool_j_349 = true
                                                                    ) : (
                                                                        m_match_cond_j_345 = m_match_bool_j_344 ? (
                                                                        var_j_346 = fail_b_122
                                                                    ) : (
                                                                        void_j_343 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_352 = fun bj_null_j_16 -> (
                                                                    input_j_351 = input);
                                                                flatten_fun_j_354 = fun expr_b_123 -> (
                                                                    var_j_353 = expr_b_123);
                                                                record_j_355 = 
                                                                    {checker = flatten_fun_j_350, generator = flatten_fun_j_352, wrapper = flatten_fun_j_354};
                                                                proj_j_356 = record_j_355.checker;
                                                                var_j_357 = arg_assume_b_127;
                                                                appl_j_358 = proj_j_356 var_j_357;
                                                                if_j_385 = appl_j_358 ? (
                                                                        
                                                                    bool_j_359 = false;
                                                                    fail_b_125 = bool_j_359;
                                                                    flatten_fun_j_368 = fun expr_b_124 -> (
                                                                    var_j_360 = expr_b_124;
                                                                    m_match_bool_j_362 = var_j_360 ~ any;
                                                                    m_match_bool_j_365 = var_j_360 ~ bool;
                                                                    m_match_cond_j_366 = m_match_bool_j_365 ? (
                                                                        bool_j_367 = true
                                                                    ) : (
                                                                        m_match_cond_j_363 = m_match_bool_j_362 ? (
                                                                        var_j_364 = fail_b_125
                                                                    ) : (
                                                                        void_j_361 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_372 = fun bj_null_j_17 -> (
                                                                    int_j_369 = 0;
                                                                    input_j_370 = input;
                                                                    m_bl_i_1554 = int_j_369 ~ int;
                                                                    m_br_i_1555 = input_j_370 ~ int;
                                                                    m_b_i_1556 = m_bl_i_1554 and m_br_i_1555;
                                                                    binop_j_371 = m_b_i_1556 ? (
                                                                        c_binop_i_1557 = int_j_369 <= input_j_370
                                                                    ) : (
                                                                        ab_i_1558 = abort
                                                                    ));
                                                                    flatten_fun_j_374 = fun expr_b_126 -> (
                                                                    var_j_373 = expr_b_126);
                                                                    record_j_375 = 
                                                                    {checker = flatten_fun_j_368, generator = flatten_fun_j_372, wrapper = flatten_fun_j_374};
                                                                    proj_j_376 = record_j_375.generator;
                                                                    int_j_377 = 0;
                                                                    appl_j_378 = proj_j_376 int_j_377
                                                                    ) : (
                                                                        
                                                                    bool_j_379 = false;
                                                                    fail_b_128 = bool_j_379;
                                                                    var_j_380 = fail_b_128;
                                                                    assert_pred_j_381 = var_j_380;
                                                                    assert_res_j_382 = assert_pred_j_381 ? (
                                                                        assert_res_true_j_383 = 
                                                                    {}
                                                                    ) : (
                                                                        ab_j_384 = abort
                                                                    )
                                                                    )));
                                                        flatten_fun_j_435 = fun expr_b_144 -> (
                                                            flatten_fun_j_434 = fun arg_b_145 -> (
                                                                bool_j_388 = false;
                                                                fail_b_139 = bool_j_388;
                                                                flatten_fun_j_397 = fun expr_b_138 -> (
                                                                    var_j_389 = expr_b_138;
                                                                    m_match_bool_j_391 = var_j_389 ~ any;
                                                                    m_match_bool_j_394 = var_j_389 ~ int;
                                                                    m_match_cond_j_395 = m_match_bool_j_394 ? (
                                                                        bool_j_396 = true
                                                                    ) : (
                                                                        m_match_cond_j_392 = m_match_bool_j_391 ? (
                                                                        var_j_393 = fail_b_139
                                                                    ) : (
                                                                        void_j_390 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_399 = fun bj_null_j_19 -> (
                                                                    input_j_398 = input);
                                                                flatten_fun_j_401 = fun expr_b_140 -> (
                                                                    var_j_400 = expr_b_140);
                                                                record_j_402 = 
                                                                    {checker = flatten_fun_j_397, generator = flatten_fun_j_399, wrapper = flatten_fun_j_401};
                                                                proj_j_403 = record_j_402.checker;
                                                                var_j_404 = arg_b_145;
                                                                m_i_1559 = proj_j_403 ~ fun;
                                                                appl_j_405 = m_i_1559 ? (
                                                                        
                                                                    c_appl_i_1560 = proj_j_403 var_j_404
                                                                    ) : (
                                                                        
                                                                    ab_i_1561 = abort
                                                                    );
                                                                m_i_1562 = appl_j_405 ~ bool;
                                                                if_j_433 = m_i_1562 ? (
                                                                        
                                                                    c_cond_i_1574 = appl_j_405 ? (
                                                                        bool_j_406 = false;
                                                                    fail_b_142 = bool_j_406;
                                                                    flatten_fun_j_415 = fun expr_b_141 -> (
                                                                    var_j_407 = expr_b_141;
                                                                    m_match_bool_j_409 = var_j_407 ~ any;
                                                                    m_match_bool_j_412 = var_j_407 ~ bool;
                                                                    m_match_cond_j_413 = m_match_bool_j_412 ? (
                                                                        bool_j_414 = true
                                                                    ) : (
                                                                        m_match_cond_j_410 = m_match_bool_j_409 ? (
                                                                        var_j_411 = fail_b_142
                                                                    ) : (
                                                                        void_j_408 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_419 = fun bj_null_j_20 -> (
                                                                    int_j_416 = 0;
                                                                    input_j_417 = input;
                                                                    m_bl_i_1563 = int_j_416 ~ int;
                                                                    m_br_i_1564 = input_j_417 ~ int;
                                                                    m_b_i_1565 = m_bl_i_1563 and m_br_i_1564;
                                                                    binop_j_418 = m_b_i_1565 ? (
                                                                        c_binop_i_1566 = int_j_416 <= input_j_417
                                                                    ) : (
                                                                        ab_i_1567 = abort
                                                                    ));
                                                                    flatten_fun_j_421 = fun expr_b_143 -> (
                                                                    var_j_420 = expr_b_143);
                                                                    record_j_422 = 
                                                                    {checker = flatten_fun_j_415, generator = flatten_fun_j_419, wrapper = flatten_fun_j_421};
                                                                    proj_j_423 = record_j_422.wrapper;
                                                                    var_j_424 = expr_b_144;
                                                                    var_j_425 = arg_b_145;
                                                                    m_i_1568 = var_j_424 ~ fun;
                                                                    appl_j_426 = m_i_1568 ? (
                                                                        c_appl_i_1569 = var_j_424 var_j_425
                                                                    ) : (
                                                                        ab_i_1570 = abort
                                                                    );
                                                                    m_i_1571 = proj_j_423 ~ fun;
                                                                    appl_j_427 = m_i_1571 ? (
                                                                        c_appl_i_1572 = proj_j_423 appl_j_426
                                                                    ) : (
                                                                        ab_i_1573 = abort
                                                                    )
                                                                    ) : (
                                                                        bool_j_428 = false;
                                                                    assert_pred_j_429 = bool_j_428;
                                                                    assert_res_j_430 = assert_pred_j_429 ? (
                                                                        assert_res_true_j_431 = 
                                                                    {}
                                                                    ) : (
                                                                        ab_j_432 = abort
                                                                    )
                                                                    )
                                                                    ) : (
                                                                        
                                                                    ab_i_1575 = abort
                                                                    )));
                                                        record_j_436 = 
                                                            {checker = flatten_fun_j_340, generator = flatten_fun_j_387, wrapper = flatten_fun_j_435};
                                                        proj_j_437 = record_j_436.generator;
                                                        int_j_438 = 0;
                                                        appl_j_439 = proj_j_437 int_j_438
                                                    ) : (
                                                        bool_j_440 = false;
                                                        fail_b_147 = bool_j_440;
                                                        var_j_441 = fail_b_147;
                                                        assert_pred_j_442 = var_j_441;
                                                        assert_res_j_443 = assert_pred_j_442 ? (
                                                                assert_res_true_j_444 = 
                                                                    {}
                                                            ) : (
                                                                ab_j_445 = abort
                                                            )
                                                    )));
                                        flatten_fun_j_619 = fun expr_b_207 -> (
                                            flatten_fun_j_618 = fun arg_b_208 -> (
                                                bool_j_449 = false;
                                                fail_b_180 = bool_j_449;
                                                flatten_fun_j_458 = fun expr_b_179 -> (
                                                    var_j_450 = expr_b_179;
                                                    m_match_bool_j_452 = var_j_450 ~ any;
                                                    m_match_bool_j_455 = var_j_450 ~ bool;
                                                    m_match_cond_j_456 = m_match_bool_j_455 ? (
                                                            bool_j_457 = true
                                                        ) : (
                                                            m_match_cond_j_453 = m_match_bool_j_452 ? (
                                                                    var_j_454 = fail_b_180
                                                                ) : (
                                                                    void_j_451 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_462 = fun bj_null_j_22 -> (
                                                    int_j_459 = 0;
                                                    input_j_460 = input;
                                                    m_bl_i_1576 = int_j_459 ~ int;
                                                    m_br_i_1577 = input_j_460 ~ int;
                                                    m_b_i_1578 = m_bl_i_1576 and m_br_i_1577;
                                                    binop_j_461 = m_b_i_1578 ? (
                                                            c_binop_i_1579 = int_j_459 <= input_j_460
                                                        ) : (
                                                            ab_i_1580 = abort
                                                        ));
                                                flatten_fun_j_464 = fun expr_b_181 -> (
                                                    var_j_463 = expr_b_181);
                                                record_j_465 = {checker = flatten_fun_j_458, generator = flatten_fun_j_462, wrapper = flatten_fun_j_464};
                                                proj_j_466 = record_j_465.checker;
                                                var_j_467 = arg_b_208;
                                                m_i_1581 = proj_j_466 ~ fun;
                                                appl_j_468 = m_i_1581 ? (
                                                        c_appl_i_1582 = proj_j_466 var_j_467
                                                    ) : (
                                                        ab_i_1583 = abort
                                                    );
                                                m_i_1584 = appl_j_468 ~ bool;
                                                if_j_617 = m_i_1584 ? (
                                                        c_cond_i_1618 = appl_j_468 ? (
                                                                flatten_fun_j_510 = fun expr_b_196 -> (
                                                                    bool_j_469 = false;
                                                                    fail_b_191 = bool_j_469;
                                                                    flatten_fun_j_478 = fun expr_b_190 -> (
                                                                    var_j_470 = expr_b_190;
                                                                    m_match_bool_j_472 = var_j_470 ~ any;
                                                                    m_match_bool_j_475 = var_j_470 ~ int;
                                                                    m_match_cond_j_476 = m_match_bool_j_475 ? (
                                                                        bool_j_477 = true
                                                                    ) : (
                                                                        m_match_cond_j_473 = m_match_bool_j_472 ? (
                                                                        var_j_474 = fail_b_191
                                                                    ) : (
                                                                        void_j_471 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_480 = fun bj_null_j_23 -> (
                                                                    input_j_479 = input);
                                                                    flatten_fun_j_482 = fun expr_b_192 -> (
                                                                    var_j_481 = expr_b_192);
                                                                    record_j_483 = 
                                                                    {checker = flatten_fun_j_478, generator = flatten_fun_j_480, wrapper = flatten_fun_j_482};
                                                                    proj_j_484 = record_j_483.generator;
                                                                    int_j_485 = 0;
                                                                    appl_j_486 = proj_j_484 int_j_485;
                                                                    arg_assert_b_197 = appl_j_486;
                                                                    var_j_487 = expr_b_196;
                                                                    var_j_488 = arg_assert_b_197;
                                                                    appl_j_489 = var_j_487 var_j_488;
                                                                    fun_ret_b_198 = appl_j_489;
                                                                    bool_j_490 = false;
                                                                    fail_b_194 = bool_j_490;
                                                                    flatten_fun_j_499 = fun expr_b_193 -> (
                                                                    var_j_491 = expr_b_193;
                                                                    m_match_bool_j_493 = var_j_491 ~ any;
                                                                    m_match_bool_j_496 = var_j_491 ~ bool;
                                                                    m_match_cond_j_497 = m_match_bool_j_496 ? (
                                                                        bool_j_498 = true
                                                                    ) : (
                                                                        m_match_cond_j_494 = m_match_bool_j_493 ? (
                                                                        var_j_495 = fail_b_194
                                                                    ) : (
                                                                        void_j_492 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_503 = fun bj_null_j_24 -> (
                                                                    int_j_500 = 0;
                                                                    input_j_501 = input;
                                                                    m_bl_i_1585 = int_j_500 ~ int;
                                                                    m_br_i_1586 = input_j_501 ~ int;
                                                                    m_b_i_1587 = m_bl_i_1585 and m_br_i_1586;
                                                                    binop_j_502 = m_b_i_1587 ? (
                                                                        c_binop_i_1588 = int_j_500 <= input_j_501
                                                                    ) : (
                                                                        ab_i_1589 = abort
                                                                    ));
                                                                    flatten_fun_j_505 = fun expr_b_195 -> (
                                                                    var_j_504 = expr_b_195);
                                                                    record_j_506 = 
                                                                    {checker = flatten_fun_j_499, generator = flatten_fun_j_503, wrapper = flatten_fun_j_505};
                                                                    proj_j_507 = record_j_506.checker;
                                                                    var_j_508 = fun_ret_b_198;
                                                                    appl_j_509 = proj_j_507 var_j_508);
                                                                flatten_fun_j_557 = fun bj_null_j_27 -> (
                                                                    flatten_fun_j_556 = fun arg_assume_b_188 -> (
                                                                    bool_j_511 = false;
                                                                    fail_b_183 = bool_j_511;
                                                                    flatten_fun_j_520 = fun expr_b_182 -> (
                                                                    var_j_512 = expr_b_182;
                                                                    m_match_bool_j_514 = var_j_512 ~ any;
                                                                    m_match_bool_j_517 = var_j_512 ~ int;
                                                                    m_match_cond_j_518 = m_match_bool_j_517 ? (
                                                                        bool_j_519 = true
                                                                    ) : (
                                                                        m_match_cond_j_515 = m_match_bool_j_514 ? (
                                                                        var_j_516 = fail_b_183
                                                                    ) : (
                                                                        void_j_513 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_522 = fun bj_null_j_25 -> (
                                                                    input_j_521 = input);
                                                                    flatten_fun_j_524 = fun expr_b_184 -> (
                                                                    var_j_523 = expr_b_184);
                                                                    record_j_525 = 
                                                                    {checker = flatten_fun_j_520, generator = flatten_fun_j_522, wrapper = flatten_fun_j_524};
                                                                    proj_j_526 = record_j_525.checker;
                                                                    var_j_527 = arg_assume_b_188;
                                                                    appl_j_528 = proj_j_526 var_j_527;
                                                                    if_j_555 = appl_j_528 ? (
                                                                        bool_j_529 = false;
                                                                    fail_b_186 = bool_j_529;
                                                                    flatten_fun_j_538 = fun expr_b_185 -> (
                                                                    var_j_530 = expr_b_185;
                                                                    m_match_bool_j_532 = var_j_530 ~ any;
                                                                    m_match_bool_j_535 = var_j_530 ~ bool;
                                                                    m_match_cond_j_536 = m_match_bool_j_535 ? (
                                                                        bool_j_537 = true
                                                                    ) : (
                                                                        m_match_cond_j_533 = m_match_bool_j_532 ? (
                                                                        var_j_534 = fail_b_186
                                                                    ) : (
                                                                        void_j_531 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_542 = fun bj_null_j_26 -> (
                                                                    int_j_539 = 0;
                                                                    input_j_540 = input;
                                                                    m_bl_i_1590 = int_j_539 ~ int;
                                                                    m_br_i_1591 = input_j_540 ~ int;
                                                                    m_b_i_1592 = m_bl_i_1590 and m_br_i_1591;
                                                                    binop_j_541 = m_b_i_1592 ? (
                                                                        c_binop_i_1593 = int_j_539 <= input_j_540
                                                                    ) : (
                                                                        ab_i_1594 = abort
                                                                    ));
                                                                    flatten_fun_j_544 = fun expr_b_187 -> (
                                                                    var_j_543 = expr_b_187);
                                                                    record_j_545 = 
                                                                    {checker = flatten_fun_j_538, generator = flatten_fun_j_542, wrapper = flatten_fun_j_544};
                                                                    proj_j_546 = record_j_545.generator;
                                                                    int_j_547 = 0;
                                                                    appl_j_548 = proj_j_546 int_j_547
                                                                    ) : (
                                                                        bool_j_549 = false;
                                                                    fail_b_189 = bool_j_549;
                                                                    var_j_550 = fail_b_189;
                                                                    assert_pred_j_551 = var_j_550;
                                                                    assert_res_j_552 = assert_pred_j_551 ? (
                                                                        assert_res_true_j_553 = 
                                                                    {}
                                                                    ) : (
                                                                        ab_j_554 = abort
                                                                    )
                                                                    )));
                                                                flatten_fun_j_605 = fun expr_b_205 -> (
                                                                    flatten_fun_j_604 = fun arg_b_206 -> (
                                                                    bool_j_558 = false;
                                                                    fail_b_200 = bool_j_558;
                                                                    flatten_fun_j_567 = fun expr_b_199 -> (
                                                                    var_j_559 = expr_b_199;
                                                                    m_match_bool_j_561 = var_j_559 ~ any;
                                                                    m_match_bool_j_564 = var_j_559 ~ int;
                                                                    m_match_cond_j_565 = m_match_bool_j_564 ? (
                                                                        bool_j_566 = true
                                                                    ) : (
                                                                        m_match_cond_j_562 = m_match_bool_j_561 ? (
                                                                        var_j_563 = fail_b_200
                                                                    ) : (
                                                                        void_j_560 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_569 = fun bj_null_j_28 -> (
                                                                    input_j_568 = input);
                                                                    flatten_fun_j_571 = fun expr_b_201 -> (
                                                                    var_j_570 = expr_b_201);
                                                                    record_j_572 = 
                                                                    {checker = flatten_fun_j_567, generator = flatten_fun_j_569, wrapper = flatten_fun_j_571};
                                                                    proj_j_573 = record_j_572.checker;
                                                                    var_j_574 = arg_b_206;
                                                                    m_i_1595 = proj_j_573 ~ fun;
                                                                    appl_j_575 = m_i_1595 ? (
                                                                        c_appl_i_1596 = proj_j_573 var_j_574
                                                                    ) : (
                                                                        ab_i_1597 = abort
                                                                    );
                                                                    m_i_1598 = appl_j_575 ~ bool;
                                                                    if_j_603 = m_i_1598 ? (
                                                                        c_cond_i_1610 = appl_j_575 ? (
                                                                        bool_j_576 = false;
                                                                    fail_b_203 = bool_j_576;
                                                                    flatten_fun_j_585 = fun expr_b_202 -> (
                                                                    var_j_577 = expr_b_202;
                                                                    m_match_bool_j_579 = var_j_577 ~ any;
                                                                    m_match_bool_j_582 = var_j_577 ~ bool;
                                                                    m_match_cond_j_583 = m_match_bool_j_582 ? (
                                                                        bool_j_584 = true
                                                                    ) : (
                                                                        m_match_cond_j_580 = m_match_bool_j_579 ? (
                                                                        var_j_581 = fail_b_203
                                                                    ) : (
                                                                        void_j_578 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_589 = fun bj_null_j_29 -> (
                                                                    int_j_586 = 0;
                                                                    input_j_587 = input;
                                                                    m_bl_i_1599 = int_j_586 ~ int;
                                                                    m_br_i_1600 = input_j_587 ~ int;
                                                                    m_b_i_1601 = m_bl_i_1599 and m_br_i_1600;
                                                                    binop_j_588 = m_b_i_1601 ? (
                                                                        c_binop_i_1602 = int_j_586 <= input_j_587
                                                                    ) : (
                                                                        ab_i_1603 = abort
                                                                    ));
                                                                    flatten_fun_j_591 = fun expr_b_204 -> (
                                                                    var_j_590 = expr_b_204);
                                                                    record_j_592 = 
                                                                    {checker = flatten_fun_j_585, generator = flatten_fun_j_589, wrapper = flatten_fun_j_591};
                                                                    proj_j_593 = record_j_592.wrapper;
                                                                    var_j_594 = expr_b_205;
                                                                    var_j_595 = arg_b_206;
                                                                    m_i_1604 = var_j_594 ~ fun;
                                                                    appl_j_596 = m_i_1604 ? (
                                                                        c_appl_i_1605 = var_j_594 var_j_595
                                                                    ) : (
                                                                        ab_i_1606 = abort
                                                                    );
                                                                    m_i_1607 = proj_j_593 ~ fun;
                                                                    appl_j_597 = m_i_1607 ? (
                                                                        c_appl_i_1608 = proj_j_593 appl_j_596
                                                                    ) : (
                                                                        ab_i_1609 = abort
                                                                    )
                                                                    ) : (
                                                                        bool_j_598 = false;
                                                                    assert_pred_j_599 = bool_j_598;
                                                                    assert_res_j_600 = assert_pred_j_599 ? (
                                                                        assert_res_true_j_601 = 
                                                                    {}
                                                                    ) : (
                                                                        ab_j_602 = abort
                                                                    )
                                                                    )
                                                                    ) : (
                                                                        ab_i_1611 = abort
                                                                    )));
                                                                record_j_606 = 
                                                                    {checker = flatten_fun_j_510, generator = flatten_fun_j_557, wrapper = flatten_fun_j_605};
                                                                proj_j_607 = record_j_606.wrapper;
                                                                var_j_608 = expr_b_207;
                                                                var_j_609 = arg_b_208;
                                                                m_i_1612 = var_j_608 ~ fun;
                                                                appl_j_610 = m_i_1612 ? (
                                                                        
                                                                    c_appl_i_1613 = var_j_608 var_j_609
                                                                    ) : (
                                                                        
                                                                    ab_i_1614 = abort
                                                                    );
                                                                m_i_1615 = proj_j_607 ~ fun;
                                                                appl_j_611 = m_i_1615 ? (
                                                                        
                                                                    c_appl_i_1616 = proj_j_607 appl_j_610
                                                                    ) : (
                                                                        
                                                                    ab_i_1617 = abort
                                                                    )
                                                            ) : (
                                                                bool_j_612 = false;
                                                                assert_pred_j_613 = bool_j_612;
                                                                assert_res_j_614 = assert_pred_j_613 ? (
                                                                        
                                                                    assert_res_true_j_615 = 
                                                                    {}
                                                                    ) : (
                                                                        
                                                                    ab_j_616 = abort
                                                                    )
                                                            )
                                                    ) : (
                                                        ab_i_1619 = abort
                                                    )));
                                        record_j_620 = {checker = flatten_fun_j_278, generator = flatten_fun_j_448, wrapper = flatten_fun_j_619};
                                        proj_j_621 = record_j_620.checker;
                                        var_j_622 = foldf_b_2;
                                        m_i_1620 = proj_j_621 ~ fun;
                                        appl_j_623 = m_i_1620 ? (
                                                c_appl_i_1621 = proj_j_621 var_j_622
                                            ) : (
                                                ab_i_1622 = abort
                                            )
                                    ) : (
                                        bool_j_624 = true
                                    );
                                arg_check_b_3 = if_j_625;
                                var_j_626 = arg_check_b_3;
                                if_j_801 = var_j_626 ? (
                                        flatten_fun_j_793 = fun lst_b_0 -> (
                                            int_j_627 = 0;
                                            input_j_628 = input;
                                            m_bl_i_1623 = int_j_627 ~ int;
                                            m_br_i_1624 = input_j_628 ~ int;
                                            m_b_i_1625 = m_bl_i_1623 and m_br_i_1624;
                                            binop_j_629 = m_b_i_1625 ? (
                                                    c_binop_i_1626 = int_j_627 < input_j_628
                                                ) : (
                                                    ab_i_1627 = abort
                                                );
                                            if_j_742 = binop_j_629 ? (
                                                    flatten_fun_j_683 = fun expr_b_221 -> (
                                                        bool_j_630 = false;
                                                        lst_fail_b_222 = bool_j_630;
                                                        var_j_631 = expr_b_221;
                                                        m_match_bool_j_633 = var_j_631 ~ any;
                                                        m_match_bool_j_636 = var_j_631 ~ 
                                                            {j_head, j_tail, _};
                                                        m_match_bool_j_680 = var_j_631 ~ 
                                                            {j_empty, _};
                                                        m_match_cond_j_681 = m_match_bool_j_680 ? (
                                                                bool_j_682 = true
                                                            ) : (
                                                                m_match_cond_j_637 = m_match_bool_j_636 ? (
                                                                        
                                                                    bj_underscore = var_j_631.j_head;
                                                                    bj_underscore2 = var_j_631.j_tail;
                                                                    flatten_fun_j_673 = fun test_fun_b_218_j_2 -> (
                                                                    flatten_fun_j_672 = fun test_list_b_219 -> (
                                                                    var_j_638 = test_fun_b_218_j_2;
                                                                    var_j_639 = test_fun_b_218_j_2;
                                                                    appl_j_640 = var_j_638 var_j_639;
                                                                    test_fun_b_218 = appl_j_640;
                                                                    var_j_641 = test_list_b_219;
                                                                    m_match_bool_j_643 = var_j_641 ~ 
                                                                    {j_head, j_tail, _};
                                                                    m_match_bool_j_669 = var_j_641 ~ 
                                                                    {j_empty, _};
                                                                    m_match_cond_j_670 = m_match_bool_j_669 ? (
                                                                        bool_j_671 = true
                                                                    ) : (
                                                                        m_match_cond_j_644 = m_match_bool_j_643 ? (
                                                                        hd = var_j_641.j_head;
                                                                    tl = var_j_641.j_tail;
                                                                    bool_j_645 = false;
                                                                    fail_b_216 = bool_j_645;
                                                                    flatten_fun_j_654 = fun expr_b_215 -> (
                                                                    var_j_646 = expr_b_215;
                                                                    m_match_bool_j_648 = var_j_646 ~ any;
                                                                    m_match_bool_j_651 = var_j_646 ~ int;
                                                                    m_match_cond_j_652 = m_match_bool_j_651 ? (
                                                                        bool_j_653 = true
                                                                    ) : (
                                                                        m_match_cond_j_649 = m_match_bool_j_648 ? (
                                                                        var_j_650 = fail_b_216
                                                                    ) : (
                                                                        void_j_647 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_656 = fun bj_null_j_30 -> (
                                                                    input_j_655 = input);
                                                                    flatten_fun_j_658 = fun expr_b_217 -> (
                                                                    var_j_657 = expr_b_217);
                                                                    record_j_659 = 
                                                                    {checker = flatten_fun_j_654, generator = flatten_fun_j_656, wrapper = flatten_fun_j_658};
                                                                    proj_j_660 = record_j_659.checker;
                                                                    var_j_661 = hd;
                                                                    appl_j_662 = proj_j_660 var_j_661;
                                                                    elm_check_b_220 = appl_j_662;
                                                                    var_j_663 = elm_check_b_220;
                                                                    if_j_668 = var_j_663 ? (
                                                                        var_j_664 = test_fun_b_218;
                                                                    var_j_665 = tl;
                                                                    appl_j_666 = var_j_664 var_j_665
                                                                    ) : (
                                                                        var_j_667 = elm_check_b_220
                                                                    )
                                                                    ) : (
                                                                        void_j_642 = 
                                                                    {}
                                                                    )
                                                                    )));
                                                                    test_fun_b_218_j_2_j_32 = flatten_fun_j_673;
                                                                    var_j_674 = test_fun_b_218_j_2_j_32;
                                                                    var_j_675 = test_fun_b_218_j_2_j_32;
                                                                    appl_j_676 = var_j_674 var_j_675;
                                                                    test_fun_b_218_j_31 = appl_j_676;
                                                                    var_j_677 = test_fun_b_218_j_31;
                                                                    var_j_678 = expr_b_221;
                                                                    appl_j_679 = var_j_677 var_j_678
                                                                    ) : (
                                                                        
                                                                    m_match_cond_j_634 = m_match_bool_j_633 ? (
                                                                        var_j_635 = lst_fail_b_222
                                                                    ) : (
                                                                        void_j_632 = 
                                                                    {}
                                                                    )
                                                                    )
                                                            ));
                                                    flatten_fun_j_734 = fun bj_null_j_37 -> (
                                                        flatten_fun_j_720 = fun list_maker_b_213_j_3 -> (
                                                            flatten_fun_j_719 = fun len_b_212 -> (
                                                                var_j_684 = list_maker_b_213_j_3;
                                                                var_j_685 = list_maker_b_213_j_3;
                                                                appl_j_686 = var_j_684 var_j_685;
                                                                list_maker_b_213 = appl_j_686;
                                                                var_j_687 = len_b_212;
                                                                int_j_688 = 0;
                                                                binop_j_689 = var_j_687 == int_j_688;
                                                                if_j_718 = binop_j_689 ? (
                                                                        
                                                                    record_j_690 = 
                                                                    {};
                                                                    record_j_691 = 
                                                                    {j_empty = record_j_690}
                                                                    ) : (
                                                                        
                                                                    bool_j_692 = false;
                                                                    fail_b_210 = bool_j_692;
                                                                    flatten_fun_j_701 = fun expr_b_209 -> (
                                                                    var_j_693 = expr_b_209;
                                                                    m_match_bool_j_695 = var_j_693 ~ any;
                                                                    m_match_bool_j_698 = var_j_693 ~ int;
                                                                    m_match_cond_j_699 = m_match_bool_j_698 ? (
                                                                        bool_j_700 = true
                                                                    ) : (
                                                                        m_match_cond_j_696 = m_match_bool_j_695 ? (
                                                                        var_j_697 = fail_b_210
                                                                    ) : (
                                                                        void_j_694 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_703 = fun bj_null_j_33 -> (
                                                                    input_j_702 = input);
                                                                    flatten_fun_j_705 = fun expr_b_211 -> (
                                                                    var_j_704 = expr_b_211);
                                                                    record_j_706 = 
                                                                    {checker = flatten_fun_j_701, generator = flatten_fun_j_703, wrapper = flatten_fun_j_705};
                                                                    proj_j_707 = record_j_706.generator;
                                                                    int_j_708 = 0;
                                                                    appl_j_709 = proj_j_707 int_j_708;
                                                                    elm_b_214 = appl_j_709;
                                                                    record_j_710 = 
                                                                    {};
                                                                    var_j_711 = elm_b_214;
                                                                    var_j_712 = list_maker_b_213;
                                                                    var_j_713 = len_b_212;
                                                                    int_j_714 = 1;
                                                                    binop_j_715 = var_j_713 - int_j_714;
                                                                    appl_j_716 = var_j_712 binop_j_715;
                                                                    record_j_717 = 
                                                                    {j_cons = record_j_710, j_head = var_j_711, j_tail = appl_j_716}
                                                                    )));
                                                        list_maker_b_213_j_3_j_36 = flatten_fun_j_720;
                                                        var_j_721 = list_maker_b_213_j_3_j_36;
                                                        var_j_722 = list_maker_b_213_j_3_j_36;
                                                        appl_j_723 = var_j_721 var_j_722;
                                                        list_maker_b_213_j_35 = appl_j_723;
                                                        input_j_724 = input;
                                                        len_b_212_j_34 = input_j_724;
                                                        int_j_725 = 0;
                                                        var_j_726 = len_b_212_j_34;
                                                        binop_j_727 = int_j_725 <= var_j_726;
                                                        if_j_733 = binop_j_727 ? (
                                                                var_j_728 = list_maker_b_213_j_35;
                                                                var_j_729 = len_b_212_j_34;
                                                                appl_j_730 = var_j_728 var_j_729
                                                            ) : (
                                                                bool_j_731 = false;
                                                                assume_j_732 = assume bool_j_731
                                                            ));
                                                    flatten_fun_j_736 = fun expr_b_223 -> (
                                                        var_j_735 = expr_b_223);
                                                    record_j_737 = {checker = flatten_fun_j_683, generator = flatten_fun_j_734, wrapper = flatten_fun_j_736};
                                                    proj_j_738 = record_j_737.checker;
                                                    var_j_739 = lst_b_0;
                                                    m_i_1628 = proj_j_738 ~ fun;
                                                    appl_j_740 = m_i_1628 ? (
                                                            c_appl_i_1629 = proj_j_738 var_j_739
                                                        ) : (
                                                            ab_i_1630 = abort
                                                        )
                                                ) : (
                                                    bool_j_741 = true
                                                );
                                            arg_check_b_1 = if_j_742;
                                            var_j_743 = arg_check_b_1;
                                            if_j_792 = var_j_743 ? (
                                                    bool_j_744 = false;
                                                    fail_b_225 = bool_j_744;
                                                    flatten_fun_j_753 = fun expr_b_224 -> (
                                                        var_j_745 = expr_b_224;
                                                        m_match_bool_j_747 = var_j_745 ~ any;
                                                        m_match_bool_j_750 = var_j_745 ~ int;
                                                        m_match_cond_j_751 = m_match_bool_j_750 ? (
                                                                bool_j_752 = true
                                                            ) : (
                                                                m_match_cond_j_748 = m_match_bool_j_747 ? (
                                                                        
                                                                    var_j_749 = fail_b_225
                                                                    ) : (
                                                                        
                                                                    void_j_746 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_755 = fun bj_null_j_38 -> (
                                                        input_j_754 = input);
                                                    flatten_fun_j_757 = fun expr_b_226 -> (
                                                        var_j_756 = expr_b_226);
                                                    record_j_758 = {checker = flatten_fun_j_753, generator = flatten_fun_j_755, wrapper = flatten_fun_j_757};
                                                    proj_j_759 = record_j_758.wrapper;
                                                    bool_j_760 = false;
                                                    fail_b_227 = bool_j_760;
                                                    var_j_761 = lst;
                                                    m_match_bool_j_763 = var_j_761 ~ 
                                                        {j_head, j_tail, _};
                                                    m_match_bool_j_776 = var_j_761 ~ 
                                                        {j_empty, _};
                                                    m_match_bool_j_779 = var_j_761 ~ 
                                                        {bj_untouched, _};
                                                    m_match_cond_j_780 = m_match_bool_j_779 ? (
                                                            var_j_781 = fail_b_227;
                                                            assert_pred_j_782 = var_j_781;
                                                            assert_res_j_783 = assert_pred_j_782 ? (
                                                                    assert_res_true_j_784 = 
                                                                    {}
                                                                ) : (
                                                                    ab_j_785 = abort
                                                                )
                                                        ) : (
                                                            m_match_cond_j_777 = m_match_bool_j_776 ? (
                                                                    var_j_778 = acc
                                                                ) : (
                                                                    m_match_cond_j_764 = m_match_bool_j_763 ? (
                                                                        hd_j_40 = var_j_761.j_head;
                                                                    tl_j_39 = var_j_761.j_tail;
                                                                    var_j_765 = fold;
                                                                    var_j_766 = foldf;
                                                                    var_j_767 = acc;
                                                                    m_i_1631 = var_j_766 ~ fun;
                                                                    appl_j_768 = m_i_1631 ? (
                                                                        c_appl_i_1632 = var_j_766 var_j_767
                                                                    ) : (
                                                                        ab_i_1633 = abort
                                                                    );
                                                                    var_j_769 = hd_j_40;
                                                                    m_i_1634 = appl_j_768 ~ fun;
                                                                    appl_j_770 = m_i_1634 ? (
                                                                        c_appl_i_1635 = appl_j_768 var_j_769
                                                                    ) : (
                                                                        ab_i_1636 = abort
                                                                    );
                                                                    m_i_1637 = var_j_765 ~ fun;
                                                                    appl_j_771 = m_i_1637 ? (
                                                                        c_appl_i_1638 = var_j_765 appl_j_770
                                                                    ) : (
                                                                        ab_i_1639 = abort
                                                                    );
                                                                    var_j_772 = foldf;
                                                                    m_i_1640 = appl_j_771 ~ fun;
                                                                    appl_j_773 = m_i_1640 ? (
                                                                        c_appl_i_1641 = appl_j_771 var_j_772
                                                                    ) : (
                                                                        ab_i_1642 = abort
                                                                    );
                                                                    var_j_774 = tl_j_39;
                                                                    m_i_1643 = appl_j_773 ~ fun;
                                                                    appl_j_775 = m_i_1643 ? (
                                                                        c_appl_i_1644 = appl_j_773 var_j_774
                                                                    ) : (
                                                                        ab_i_1645 = abort
                                                                    )
                                                                    ) : (
                                                                        ab_j_762 = abort
                                                                    )
                                                                )
                                                        );
                                                    m_i_1646 = proj_j_759 ~ fun;
                                                    appl_j_786 = m_i_1646 ? (
                                                            c_appl_i_1647 = proj_j_759 m_match_cond_j_780
                                                        ) : (
                                                            ab_i_1648 = abort
                                                        )
                                                ) : (
                                                    var_j_787 = arg_check_b_1;
                                                    assert_pred_j_788 = var_j_787;
                                                    assert_res_j_789 = assert_pred_j_788 ? (
                                                            assert_res_true_j_790 = 
                                                                {}
                                                        ) : (
                                                            ab_j_791 = abort
                                                        )
                                                ));
                                        var_j_794 = lst;
                                        appl_j_795 = flatten_fun_j_793 var_j_794
                                    ) : (
                                        var_j_796 = arg_check_b_3;
                                        assert_pred_j_797 = var_j_796;
                                        assert_res_j_798 = assert_pred_j_797 ? (
                                                assert_res_true_j_799 = 
                                                    {}
                                            ) : (
                                                ab_j_800 = abort
                                            )
                                    ));
                            var_j_803 = foldf;
                            appl_j_804 = flatten_fun_j_802 var_j_803
                        ) : (
                            var_j_805 = arg_check_b_5;
                            assert_pred_j_806 = var_j_805;
                            assert_res_j_807 = assert_pred_j_806 ? (
                                    assert_res_true_j_808 = {}
                                ) : (
                                    ab_j_809 = abort
                                )
                        ));
                var_j_812 = acc;
                appl_j_813 = flatten_fun_j_811 var_j_812))));
appl_j_820 = flatten_fun_j_817 flatten_fun_j_817;
bool_j_821 = false;
fail_b_7 = bool_j_821;
flatten_fun_j_830 = fun expr_b_6 -> (
    var_j_822 = expr_b_6;
    m_match_bool_j_824 = var_j_822 ~ any;
    m_match_bool_j_827 = var_j_822 ~ bool;
    m_match_cond_j_828 = m_match_bool_j_827 ? (
            bool_j_829 = true
        ) : (
            m_match_cond_j_825 = m_match_bool_j_824 ? (
                    var_j_826 = fail_b_7
                ) : (
                    void_j_823 = {}
                )
        ));
flatten_fun_j_834 = fun bj_null_j_41 -> (
    int_j_831 = 0;
    input_j_832 = input;
    m_bl_i_1649 = int_j_831 ~ int;
    m_br_i_1650 = input_j_832 ~ int;
    m_b_i_1651 = m_bl_i_1649 and m_br_i_1650;
    binop_j_833 = m_b_i_1651 ? (
            c_binop_i_1652 = int_j_831 <= input_j_832
        ) : (
            ab_i_1653 = abort
        ));
flatten_fun_j_836 = fun expr_b_8 -> (
    var_j_835 = expr_b_8);
record_j_837 = {checker = flatten_fun_j_830, generator = flatten_fun_j_834, wrapper = flatten_fun_j_836};
proj_j_838 = record_j_837.generator;
int_j_839 = 0;
appl_j_840 = proj_j_838 int_j_839;
acc_b_234 = appl_j_840;
flatten_fun_j_1005 = fun expr_b_67 -> (
    bool_j_841 = false;
    fail_b_40 = bool_j_841;
    flatten_fun_j_850 = fun expr_b_39 -> (
        var_j_842 = expr_b_39;
        m_match_bool_j_844 = var_j_842 ~ any;
        m_match_bool_j_847 = var_j_842 ~ bool;
        m_match_cond_j_848 = m_match_bool_j_847 ? (
                bool_j_849 = true
            ) : (
                m_match_cond_j_845 = m_match_bool_j_844 ? (
                        var_j_846 = fail_b_40
                    ) : (
                        void_j_843 = {}
                    )
            ));
    flatten_fun_j_854 = fun bj_null_j_42 -> (
        int_j_851 = 0;
        input_j_852 = input;
        m_bl_i_1654 = int_j_851 ~ int;
        m_br_i_1655 = input_j_852 ~ int;
        m_b_i_1656 = m_bl_i_1654 and m_br_i_1655;
        binop_j_853 = m_b_i_1656 ? (
                c_binop_i_1657 = int_j_851 <= input_j_852
            ) : (
                ab_i_1658 = abort
            ));
    flatten_fun_j_856 = fun expr_b_41 -> (
        var_j_855 = expr_b_41);
    record_j_857 = {checker = flatten_fun_j_850, generator = flatten_fun_j_854, wrapper = flatten_fun_j_856};
    proj_j_858 = record_j_857.generator;
    int_j_859 = 0;
    appl_j_860 = proj_j_858 int_j_859;
    arg_assert_b_68 = appl_j_860;
    var_j_861 = expr_b_67;
    var_j_862 = arg_assert_b_68;
    appl_j_863 = var_j_861 var_j_862;
    fun_ret_b_69 = appl_j_863;
    flatten_fun_j_905 = fun expr_b_56 -> (
        bool_j_864 = false;
        fail_b_51 = bool_j_864;
        flatten_fun_j_873 = fun expr_b_50 -> (
            var_j_865 = expr_b_50;
            m_match_bool_j_867 = var_j_865 ~ any;
            m_match_bool_j_870 = var_j_865 ~ int;
            m_match_cond_j_871 = m_match_bool_j_870 ? (
                    bool_j_872 = true
                ) : (
                    m_match_cond_j_868 = m_match_bool_j_867 ? (
                            var_j_869 = fail_b_51
                        ) : (
                            void_j_866 = {}
                        )
                ));
        flatten_fun_j_875 = fun bj_null_j_43 -> (
            input_j_874 = input);
        flatten_fun_j_877 = fun expr_b_52 -> (
            var_j_876 = expr_b_52);
        record_j_878 = {checker = flatten_fun_j_873, generator = flatten_fun_j_875, wrapper = flatten_fun_j_877};
        proj_j_879 = record_j_878.generator;
        int_j_880 = 0;
        appl_j_881 = proj_j_879 int_j_880;
        arg_assert_b_57 = appl_j_881;
        var_j_882 = expr_b_56;
        var_j_883 = arg_assert_b_57;
        appl_j_884 = var_j_882 var_j_883;
        fun_ret_b_58 = appl_j_884;
        bool_j_885 = false;
        fail_b_54 = bool_j_885;
        flatten_fun_j_894 = fun expr_b_53 -> (
            var_j_886 = expr_b_53;
            m_match_bool_j_888 = var_j_886 ~ any;
            m_match_bool_j_891 = var_j_886 ~ bool;
            m_match_cond_j_892 = m_match_bool_j_891 ? (
                    bool_j_893 = true
                ) : (
                    m_match_cond_j_889 = m_match_bool_j_888 ? (
                            var_j_890 = fail_b_54
                        ) : (
                            void_j_887 = {}
                        )
                ));
        flatten_fun_j_898 = fun bj_null_j_44 -> (
            int_j_895 = 0;
            input_j_896 = input;
            m_bl_i_1659 = int_j_895 ~ int;
            m_br_i_1660 = input_j_896 ~ int;
            m_b_i_1661 = m_bl_i_1659 and m_br_i_1660;
            binop_j_897 = m_b_i_1661 ? (
                    c_binop_i_1662 = int_j_895 <= input_j_896
                ) : (
                    ab_i_1663 = abort
                ));
        flatten_fun_j_900 = fun expr_b_55 -> (
            var_j_899 = expr_b_55);
        record_j_901 = {checker = flatten_fun_j_894, generator = flatten_fun_j_898, wrapper = flatten_fun_j_900};
        proj_j_902 = record_j_901.checker;
        var_j_903 = fun_ret_b_58;
        appl_j_904 = proj_j_902 var_j_903);
    flatten_fun_j_952 = fun bj_null_j_47 -> (
        flatten_fun_j_951 = fun arg_assume_b_48 -> (
            bool_j_906 = false;
            fail_b_43 = bool_j_906;
            flatten_fun_j_915 = fun expr_b_42 -> (
                var_j_907 = expr_b_42;
                m_match_bool_j_909 = var_j_907 ~ any;
                m_match_bool_j_912 = var_j_907 ~ int;
                m_match_cond_j_913 = m_match_bool_j_912 ? (
                        bool_j_914 = true
                    ) : (
                        m_match_cond_j_910 = m_match_bool_j_909 ? (
                                var_j_911 = fail_b_43
                            ) : (
                                void_j_908 = {}
                            )
                    ));
            flatten_fun_j_917 = fun bj_null_j_45 -> (
                input_j_916 = input);
            flatten_fun_j_919 = fun expr_b_44 -> (
                var_j_918 = expr_b_44);
            record_j_920 = {checker = flatten_fun_j_915, generator = flatten_fun_j_917, wrapper = flatten_fun_j_919};
            proj_j_921 = record_j_920.checker;
            var_j_922 = arg_assume_b_48;
            appl_j_923 = proj_j_921 var_j_922;
            if_j_950 = appl_j_923 ? (
                    bool_j_924 = false;
                    fail_b_46 = bool_j_924;
                    flatten_fun_j_933 = fun expr_b_45 -> (
                        var_j_925 = expr_b_45;
                        m_match_bool_j_927 = var_j_925 ~ any;
                        m_match_bool_j_930 = var_j_925 ~ bool;
                        m_match_cond_j_931 = m_match_bool_j_930 ? (
                                bool_j_932 = true
                            ) : (
                                m_match_cond_j_928 = m_match_bool_j_927 ? (
                                        var_j_929 = fail_b_46
                                    ) : (
                                        void_j_926 = {}
                                    )
                            ));
                    flatten_fun_j_937 = fun bj_null_j_46 -> (
                        int_j_934 = 0;
                        input_j_935 = input;
                        m_bl_i_1664 = int_j_934 ~ int;
                        m_br_i_1665 = input_j_935 ~ int;
                        m_b_i_1666 = m_bl_i_1664 and m_br_i_1665;
                        binop_j_936 = m_b_i_1666 ? (
                                c_binop_i_1667 = int_j_934 <= input_j_935
                            ) : (
                                ab_i_1668 = abort
                            ));
                    flatten_fun_j_939 = fun expr_b_47 -> (
                        var_j_938 = expr_b_47);
                    record_j_940 = {checker = flatten_fun_j_933, generator = flatten_fun_j_937, wrapper = flatten_fun_j_939};
                    proj_j_941 = record_j_940.generator;
                    int_j_942 = 0;
                    appl_j_943 = proj_j_941 int_j_942
                ) : (
                    bool_j_944 = false;
                    fail_b_49 = bool_j_944;
                    var_j_945 = fail_b_49;
                    assert_pred_j_946 = var_j_945;
                    assert_res_j_947 = assert_pred_j_946 ? (
                            assert_res_true_j_948 = {}
                        ) : (
                            ab_j_949 = abort
                        )
                )));
    flatten_fun_j_1000 = fun expr_b_65 -> (
        flatten_fun_j_999 = fun arg_b_66 -> (
            bool_j_953 = false;
            fail_b_60 = bool_j_953;
            flatten_fun_j_962 = fun expr_b_59 -> (
                var_j_954 = expr_b_59;
                m_match_bool_j_956 = var_j_954 ~ any;
                m_match_bool_j_959 = var_j_954 ~ int;
                m_match_cond_j_960 = m_match_bool_j_959 ? (
                        bool_j_961 = true
                    ) : (
                        m_match_cond_j_957 = m_match_bool_j_956 ? (
                                var_j_958 = fail_b_60
                            ) : (
                                void_j_955 = {}
                            )
                    ));
            flatten_fun_j_964 = fun bj_null_j_48 -> (
                input_j_963 = input);
            flatten_fun_j_966 = fun expr_b_61 -> (
                var_j_965 = expr_b_61);
            record_j_967 = {checker = flatten_fun_j_962, generator = flatten_fun_j_964, wrapper = flatten_fun_j_966};
            proj_j_968 = record_j_967.checker;
            var_j_969 = arg_b_66;
            m_i_1669 = proj_j_968 ~ fun;
            appl_j_970 = m_i_1669 ? (
                    c_appl_i_1670 = proj_j_968 var_j_969
                ) : (
                    ab_i_1671 = abort
                );
            m_i_1672 = appl_j_970 ~ bool;
            if_j_998 = m_i_1672 ? (
                    c_cond_i_1684 = appl_j_970 ? (
                            bool_j_971 = false;
                            fail_b_63 = bool_j_971;
                            flatten_fun_j_980 = fun expr_b_62 -> (
                                var_j_972 = expr_b_62;
                                m_match_bool_j_974 = var_j_972 ~ any;
                                m_match_bool_j_977 = var_j_972 ~ bool;
                                m_match_cond_j_978 = m_match_bool_j_977 ? (
                                        bool_j_979 = true
                                    ) : (
                                        m_match_cond_j_975 = m_match_bool_j_974 ? (
                                                var_j_976 = fail_b_63
                                            ) : (
                                                void_j_973 = {}
                                            )
                                    ));
                            flatten_fun_j_984 = fun bj_null_j_49 -> (
                                int_j_981 = 0;
                                input_j_982 = input;
                                m_bl_i_1673 = int_j_981 ~ int;
                                m_br_i_1674 = input_j_982 ~ int;
                                m_b_i_1675 = m_bl_i_1673 and m_br_i_1674;
                                binop_j_983 = m_b_i_1675 ? (
                                        c_binop_i_1676 = int_j_981 <= input_j_982
                                    ) : (
                                        ab_i_1677 = abort
                                    ));
                            flatten_fun_j_986 = fun expr_b_64 -> (
                                var_j_985 = expr_b_64);
                            record_j_987 = {checker = flatten_fun_j_980, generator = flatten_fun_j_984, wrapper = flatten_fun_j_986};
                            proj_j_988 = record_j_987.wrapper;
                            var_j_989 = expr_b_65;
                            var_j_990 = arg_b_66;
                            m_i_1678 = var_j_989 ~ fun;
                            appl_j_991 = m_i_1678 ? (
                                    c_appl_i_1679 = var_j_989 var_j_990
                                ) : (
                                    ab_i_1680 = abort
                                );
                            m_i_1681 = proj_j_988 ~ fun;
                            appl_j_992 = m_i_1681 ? (
                                    c_appl_i_1682 = proj_j_988 appl_j_991
                                ) : (
                                    ab_i_1683 = abort
                                )
                        ) : (
                            bool_j_993 = false;
                            assert_pred_j_994 = bool_j_993;
                            assert_res_j_995 = assert_pred_j_994 ? (
                                    assert_res_true_j_996 = {}
                                ) : (
                                    ab_j_997 = abort
                                )
                        )
                ) : (
                    ab_i_1685 = abort
                )));
    record_j_1001 = {checker = flatten_fun_j_905, generator = flatten_fun_j_952, wrapper = flatten_fun_j_1000};
    proj_j_1002 = record_j_1001.checker;
    var_j_1003 = fun_ret_b_69;
    appl_j_1004 = proj_j_1002 var_j_1003);
flatten_fun_j_1175 = fun bj_null_j_58 -> (
    flatten_fun_j_1174 = fun arg_assume_b_37 -> (
        bool_j_1006 = false;
        fail_b_10 = bool_j_1006;
        flatten_fun_j_1015 = fun expr_b_9 -> (
            var_j_1007 = expr_b_9;
            m_match_bool_j_1009 = var_j_1007 ~ any;
            m_match_bool_j_1012 = var_j_1007 ~ bool;
            m_match_cond_j_1013 = m_match_bool_j_1012 ? (
                    bool_j_1014 = true
                ) : (
                    m_match_cond_j_1010 = m_match_bool_j_1009 ? (
                            var_j_1011 = fail_b_10
                        ) : (
                            void_j_1008 = {}
                        )
                ));
        flatten_fun_j_1019 = fun bj_null_j_50 -> (
            int_j_1016 = 0;
            input_j_1017 = input;
            m_bl_i_1686 = int_j_1016 ~ int;
            m_br_i_1687 = input_j_1017 ~ int;
            m_b_i_1688 = m_bl_i_1686 and m_br_i_1687;
            binop_j_1018 = m_b_i_1688 ? (
                    c_binop_i_1689 = int_j_1016 <= input_j_1017
                ) : (
                    ab_i_1690 = abort
                ));
        flatten_fun_j_1021 = fun expr_b_11 -> (
            var_j_1020 = expr_b_11);
        record_j_1022 = {checker = flatten_fun_j_1015, generator = flatten_fun_j_1019, wrapper = flatten_fun_j_1021};
        proj_j_1023 = record_j_1022.checker;
        var_j_1024 = arg_assume_b_37;
        appl_j_1025 = proj_j_1023 var_j_1024;
        if_j_1173 = appl_j_1025 ? (
                flatten_fun_j_1067 = fun expr_b_26 -> (
                    bool_j_1026 = false;
                    fail_b_21 = bool_j_1026;
                    flatten_fun_j_1035 = fun expr_b_20 -> (
                        var_j_1027 = expr_b_20;
                        m_match_bool_j_1029 = var_j_1027 ~ any;
                        m_match_bool_j_1032 = var_j_1027 ~ int;
                        m_match_cond_j_1033 = m_match_bool_j_1032 ? (
                                bool_j_1034 = true
                            ) : (
                                m_match_cond_j_1030 = m_match_bool_j_1029 ? (
                                        var_j_1031 = fail_b_21
                                    ) : (
                                        void_j_1028 = {}
                                    )
                            ));
                    flatten_fun_j_1037 = fun bj_null_j_51 -> (
                        input_j_1036 = input);
                    flatten_fun_j_1039 = fun expr_b_22 -> (
                        var_j_1038 = expr_b_22);
                    record_j_1040 = {checker = flatten_fun_j_1035, generator = flatten_fun_j_1037, wrapper = flatten_fun_j_1039};
                    proj_j_1041 = record_j_1040.generator;
                    int_j_1042 = 0;
                    appl_j_1043 = proj_j_1041 int_j_1042;
                    arg_assert_b_27 = appl_j_1043;
                    var_j_1044 = expr_b_26;
                    var_j_1045 = arg_assert_b_27;
                    appl_j_1046 = var_j_1044 var_j_1045;
                    fun_ret_b_28 = appl_j_1046;
                    bool_j_1047 = false;
                    fail_b_24 = bool_j_1047;
                    flatten_fun_j_1056 = fun expr_b_23 -> (
                        var_j_1048 = expr_b_23;
                        m_match_bool_j_1050 = var_j_1048 ~ any;
                        m_match_bool_j_1053 = var_j_1048 ~ bool;
                        m_match_cond_j_1054 = m_match_bool_j_1053 ? (
                                bool_j_1055 = true
                            ) : (
                                m_match_cond_j_1051 = m_match_bool_j_1050 ? (
                                        var_j_1052 = fail_b_24
                                    ) : (
                                        void_j_1049 = {}
                                    )
                            ));
                    flatten_fun_j_1060 = fun bj_null_j_52 -> (
                        int_j_1057 = 0;
                        input_j_1058 = input;
                        m_bl_i_1691 = int_j_1057 ~ int;
                        m_br_i_1692 = input_j_1058 ~ int;
                        m_b_i_1693 = m_bl_i_1691 and m_br_i_1692;
                        binop_j_1059 = m_b_i_1693 ? (
                                c_binop_i_1694 = int_j_1057 <= input_j_1058
                            ) : (
                                ab_i_1695 = abort
                            ));
                    flatten_fun_j_1062 = fun expr_b_25 -> (
                        var_j_1061 = expr_b_25);
                    record_j_1063 = {checker = flatten_fun_j_1056, generator = flatten_fun_j_1060, wrapper = flatten_fun_j_1062};
                    proj_j_1064 = record_j_1063.checker;
                    var_j_1065 = fun_ret_b_28;
                    appl_j_1066 = proj_j_1064 var_j_1065);
                flatten_fun_j_1114 = fun bj_null_j_55 -> (
                    flatten_fun_j_1113 = fun arg_assume_b_18 -> (
                        bool_j_1068 = false;
                        fail_b_13 = bool_j_1068;
                        flatten_fun_j_1077 = fun expr_b_12 -> (
                            var_j_1069 = expr_b_12;
                            m_match_bool_j_1071 = var_j_1069 ~ any;
                            m_match_bool_j_1074 = var_j_1069 ~ int;
                            m_match_cond_j_1075 = m_match_bool_j_1074 ? (
                                    bool_j_1076 = true
                                ) : (
                                    m_match_cond_j_1072 = m_match_bool_j_1071 ? (
                                            var_j_1073 = fail_b_13
                                        ) : (
                                            void_j_1070 = {}
                                        )
                                ));
                        flatten_fun_j_1079 = fun bj_null_j_53 -> (
                            input_j_1078 = input);
                        flatten_fun_j_1081 = fun expr_b_14 -> (
                            var_j_1080 = expr_b_14);
                        record_j_1082 = {checker = flatten_fun_j_1077, generator = flatten_fun_j_1079, wrapper = flatten_fun_j_1081};
                        proj_j_1083 = record_j_1082.checker;
                        var_j_1084 = arg_assume_b_18;
                        appl_j_1085 = proj_j_1083 var_j_1084;
                        if_j_1112 = appl_j_1085 ? (
                                bool_j_1086 = false;
                                fail_b_16 = bool_j_1086;
                                flatten_fun_j_1095 = fun expr_b_15 -> (
                                    var_j_1087 = expr_b_15;
                                    m_match_bool_j_1089 = var_j_1087 ~ any;
                                    m_match_bool_j_1092 = var_j_1087 ~ bool;
                                    m_match_cond_j_1093 = m_match_bool_j_1092 ? (
                                            bool_j_1094 = true
                                        ) : (
                                            m_match_cond_j_1090 = m_match_bool_j_1089 ? (
                                                    var_j_1091 = fail_b_16
                                                ) : (
                                                    void_j_1088 = {}
                                                )
                                        ));
                                flatten_fun_j_1099 = fun bj_null_j_54 -> (
                                    int_j_1096 = 0;
                                    input_j_1097 = input;
                                    m_bl_i_1696 = int_j_1096 ~ int;
                                    m_br_i_1697 = input_j_1097 ~ int;
                                    m_b_i_1698 = m_bl_i_1696 and m_br_i_1697;
                                    binop_j_1098 = m_b_i_1698 ? (
                                            c_binop_i_1699 = int_j_1096 <= input_j_1097
                                        ) : (
                                            ab_i_1700 = abort
                                        ));
                                flatten_fun_j_1101 = fun expr_b_17 -> (
                                    var_j_1100 = expr_b_17);
                                record_j_1102 = {checker = flatten_fun_j_1095, generator = flatten_fun_j_1099, wrapper = flatten_fun_j_1101};
                                proj_j_1103 = record_j_1102.generator;
                                int_j_1104 = 0;
                                appl_j_1105 = proj_j_1103 int_j_1104
                            ) : (
                                bool_j_1106 = false;
                                fail_b_19 = bool_j_1106;
                                var_j_1107 = fail_b_19;
                                assert_pred_j_1108 = var_j_1107;
                                assert_res_j_1109 = assert_pred_j_1108 ? (
                                        assert_res_true_j_1110 = {}
                                    ) : (
                                        ab_j_1111 = abort
                                    )
                            )));
                flatten_fun_j_1162 = fun expr_b_35 -> (
                    flatten_fun_j_1161 = fun arg_b_36 -> (
                        bool_j_1115 = false;
                        fail_b_30 = bool_j_1115;
                        flatten_fun_j_1124 = fun expr_b_29 -> (
                            var_j_1116 = expr_b_29;
                            m_match_bool_j_1118 = var_j_1116 ~ any;
                            m_match_bool_j_1121 = var_j_1116 ~ int;
                            m_match_cond_j_1122 = m_match_bool_j_1121 ? (
                                    bool_j_1123 = true
                                ) : (
                                    m_match_cond_j_1119 = m_match_bool_j_1118 ? (
                                            var_j_1120 = fail_b_30
                                        ) : (
                                            void_j_1117 = {}
                                        )
                                ));
                        flatten_fun_j_1126 = fun bj_null_j_56 -> (
                            input_j_1125 = input);
                        flatten_fun_j_1128 = fun expr_b_31 -> (
                            var_j_1127 = expr_b_31);
                        record_j_1129 = {checker = flatten_fun_j_1124, generator = flatten_fun_j_1126, wrapper = flatten_fun_j_1128};
                        proj_j_1130 = record_j_1129.checker;
                        var_j_1131 = arg_b_36;
                        m_i_1701 = proj_j_1130 ~ fun;
                        appl_j_1132 = m_i_1701 ? (
                                c_appl_i_1702 = proj_j_1130 var_j_1131
                            ) : (
                                ab_i_1703 = abort
                            );
                        m_i_1704 = appl_j_1132 ~ bool;
                        if_j_1160 = m_i_1704 ? (
                                c_cond_i_1716 = appl_j_1132 ? (
                                        bool_j_1133 = false;
                                        fail_b_33 = bool_j_1133;
                                        flatten_fun_j_1142 = fun expr_b_32 -> (
                                            var_j_1134 = expr_b_32;
                                            m_match_bool_j_1136 = var_j_1134 ~ any;
                                            m_match_bool_j_1139 = var_j_1134 ~ bool;
                                            m_match_cond_j_1140 = m_match_bool_j_1139 ? (
                                                    bool_j_1141 = true
                                                ) : (
                                                    m_match_cond_j_1137 = m_match_bool_j_1136 ? (
                                                            var_j_1138 = fail_b_33
                                                        ) : (
                                                            void_j_1135 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_1146 = fun bj_null_j_57 -> (
                                            int_j_1143 = 0;
                                            input_j_1144 = input;
                                            m_bl_i_1705 = int_j_1143 ~ int;
                                            m_br_i_1706 = input_j_1144 ~ int;
                                            m_b_i_1707 = m_bl_i_1705 and m_br_i_1706;
                                            binop_j_1145 = m_b_i_1707 ? (
                                                    c_binop_i_1708 = int_j_1143 <= input_j_1144
                                                ) : (
                                                    ab_i_1709 = abort
                                                ));
                                        flatten_fun_j_1148 = fun expr_b_34 -> (
                                            var_j_1147 = expr_b_34);
                                        record_j_1149 = {checker = flatten_fun_j_1142, generator = flatten_fun_j_1146, wrapper = flatten_fun_j_1148};
                                        proj_j_1150 = record_j_1149.wrapper;
                                        var_j_1151 = expr_b_35;
                                        var_j_1152 = arg_b_36;
                                        m_i_1710 = var_j_1151 ~ fun;
                                        appl_j_1153 = m_i_1710 ? (
                                                c_appl_i_1711 = var_j_1151 var_j_1152
                                            ) : (
                                                ab_i_1712 = abort
                                            );
                                        m_i_1713 = proj_j_1150 ~ fun;
                                        appl_j_1154 = m_i_1713 ? (
                                                c_appl_i_1714 = proj_j_1150 appl_j_1153
                                            ) : (
                                                ab_i_1715 = abort
                                            )
                                    ) : (
                                        bool_j_1155 = false;
                                        assert_pred_j_1156 = bool_j_1155;
                                        assert_res_j_1157 = assert_pred_j_1156 ? (
                                                assert_res_true_j_1158 = 
                                                    {}
                                            ) : (
                                                ab_j_1159 = abort
                                            )
                                    )
                            ) : (
                                ab_i_1717 = abort
                            )));
                record_j_1163 = {checker = flatten_fun_j_1067, generator = flatten_fun_j_1114, wrapper = flatten_fun_j_1162};
                proj_j_1164 = record_j_1163.generator;
                int_j_1165 = 0;
                appl_j_1166 = proj_j_1164 int_j_1165
            ) : (
                bool_j_1167 = false;
                fail_b_38 = bool_j_1167;
                var_j_1168 = fail_b_38;
                assert_pred_j_1169 = var_j_1168;
                assert_res_j_1170 = assert_pred_j_1169 ? (
                        assert_res_true_j_1171 = {}
                    ) : (
                        ab_j_1172 = abort
                    )
            )));
flatten_fun_j_1346 = fun expr_b_98 -> (
    flatten_fun_j_1345 = fun arg_b_99 -> (
        bool_j_1176 = false;
        fail_b_71 = bool_j_1176;
        flatten_fun_j_1185 = fun expr_b_70 -> (
            var_j_1177 = expr_b_70;
            m_match_bool_j_1179 = var_j_1177 ~ any;
            m_match_bool_j_1182 = var_j_1177 ~ bool;
            m_match_cond_j_1183 = m_match_bool_j_1182 ? (
                    bool_j_1184 = true
                ) : (
                    m_match_cond_j_1180 = m_match_bool_j_1179 ? (
                            var_j_1181 = fail_b_71
                        ) : (
                            void_j_1178 = {}
                        )
                ));
        flatten_fun_j_1189 = fun bj_null_j_59 -> (
            int_j_1186 = 0;
            input_j_1187 = input;
            m_bl_i_1718 = int_j_1186 ~ int;
            m_br_i_1719 = input_j_1187 ~ int;
            m_b_i_1720 = m_bl_i_1718 and m_br_i_1719;
            binop_j_1188 = m_b_i_1720 ? (
                    c_binop_i_1721 = int_j_1186 <= input_j_1187
                ) : (
                    ab_i_1722 = abort
                ));
        flatten_fun_j_1191 = fun expr_b_72 -> (
            var_j_1190 = expr_b_72);
        record_j_1192 = {checker = flatten_fun_j_1185, generator = flatten_fun_j_1189, wrapper = flatten_fun_j_1191};
        proj_j_1193 = record_j_1192.checker;
        var_j_1194 = arg_b_99;
        m_i_1723 = proj_j_1193 ~ fun;
        appl_j_1195 = m_i_1723 ? (
                c_appl_i_1724 = proj_j_1193 var_j_1194
            ) : (
                ab_i_1725 = abort
            );
        m_i_1726 = appl_j_1195 ~ bool;
        if_j_1344 = m_i_1726 ? (
                c_cond_i_1760 = appl_j_1195 ? (
                        flatten_fun_j_1237 = fun expr_b_87 -> (
                            bool_j_1196 = false;
                            fail_b_82 = bool_j_1196;
                            flatten_fun_j_1205 = fun expr_b_81 -> (
                                var_j_1197 = expr_b_81;
                                m_match_bool_j_1199 = var_j_1197 ~ any;
                                m_match_bool_j_1202 = var_j_1197 ~ int;
                                m_match_cond_j_1203 = m_match_bool_j_1202 ? (
                                        bool_j_1204 = true
                                    ) : (
                                        m_match_cond_j_1200 = m_match_bool_j_1199 ? (
                                                var_j_1201 = fail_b_82
                                            ) : (
                                                void_j_1198 = {}
                                            )
                                    ));
                            flatten_fun_j_1207 = fun bj_null_j_60 -> (
                                input_j_1206 = input);
                            flatten_fun_j_1209 = fun expr_b_83 -> (
                                var_j_1208 = expr_b_83);
                            record_j_1210 = {checker = flatten_fun_j_1205, generator = flatten_fun_j_1207, wrapper = flatten_fun_j_1209};
                            proj_j_1211 = record_j_1210.generator;
                            int_j_1212 = 0;
                            appl_j_1213 = proj_j_1211 int_j_1212;
                            arg_assert_b_88 = appl_j_1213;
                            var_j_1214 = expr_b_87;
                            var_j_1215 = arg_assert_b_88;
                            appl_j_1216 = var_j_1214 var_j_1215;
                            fun_ret_b_89 = appl_j_1216;
                            bool_j_1217 = false;
                            fail_b_85 = bool_j_1217;
                            flatten_fun_j_1226 = fun expr_b_84 -> (
                                var_j_1218 = expr_b_84;
                                m_match_bool_j_1220 = var_j_1218 ~ any;
                                m_match_bool_j_1223 = var_j_1218 ~ bool;
                                m_match_cond_j_1224 = m_match_bool_j_1223 ? (
                                        bool_j_1225 = true
                                    ) : (
                                        m_match_cond_j_1221 = m_match_bool_j_1220 ? (
                                                var_j_1222 = fail_b_85
                                            ) : (
                                                void_j_1219 = {}
                                            )
                                    ));
                            flatten_fun_j_1230 = fun bj_null_j_61 -> (
                                int_j_1227 = 0;
                                input_j_1228 = input;
                                m_bl_i_1727 = int_j_1227 ~ int;
                                m_br_i_1728 = input_j_1228 ~ int;
                                m_b_i_1729 = m_bl_i_1727 and m_br_i_1728;
                                binop_j_1229 = m_b_i_1729 ? (
                                        c_binop_i_1730 = int_j_1227 <= input_j_1228
                                    ) : (
                                        ab_i_1731 = abort
                                    ));
                            flatten_fun_j_1232 = fun expr_b_86 -> (
                                var_j_1231 = expr_b_86);
                            record_j_1233 = {checker = flatten_fun_j_1226, generator = flatten_fun_j_1230, wrapper = flatten_fun_j_1232};
                            proj_j_1234 = record_j_1233.checker;
                            var_j_1235 = fun_ret_b_89;
                            appl_j_1236 = proj_j_1234 var_j_1235);
                        flatten_fun_j_1284 = fun bj_null_j_64 -> (
                            flatten_fun_j_1283 = fun arg_assume_b_79 -> (
                                bool_j_1238 = false;
                                fail_b_74 = bool_j_1238;
                                flatten_fun_j_1247 = fun expr_b_73 -> (
                                    var_j_1239 = expr_b_73;
                                    m_match_bool_j_1241 = var_j_1239 ~ any;
                                    m_match_bool_j_1244 = var_j_1239 ~ int;
                                    m_match_cond_j_1245 = m_match_bool_j_1244 ? (
                                            bool_j_1246 = true
                                        ) : (
                                            m_match_cond_j_1242 = m_match_bool_j_1241 ? (
                                                    var_j_1243 = fail_b_74
                                                ) : (
                                                    void_j_1240 = {}
                                                )
                                        ));
                                flatten_fun_j_1249 = fun bj_null_j_62 -> (
                                    input_j_1248 = input);
                                flatten_fun_j_1251 = fun expr_b_75 -> (
                                    var_j_1250 = expr_b_75);
                                record_j_1252 = {checker = flatten_fun_j_1247, generator = flatten_fun_j_1249, wrapper = flatten_fun_j_1251};
                                proj_j_1253 = record_j_1252.checker;
                                var_j_1254 = arg_assume_b_79;
                                appl_j_1255 = proj_j_1253 var_j_1254;
                                if_j_1282 = appl_j_1255 ? (
                                        bool_j_1256 = false;
                                        fail_b_77 = bool_j_1256;
                                        flatten_fun_j_1265 = fun expr_b_76 -> (
                                            var_j_1257 = expr_b_76;
                                            m_match_bool_j_1259 = var_j_1257 ~ any;
                                            m_match_bool_j_1262 = var_j_1257 ~ bool;
                                            m_match_cond_j_1263 = m_match_bool_j_1262 ? (
                                                    bool_j_1264 = true
                                                ) : (
                                                    m_match_cond_j_1260 = m_match_bool_j_1259 ? (
                                                            var_j_1261 = fail_b_77
                                                        ) : (
                                                            void_j_1258 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_1269 = fun bj_null_j_63 -> (
                                            int_j_1266 = 0;
                                            input_j_1267 = input;
                                            m_bl_i_1732 = int_j_1266 ~ int;
                                            m_br_i_1733 = input_j_1267 ~ int;
                                            m_b_i_1734 = m_bl_i_1732 and m_br_i_1733;
                                            binop_j_1268 = m_b_i_1734 ? (
                                                    c_binop_i_1735 = int_j_1266 <= input_j_1267
                                                ) : (
                                                    ab_i_1736 = abort
                                                ));
                                        flatten_fun_j_1271 = fun expr_b_78 -> (
                                            var_j_1270 = expr_b_78);
                                        record_j_1272 = {checker = flatten_fun_j_1265, generator = flatten_fun_j_1269, wrapper = flatten_fun_j_1271};
                                        proj_j_1273 = record_j_1272.generator;
                                        int_j_1274 = 0;
                                        appl_j_1275 = proj_j_1273 int_j_1274
                                    ) : (
                                        bool_j_1276 = false;
                                        fail_b_80 = bool_j_1276;
                                        var_j_1277 = fail_b_80;
                                        assert_pred_j_1278 = var_j_1277;
                                        assert_res_j_1279 = assert_pred_j_1278 ? (
                                                assert_res_true_j_1280 = 
                                                    {}
                                            ) : (
                                                ab_j_1281 = abort
                                            )
                                    )));
                        flatten_fun_j_1332 = fun expr_b_96 -> (
                            flatten_fun_j_1331 = fun arg_b_97 -> (
                                bool_j_1285 = false;
                                fail_b_91 = bool_j_1285;
                                flatten_fun_j_1294 = fun expr_b_90 -> (
                                    var_j_1286 = expr_b_90;
                                    m_match_bool_j_1288 = var_j_1286 ~ any;
                                    m_match_bool_j_1291 = var_j_1286 ~ int;
                                    m_match_cond_j_1292 = m_match_bool_j_1291 ? (
                                            bool_j_1293 = true
                                        ) : (
                                            m_match_cond_j_1289 = m_match_bool_j_1288 ? (
                                                    var_j_1290 = fail_b_91
                                                ) : (
                                                    void_j_1287 = {}
                                                )
                                        ));
                                flatten_fun_j_1296 = fun bj_null_j_65 -> (
                                    input_j_1295 = input);
                                flatten_fun_j_1298 = fun expr_b_92 -> (
                                    var_j_1297 = expr_b_92);
                                record_j_1299 = {checker = flatten_fun_j_1294, generator = flatten_fun_j_1296, wrapper = flatten_fun_j_1298};
                                proj_j_1300 = record_j_1299.checker;
                                var_j_1301 = arg_b_97;
                                m_i_1737 = proj_j_1300 ~ fun;
                                appl_j_1302 = m_i_1737 ? (
                                        c_appl_i_1738 = proj_j_1300 var_j_1301
                                    ) : (
                                        ab_i_1739 = abort
                                    );
                                m_i_1740 = appl_j_1302 ~ bool;
                                if_j_1330 = m_i_1740 ? (
                                        c_cond_i_1752 = appl_j_1302 ? (
                                                bool_j_1303 = false;
                                                fail_b_94 = bool_j_1303;
                                                flatten_fun_j_1312 = fun expr_b_93 -> (
                                                    var_j_1304 = expr_b_93;
                                                    m_match_bool_j_1306 = var_j_1304 ~ any;
                                                    m_match_bool_j_1309 = var_j_1304 ~ bool;
                                                    m_match_cond_j_1310 = m_match_bool_j_1309 ? (
                                                            bool_j_1311 = true
                                                        ) : (
                                                            m_match_cond_j_1307 = m_match_bool_j_1306 ? (
                                                                    var_j_1308 = fail_b_94
                                                                ) : (
                                                                    void_j_1305 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_1316 = fun bj_null_j_66 -> (
                                                    int_j_1313 = 0;
                                                    input_j_1314 = input;
                                                    m_bl_i_1741 = int_j_1313 ~ int;
                                                    m_br_i_1742 = input_j_1314 ~ int;
                                                    m_b_i_1743 = m_bl_i_1741 and m_br_i_1742;
                                                    binop_j_1315 = m_b_i_1743 ? (
                                                            c_binop_i_1744 = int_j_1313 <= input_j_1314
                                                        ) : (
                                                            ab_i_1745 = abort
                                                        ));
                                                flatten_fun_j_1318 = fun expr_b_95 -> (
                                                    var_j_1317 = expr_b_95);
                                                record_j_1319 = {checker = flatten_fun_j_1312, generator = flatten_fun_j_1316, wrapper = flatten_fun_j_1318};
                                                proj_j_1320 = record_j_1319.wrapper;
                                                var_j_1321 = expr_b_96;
                                                var_j_1322 = arg_b_97;
                                                m_i_1746 = var_j_1321 ~ fun;
                                                appl_j_1323 = m_i_1746 ? (
                                                        c_appl_i_1747 = var_j_1321 var_j_1322
                                                    ) : (
                                                        ab_i_1748 = abort
                                                    );
                                                m_i_1749 = proj_j_1320 ~ fun;
                                                appl_j_1324 = m_i_1749 ? (
                                                        c_appl_i_1750 = proj_j_1320 appl_j_1323
                                                    ) : (
                                                        ab_i_1751 = abort
                                                    )
                                            ) : (
                                                bool_j_1325 = false;
                                                assert_pred_j_1326 = bool_j_1325;
                                                assert_res_j_1327 = assert_pred_j_1326 ? (
                                                        assert_res_true_j_1328 = 
                                                            {}
                                                    ) : (
                                                        ab_j_1329 = abort
                                                    )
                                            )
                                    ) : (
                                        ab_i_1753 = abort
                                    )));
                        record_j_1333 = {checker = flatten_fun_j_1237, generator = flatten_fun_j_1284, wrapper = flatten_fun_j_1332};
                        proj_j_1334 = record_j_1333.wrapper;
                        var_j_1335 = expr_b_98;
                        var_j_1336 = arg_b_99;
                        m_i_1754 = var_j_1335 ~ fun;
                        appl_j_1337 = m_i_1754 ? (
                                c_appl_i_1755 = var_j_1335 var_j_1336
                            ) : (
                                ab_i_1756 = abort
                            );
                        m_i_1757 = proj_j_1334 ~ fun;
                        appl_j_1338 = m_i_1757 ? (
                                c_appl_i_1758 = proj_j_1334 appl_j_1337
                            ) : (
                                ab_i_1759 = abort
                            )
                    ) : (
                        bool_j_1339 = false;
                        assert_pred_j_1340 = bool_j_1339;
                        assert_res_j_1341 = assert_pred_j_1340 ? (
                                assert_res_true_j_1342 = {}
                            ) : (
                                ab_j_1343 = abort
                            )
                    )
            ) : (
                ab_i_1761 = abort
            )));
record_j_1347 = {checker = flatten_fun_j_1005, generator = flatten_fun_j_1175, wrapper = flatten_fun_j_1346};
proj_j_1348 = record_j_1347.generator;
int_j_1349 = 0;
appl_j_1350 = proj_j_1348 int_j_1349;
foldf_b_233 = appl_j_1350;
flatten_fun_j_1404 = fun expr_b_112 -> (
    bool_j_1351 = false;
    lst_fail_b_113 = bool_j_1351;
    var_j_1352 = expr_b_112;
    m_match_bool_j_1354 = var_j_1352 ~ any;
    m_match_bool_j_1357 = var_j_1352 ~ {j_head, j_tail, _};
    m_match_bool_j_1401 = var_j_1352 ~ {j_empty, _};
    m_match_cond_j_1402 = m_match_bool_j_1401 ? (
            bool_j_1403 = true
        ) : (
            m_match_cond_j_1358 = m_match_bool_j_1357 ? (
                    bj_underscore_j_73 = var_j_1352.j_head;
                    bj_underscore2_j_72 = var_j_1352.j_tail;
                    flatten_fun_j_1394 = fun test_fun_b_109_j_0 -> (
                        flatten_fun_j_1393 = fun test_list_b_110 -> (
                            var_j_1359 = test_fun_b_109_j_0;
                            var_j_1360 = test_fun_b_109_j_0;
                            appl_j_1361 = var_j_1359 var_j_1360;
                            test_fun_b_109 = appl_j_1361;
                            var_j_1362 = test_list_b_110;
                            m_match_bool_j_1364 = var_j_1362 ~ {j_head, j_tail, _};
                            m_match_bool_j_1390 = var_j_1362 ~ {j_empty, _};
                            m_match_cond_j_1391 = m_match_bool_j_1390 ? (
                                    bool_j_1392 = true
                                ) : (
                                    m_match_cond_j_1365 = m_match_bool_j_1364 ? (
                                            hd_j_69 = var_j_1362.j_head;
                                            tl_j_68 = var_j_1362.j_tail;
                                            bool_j_1366 = false;
                                            fail_b_107 = bool_j_1366;
                                            flatten_fun_j_1375 = fun expr_b_106 -> (
                                                var_j_1367 = expr_b_106;
                                                m_match_bool_j_1369 = var_j_1367 ~ any;
                                                m_match_bool_j_1372 = var_j_1367 ~ int;
                                                m_match_cond_j_1373 = m_match_bool_j_1372 ? (
                                                        bool_j_1374 = true
                                                    ) : (
                                                        m_match_cond_j_1370 = m_match_bool_j_1369 ? (
                                                                var_j_1371 = fail_b_107
                                                            ) : (
                                                                void_j_1368 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_1377 = fun bj_null_j_67 -> (
                                                input_j_1376 = input);
                                            flatten_fun_j_1379 = fun expr_b_108 -> (
                                                var_j_1378 = expr_b_108);
                                            record_j_1380 = {checker = flatten_fun_j_1375, generator = flatten_fun_j_1377, wrapper = flatten_fun_j_1379};
                                            proj_j_1381 = record_j_1380.checker;
                                            var_j_1382 = hd_j_69;
                                            appl_j_1383 = proj_j_1381 var_j_1382;
                                            elm_check_b_111 = appl_j_1383;
                                            var_j_1384 = elm_check_b_111;
                                            if_j_1389 = var_j_1384 ? (
                                                    var_j_1385 = test_fun_b_109;
                                                    var_j_1386 = tl_j_68;
                                                    appl_j_1387 = var_j_1385 var_j_1386
                                                ) : (
                                                    var_j_1388 = elm_check_b_111
                                                )
                                        ) : (
                                            void_j_1363 = {}
                                        )
                                )));
                    test_fun_b_109_j_0_j_71 = flatten_fun_j_1394;
                    var_j_1395 = test_fun_b_109_j_0_j_71;
                    var_j_1396 = test_fun_b_109_j_0_j_71;
                    appl_j_1397 = var_j_1395 var_j_1396;
                    test_fun_b_109_j_70 = appl_j_1397;
                    var_j_1398 = test_fun_b_109_j_70;
                    var_j_1399 = expr_b_112;
                    appl_j_1400 = var_j_1398 var_j_1399
                ) : (
                    m_match_cond_j_1355 = m_match_bool_j_1354 ? (
                            var_j_1356 = lst_fail_b_113
                        ) : (
                            void_j_1353 = {}
                        )
                )
        ));
flatten_fun_j_1455 = fun bj_null_j_78 -> (
    flatten_fun_j_1441 = fun list_maker_b_104_j_1 -> (
        flatten_fun_j_1440 = fun len_b_103 -> (
            var_j_1405 = list_maker_b_104_j_1;
            var_j_1406 = list_maker_b_104_j_1;
            appl_j_1407 = var_j_1405 var_j_1406;
            list_maker_b_104 = appl_j_1407;
            var_j_1408 = len_b_103;
            int_j_1409 = 0;
            binop_j_1410 = var_j_1408 == int_j_1409;
            if_j_1439 = binop_j_1410 ? (
                    record_j_1411 = {};
                    record_j_1412 = {j_empty = record_j_1411}
                ) : (
                    bool_j_1413 = false;
                    fail_b_101 = bool_j_1413;
                    flatten_fun_j_1422 = fun expr_b_100 -> (
                        var_j_1414 = expr_b_100;
                        m_match_bool_j_1416 = var_j_1414 ~ any;
                        m_match_bool_j_1419 = var_j_1414 ~ int;
                        m_match_cond_j_1420 = m_match_bool_j_1419 ? (
                                bool_j_1421 = true
                            ) : (
                                m_match_cond_j_1417 = m_match_bool_j_1416 ? (
                                        var_j_1418 = fail_b_101
                                    ) : (
                                        void_j_1415 = {}
                                    )
                            ));
                    flatten_fun_j_1424 = fun bj_null_j_74 -> (
                        input_j_1423 = input);
                    flatten_fun_j_1426 = fun expr_b_102 -> (
                        var_j_1425 = expr_b_102);
                    record_j_1427 = {checker = flatten_fun_j_1422, generator = flatten_fun_j_1424, wrapper = flatten_fun_j_1426};
                    proj_j_1428 = record_j_1427.generator;
                    int_j_1429 = 0;
                    appl_j_1430 = proj_j_1428 int_j_1429;
                    elm_b_105 = appl_j_1430;
                    record_j_1431 = {};
                    var_j_1432 = elm_b_105;
                    var_j_1433 = list_maker_b_104;
                    var_j_1434 = len_b_103;
                    int_j_1435 = 1;
                    binop_j_1436 = var_j_1434 - int_j_1435;
                    appl_j_1437 = var_j_1433 binop_j_1436;
                    record_j_1438 = {j_cons = record_j_1431, j_head = var_j_1432, j_tail = appl_j_1437}
                )));
    list_maker_b_104_j_1_j_77 = flatten_fun_j_1441;
    var_j_1442 = list_maker_b_104_j_1_j_77;
    var_j_1443 = list_maker_b_104_j_1_j_77;
    appl_j_1444 = var_j_1442 var_j_1443;
    list_maker_b_104_j_76 = appl_j_1444;
    input_j_1445 = input;
    len_b_103_j_75 = input_j_1445;
    int_j_1446 = 0;
    var_j_1447 = len_b_103_j_75;
    binop_j_1448 = int_j_1446 <= var_j_1447;
    if_j_1454 = binop_j_1448 ? (
            var_j_1449 = list_maker_b_104_j_76;
            var_j_1450 = len_b_103_j_75;
            appl_j_1451 = var_j_1449 var_j_1450
        ) : (
            bool_j_1452 = false;
            assume_j_1453 = assume bool_j_1452
        ));
flatten_fun_j_1457 = fun expr_b_114 -> (
    var_j_1456 = expr_b_114);
record_j_1458 = {checker = flatten_fun_j_1404, generator = flatten_fun_j_1455, wrapper = flatten_fun_j_1457};
proj_j_1459 = record_j_1458.generator;
int_j_1460 = 0;
appl_j_1461 = proj_j_1459 int_j_1460;
lst_b_232 = appl_j_1461;
bool_j_1462 = false;
fail_b_229 = bool_j_1462;
flatten_fun_j_1471 = fun expr_b_228 -> (
    var_j_1463 = expr_b_228;
    m_match_bool_j_1465 = var_j_1463 ~ any;
    m_match_bool_j_1468 = var_j_1463 ~ int;
    m_match_cond_j_1469 = m_match_bool_j_1468 ? (
            bool_j_1470 = true
        ) : (
            m_match_cond_j_1466 = m_match_bool_j_1465 ? (
                    var_j_1467 = fail_b_229
                ) : (
                    void_j_1464 = {}
                )
        ));
flatten_fun_j_1473 = fun bj_null_j_79 -> (
    input_j_1472 = input);
flatten_fun_j_1475 = fun expr_b_230 -> (
    var_j_1474 = expr_b_230);
record_j_1476 = {checker = flatten_fun_j_1471, generator = flatten_fun_j_1473, wrapper = flatten_fun_j_1475};
proj_j_1477 = record_j_1476.checker;
appl_j_1480 = appl_j_820 acc_b_234;
appl_j_1482 = appl_j_1480 foldf_b_233;
appl_j_1484 = appl_j_1482 lst_b_232;
appl_j_1485 = proj_j_1477 appl_j_1484;
check_res_b_231 = appl_j_1485;
if_j_1493 = check_res_b_231 ? (
        var_j_1487 = appl_j_820
    ) : (
        error_var_j_1488 = check_res_b_231;
        assert_pred_j_1489 = error_var_j_1488;
        assert_res_j_1490 = assert_pred_j_1489 ? (
                assert_res_true_j_1491 = {}
            ) : (
                ab_j_1492 = abort
            )
    );
i_result = if_j_1493