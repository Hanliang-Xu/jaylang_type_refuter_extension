
let a = sig val a : type end
let A = struct let a = abstract end

let b = sig val b : type end
let B = struct let b = abstract end

let ty = sig val t : type end
let TY = struct let t = abstract end

let Ext = sig val T : type val X : T end

let AExt = struct let T = a let X = A end

let FiveArgsExt = struct
  let T = ty -> ty -> ty -> ty -> ty -> sig end
  let X : T =
    let F (_ : ty) (_ : ty) (_ : ty) (_ : ty) (_ : ty) : sig end =
      struct end
    in
    F
end

let Bar (W : a) (X : Ext) (Y : b) (dep Z : Ext) : Z.T = Z.X

let fine = (Bar(A)(FiveArgsExt)(B)(AExt)).a
