(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Polymorphic_types Variants Subtyping Return_type))
  (reasons (Variants Return_type))
  (speed Fast)
  (typing Ill_typed)
) *)
(* subtype of union type *)

let f (type a_) (i : int) (b : bool) (a : a_) : `Int of int | `Bool of bool | `L of list a_ =
  `L (i :: []) (* Error is that `i` is int and is not necessarily 'a; so type of returned list is not always subtype *)
  