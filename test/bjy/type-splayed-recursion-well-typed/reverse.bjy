(***
  (
    (features (Polymorphic_types Recursive_functions))
    (speed Fast)
    (typing Exhausted)
    (flags "-s")
  )
*)

(* A little tougher because of the nested typed statements *)
let reverse (type a) (ls : list a) : list a =
  let rec rev (acc : list a) (ls : list a) : list a =
    match ls with
    | [] -> acc
    | hd :: tl -> rev (hd :: acc) tl
    end
  in
  rev [] ls