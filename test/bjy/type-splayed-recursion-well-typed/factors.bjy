(***
  (
    (features (Refinement_types Dependent_types Recursive_functions))
    (speed Slow) ; not that slow, but like 0.1 seconds is a little slow
    (typing Well_typed)
    (flags "-s")
  )
*)


let pos_int = { i : int | i > 0 }

let factors (n : pos_int) : list int =
  let rec factors (dependent i : pos_int) : list { k : int | k >= i } =
    if i > n then
      []
    else if n % i == 0 then
      i :: factors (i + 1)
    else
      factors (i + 1)
  in
  factors 1