(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Polymorphic_types Recursive_functions Parametric_types Records))
) *)

(* state monad bind *)

let t a b = list b -> { value : a ; store : list b }

let bind (type a_ b_ c_) (x : t a_ b_) (f : a_ -> t c_ b_) : t c_ b_ =
  fun ss ->
    let r = x ss in
    f r.value r.store
