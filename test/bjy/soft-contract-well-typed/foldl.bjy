(***
  (
    (features (Recursive_functions Higher_order_functions))
    (speed Fast) ; b/c type splaying
    (typing Well_typed)
    (flags "-s")
  )
*)

let rec foldl (f : int -> bool -> bool) (z : bool) (xs : list int) : bool =
  match xs with
  | [] -> z
  | x :: rest -> foldl f (f x z) rest
  end