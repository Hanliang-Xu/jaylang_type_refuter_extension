(***
  (features (Polymorphic_types Intersection_types Higher_order_functions Subtyping Type_casing Match))
  (reasons (Polymorphic_types Type_casing))
*)


let (t : type) = ((``Int int) -> int) && ((``Bool bool) -> bool)

let (f : t) = 
  let g (type a_) (x : a_) : a_ =
    match x with
    | `Int i -> i + 1 (* ERROR: type casing on polymorphic type *)
    | `Bool b -> not b
    | _ -> x
    end
  in
  g (* Also error here -- no good type to put here  *)
