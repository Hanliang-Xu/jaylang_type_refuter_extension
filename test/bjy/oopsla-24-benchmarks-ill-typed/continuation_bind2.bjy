# Continuation monad -- improper definition of bind
# Has same well-typed version as continuation_bind1

let t a r = { continuation : (a -> r) -> r }
in

let bind (type a_ b_ r_) (ar_r : t a_ r_) : (a_ -> t b_ r_) -> t r_ b_ = # ERROR: should be `t b_ r_` return type
  fun a_br_r ->
    { continuation = 
      fun br -> ar_r.continuation (fun a -> (a_br_r a).continuation br)
    }
in

let r = { r : int }
in

let x =
  { continuation =
    fun ir ->
      { r = (ir 0).r + 1 } }
in

let f =
  fun i ->
    { continuation =
      fun lir ->
        lir [ i ]
    }
in

let y = bind (int) (List int) (r) x f
in

let z = y.continuation (fun ls ->
  match ls with
  | [] -> { r = 0 }
  | hd :: tl -> { r = hd }
  end
)
in

z

