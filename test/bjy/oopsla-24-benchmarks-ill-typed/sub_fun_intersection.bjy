# subtyping of refined intersection type.

let t = { ((``Int int) -> int) && ((``Bool bool) -> bool) | fun x -> x (`Bool true) }

let t =
  { (v : ``Int int || ``Bool bool) ->
      match v with
      | `Int i -> int
      | `Bool b -> bool
      end
  | fun f -> f (`Bool true)
  }

# this is a subtype of t
# error in this file still gets caught if we have `let (f : t) =`; but it is slower
let f =
  fun x ->
    match x with
    | `Bool b -> true
    | `Int i -> i
    | _ -> 1 :: 2 :: []
    end

let g (h : t) : t =
  let k (i : int) : int =
    h (`Int i)
  in
  k # ERROR: this is not a subtype of t

let x = g f # well-typed function application here. Error is in body of g
