(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Intersection_types Higher_order_functions Subtyping Type_casing Refinement_types Return_type Match))
  (reasons (Intersection_types Return_type))
  (speed Fast)
  (typing Ill_typed)
) *)
(* subtyping of refined intersection type. *)

let t : type = { f : ((`Int of int) -> int) & ((`Bool of bool) -> bool) | f (`Bool true) }

(* this is a subtype of t *)
let f : t =
  fun x ->
    match x with
    | `Bool b -> true
    | `Int i -> i
    | _ -> 1 :: 2 :: []
    end

let g (h : t) : t =
  let k (i : int) : int =
    h (`Int i)
  in
  k (* ERROR: this is not a subtype of t *)

let x = g f (* well-typed function application here. Error is in body of g *)
