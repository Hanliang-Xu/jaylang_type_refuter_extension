(***
  (
    (features (Polymorphic_types Dependent_types Modules First_class_types Higher_order_functions Usage_error))
    (reasons (Dependent_types Modules Usage_error))
    (speed Fast)
    (typing Ill_typed)
    (flags "")
  )
*)

(*
module With_expansion
    (A: sig module type t module M:t end)
    (B:sig module type t = A.t end) = (A.M:B.t)

module R = With_expansion(struct
    module M()() = struct end
    module type t = module type of M
  end)
    ()
    ()
    ()
*)

let With_expansion
  (dependent A : sig val t : type val M : t end)
  (dependent B : sig val t = A.t end) : B.t = A.M

(*
  ERROR: the second argument should be a module
*)
let R = With_expansion (struct
  let M _ _ = struct end
  let t = unit -> unit -> sig end
  end) () () ()