
(*
module type f =
  functor(A:sig type x type y end)(B:sig type x = A.x end)(C:sig type y = A.y end)
    -> sig end
module F: f = functor (A:sig include x include y end)(Z:sig type y = A.y end) -> struct end
*)

let f =
  (A : sig val x : type val y : type end)
  -> (B : sig val x = A.x end) 
  -> (C : sig val y = A.y end)
  -> sig end

(* The original test included module types, but we have to hand-write them.
  It doesn't seem to kill the spirit of the test, though. *)
let F (dep A : sig val x : type val y : type end) (Z : sig val y = A.y end) : sig end = struct end

(* ERROR: F is missing an argument *)
let _ : f = F
