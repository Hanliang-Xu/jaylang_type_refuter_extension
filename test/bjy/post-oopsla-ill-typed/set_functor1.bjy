(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (speed Fast)
  (typing Ill_typed)
) *)

let F (tf <- type -> type) (a <- type) : let t = tf a in sig
  val empty : unit -> t
  val add   : a -> t -> t
end -> sig
  val of_list : list a -> t
end = fun r -> struct
  let of_list ls =
    let rec loop acc ls =
      match ls with
      | [] -> acc
      | hd :: tl -> loop (r.add hd acc) tl
      end
    in
    loop r.empty ls (* ERROR: forgot to apply empty record to r.empty *)
end
