(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Recursive_functions Refinement_types))
  (reasons (Refinement_types))
  (speed Fast)
  (typing Ill_typed)
) *)

let rec mult x y =
  if x <= 0 || y <= 0
  then 0
  else x + mult x (y - 1)

let main (n : int) : { i : int | 600 <= i } =
  mult 100 n (* ERROR: `n` should be at least `6`; or remove refinement *)
