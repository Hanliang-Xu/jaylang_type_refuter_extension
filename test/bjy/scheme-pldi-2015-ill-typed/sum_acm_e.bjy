(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Recursive_functions Higher_order_functions Assertions))
  (reasons (Assertions))
  (speed Fast)
  (typing Ill_typed)
) *)
let rec sum x y k =
  if x <= 0
  then k y
  else sum (x - 1) (x + y) k

let check x = assert (x >= 100)

let res = sum 5 0 check (* ERROR: assert fails when first arg to `sum` is less than `14` *)
