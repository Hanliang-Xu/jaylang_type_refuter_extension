(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Higher_order_functions Refinement_types Dependent_types))
  (reasons (Refinement_types))
  (speed Fast)
  (typing Ill_typed)
) *)
(* error is that max is not performed on `x` but predicate relies on x *)

let max max2 x y z =
  max2 y z

let f x y =
  if x >= y
  then x
  else y

let main (x <- int) (y : int) (z : int) : { c : int | c == f x c } =
  max f x y z (* ERROR: should be `max f y x z` *)