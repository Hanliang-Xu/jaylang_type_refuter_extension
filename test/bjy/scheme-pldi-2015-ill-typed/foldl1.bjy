(* error is that input list xs should be nonempty *)

let rec foldl1 (type a_) (f : a_ -> a_ -> a_) (xs : list a_) : a_ =
  match xs with
  | z :: zs ->
    match zs with 
    | [] -> z
    | z1 :: tl -> foldl1 a_ f ((f z z1) :: tl)
    end
  | [] -> assert false (* ERROR: `xs` could be empty. `assert false` is equivalent to missing match case *)
  end
