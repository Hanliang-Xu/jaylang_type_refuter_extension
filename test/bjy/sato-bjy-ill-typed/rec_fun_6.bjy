(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Recursive_functions Return_type))
  (reasons (Return_type))
  (speed Fast)
  (typing Ill_typed)
) *)

let rec sum (acc : int) (x : int) : bool = 
  if x == 0
  then acc
  else
    let acc2 = x + acc in
    sum (x - 1) acc2

let sum2 = sum 0
