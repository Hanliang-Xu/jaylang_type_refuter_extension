(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Recursive_functions Return_type Match))
  (reasons (Recursive_functions Return_type))
  (speed Fast)
  (typing Ill_typed)
) *)

let rec prepend (l1 : list int) (l2 : list bool) : list int = 
  match l2 with
  | [] -> l1
  | hd :: tl -> prepend (hd :: l1) tl
  end