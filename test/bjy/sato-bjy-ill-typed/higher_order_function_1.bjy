(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Higher_order_functions Refinement_types Return_type))
  (reasons (Higher_order_functions Refinement_types Return_type))
  (speed Fast)
  (typing Ill_typed)
) *)

let isEven x = (x % 2) == 0

let isOdd x = (x % 2) <> 0

let e2o (f : { int | isEven} -> { int | isEven}) : { int | isOdd } -> { int | isOdd } =
  fun n -> (f (n + 1)) 
    