# Here is part of an ngram program implementation that contains a type error I made along the way to implementing the full program.
# This has been trimmed down to remove any code that had no intersection with the erroring code.

let pos_int = { int | fun i -> i > 0 }

let rec len ls = 
  match ls with
  | [] -> 0
  | hd :: tl -> 1 + len tl
  end

letd rec take (type a_) (n : pos_int) : (list a_) -> { list a_ | fun ls -> len ls <= n } =
  fun l ->
    match l with
    | [] -> []
    | hd :: tl ->
      if n == 1
      then [ hd ]
      else hd :: take a_ (n - 1) tl
    end
