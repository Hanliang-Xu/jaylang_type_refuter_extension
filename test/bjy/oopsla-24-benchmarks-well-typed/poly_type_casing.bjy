(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Intersection_types Higher_order_functions Subtyping Type_casing Match))
) *)

let t : type = ((`Int of int) -> int) & ((`Bool of bool) -> bool)

let f : t = 
  fun x ->
    match x with
    | `Int i -> i + 1
    | `Bool b -> not b
    end