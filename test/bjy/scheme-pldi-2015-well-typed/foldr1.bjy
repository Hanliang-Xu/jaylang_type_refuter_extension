# error is that xs should be nonempty

let is_nonempty ls =
  match ls with
  | [] -> false
  | _ -> true
  end
in

let rec foldr1 (type a_) (f : a_ -> a_ -> a_) (xs : { List a_ | is_nonempty }) : a_ =
  match xs with
  | z :: zs ->
    match zs with
    | [] -> z
    | _ -> f z (foldr1 a_ f zs)
    end 
  end
in

foldr1