(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Recursive_functions Refinement_types))
) *)
(* Error is that 100 should always be less than sum; but easily `sum 0` breaks that. *)

let rec sum x =
  if x <= 0
  then 0
  else x + sum (x - 1)

let main (n : { i : int | i >= 14 }) : { i : int | 100 <= i } =
  sum n
