# error is that squaring 0 or 1 doesn't make it larger like predicate requires
# Requiring n > 1 fixes the error

let rec mult (x : {: n : int , m : int :}) : {. int | fun i -> i >= 0 } =
  if x.n <= 0 or x.m <= 0
  then 0
  else x.n + mult { n = x.n , m = (x.m - 1) } 
in

letd sqr (n : {. int | fun i -> i > 1 }) : {. int | fun c -> c >= n + 1 } =
  mult { n = n , m = n }
in

sqr