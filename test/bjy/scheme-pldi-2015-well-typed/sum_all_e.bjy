(***
  (
    (features (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (reasons (Polymorphic_types Refinement_types Dependent_arrows Modules Mu_types Parametric_types First_class_types Variants Records Recursive_functions Higher_order_functions Subtyping OOP_style Return_error Usage_error Other))
    (speed <Fast or Slow>)
    (typing <Well_typed or Ill_typed>)
  )
*)
(*** (
  (features (Recursive_functions Refinement_types))
) *)
(* error is n should be at least 3 *)

let rec sum x =
  if x <= 0
  then 0
  else x + sum (x - 1)

let h y =
  let b = y + y <= sum y
  in
  b

let main (n : { i : int | i > 2 }) : { b : bool | b } =
  h n
