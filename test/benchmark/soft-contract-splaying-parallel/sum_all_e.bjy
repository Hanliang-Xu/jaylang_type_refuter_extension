(***
  (
    (features (Refinement_types Recursive_functions))
    (speed Fast)
    (typing Exhausted)
    (flags "-s -p")
  )
*)

let rec sum (dependent x : int | x >= 0) : { i : int | i == x * (x + 1) / 2 } =
  if x <= 0
  then 0
  else x + sum (x - 1)

let h y =
  let b = y + y <= sum y
  in
  b

let main (n : int | n > 2) : { b : bool | b } =
  h n
