# This test file has a program where both sides of a branch immediately abort.
# If both sides imply that an abort will eventually be hit, then that test case
# is covered in implied_double_abort.jil

x = input;

f = fun y -> (
  y_is_x_cond = x == y;
  y_is_x_branch = y_is_x_cond ? (
    abort_y_is_x = abort
  ) : (
    abort_y_is_not_x = abort
  );

  unreachable_return = 0
);

y0 = 0;

neg_11 = -11;

x_gt_neg_11 = neg_11 < x; # always true on first run

x_gt_neg_11_branch = x_gt_neg_11 ? (
  # always aborts, and always hit on first run
  always_aborts = f y0
) : (
  res = 42
);

last_cond = x_gt_neg_11_branch == y0;

last_branch = last_cond ? (
  # unsatisfiable because of aborts
  unsatisfiable = -42 
) : (
  # satisfiable
  satisfiable = 84
)