# This program has a branch that can be solved for by taking some specific
# choices of branches in a recursive function. i.e. the branch taken on each
# recursive call is different

x = input;

zero = 0;
one = 1;
two = 2;
ten = 10;
nine = 9;
oneeighty = 180;

f = fun self -> (
  f0 = fun counter -> (
    f1 = fun x_param -> (
      done_cond = counter == zero;

      done_branch = done_cond ? (
        param_is_180_cond = x_param == oneeighty;
        param_is_180 = param_is_180_cond ? (
          ret_t = 360
        ) : (
          ret_f = 100
        )
      ) : (
        ss = self self;
        new_counter = counter - one;
        cont = ss new_counter;

        param_lt_10_cond = x_param < ten;

        new_param = param_lt_10_cond ? (
          param_times_10 = x_param * ten
        ) : (
          param_times_9 = x_param * nine
        );

        cont0 = cont new_param
      )
    )
  )
);

ff = f f;
ff1 = ff two; # how about if we make the counter x as well?

res = ff1 x