
let t = Mu tt. ({: v : 'a , l : tt , r : tt :} || {: leaf : bool :}) in

let rec size n = 
  match n with
  | { leaf = b } -> 0
  | { v = v , l = l , r = r } -> 1 + size l + size r
  end
in

let rec is_braun_tree x = 
  match x with
  | { leaf = b } -> true
  | { v = v , l = l , r = r } ->
    is_braun_tree l
    and is_braun_tree r
    and (size l == size r or size l == size r + 1)
  end
in

let bt = {. t | is_braun_tree } in

let rec insert (tree : bt) (x : 'a) : bt =
  match tree with
  | { leaf = b } -> { v = x , l = { leaf = true } , r = { leaf = true } }
  | { v = v , l = l , r = r } -> 
    if size l <= size r
    then { l = insert l x , r = r , v = v }
    else { l = l , r = insert r x , v = v }
  end
in

insert