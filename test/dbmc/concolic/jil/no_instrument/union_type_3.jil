int_j_21 = 1;
record_j_22 = {a = int_j_21};
record_j_23 = {};
record_j_24 = {a = record_j_23};
record_j_25 = {bj_actual_rec = record_j_22, bj_decl_lbls = record_j_24};
record_j_26 = {};
record_j_27 = {j_empty = record_j_26};
record_j_28 = {j_head = record_j_25, j_tail = record_j_27};
x_b_55 = record_j_28;
x = x_b_55;
flatten_fun_j_194 = fun expr_b_52 -> (
    bool_j_30 = false;
    lst_fail_b_53 = bool_j_30;
    var_j_31 = expr_b_52;
    m_match_bool_j_33 = var_j_31 ~ any;
    m_match_bool_j_36 = var_j_31 ~ {j_head, j_tail, _};
    m_match_bool_j_191 = var_j_31 ~ {j_empty, _};
    m_match_cond_j_192 = m_match_bool_j_191 ? (
            bool_j_193 = true
        ) : (
            m_match_cond_j_37 = m_match_bool_j_36 ? (
                    bj_underscore = var_j_31.j_head;
                    bj_underscore2 = var_j_31.j_tail;
                    flatten_fun_j_184 = fun test_fun_b_49_j_0 -> (
                        flatten_fun_j_183 = fun test_list_b_50 -> (
                            var_j_38 = test_fun_b_49_j_0;
                            var_j_39 = test_fun_b_49_j_0;
                            appl_j_40 = var_j_38 var_j_39;
                            test_fun_b_49 = appl_j_40;
                            var_j_41 = test_list_b_50;
                            m_match_bool_j_43 = var_j_41 ~ {j_head, j_tail, _};
                            m_match_bool_j_180 = var_j_41 ~ {j_empty, _};
                            m_match_cond_j_181 = m_match_bool_j_180 ? (
                                    bool_j_182 = true
                                ) : (
                                    m_match_cond_j_44 = m_match_bool_j_43 ? (
                                            hd = var_j_41.j_head;
                                            tl = var_j_41.j_tail;
                                            flatten_fun_j_129 = fun expr_b_45 -> (
                                                input_j_45 = input;
                                                select_int_b_46 = input_j_45;
                                                bool_j_46 = false;
                                                fail_b_47 = bool_j_46;
                                                int_j_47 = 0;
                                                var_j_48 = select_int_b_46;
                                                binop_j_49 = int_j_47 <= var_j_48;
                                                if_j_128 = binop_j_49 ? (
                                                        bool_j_50 = false;
                                                        fail_b_34 = bool_j_50;
                                                        flatten_fun_j_59 = fun expr_b_33 -> (
                                                            var_j_51 = expr_b_33;
                                                            m_match_bool_j_53 = var_j_51 ~ any;
                                                            m_match_bool_j_56 = var_j_51 ~ int;
                                                            m_match_cond_j_57 = m_match_bool_j_56 ? (
                                                                    bool_j_58 = true
                                                                ) : (
                                                                    m_match_cond_j_54 = m_match_bool_j_53 ? (
                                                                        var_j_55 = fail_b_34
                                                                    ) : (
                                                                        void_j_52 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_61 = fun bj_null -> (
                                                            input_j_60 = input);
                                                        record_j_62 = 
                                                            {checker = flatten_fun_j_59, generator = flatten_fun_j_61};
                                                        proj_j_63 = record_j_62.checker;
                                                        var_j_64 = expr_b_45;
                                                        appl_j_65 = proj_j_63 var_j_64;
                                                        if_j_88 = appl_j_65 ? (
                                                                bool_j_66 = true
                                                            ) : (
                                                                bool_j_67 = false;
                                                                fail_b_37 = bool_j_67;
                                                                flatten_fun_j_76 = fun expr_b_36 -> (
                                                                    var_j_68 = expr_b_36;
                                                                    m_match_bool_j_70 = var_j_68 ~ any;
                                                                    m_match_bool_j_73 = var_j_68 ~ bool;
                                                                    m_match_cond_j_74 = m_match_bool_j_73 ? (
                                                                        bool_j_75 = true
                                                                    ) : (
                                                                        m_match_cond_j_71 = m_match_bool_j_70 ? (
                                                                        var_j_72 = fail_b_37
                                                                    ) : (
                                                                        void_j_69 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_80 = fun bj_null_j_2 -> (
                                                                    int_j_77 = 0;
                                                                    input_j_78 = input;
                                                                    binop_j_79 = int_j_77 <= input_j_78);
                                                                record_j_81 = 
                                                                    {checker = flatten_fun_j_76, generator = flatten_fun_j_80};
                                                                proj_j_82 = record_j_81.checker;
                                                                var_j_83 = expr_b_45;
                                                                appl_j_84 = proj_j_82 var_j_83;
                                                                if_j_87 = appl_j_84 ? (
                                                                        
                                                                    bool_j_85 = true
                                                                    ) : (
                                                                        
                                                                    var_j_86 = fail_b_47
                                                                    )
                                                            )
                                                    ) : (
                                                        bool_j_89 = false;
                                                        fail_b_43 = bool_j_89;
                                                        flatten_fun_j_98 = fun expr_b_42 -> (
                                                            var_j_90 = expr_b_42;
                                                            m_match_bool_j_92 = var_j_90 ~ any;
                                                            m_match_bool_j_95 = var_j_90 ~ bool;
                                                            m_match_cond_j_96 = m_match_bool_j_95 ? (
                                                                    bool_j_97 = true
                                                                ) : (
                                                                    m_match_cond_j_93 = m_match_bool_j_92 ? (
                                                                        var_j_94 = fail_b_43
                                                                    ) : (
                                                                        void_j_91 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_102 = fun bj_null_j_3 -> (
                                                            int_j_99 = 0;
                                                            input_j_100 = input;
                                                            binop_j_101 = int_j_99 <= input_j_100);
                                                        record_j_103 = 
                                                            {checker = flatten_fun_j_98, generator = flatten_fun_j_102};
                                                        proj_j_104 = record_j_103.checker;
                                                        var_j_105 = expr_b_45;
                                                        appl_j_106 = proj_j_104 var_j_105;
                                                        if_j_127 = appl_j_106 ? (
                                                                bool_j_107 = true
                                                            ) : (
                                                                bool_j_108 = false;
                                                                fail_b_40 = bool_j_108;
                                                                flatten_fun_j_117 = fun expr_b_39 -> (
                                                                    var_j_109 = expr_b_39;
                                                                    m_match_bool_j_111 = var_j_109 ~ any;
                                                                    m_match_bool_j_114 = var_j_109 ~ int;
                                                                    m_match_cond_j_115 = m_match_bool_j_114 ? (
                                                                        bool_j_116 = true
                                                                    ) : (
                                                                        m_match_cond_j_112 = m_match_bool_j_111 ? (
                                                                        var_j_113 = fail_b_40
                                                                    ) : (
                                                                        void_j_110 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_119 = fun bj_null_j_4 -> (
                                                                    input_j_118 = input);
                                                                record_j_120 = 
                                                                    {checker = flatten_fun_j_117, generator = flatten_fun_j_119};
                                                                proj_j_121 = record_j_120.checker;
                                                                var_j_122 = expr_b_45;
                                                                appl_j_123 = proj_j_121 var_j_122;
                                                                if_j_126 = appl_j_123 ? (
                                                                        
                                                                    bool_j_124 = true
                                                                    ) : (
                                                                        
                                                                    var_j_125 = fail_b_47
                                                                    )
                                                            )
                                                    ));
                                            flatten_fun_j_169 = fun bj_null_j_7 -> (
                                                input_j_130 = input;
                                                select_int_b_32 = input_j_130;
                                                int_j_131 = 0;
                                                var_j_132 = select_int_b_32;
                                                binop_j_133 = int_j_131 <= var_j_132;
                                                if_j_168 = binop_j_133 ? (
                                                        bool_j_134 = false;
                                                        fail_b_27 = bool_j_134;
                                                        flatten_fun_j_143 = fun expr_b_26 -> (
                                                            var_j_135 = expr_b_26;
                                                            m_match_bool_j_137 = var_j_135 ~ any;
                                                            m_match_bool_j_140 = var_j_135 ~ int;
                                                            m_match_cond_j_141 = m_match_bool_j_140 ? (
                                                                    bool_j_142 = true
                                                                ) : (
                                                                    m_match_cond_j_138 = m_match_bool_j_137 ? (
                                                                        var_j_139 = fail_b_27
                                                                    ) : (
                                                                        void_j_136 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_145 = fun bj_null_j_5 -> (
                                                            input_j_144 = input);
                                                        record_j_146 = 
                                                            {checker = flatten_fun_j_143, generator = flatten_fun_j_145};
                                                        proj_j_147 = record_j_146.generator;
                                                        int_j_148 = 0;
                                                        appl_j_149 = proj_j_147 int_j_148
                                                    ) : (
                                                        bool_j_150 = false;
                                                        fail_b_30 = bool_j_150;
                                                        flatten_fun_j_159 = fun expr_b_29 -> (
                                                            var_j_151 = expr_b_29;
                                                            m_match_bool_j_153 = var_j_151 ~ any;
                                                            m_match_bool_j_156 = var_j_151 ~ bool;
                                                            m_match_cond_j_157 = m_match_bool_j_156 ? (
                                                                    bool_j_158 = true
                                                                ) : (
                                                                    m_match_cond_j_154 = m_match_bool_j_153 ? (
                                                                        var_j_155 = fail_b_30
                                                                    ) : (
                                                                        void_j_152 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_163 = fun bj_null_j_6 -> (
                                                            int_j_160 = 0;
                                                            input_j_161 = input;
                                                            binop_j_162 = int_j_160 <= input_j_161);
                                                        record_j_164 = 
                                                            {checker = flatten_fun_j_159, generator = flatten_fun_j_163};
                                                        proj_j_165 = record_j_164.generator;
                                                        int_j_166 = 0;
                                                        appl_j_167 = proj_j_165 int_j_166
                                                    ));
                                            record_j_170 = {checker = flatten_fun_j_129, generator = flatten_fun_j_169};
                                            proj_j_171 = record_j_170.checker;
                                            var_j_172 = hd;
                                            appl_j_173 = proj_j_171 var_j_172;
                                            elm_check_b_51 = appl_j_173;
                                            var_j_174 = elm_check_b_51;
                                            if_j_179 = var_j_174 ? (
                                                    var_j_175 = test_fun_b_49;
                                                    var_j_176 = tl;
                                                    appl_j_177 = var_j_175 var_j_176
                                                ) : (
                                                    var_j_178 = elm_check_b_51
                                                )
                                        ) : (
                                            void_j_42 = {}
                                        )
                                )));
                    test_fun_b_49_j_0_j_9 = flatten_fun_j_184;
                    var_j_185 = test_fun_b_49_j_0_j_9;
                    var_j_186 = test_fun_b_49_j_0_j_9;
                    appl_j_187 = var_j_185 var_j_186;
                    test_fun_b_49_j_8 = appl_j_187;
                    var_j_188 = test_fun_b_49_j_8;
                    var_j_189 = expr_b_52;
                    appl_j_190 = var_j_188 var_j_189
                ) : (
                    m_match_cond_j_34 = m_match_bool_j_33 ? (
                            var_j_35 = lst_fail_b_53
                        ) : (
                            void_j_32 = {}
                        )
                )
        ));
flatten_fun_j_356 = fun bj_null_j_20 -> (
    flatten_fun_j_342 = fun list_maker_b_24_j_1 -> (
        flatten_fun_j_341 = fun len_b_23 -> (
            var_j_195 = list_maker_b_24_j_1;
            var_j_196 = list_maker_b_24_j_1;
            appl_j_197 = var_j_195 var_j_196;
            list_maker_b_24 = appl_j_197;
            var_j_198 = len_b_23;
            int_j_199 = 0;
            binop_j_200 = var_j_198 == int_j_199;
            if_j_340 = binop_j_200 ? (
                    record_j_201 = {};
                    record_j_202 = {j_empty = record_j_201}
                ) : (
                    flatten_fun_j_287 = fun expr_b_19 -> (
                        input_j_203 = input;
                        select_int_b_20 = input_j_203;
                        bool_j_204 = false;
                        fail_b_21 = bool_j_204;
                        int_j_205 = 0;
                        var_j_206 = select_int_b_20;
                        binop_j_207 = int_j_205 <= var_j_206;
                        if_j_286 = binop_j_207 ? (
                                bool_j_208 = false;
                                fail_b_8 = bool_j_208;
                                flatten_fun_j_217 = fun expr_b_7 -> (
                                    var_j_209 = expr_b_7;
                                    m_match_bool_j_211 = var_j_209 ~ any;
                                    m_match_bool_j_214 = var_j_209 ~ int;
                                    m_match_cond_j_215 = m_match_bool_j_214 ? (
                                            bool_j_216 = true
                                        ) : (
                                            m_match_cond_j_212 = m_match_bool_j_211 ? (
                                                    var_j_213 = fail_b_8
                                                ) : (
                                                    void_j_210 = {}
                                                )
                                        ));
                                flatten_fun_j_219 = fun bj_null_j_10 -> (
                                    input_j_218 = input);
                                record_j_220 = {checker = flatten_fun_j_217, generator = flatten_fun_j_219};
                                proj_j_221 = record_j_220.checker;
                                var_j_222 = expr_b_19;
                                appl_j_223 = proj_j_221 var_j_222;
                                if_j_246 = appl_j_223 ? (
                                        bool_j_224 = true
                                    ) : (
                                        bool_j_225 = false;
                                        fail_b_11 = bool_j_225;
                                        flatten_fun_j_234 = fun expr_b_10 -> (
                                            var_j_226 = expr_b_10;
                                            m_match_bool_j_228 = var_j_226 ~ any;
                                            m_match_bool_j_231 = var_j_226 ~ bool;
                                            m_match_cond_j_232 = m_match_bool_j_231 ? (
                                                    bool_j_233 = true
                                                ) : (
                                                    m_match_cond_j_229 = m_match_bool_j_228 ? (
                                                            var_j_230 = fail_b_11
                                                        ) : (
                                                            void_j_227 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_238 = fun bj_null_j_11 -> (
                                            int_j_235 = 0;
                                            input_j_236 = input;
                                            binop_j_237 = int_j_235 <= input_j_236);
                                        record_j_239 = {checker = flatten_fun_j_234, generator = flatten_fun_j_238};
                                        proj_j_240 = record_j_239.checker;
                                        var_j_241 = expr_b_19;
                                        appl_j_242 = proj_j_240 var_j_241;
                                        if_j_245 = appl_j_242 ? (
                                                bool_j_243 = true
                                            ) : (
                                                var_j_244 = fail_b_21
                                            )
                                    )
                            ) : (
                                bool_j_247 = false;
                                fail_b_17 = bool_j_247;
                                flatten_fun_j_256 = fun expr_b_16 -> (
                                    var_j_248 = expr_b_16;
                                    m_match_bool_j_250 = var_j_248 ~ any;
                                    m_match_bool_j_253 = var_j_248 ~ bool;
                                    m_match_cond_j_254 = m_match_bool_j_253 ? (
                                            bool_j_255 = true
                                        ) : (
                                            m_match_cond_j_251 = m_match_bool_j_250 ? (
                                                    var_j_252 = fail_b_17
                                                ) : (
                                                    void_j_249 = {}
                                                )
                                        ));
                                flatten_fun_j_260 = fun bj_null_j_12 -> (
                                    int_j_257 = 0;
                                    input_j_258 = input;
                                    binop_j_259 = int_j_257 <= input_j_258);
                                record_j_261 = {checker = flatten_fun_j_256, generator = flatten_fun_j_260};
                                proj_j_262 = record_j_261.checker;
                                var_j_263 = expr_b_19;
                                appl_j_264 = proj_j_262 var_j_263;
                                if_j_285 = appl_j_264 ? (
                                        bool_j_265 = true
                                    ) : (
                                        bool_j_266 = false;
                                        fail_b_14 = bool_j_266;
                                        flatten_fun_j_275 = fun expr_b_13 -> (
                                            var_j_267 = expr_b_13;
                                            m_match_bool_j_269 = var_j_267 ~ any;
                                            m_match_bool_j_272 = var_j_267 ~ int;
                                            m_match_cond_j_273 = m_match_bool_j_272 ? (
                                                    bool_j_274 = true
                                                ) : (
                                                    m_match_cond_j_270 = m_match_bool_j_269 ? (
                                                            var_j_271 = fail_b_14
                                                        ) : (
                                                            void_j_268 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_277 = fun bj_null_j_13 -> (
                                            input_j_276 = input);
                                        record_j_278 = {checker = flatten_fun_j_275, generator = flatten_fun_j_277};
                                        proj_j_279 = record_j_278.checker;
                                        var_j_280 = expr_b_19;
                                        appl_j_281 = proj_j_279 var_j_280;
                                        if_j_284 = appl_j_281 ? (
                                                bool_j_282 = true
                                            ) : (
                                                var_j_283 = fail_b_21
                                            )
                                    )
                            ));
                    flatten_fun_j_327 = fun bj_null_j_16 -> (
                        input_j_288 = input;
                        select_int_b_6 = input_j_288;
                        int_j_289 = 0;
                        var_j_290 = select_int_b_6;
                        binop_j_291 = int_j_289 <= var_j_290;
                        if_j_326 = binop_j_291 ? (
                                bool_j_292 = false;
                                fail_b_1 = bool_j_292;
                                flatten_fun_j_301 = fun expr_b_0 -> (
                                    var_j_293 = expr_b_0;
                                    m_match_bool_j_295 = var_j_293 ~ any;
                                    m_match_bool_j_298 = var_j_293 ~ int;
                                    m_match_cond_j_299 = m_match_bool_j_298 ? (
                                            bool_j_300 = true
                                        ) : (
                                            m_match_cond_j_296 = m_match_bool_j_295 ? (
                                                    var_j_297 = fail_b_1
                                                ) : (
                                                    void_j_294 = {}
                                                )
                                        ));
                                flatten_fun_j_303 = fun bj_null_j_14 -> (
                                    input_j_302 = input);
                                record_j_304 = {checker = flatten_fun_j_301, generator = flatten_fun_j_303};
                                proj_j_305 = record_j_304.generator;
                                int_j_306 = 0;
                                appl_j_307 = proj_j_305 int_j_306
                            ) : (
                                bool_j_308 = false;
                                fail_b_4 = bool_j_308;
                                flatten_fun_j_317 = fun expr_b_3 -> (
                                    var_j_309 = expr_b_3;
                                    m_match_bool_j_311 = var_j_309 ~ any;
                                    m_match_bool_j_314 = var_j_309 ~ bool;
                                    m_match_cond_j_315 = m_match_bool_j_314 ? (
                                            bool_j_316 = true
                                        ) : (
                                            m_match_cond_j_312 = m_match_bool_j_311 ? (
                                                    var_j_313 = fail_b_4
                                                ) : (
                                                    void_j_310 = {}
                                                )
                                        ));
                                flatten_fun_j_321 = fun bj_null_j_15 -> (
                                    int_j_318 = 0;
                                    input_j_319 = input;
                                    binop_j_320 = int_j_318 <= input_j_319);
                                record_j_322 = {checker = flatten_fun_j_317, generator = flatten_fun_j_321};
                                proj_j_323 = record_j_322.generator;
                                int_j_324 = 0;
                                appl_j_325 = proj_j_323 int_j_324
                            ));
                    record_j_328 = {checker = flatten_fun_j_287, generator = flatten_fun_j_327};
                    proj_j_329 = record_j_328.generator;
                    int_j_330 = 0;
                    appl_j_331 = proj_j_329 int_j_330;
                    elm_b_25 = appl_j_331;
                    record_j_332 = {};
                    var_j_333 = elm_b_25;
                    var_j_334 = list_maker_b_24;
                    var_j_335 = len_b_23;
                    int_j_336 = 1;
                    binop_j_337 = var_j_335 - int_j_336;
                    appl_j_338 = var_j_334 binop_j_337;
                    record_j_339 = {j_cons = record_j_332, j_head = var_j_333, j_tail = appl_j_338}
                )));
    list_maker_b_24_j_1_j_19 = flatten_fun_j_342;
    var_j_343 = list_maker_b_24_j_1_j_19;
    var_j_344 = list_maker_b_24_j_1_j_19;
    appl_j_345 = var_j_343 var_j_344;
    list_maker_b_24_j_18 = appl_j_345;
    input_j_346 = input;
    len_b_23_j_17 = input_j_346;
    int_j_347 = 0;
    var_j_348 = len_b_23_j_17;
    binop_j_349 = int_j_347 <= var_j_348;
    if_j_355 = binop_j_349 ? (
            var_j_350 = list_maker_b_24_j_18;
            var_j_351 = len_b_23_j_17;
            appl_j_352 = var_j_350 var_j_351
        ) : (
            bool_j_353 = false;
            assume_j_354 = assume bool_j_353
        ));
record_j_357 = {checker = flatten_fun_j_194, generator = flatten_fun_j_356};
proj_j_358 = record_j_357.checker;
appl_j_360 = proj_j_358 x_b_55;
check_res_b_56 = appl_j_360;
if_j_368 = check_res_b_56 ? (
        var_j_362 = x
    ) : (
        error_var_j_363 = check_res_b_56;
        assert_pred_j_364 = error_var_j_363;
        assert_res_j_365 = assert_pred_j_364 ? (
                assert_res_true_j_366 = {}
            ) : (
                ab_j_367 = abort
            )
    );
i_result = if_j_368