i_first = {};
test_j_695 = fun f -> (
    flatten_fun_j_692 = fun f_b_0 -> (
        int_j_86 = 0;
        input_j_87 = input;
        m_bl_i_1300 = int_j_86 ~ int;
        m_br_i_1301 = input_j_87 ~ int;
        m_b_i_1302 = m_bl_i_1300 and m_br_i_1301;
        binop_j_88 = m_b_i_1302 ? (
                c_binop_i_1303 = int_j_86 < input_j_87
            ) : (
                ab_i_1304 = abort
            );
        if_j_666 = binop_j_88 ? (
                flatten_fun_j_275 = fun expr_b_161 -> (
                    bool_j_89 = false;
                    fail_b_132 = bool_j_89;
                    flatten_fun_j_98 = fun expr_b_131 -> (
                        var_j_90 = expr_b_131;
                        m_match_bool_j_92 = var_j_90 ~ any;
                        m_match_bool_j_95 = var_j_90 ~ int;
                        m_match_cond_j_96 = m_match_bool_j_95 ? (
                                bool_j_97 = true
                            ) : (
                                m_match_cond_j_93 = m_match_bool_j_92 ? (
                                        var_j_94 = fail_b_132
                                    ) : (
                                        void_j_91 = {}
                                    )
                            ));
                    flatten_fun_j_100 = fun bj_null_j_42 -> (
                        input_j_99 = input);
                    flatten_fun_j_102 = fun expr_b_133 -> (
                        var_j_101 = expr_b_133);
                    record_j_103 = {checker = flatten_fun_j_98, generator = flatten_fun_j_100, wrapper = flatten_fun_j_102};
                    proj_j_104 = record_j_103.generator;
                    int_j_105 = 0;
                    appl_j_106 = proj_j_104 int_j_105;
                    arg_assert_b_162 = appl_j_106;
                    var_j_107 = expr_b_161;
                    var_j_108 = arg_assert_b_162;
                    appl_j_109 = var_j_107 var_j_108;
                    fun_ret_b_163 = appl_j_109;
                    flatten_fun_j_190 = fun expr_b_157 -> (
                        flatten_fun_j_141 = fun expr_b_153 -> (
                            bool_j_110 = false;
                            fail_b_151 = bool_j_110;
                            flatten_fun_j_119 = fun expr_b_150 -> (
                                var_j_111 = expr_b_150;
                                m_match_bool_j_113 = var_j_111 ~ any;
                                m_match_bool_j_116 = var_j_111 ~ int;
                                m_match_cond_j_117 = m_match_bool_j_116 ? (
                                        bool_j_118 = true
                                    ) : (
                                        m_match_cond_j_114 = m_match_bool_j_113 ? (
                                                var_j_115 = fail_b_151
                                            ) : (
                                                void_j_112 = {}
                                            )
                                    ));
                            flatten_fun_j_121 = fun bj_null_j_43 -> (
                                input_j_120 = input);
                            flatten_fun_j_123 = fun expr_b_152 -> (
                                var_j_122 = expr_b_152);
                            record_j_124 = {checker = flatten_fun_j_119, generator = flatten_fun_j_121, wrapper = flatten_fun_j_123};
                            proj_j_125 = record_j_124.checker;
                            var_j_126 = expr_b_153;
                            appl_j_127 = proj_j_125 var_j_126;
                            t_check_b_154 = appl_j_127;
                            var_j_128 = t_check_b_154;
                            if_j_140 = var_j_128 ? (
                                    bool_j_129 = false;
                                    pred_check_b_155 = bool_j_129;
                                    flatten_fun_j_133 = fun x_j_44 -> (
                                        int_j_130 = 0;
                                        var_j_131 = x_j_44;
                                        m_bl_i_1305 = int_j_130 ~ int;
                                        m_br_i_1306 = var_j_131 ~ int;
                                        m_b_i_1307 = m_bl_i_1305 and m_br_i_1306;
                                        binop_j_132 = m_b_i_1307 ? (
                                                c_binop_i_1308 = int_j_130 < var_j_131
                                            ) : (
                                                ab_i_1309 = abort
                                            ));
                                    var_j_134 = expr_b_153;
                                    appl_j_135 = flatten_fun_j_133 var_j_134;
                                    if_j_138 = appl_j_135 ? (
                                            bool_j_136 = true
                                        ) : (
                                            var_j_137 = pred_check_b_155
                                        )
                                ) : (
                                    var_j_139 = t_check_b_154
                                ));
                        flatten_fun_j_170 = fun bj_null_j_47 -> (
                            bool_j_142 = false;
                            fail_b_147 = bool_j_142;
                            flatten_fun_j_151 = fun expr_b_146 -> (
                                var_j_143 = expr_b_146;
                                m_match_bool_j_145 = var_j_143 ~ any;
                                m_match_bool_j_148 = var_j_143 ~ int;
                                m_match_cond_j_149 = m_match_bool_j_148 ? (
                                        bool_j_150 = true
                                    ) : (
                                        m_match_cond_j_146 = m_match_bool_j_145 ? (
                                                var_j_147 = fail_b_147
                                            ) : (
                                                void_j_144 = {}
                                            )
                                    ));
                            flatten_fun_j_153 = fun bj_null_j_45 -> (
                                input_j_152 = input);
                            flatten_fun_j_155 = fun expr_b_148 -> (
                                var_j_154 = expr_b_148);
                            record_j_156 = {checker = flatten_fun_j_151, generator = flatten_fun_j_153, wrapper = flatten_fun_j_155};
                            proj_j_157 = record_j_156.generator;
                            int_j_158 = 0;
                            appl_j_159 = proj_j_157 int_j_158;
                            candidate_b_149 = appl_j_159;
                            flatten_fun_j_163 = fun x_j_46 -> (
                                int_j_160 = 0;
                                var_j_161 = x_j_46;
                                m_bl_i_1310 = int_j_160 ~ int;
                                m_br_i_1311 = var_j_161 ~ int;
                                m_b_i_1312 = m_bl_i_1310 and m_br_i_1311;
                                binop_j_162 = m_b_i_1312 ? (
                                        c_binop_i_1313 = int_j_160 < var_j_161
                                    ) : (
                                        ab_i_1314 = abort
                                    ));
                            var_j_164 = candidate_b_149;
                            appl_j_165 = flatten_fun_j_163 var_j_164;
                            if_j_169 = appl_j_165 ? (
                                    var_j_166 = candidate_b_149
                                ) : (
                                    bool_j_167 = false;
                                    assume_j_168 = assume bool_j_167
                                ));
                        flatten_fun_j_172 = fun expr_b_156 -> (
                            var_j_171 = expr_b_156);
                        record_j_173 = {checker = flatten_fun_j_141, generator = flatten_fun_j_170, wrapper = flatten_fun_j_172};
                        proj_j_174 = record_j_173.checker;
                        var_j_175 = expr_b_157;
                        appl_j_176 = proj_j_174 var_j_175;
                        t_check_b_158 = appl_j_176;
                        var_j_177 = t_check_b_158;
                        if_j_189 = var_j_177 ? (
                                bool_j_178 = false;
                                pred_check_b_159 = bool_j_178;
                                flatten_fun_j_182 = fun x_j_48 -> (
                                    var_j_179 = x_j_48;
                                    int_j_180 = 0;
                                    m_bl_i_1315 = var_j_179 ~ int;
                                    m_br_i_1316 = int_j_180 ~ int;
                                    m_b_i_1317 = m_bl_i_1315 and m_br_i_1316;
                                    binop_j_181 = m_b_i_1317 ? (
                                            c_binop_i_1318 = var_j_179 < int_j_180
                                        ) : (
                                            ab_i_1319 = abort
                                        ));
                                var_j_183 = expr_b_157;
                                appl_j_184 = flatten_fun_j_182 var_j_183;
                                if_j_187 = appl_j_184 ? (
                                        bool_j_185 = true
                                    ) : (
                                        var_j_186 = pred_check_b_159
                                    )
                            ) : (
                                var_j_188 = t_check_b_158
                            ));
                    flatten_fun_j_268 = fun bj_null_j_55 -> (
                        flatten_fun_j_222 = fun expr_b_141 -> (
                            bool_j_191 = false;
                            fail_b_139 = bool_j_191;
                            flatten_fun_j_200 = fun expr_b_138 -> (
                                var_j_192 = expr_b_138;
                                m_match_bool_j_194 = var_j_192 ~ any;
                                m_match_bool_j_197 = var_j_192 ~ int;
                                m_match_cond_j_198 = m_match_bool_j_197 ? (
                                        bool_j_199 = true
                                    ) : (
                                        m_match_cond_j_195 = m_match_bool_j_194 ? (
                                                var_j_196 = fail_b_139
                                            ) : (
                                                void_j_193 = {}
                                            )
                                    ));
                            flatten_fun_j_202 = fun bj_null_j_49 -> (
                                input_j_201 = input);
                            flatten_fun_j_204 = fun expr_b_140 -> (
                                var_j_203 = expr_b_140);
                            record_j_205 = {checker = flatten_fun_j_200, generator = flatten_fun_j_202, wrapper = flatten_fun_j_204};
                            proj_j_206 = record_j_205.checker;
                            var_j_207 = expr_b_141;
                            appl_j_208 = proj_j_206 var_j_207;
                            t_check_b_142 = appl_j_208;
                            var_j_209 = t_check_b_142;
                            if_j_221 = var_j_209 ? (
                                    bool_j_210 = false;
                                    pred_check_b_143 = bool_j_210;
                                    flatten_fun_j_214 = fun x_j_50 -> (
                                        int_j_211 = 0;
                                        var_j_212 = x_j_50;
                                        m_bl_i_1320 = int_j_211 ~ int;
                                        m_br_i_1321 = var_j_212 ~ int;
                                        m_b_i_1322 = m_bl_i_1320 and m_br_i_1321;
                                        binop_j_213 = m_b_i_1322 ? (
                                                c_binop_i_1323 = int_j_211 < var_j_212
                                            ) : (
                                                ab_i_1324 = abort
                                            ));
                                    var_j_215 = expr_b_141;
                                    appl_j_216 = flatten_fun_j_214 var_j_215;
                                    if_j_219 = appl_j_216 ? (
                                            bool_j_217 = true
                                        ) : (
                                            var_j_218 = pred_check_b_143
                                        )
                                ) : (
                                    var_j_220 = t_check_b_142
                                ));
                        flatten_fun_j_251 = fun bj_null_j_53 -> (
                            bool_j_223 = false;
                            fail_b_135 = bool_j_223;
                            flatten_fun_j_232 = fun expr_b_134 -> (
                                var_j_224 = expr_b_134;
                                m_match_bool_j_226 = var_j_224 ~ any;
                                m_match_bool_j_229 = var_j_224 ~ int;
                                m_match_cond_j_230 = m_match_bool_j_229 ? (
                                        bool_j_231 = true
                                    ) : (
                                        m_match_cond_j_227 = m_match_bool_j_226 ? (
                                                var_j_228 = fail_b_135
                                            ) : (
                                                void_j_225 = {}
                                            )
                                    ));
                            flatten_fun_j_234 = fun bj_null_j_51 -> (
                                input_j_233 = input);
                            flatten_fun_j_236 = fun expr_b_136 -> (
                                var_j_235 = expr_b_136);
                            record_j_237 = {checker = flatten_fun_j_232, generator = flatten_fun_j_234, wrapper = flatten_fun_j_236};
                            proj_j_238 = record_j_237.generator;
                            int_j_239 = 0;
                            appl_j_240 = proj_j_238 int_j_239;
                            candidate_b_137 = appl_j_240;
                            flatten_fun_j_244 = fun x_j_52 -> (
                                int_j_241 = 0;
                                var_j_242 = x_j_52;
                                m_bl_i_1325 = int_j_241 ~ int;
                                m_br_i_1326 = var_j_242 ~ int;
                                m_b_i_1327 = m_bl_i_1325 and m_br_i_1326;
                                binop_j_243 = m_b_i_1327 ? (
                                        c_binop_i_1328 = int_j_241 < var_j_242
                                    ) : (
                                        ab_i_1329 = abort
                                    ));
                            var_j_245 = candidate_b_137;
                            appl_j_246 = flatten_fun_j_244 var_j_245;
                            if_j_250 = appl_j_246 ? (
                                    var_j_247 = candidate_b_137
                                ) : (
                                    bool_j_248 = false;
                                    assume_j_249 = assume bool_j_248
                                ));
                        flatten_fun_j_253 = fun expr_b_144 -> (
                            var_j_252 = expr_b_144);
                        record_j_254 = {checker = flatten_fun_j_222, generator = flatten_fun_j_251, wrapper = flatten_fun_j_253};
                        proj_j_255 = record_j_254.generator;
                        int_j_256 = 0;
                        appl_j_257 = proj_j_255 int_j_256;
                        candidate_b_145 = appl_j_257;
                        flatten_fun_j_261 = fun x_j_54 -> (
                            var_j_258 = x_j_54;
                            int_j_259 = 0;
                            m_bl_i_1330 = var_j_258 ~ int;
                            m_br_i_1331 = int_j_259 ~ int;
                            m_b_i_1332 = m_bl_i_1330 and m_br_i_1331;
                            binop_j_260 = m_b_i_1332 ? (
                                    c_binop_i_1333 = var_j_258 < int_j_259
                                ) : (
                                    ab_i_1334 = abort
                                ));
                        var_j_262 = candidate_b_145;
                        appl_j_263 = flatten_fun_j_261 var_j_262;
                        if_j_267 = appl_j_263 ? (
                                var_j_264 = candidate_b_145
                            ) : (
                                bool_j_265 = false;
                                assume_j_266 = assume bool_j_265
                            ));
                    flatten_fun_j_270 = fun expr_b_160 -> (
                        var_j_269 = expr_b_160);
                    record_j_271 = {checker = flatten_fun_j_190, generator = flatten_fun_j_268, wrapper = flatten_fun_j_270};
                    proj_j_272 = record_j_271.checker;
                    var_j_273 = fun_ret_b_163;
                    appl_j_274 = proj_j_272 var_j_273);
                flatten_fun_j_467 = fun bj_null_j_70 -> (
                    flatten_fun_j_466 = fun arg_assume_b_129 -> (
                        bool_j_276 = false;
                        fail_b_100 = bool_j_276;
                        flatten_fun_j_285 = fun expr_b_99 -> (
                            var_j_277 = expr_b_99;
                            m_match_bool_j_279 = var_j_277 ~ any;
                            m_match_bool_j_282 = var_j_277 ~ int;
                            m_match_cond_j_283 = m_match_bool_j_282 ? (
                                    bool_j_284 = true
                                ) : (
                                    m_match_cond_j_280 = m_match_bool_j_279 ? (
                                            var_j_281 = fail_b_100
                                        ) : (
                                            void_j_278 = {}
                                        )
                                ));
                        flatten_fun_j_287 = fun bj_null_j_56 -> (
                            input_j_286 = input);
                        flatten_fun_j_289 = fun expr_b_101 -> (
                            var_j_288 = expr_b_101);
                        record_j_290 = {checker = flatten_fun_j_285, generator = flatten_fun_j_287, wrapper = flatten_fun_j_289};
                        proj_j_291 = record_j_290.checker;
                        var_j_292 = arg_assume_b_129;
                        appl_j_293 = proj_j_291 var_j_292;
                        if_j_465 = appl_j_293 ? (
                                flatten_fun_j_374 = fun expr_b_125 -> (
                                    flatten_fun_j_325 = fun expr_b_121 -> (
                                        bool_j_294 = false;
                                        fail_b_119 = bool_j_294;
                                        flatten_fun_j_303 = fun expr_b_118 -> (
                                            var_j_295 = expr_b_118;
                                            m_match_bool_j_297 = var_j_295 ~ any;
                                            m_match_bool_j_300 = var_j_295 ~ int;
                                            m_match_cond_j_301 = m_match_bool_j_300 ? (
                                                    bool_j_302 = true
                                                ) : (
                                                    m_match_cond_j_298 = m_match_bool_j_297 ? (
                                                            var_j_299 = fail_b_119
                                                        ) : (
                                                            void_j_296 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_305 = fun bj_null_j_57 -> (
                                            input_j_304 = input);
                                        flatten_fun_j_307 = fun expr_b_120 -> (
                                            var_j_306 = expr_b_120);
                                        record_j_308 = {checker = flatten_fun_j_303, generator = flatten_fun_j_305, wrapper = flatten_fun_j_307};
                                        proj_j_309 = record_j_308.checker;
                                        var_j_310 = expr_b_121;
                                        appl_j_311 = proj_j_309 var_j_310;
                                        t_check_b_122 = appl_j_311;
                                        var_j_312 = t_check_b_122;
                                        if_j_324 = var_j_312 ? (
                                                bool_j_313 = false;
                                                pred_check_b_123 = bool_j_313;
                                                flatten_fun_j_317 = fun x_j_58 -> (
                                                    int_j_314 = 0;
                                                    var_j_315 = x_j_58;
                                                    m_bl_i_1335 = int_j_314 ~ int;
                                                    m_br_i_1336 = var_j_315 ~ int;
                                                    m_b_i_1337 = m_bl_i_1335 and m_br_i_1336;
                                                    binop_j_316 = m_b_i_1337 ? (
                                                            c_binop_i_1338 = int_j_314 < var_j_315
                                                        ) : (
                                                            ab_i_1339 = abort
                                                        ));
                                                var_j_318 = expr_b_121;
                                                appl_j_319 = flatten_fun_j_317 var_j_318;
                                                if_j_322 = appl_j_319 ? (
                                                        bool_j_320 = true
                                                    ) : (
                                                        var_j_321 = pred_check_b_123
                                                    )
                                            ) : (
                                                var_j_323 = t_check_b_122
                                            ));
                                    flatten_fun_j_354 = fun bj_null_j_61 -> (
                                        bool_j_326 = false;
                                        fail_b_115 = bool_j_326;
                                        flatten_fun_j_335 = fun expr_b_114 -> (
                                            var_j_327 = expr_b_114;
                                            m_match_bool_j_329 = var_j_327 ~ any;
                                            m_match_bool_j_332 = var_j_327 ~ int;
                                            m_match_cond_j_333 = m_match_bool_j_332 ? (
                                                    bool_j_334 = true
                                                ) : (
                                                    m_match_cond_j_330 = m_match_bool_j_329 ? (
                                                            var_j_331 = fail_b_115
                                                        ) : (
                                                            void_j_328 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_337 = fun bj_null_j_59 -> (
                                            input_j_336 = input);
                                        flatten_fun_j_339 = fun expr_b_116 -> (
                                            var_j_338 = expr_b_116);
                                        record_j_340 = {checker = flatten_fun_j_335, generator = flatten_fun_j_337, wrapper = flatten_fun_j_339};
                                        proj_j_341 = record_j_340.generator;
                                        int_j_342 = 0;
                                        appl_j_343 = proj_j_341 int_j_342;
                                        candidate_b_117 = appl_j_343;
                                        flatten_fun_j_347 = fun x_j_60 -> (
                                            int_j_344 = 0;
                                            var_j_345 = x_j_60;
                                            m_bl_i_1340 = int_j_344 ~ int;
                                            m_br_i_1341 = var_j_345 ~ int;
                                            m_b_i_1342 = m_bl_i_1340 and m_br_i_1341;
                                            binop_j_346 = m_b_i_1342 ? (
                                                    c_binop_i_1343 = int_j_344 < var_j_345
                                                ) : (
                                                    ab_i_1344 = abort
                                                ));
                                        var_j_348 = candidate_b_117;
                                        appl_j_349 = flatten_fun_j_347 var_j_348;
                                        if_j_353 = appl_j_349 ? (
                                                var_j_350 = candidate_b_117
                                            ) : (
                                                bool_j_351 = false;
                                                assume_j_352 = assume bool_j_351
                                            ));
                                    flatten_fun_j_356 = fun expr_b_124 -> (
                                        var_j_355 = expr_b_124);
                                    record_j_357 = {checker = flatten_fun_j_325, generator = flatten_fun_j_354, wrapper = flatten_fun_j_356};
                                    proj_j_358 = record_j_357.checker;
                                    var_j_359 = expr_b_125;
                                    appl_j_360 = proj_j_358 var_j_359;
                                    t_check_b_126 = appl_j_360;
                                    var_j_361 = t_check_b_126;
                                    if_j_373 = var_j_361 ? (
                                            bool_j_362 = false;
                                            pred_check_b_127 = bool_j_362;
                                            flatten_fun_j_366 = fun x_j_62 -> (
                                                var_j_363 = x_j_62;
                                                int_j_364 = 0;
                                                m_bl_i_1345 = var_j_363 ~ int;
                                                m_br_i_1346 = int_j_364 ~ int;
                                                m_b_i_1347 = m_bl_i_1345 and m_br_i_1346;
                                                binop_j_365 = m_b_i_1347 ? (
                                                        c_binop_i_1348 = var_j_363 < int_j_364
                                                    ) : (
                                                        ab_i_1349 = abort
                                                    ));
                                            var_j_367 = expr_b_125;
                                            appl_j_368 = flatten_fun_j_366 var_j_367;
                                            if_j_371 = appl_j_368 ? (
                                                    bool_j_369 = true
                                                ) : (
                                                    var_j_370 = pred_check_b_127
                                                )
                                        ) : (
                                            var_j_372 = t_check_b_126
                                        ));
                                flatten_fun_j_452 = fun bj_null_j_69 -> (
                                    flatten_fun_j_406 = fun expr_b_109 -> (
                                        bool_j_375 = false;
                                        fail_b_107 = bool_j_375;
                                        flatten_fun_j_384 = fun expr_b_106 -> (
                                            var_j_376 = expr_b_106;
                                            m_match_bool_j_378 = var_j_376 ~ any;
                                            m_match_bool_j_381 = var_j_376 ~ int;
                                            m_match_cond_j_382 = m_match_bool_j_381 ? (
                                                    bool_j_383 = true
                                                ) : (
                                                    m_match_cond_j_379 = m_match_bool_j_378 ? (
                                                            var_j_380 = fail_b_107
                                                        ) : (
                                                            void_j_377 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_386 = fun bj_null_j_63 -> (
                                            input_j_385 = input);
                                        flatten_fun_j_388 = fun expr_b_108 -> (
                                            var_j_387 = expr_b_108);
                                        record_j_389 = {checker = flatten_fun_j_384, generator = flatten_fun_j_386, wrapper = flatten_fun_j_388};
                                        proj_j_390 = record_j_389.checker;
                                        var_j_391 = expr_b_109;
                                        appl_j_392 = proj_j_390 var_j_391;
                                        t_check_b_110 = appl_j_392;
                                        var_j_393 = t_check_b_110;
                                        if_j_405 = var_j_393 ? (
                                                bool_j_394 = false;
                                                pred_check_b_111 = bool_j_394;
                                                flatten_fun_j_398 = fun x_j_64 -> (
                                                    int_j_395 = 0;
                                                    var_j_396 = x_j_64;
                                                    m_bl_i_1350 = int_j_395 ~ int;
                                                    m_br_i_1351 = var_j_396 ~ int;
                                                    m_b_i_1352 = m_bl_i_1350 and m_br_i_1351;
                                                    binop_j_397 = m_b_i_1352 ? (
                                                            c_binop_i_1353 = int_j_395 < var_j_396
                                                        ) : (
                                                            ab_i_1354 = abort
                                                        ));
                                                var_j_399 = expr_b_109;
                                                appl_j_400 = flatten_fun_j_398 var_j_399;
                                                if_j_403 = appl_j_400 ? (
                                                        bool_j_401 = true
                                                    ) : (
                                                        var_j_402 = pred_check_b_111
                                                    )
                                            ) : (
                                                var_j_404 = t_check_b_110
                                            ));
                                    flatten_fun_j_435 = fun bj_null_j_67 -> (
                                        bool_j_407 = false;
                                        fail_b_103 = bool_j_407;
                                        flatten_fun_j_416 = fun expr_b_102 -> (
                                            var_j_408 = expr_b_102;
                                            m_match_bool_j_410 = var_j_408 ~ any;
                                            m_match_bool_j_413 = var_j_408 ~ int;
                                            m_match_cond_j_414 = m_match_bool_j_413 ? (
                                                    bool_j_415 = true
                                                ) : (
                                                    m_match_cond_j_411 = m_match_bool_j_410 ? (
                                                            var_j_412 = fail_b_103
                                                        ) : (
                                                            void_j_409 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_418 = fun bj_null_j_65 -> (
                                            input_j_417 = input);
                                        flatten_fun_j_420 = fun expr_b_104 -> (
                                            var_j_419 = expr_b_104);
                                        record_j_421 = {checker = flatten_fun_j_416, generator = flatten_fun_j_418, wrapper = flatten_fun_j_420};
                                        proj_j_422 = record_j_421.generator;
                                        int_j_423 = 0;
                                        appl_j_424 = proj_j_422 int_j_423;
                                        candidate_b_105 = appl_j_424;
                                        flatten_fun_j_428 = fun x_j_66 -> (
                                            int_j_425 = 0;
                                            var_j_426 = x_j_66;
                                            m_bl_i_1355 = int_j_425 ~ int;
                                            m_br_i_1356 = var_j_426 ~ int;
                                            m_b_i_1357 = m_bl_i_1355 and m_br_i_1356;
                                            binop_j_427 = m_b_i_1357 ? (
                                                    c_binop_i_1358 = int_j_425 < var_j_426
                                                ) : (
                                                    ab_i_1359 = abort
                                                ));
                                        var_j_429 = candidate_b_105;
                                        appl_j_430 = flatten_fun_j_428 var_j_429;
                                        if_j_434 = appl_j_430 ? (
                                                var_j_431 = candidate_b_105
                                            ) : (
                                                bool_j_432 = false;
                                                assume_j_433 = assume bool_j_432
                                            ));
                                    flatten_fun_j_437 = fun expr_b_112 -> (
                                        var_j_436 = expr_b_112);
                                    record_j_438 = {checker = flatten_fun_j_406, generator = flatten_fun_j_435, wrapper = flatten_fun_j_437};
                                    proj_j_439 = record_j_438.generator;
                                    int_j_440 = 0;
                                    appl_j_441 = proj_j_439 int_j_440;
                                    candidate_b_113 = appl_j_441;
                                    flatten_fun_j_445 = fun x_j_68 -> (
                                        var_j_442 = x_j_68;
                                        int_j_443 = 0;
                                        m_bl_i_1360 = var_j_442 ~ int;
                                        m_br_i_1361 = int_j_443 ~ int;
                                        m_b_i_1362 = m_bl_i_1360 and m_br_i_1361;
                                        binop_j_444 = m_b_i_1362 ? (
                                                c_binop_i_1363 = var_j_442 < int_j_443
                                            ) : (
                                                ab_i_1364 = abort
                                            ));
                                    var_j_446 = candidate_b_113;
                                    appl_j_447 = flatten_fun_j_445 var_j_446;
                                    if_j_451 = appl_j_447 ? (
                                            var_j_448 = candidate_b_113
                                        ) : (
                                            bool_j_449 = false;
                                            assume_j_450 = assume bool_j_449
                                        ));
                                flatten_fun_j_454 = fun expr_b_128 -> (
                                    var_j_453 = expr_b_128);
                                record_j_455 = {checker = flatten_fun_j_374, generator = flatten_fun_j_452, wrapper = flatten_fun_j_454};
                                proj_j_456 = record_j_455.generator;
                                int_j_457 = 0;
                                appl_j_458 = proj_j_456 int_j_457
                            ) : (
                                bool_j_459 = false;
                                fail_b_130 = bool_j_459;
                                var_j_460 = fail_b_130;
                                assert_pred_j_461 = var_j_460;
                                assert_res_j_462 = assert_pred_j_461 ? (
                                        assert_res_true_j_463 = {}
                                    ) : (
                                        ab_j_464 = abort
                                    )
                            )));
                flatten_fun_j_660 = fun expr_b_194 -> (
                    flatten_fun_j_659 = fun arg_b_195 -> (
                        bool_j_468 = false;
                        fail_b_165 = bool_j_468;
                        flatten_fun_j_477 = fun expr_b_164 -> (
                            var_j_469 = expr_b_164;
                            m_match_bool_j_471 = var_j_469 ~ any;
                            m_match_bool_j_474 = var_j_469 ~ int;
                            m_match_cond_j_475 = m_match_bool_j_474 ? (
                                    bool_j_476 = true
                                ) : (
                                    m_match_cond_j_472 = m_match_bool_j_471 ? (
                                            var_j_473 = fail_b_165
                                        ) : (
                                            void_j_470 = {}
                                        )
                                ));
                        flatten_fun_j_479 = fun bj_null_j_71 -> (
                            input_j_478 = input);
                        flatten_fun_j_481 = fun expr_b_166 -> (
                            var_j_480 = expr_b_166);
                        record_j_482 = {checker = flatten_fun_j_477, generator = flatten_fun_j_479, wrapper = flatten_fun_j_481};
                        proj_j_483 = record_j_482.checker;
                        var_j_484 = arg_b_195;
                        m_i_1365 = proj_j_483 ~ fun;
                        appl_j_485 = m_i_1365 ? (
                                c_appl_i_1366 = proj_j_483 var_j_484
                            ) : (
                                ab_i_1367 = abort
                            );
                        m_i_1368 = appl_j_485 ~ bool;
                        if_j_658 = m_i_1368 ? (
                                c_cond_i_1405 = appl_j_485 ? (
                                        flatten_fun_j_566 = fun expr_b_190 -> (
                                            flatten_fun_j_517 = fun expr_b_186 -> (
                                                bool_j_486 = false;
                                                fail_b_184 = bool_j_486;
                                                flatten_fun_j_495 = fun expr_b_183 -> (
                                                    var_j_487 = expr_b_183;
                                                    m_match_bool_j_489 = var_j_487 ~ any;
                                                    m_match_bool_j_492 = var_j_487 ~ int;
                                                    m_match_cond_j_493 = m_match_bool_j_492 ? (
                                                            bool_j_494 = true
                                                        ) : (
                                                            m_match_cond_j_490 = m_match_bool_j_489 ? (
                                                                    var_j_491 = fail_b_184
                                                                ) : (
                                                                    void_j_488 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_497 = fun bj_null_j_72 -> (
                                                    input_j_496 = input);
                                                flatten_fun_j_499 = fun expr_b_185 -> (
                                                    var_j_498 = expr_b_185);
                                                record_j_500 = {checker = flatten_fun_j_495, generator = flatten_fun_j_497, wrapper = flatten_fun_j_499};
                                                proj_j_501 = record_j_500.checker;
                                                var_j_502 = expr_b_186;
                                                appl_j_503 = proj_j_501 var_j_502;
                                                t_check_b_187 = appl_j_503;
                                                var_j_504 = t_check_b_187;
                                                if_j_516 = var_j_504 ? (
                                                        bool_j_505 = false;
                                                        pred_check_b_188 = bool_j_505;
                                                        flatten_fun_j_509 = fun x_j_73 -> (
                                                            int_j_506 = 0;
                                                            var_j_507 = x_j_73;
                                                            m_bl_i_1369 = int_j_506 ~ int;
                                                            m_br_i_1370 = var_j_507 ~ int;
                                                            m_b_i_1371 = m_bl_i_1369 and m_br_i_1370;
                                                            binop_j_508 = m_b_i_1371 ? (
                                                                    c_binop_i_1372 = int_j_506 < var_j_507
                                                                ) : (
                                                                    ab_i_1373 = abort
                                                                ));
                                                        var_j_510 = expr_b_186;
                                                        appl_j_511 = flatten_fun_j_509 var_j_510;
                                                        if_j_514 = appl_j_511 ? (
                                                                bool_j_512 = true
                                                            ) : (
                                                                var_j_513 = pred_check_b_188
                                                            )
                                                    ) : (
                                                        var_j_515 = t_check_b_187
                                                    ));
                                            flatten_fun_j_546 = fun bj_null_j_76 -> (
                                                bool_j_518 = false;
                                                fail_b_180 = bool_j_518;
                                                flatten_fun_j_527 = fun expr_b_179 -> (
                                                    var_j_519 = expr_b_179;
                                                    m_match_bool_j_521 = var_j_519 ~ any;
                                                    m_match_bool_j_524 = var_j_519 ~ int;
                                                    m_match_cond_j_525 = m_match_bool_j_524 ? (
                                                            bool_j_526 = true
                                                        ) : (
                                                            m_match_cond_j_522 = m_match_bool_j_521 ? (
                                                                    var_j_523 = fail_b_180
                                                                ) : (
                                                                    void_j_520 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_529 = fun bj_null_j_74 -> (
                                                    input_j_528 = input);
                                                flatten_fun_j_531 = fun expr_b_181 -> (
                                                    var_j_530 = expr_b_181);
                                                record_j_532 = {checker = flatten_fun_j_527, generator = flatten_fun_j_529, wrapper = flatten_fun_j_531};
                                                proj_j_533 = record_j_532.generator;
                                                int_j_534 = 0;
                                                appl_j_535 = proj_j_533 int_j_534;
                                                candidate_b_182 = appl_j_535;
                                                flatten_fun_j_539 = fun x_j_75 -> (
                                                    int_j_536 = 0;
                                                    var_j_537 = x_j_75;
                                                    m_bl_i_1374 = int_j_536 ~ int;
                                                    m_br_i_1375 = var_j_537 ~ int;
                                                    m_b_i_1376 = m_bl_i_1374 and m_br_i_1375;
                                                    binop_j_538 = m_b_i_1376 ? (
                                                            c_binop_i_1377 = int_j_536 < var_j_537
                                                        ) : (
                                                            ab_i_1378 = abort
                                                        ));
                                                var_j_540 = candidate_b_182;
                                                appl_j_541 = flatten_fun_j_539 var_j_540;
                                                if_j_545 = appl_j_541 ? (
                                                        var_j_542 = candidate_b_182
                                                    ) : (
                                                        bool_j_543 = false;
                                                        assume_j_544 = assume bool_j_543
                                                    ));
                                            flatten_fun_j_548 = fun expr_b_189 -> (
                                                var_j_547 = expr_b_189);
                                            record_j_549 = {checker = flatten_fun_j_517, generator = flatten_fun_j_546, wrapper = flatten_fun_j_548};
                                            proj_j_550 = record_j_549.checker;
                                            var_j_551 = expr_b_190;
                                            appl_j_552 = proj_j_550 var_j_551;
                                            t_check_b_191 = appl_j_552;
                                            var_j_553 = t_check_b_191;
                                            if_j_565 = var_j_553 ? (
                                                    bool_j_554 = false;
                                                    pred_check_b_192 = bool_j_554;
                                                    flatten_fun_j_558 = fun x_j_77 -> (
                                                        var_j_555 = x_j_77;
                                                        int_j_556 = 0;
                                                        m_bl_i_1379 = var_j_555 ~ int;
                                                        m_br_i_1380 = int_j_556 ~ int;
                                                        m_b_i_1381 = m_bl_i_1379 and m_br_i_1380;
                                                        binop_j_557 = m_b_i_1381 ? (
                                                                c_binop_i_1382 = var_j_555 < int_j_556
                                                            ) : (
                                                                ab_i_1383 = abort
                                                            ));
                                                    var_j_559 = expr_b_190;
                                                    appl_j_560 = flatten_fun_j_558 var_j_559;
                                                    if_j_563 = appl_j_560 ? (
                                                            bool_j_561 = true
                                                        ) : (
                                                            var_j_562 = pred_check_b_192
                                                        )
                                                ) : (
                                                    var_j_564 = t_check_b_191
                                                ));
                                        flatten_fun_j_644 = fun bj_null_j_84 -> (
                                            flatten_fun_j_598 = fun expr_b_174 -> (
                                                bool_j_567 = false;
                                                fail_b_172 = bool_j_567;
                                                flatten_fun_j_576 = fun expr_b_171 -> (
                                                    var_j_568 = expr_b_171;
                                                    m_match_bool_j_570 = var_j_568 ~ any;
                                                    m_match_bool_j_573 = var_j_568 ~ int;
                                                    m_match_cond_j_574 = m_match_bool_j_573 ? (
                                                            bool_j_575 = true
                                                        ) : (
                                                            m_match_cond_j_571 = m_match_bool_j_570 ? (
                                                                    var_j_572 = fail_b_172
                                                                ) : (
                                                                    void_j_569 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_578 = fun bj_null_j_78 -> (
                                                    input_j_577 = input);
                                                flatten_fun_j_580 = fun expr_b_173 -> (
                                                    var_j_579 = expr_b_173);
                                                record_j_581 = {checker = flatten_fun_j_576, generator = flatten_fun_j_578, wrapper = flatten_fun_j_580};
                                                proj_j_582 = record_j_581.checker;
                                                var_j_583 = expr_b_174;
                                                appl_j_584 = proj_j_582 var_j_583;
                                                t_check_b_175 = appl_j_584;
                                                var_j_585 = t_check_b_175;
                                                if_j_597 = var_j_585 ? (
                                                        bool_j_586 = false;
                                                        pred_check_b_176 = bool_j_586;
                                                        flatten_fun_j_590 = fun x_j_79 -> (
                                                            int_j_587 = 0;
                                                            var_j_588 = x_j_79;
                                                            m_bl_i_1384 = int_j_587 ~ int;
                                                            m_br_i_1385 = var_j_588 ~ int;
                                                            m_b_i_1386 = m_bl_i_1384 and m_br_i_1385;
                                                            binop_j_589 = m_b_i_1386 ? (
                                                                    c_binop_i_1387 = int_j_587 < var_j_588
                                                                ) : (
                                                                    ab_i_1388 = abort
                                                                ));
                                                        var_j_591 = expr_b_174;
                                                        appl_j_592 = flatten_fun_j_590 var_j_591;
                                                        if_j_595 = appl_j_592 ? (
                                                                bool_j_593 = true
                                                            ) : (
                                                                var_j_594 = pred_check_b_176
                                                            )
                                                    ) : (
                                                        var_j_596 = t_check_b_175
                                                    ));
                                            flatten_fun_j_627 = fun bj_null_j_82 -> (
                                                bool_j_599 = false;
                                                fail_b_168 = bool_j_599;
                                                flatten_fun_j_608 = fun expr_b_167 -> (
                                                    var_j_600 = expr_b_167;
                                                    m_match_bool_j_602 = var_j_600 ~ any;
                                                    m_match_bool_j_605 = var_j_600 ~ int;
                                                    m_match_cond_j_606 = m_match_bool_j_605 ? (
                                                            bool_j_607 = true
                                                        ) : (
                                                            m_match_cond_j_603 = m_match_bool_j_602 ? (
                                                                    var_j_604 = fail_b_168
                                                                ) : (
                                                                    void_j_601 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_610 = fun bj_null_j_80 -> (
                                                    input_j_609 = input);
                                                flatten_fun_j_612 = fun expr_b_169 -> (
                                                    var_j_611 = expr_b_169);
                                                record_j_613 = {checker = flatten_fun_j_608, generator = flatten_fun_j_610, wrapper = flatten_fun_j_612};
                                                proj_j_614 = record_j_613.generator;
                                                int_j_615 = 0;
                                                appl_j_616 = proj_j_614 int_j_615;
                                                candidate_b_170 = appl_j_616;
                                                flatten_fun_j_620 = fun x_j_81 -> (
                                                    int_j_617 = 0;
                                                    var_j_618 = x_j_81;
                                                    m_bl_i_1389 = int_j_617 ~ int;
                                                    m_br_i_1390 = var_j_618 ~ int;
                                                    m_b_i_1391 = m_bl_i_1389 and m_br_i_1390;
                                                    binop_j_619 = m_b_i_1391 ? (
                                                            c_binop_i_1392 = int_j_617 < var_j_618
                                                        ) : (
                                                            ab_i_1393 = abort
                                                        ));
                                                var_j_621 = candidate_b_170;
                                                appl_j_622 = flatten_fun_j_620 var_j_621;
                                                if_j_626 = appl_j_622 ? (
                                                        var_j_623 = candidate_b_170
                                                    ) : (
                                                        bool_j_624 = false;
                                                        assume_j_625 = assume bool_j_624
                                                    ));
                                            flatten_fun_j_629 = fun expr_b_177 -> (
                                                var_j_628 = expr_b_177);
                                            record_j_630 = {checker = flatten_fun_j_598, generator = flatten_fun_j_627, wrapper = flatten_fun_j_629};
                                            proj_j_631 = record_j_630.generator;
                                            int_j_632 = 0;
                                            appl_j_633 = proj_j_631 int_j_632;
                                            candidate_b_178 = appl_j_633;
                                            flatten_fun_j_637 = fun x_j_83 -> (
                                                var_j_634 = x_j_83;
                                                int_j_635 = 0;
                                                m_bl_i_1394 = var_j_634 ~ int;
                                                m_br_i_1395 = int_j_635 ~ int;
                                                m_b_i_1396 = m_bl_i_1394 and m_br_i_1395;
                                                binop_j_636 = m_b_i_1396 ? (
                                                        c_binop_i_1397 = var_j_634 < int_j_635
                                                    ) : (
                                                        ab_i_1398 = abort
                                                    ));
                                            var_j_638 = candidate_b_178;
                                            appl_j_639 = flatten_fun_j_637 var_j_638;
                                            if_j_643 = appl_j_639 ? (
                                                    var_j_640 = candidate_b_178
                                                ) : (
                                                    bool_j_641 = false;
                                                    assume_j_642 = assume bool_j_641
                                                ));
                                        flatten_fun_j_646 = fun expr_b_193 -> (
                                            var_j_645 = expr_b_193);
                                        record_j_647 = {checker = flatten_fun_j_566, generator = flatten_fun_j_644, wrapper = flatten_fun_j_646};
                                        proj_j_648 = record_j_647.wrapper;
                                        var_j_649 = expr_b_194;
                                        var_j_650 = arg_b_195;
                                        m_i_1399 = var_j_649 ~ fun;
                                        appl_j_651 = m_i_1399 ? (
                                                c_appl_i_1400 = var_j_649 var_j_650
                                            ) : (
                                                ab_i_1401 = abort
                                            );
                                        m_i_1402 = proj_j_648 ~ fun;
                                        appl_j_652 = m_i_1402 ? (
                                                c_appl_i_1403 = proj_j_648 appl_j_651
                                            ) : (
                                                ab_i_1404 = abort
                                            )
                                    ) : (
                                        bool_j_653 = false;
                                        assert_pred_j_654 = bool_j_653;
                                        assert_res_j_655 = assert_pred_j_654 ? (
                                                assert_res_true_j_656 = 
                                                    {}
                                            ) : (
                                                ab_j_657 = abort
                                            )
                                    )
                            ) : (
                                ab_i_1406 = abort
                            )));
                record_j_661 = {checker = flatten_fun_j_275, generator = flatten_fun_j_467, wrapper = flatten_fun_j_660};
                proj_j_662 = record_j_661.checker;
                var_j_663 = f_b_0;
                m_i_1407 = proj_j_662 ~ fun;
                appl_j_664 = m_i_1407 ? (
                        c_appl_i_1408 = proj_j_662 var_j_663
                    ) : (
                        ab_i_1409 = abort
                    )
            ) : (
                bool_j_665 = true
            );
        arg_check_b_1 = if_j_666;
        var_j_667 = arg_check_b_1;
        if_j_691 = var_j_667 ? (
                bool_j_668 = false;
                fail_b_197 = bool_j_668;
                flatten_fun_j_677 = fun expr_b_196 -> (
                    var_j_669 = expr_b_196;
                    m_match_bool_j_671 = var_j_669 ~ any;
                    m_match_bool_j_674 = var_j_669 ~ int;
                    m_match_cond_j_675 = m_match_bool_j_674 ? (
                            bool_j_676 = true
                        ) : (
                            m_match_cond_j_672 = m_match_bool_j_671 ? (
                                    var_j_673 = fail_b_197
                                ) : (
                                    void_j_670 = {}
                                )
                        ));
                flatten_fun_j_679 = fun bj_null_j_85 -> (
                    input_j_678 = input);
                flatten_fun_j_681 = fun expr_b_198 -> (
                    var_j_680 = expr_b_198);
                record_j_682 = {checker = flatten_fun_j_677, generator = flatten_fun_j_679, wrapper = flatten_fun_j_681};
                proj_j_683 = record_j_682.wrapper;
                bool_j_684 = true;
                m_i_1410 = proj_j_683 ~ fun;
                appl_j_685 = m_i_1410 ? (
                        c_appl_i_1411 = proj_j_683 bool_j_684
                    ) : (
                        ab_i_1412 = abort
                    )
            ) : (
                var_j_686 = arg_check_b_1;
                assert_pred_j_687 = var_j_686;
                assert_res_j_688 = assert_pred_j_687 ? (
                        assert_res_true_j_689 = {}
                    ) : (
                        ab_j_690 = abort
                    )
            ));
    var_j_693 = f;
    appl_j_694 = flatten_fun_j_692 var_j_693);
test = test_j_695;
flatten_fun_j_882 = fun expr_b_64 -> (
    bool_j_696 = false;
    fail_b_35 = bool_j_696;
    flatten_fun_j_705 = fun expr_b_34 -> (
        var_j_697 = expr_b_34;
        m_match_bool_j_699 = var_j_697 ~ any;
        m_match_bool_j_702 = var_j_697 ~ int;
        m_match_cond_j_703 = m_match_bool_j_702 ? (
                bool_j_704 = true
            ) : (
                m_match_cond_j_700 = m_match_bool_j_699 ? (
                        var_j_701 = fail_b_35
                    ) : (
                        void_j_698 = {}
                    )
            ));
    flatten_fun_j_707 = fun bj_null -> (
        input_j_706 = input);
    flatten_fun_j_709 = fun expr_b_36 -> (
        var_j_708 = expr_b_36);
    record_j_710 = {checker = flatten_fun_j_705, generator = flatten_fun_j_707, wrapper = flatten_fun_j_709};
    proj_j_711 = record_j_710.generator;
    int_j_712 = 0;
    appl_j_713 = proj_j_711 int_j_712;
    arg_assert_b_65 = appl_j_713;
    var_j_714 = expr_b_64;
    var_j_715 = arg_assert_b_65;
    appl_j_716 = var_j_714 var_j_715;
    fun_ret_b_66 = appl_j_716;
    flatten_fun_j_797 = fun expr_b_60 -> (
        flatten_fun_j_748 = fun expr_b_56 -> (
            bool_j_717 = false;
            fail_b_54 = bool_j_717;
            flatten_fun_j_726 = fun expr_b_53 -> (
                var_j_718 = expr_b_53;
                m_match_bool_j_720 = var_j_718 ~ any;
                m_match_bool_j_723 = var_j_718 ~ int;
                m_match_cond_j_724 = m_match_bool_j_723 ? (
                        bool_j_725 = true
                    ) : (
                        m_match_cond_j_721 = m_match_bool_j_720 ? (
                                var_j_722 = fail_b_54
                            ) : (
                                void_j_719 = {}
                            )
                    ));
            flatten_fun_j_728 = fun bj_null_j_0 -> (
                input_j_727 = input);
            flatten_fun_j_730 = fun expr_b_55 -> (
                var_j_729 = expr_b_55);
            record_j_731 = {checker = flatten_fun_j_726, generator = flatten_fun_j_728, wrapper = flatten_fun_j_730};
            proj_j_732 = record_j_731.checker;
            var_j_733 = expr_b_56;
            appl_j_734 = proj_j_732 var_j_733;
            t_check_b_57 = appl_j_734;
            var_j_735 = t_check_b_57;
            if_j_747 = var_j_735 ? (
                    bool_j_736 = false;
                    pred_check_b_58 = bool_j_736;
                    flatten_fun_j_740 = fun x -> (
                        int_j_737 = 0;
                        var_j_738 = x;
                        m_bl_i_1413 = int_j_737 ~ int;
                        m_br_i_1414 = var_j_738 ~ int;
                        m_b_i_1415 = m_bl_i_1413 and m_br_i_1414;
                        binop_j_739 = m_b_i_1415 ? (
                                c_binop_i_1416 = int_j_737 < var_j_738
                            ) : (
                                ab_i_1417 = abort
                            ));
                    var_j_741 = expr_b_56;
                    appl_j_742 = flatten_fun_j_740 var_j_741;
                    if_j_745 = appl_j_742 ? (
                            bool_j_743 = true
                        ) : (
                            var_j_744 = pred_check_b_58
                        )
                ) : (
                    var_j_746 = t_check_b_57
                ));
        flatten_fun_j_777 = fun bj_null_j_3 -> (
            bool_j_749 = false;
            fail_b_50 = bool_j_749;
            flatten_fun_j_758 = fun expr_b_49 -> (
                var_j_750 = expr_b_49;
                m_match_bool_j_752 = var_j_750 ~ any;
                m_match_bool_j_755 = var_j_750 ~ int;
                m_match_cond_j_756 = m_match_bool_j_755 ? (
                        bool_j_757 = true
                    ) : (
                        m_match_cond_j_753 = m_match_bool_j_752 ? (
                                var_j_754 = fail_b_50
                            ) : (
                                void_j_751 = {}
                            )
                    ));
            flatten_fun_j_760 = fun bj_null_j_1 -> (
                input_j_759 = input);
            flatten_fun_j_762 = fun expr_b_51 -> (
                var_j_761 = expr_b_51);
            record_j_763 = {checker = flatten_fun_j_758, generator = flatten_fun_j_760, wrapper = flatten_fun_j_762};
            proj_j_764 = record_j_763.generator;
            int_j_765 = 0;
            appl_j_766 = proj_j_764 int_j_765;
            candidate_b_52 = appl_j_766;
            flatten_fun_j_770 = fun x_j_2 -> (
                int_j_767 = 0;
                var_j_768 = x_j_2;
                m_bl_i_1418 = int_j_767 ~ int;
                m_br_i_1419 = var_j_768 ~ int;
                m_b_i_1420 = m_bl_i_1418 and m_br_i_1419;
                binop_j_769 = m_b_i_1420 ? (
                        c_binop_i_1421 = int_j_767 < var_j_768
                    ) : (
                        ab_i_1422 = abort
                    ));
            var_j_771 = candidate_b_52;
            appl_j_772 = flatten_fun_j_770 var_j_771;
            if_j_776 = appl_j_772 ? (
                    var_j_773 = candidate_b_52
                ) : (
                    bool_j_774 = false;
                    assume_j_775 = assume bool_j_774
                ));
        flatten_fun_j_779 = fun expr_b_59 -> (
            var_j_778 = expr_b_59);
        record_j_780 = {checker = flatten_fun_j_748, generator = flatten_fun_j_777, wrapper = flatten_fun_j_779};
        proj_j_781 = record_j_780.checker;
        var_j_782 = expr_b_60;
        appl_j_783 = proj_j_781 var_j_782;
        t_check_b_61 = appl_j_783;
        var_j_784 = t_check_b_61;
        if_j_796 = var_j_784 ? (
                bool_j_785 = false;
                pred_check_b_62 = bool_j_785;
                flatten_fun_j_789 = fun x_j_4 -> (
                    var_j_786 = x_j_4;
                    int_j_787 = 0;
                    m_bl_i_1423 = var_j_786 ~ int;
                    m_br_i_1424 = int_j_787 ~ int;
                    m_b_i_1425 = m_bl_i_1423 and m_br_i_1424;
                    binop_j_788 = m_b_i_1425 ? (
                            c_binop_i_1426 = var_j_786 < int_j_787
                        ) : (
                            ab_i_1427 = abort
                        ));
                var_j_790 = expr_b_60;
                appl_j_791 = flatten_fun_j_789 var_j_790;
                if_j_794 = appl_j_791 ? (
                        bool_j_792 = true
                    ) : (
                        var_j_793 = pred_check_b_62
                    )
            ) : (
                var_j_795 = t_check_b_61
            ));
    flatten_fun_j_875 = fun bj_null_j_11 -> (
        flatten_fun_j_829 = fun expr_b_44 -> (
            bool_j_798 = false;
            fail_b_42 = bool_j_798;
            flatten_fun_j_807 = fun expr_b_41 -> (
                var_j_799 = expr_b_41;
                m_match_bool_j_801 = var_j_799 ~ any;
                m_match_bool_j_804 = var_j_799 ~ int;
                m_match_cond_j_805 = m_match_bool_j_804 ? (
                        bool_j_806 = true
                    ) : (
                        m_match_cond_j_802 = m_match_bool_j_801 ? (
                                var_j_803 = fail_b_42
                            ) : (
                                void_j_800 = {}
                            )
                    ));
            flatten_fun_j_809 = fun bj_null_j_5 -> (
                input_j_808 = input);
            flatten_fun_j_811 = fun expr_b_43 -> (
                var_j_810 = expr_b_43);
            record_j_812 = {checker = flatten_fun_j_807, generator = flatten_fun_j_809, wrapper = flatten_fun_j_811};
            proj_j_813 = record_j_812.checker;
            var_j_814 = expr_b_44;
            appl_j_815 = proj_j_813 var_j_814;
            t_check_b_45 = appl_j_815;
            var_j_816 = t_check_b_45;
            if_j_828 = var_j_816 ? (
                    bool_j_817 = false;
                    pred_check_b_46 = bool_j_817;
                    flatten_fun_j_821 = fun x_j_6 -> (
                        int_j_818 = 0;
                        var_j_819 = x_j_6;
                        m_bl_i_1428 = int_j_818 ~ int;
                        m_br_i_1429 = var_j_819 ~ int;
                        m_b_i_1430 = m_bl_i_1428 and m_br_i_1429;
                        binop_j_820 = m_b_i_1430 ? (
                                c_binop_i_1431 = int_j_818 < var_j_819
                            ) : (
                                ab_i_1432 = abort
                            ));
                    var_j_822 = expr_b_44;
                    appl_j_823 = flatten_fun_j_821 var_j_822;
                    if_j_826 = appl_j_823 ? (
                            bool_j_824 = true
                        ) : (
                            var_j_825 = pred_check_b_46
                        )
                ) : (
                    var_j_827 = t_check_b_45
                ));
        flatten_fun_j_858 = fun bj_null_j_9 -> (
            bool_j_830 = false;
            fail_b_38 = bool_j_830;
            flatten_fun_j_839 = fun expr_b_37 -> (
                var_j_831 = expr_b_37;
                m_match_bool_j_833 = var_j_831 ~ any;
                m_match_bool_j_836 = var_j_831 ~ int;
                m_match_cond_j_837 = m_match_bool_j_836 ? (
                        bool_j_838 = true
                    ) : (
                        m_match_cond_j_834 = m_match_bool_j_833 ? (
                                var_j_835 = fail_b_38
                            ) : (
                                void_j_832 = {}
                            )
                    ));
            flatten_fun_j_841 = fun bj_null_j_7 -> (
                input_j_840 = input);
            flatten_fun_j_843 = fun expr_b_39 -> (
                var_j_842 = expr_b_39);
            record_j_844 = {checker = flatten_fun_j_839, generator = flatten_fun_j_841, wrapper = flatten_fun_j_843};
            proj_j_845 = record_j_844.generator;
            int_j_846 = 0;
            appl_j_847 = proj_j_845 int_j_846;
            candidate_b_40 = appl_j_847;
            flatten_fun_j_851 = fun x_j_8 -> (
                int_j_848 = 0;
                var_j_849 = x_j_8;
                m_bl_i_1433 = int_j_848 ~ int;
                m_br_i_1434 = var_j_849 ~ int;
                m_b_i_1435 = m_bl_i_1433 and m_br_i_1434;
                binop_j_850 = m_b_i_1435 ? (
                        c_binop_i_1436 = int_j_848 < var_j_849
                    ) : (
                        ab_i_1437 = abort
                    ));
            var_j_852 = candidate_b_40;
            appl_j_853 = flatten_fun_j_851 var_j_852;
            if_j_857 = appl_j_853 ? (
                    var_j_854 = candidate_b_40
                ) : (
                    bool_j_855 = false;
                    assume_j_856 = assume bool_j_855
                ));
        flatten_fun_j_860 = fun expr_b_47 -> (
            var_j_859 = expr_b_47);
        record_j_861 = {checker = flatten_fun_j_829, generator = flatten_fun_j_858, wrapper = flatten_fun_j_860};
        proj_j_862 = record_j_861.generator;
        int_j_863 = 0;
        appl_j_864 = proj_j_862 int_j_863;
        candidate_b_48 = appl_j_864;
        flatten_fun_j_868 = fun x_j_10 -> (
            var_j_865 = x_j_10;
            int_j_866 = 0;
            m_bl_i_1438 = var_j_865 ~ int;
            m_br_i_1439 = int_j_866 ~ int;
            m_b_i_1440 = m_bl_i_1438 and m_br_i_1439;
            binop_j_867 = m_b_i_1440 ? (
                    c_binop_i_1441 = var_j_865 < int_j_866
                ) : (
                    ab_i_1442 = abort
                ));
        var_j_869 = candidate_b_48;
        appl_j_870 = flatten_fun_j_868 var_j_869;
        if_j_874 = appl_j_870 ? (
                var_j_871 = candidate_b_48
            ) : (
                bool_j_872 = false;
                assume_j_873 = assume bool_j_872
            ));
    flatten_fun_j_877 = fun expr_b_63 -> (
        var_j_876 = expr_b_63);
    record_j_878 = {checker = flatten_fun_j_797, generator = flatten_fun_j_875, wrapper = flatten_fun_j_877};
    proj_j_879 = record_j_878.checker;
    var_j_880 = fun_ret_b_66;
    appl_j_881 = proj_j_879 var_j_880);
flatten_fun_j_1074 = fun bj_null_j_26 -> (
    flatten_fun_j_1073 = fun arg_assume_b_32 -> (
        bool_j_883 = false;
        fail_b_3 = bool_j_883;
        flatten_fun_j_892 = fun expr_b_2 -> (
            var_j_884 = expr_b_2;
            m_match_bool_j_886 = var_j_884 ~ any;
            m_match_bool_j_889 = var_j_884 ~ int;
            m_match_cond_j_890 = m_match_bool_j_889 ? (
                    bool_j_891 = true
                ) : (
                    m_match_cond_j_887 = m_match_bool_j_886 ? (
                            var_j_888 = fail_b_3
                        ) : (
                            void_j_885 = {}
                        )
                ));
        flatten_fun_j_894 = fun bj_null_j_12 -> (
            input_j_893 = input);
        flatten_fun_j_896 = fun expr_b_4 -> (
            var_j_895 = expr_b_4);
        record_j_897 = {checker = flatten_fun_j_892, generator = flatten_fun_j_894, wrapper = flatten_fun_j_896};
        proj_j_898 = record_j_897.checker;
        var_j_899 = arg_assume_b_32;
        appl_j_900 = proj_j_898 var_j_899;
        if_j_1072 = appl_j_900 ? (
                flatten_fun_j_981 = fun expr_b_28 -> (
                    flatten_fun_j_932 = fun expr_b_24 -> (
                        bool_j_901 = false;
                        fail_b_22 = bool_j_901;
                        flatten_fun_j_910 = fun expr_b_21 -> (
                            var_j_902 = expr_b_21;
                            m_match_bool_j_904 = var_j_902 ~ any;
                            m_match_bool_j_907 = var_j_902 ~ int;
                            m_match_cond_j_908 = m_match_bool_j_907 ? (
                                    bool_j_909 = true
                                ) : (
                                    m_match_cond_j_905 = m_match_bool_j_904 ? (
                                            var_j_906 = fail_b_22
                                        ) : (
                                            void_j_903 = {}
                                        )
                                ));
                        flatten_fun_j_912 = fun bj_null_j_13 -> (
                            input_j_911 = input);
                        flatten_fun_j_914 = fun expr_b_23 -> (
                            var_j_913 = expr_b_23);
                        record_j_915 = {checker = flatten_fun_j_910, generator = flatten_fun_j_912, wrapper = flatten_fun_j_914};
                        proj_j_916 = record_j_915.checker;
                        var_j_917 = expr_b_24;
                        appl_j_918 = proj_j_916 var_j_917;
                        t_check_b_25 = appl_j_918;
                        var_j_919 = t_check_b_25;
                        if_j_931 = var_j_919 ? (
                                bool_j_920 = false;
                                pred_check_b_26 = bool_j_920;
                                flatten_fun_j_924 = fun x_j_14 -> (
                                    int_j_921 = 0;
                                    var_j_922 = x_j_14;
                                    m_bl_i_1443 = int_j_921 ~ int;
                                    m_br_i_1444 = var_j_922 ~ int;
                                    m_b_i_1445 = m_bl_i_1443 and m_br_i_1444;
                                    binop_j_923 = m_b_i_1445 ? (
                                            c_binop_i_1446 = int_j_921 < var_j_922
                                        ) : (
                                            ab_i_1447 = abort
                                        ));
                                var_j_925 = expr_b_24;
                                appl_j_926 = flatten_fun_j_924 var_j_925;
                                if_j_929 = appl_j_926 ? (
                                        bool_j_927 = true
                                    ) : (
                                        var_j_928 = pred_check_b_26
                                    )
                            ) : (
                                var_j_930 = t_check_b_25
                            ));
                    flatten_fun_j_961 = fun bj_null_j_17 -> (
                        bool_j_933 = false;
                        fail_b_18 = bool_j_933;
                        flatten_fun_j_942 = fun expr_b_17 -> (
                            var_j_934 = expr_b_17;
                            m_match_bool_j_936 = var_j_934 ~ any;
                            m_match_bool_j_939 = var_j_934 ~ int;
                            m_match_cond_j_940 = m_match_bool_j_939 ? (
                                    bool_j_941 = true
                                ) : (
                                    m_match_cond_j_937 = m_match_bool_j_936 ? (
                                            var_j_938 = fail_b_18
                                        ) : (
                                            void_j_935 = {}
                                        )
                                ));
                        flatten_fun_j_944 = fun bj_null_j_15 -> (
                            input_j_943 = input);
                        flatten_fun_j_946 = fun expr_b_19 -> (
                            var_j_945 = expr_b_19);
                        record_j_947 = {checker = flatten_fun_j_942, generator = flatten_fun_j_944, wrapper = flatten_fun_j_946};
                        proj_j_948 = record_j_947.generator;
                        int_j_949 = 0;
                        appl_j_950 = proj_j_948 int_j_949;
                        candidate_b_20 = appl_j_950;
                        flatten_fun_j_954 = fun x_j_16 -> (
                            int_j_951 = 0;
                            var_j_952 = x_j_16;
                            m_bl_i_1448 = int_j_951 ~ int;
                            m_br_i_1449 = var_j_952 ~ int;
                            m_b_i_1450 = m_bl_i_1448 and m_br_i_1449;
                            binop_j_953 = m_b_i_1450 ? (
                                    c_binop_i_1451 = int_j_951 < var_j_952
                                ) : (
                                    ab_i_1452 = abort
                                ));
                        var_j_955 = candidate_b_20;
                        appl_j_956 = flatten_fun_j_954 var_j_955;
                        if_j_960 = appl_j_956 ? (
                                var_j_957 = candidate_b_20
                            ) : (
                                bool_j_958 = false;
                                assume_j_959 = assume bool_j_958
                            ));
                    flatten_fun_j_963 = fun expr_b_27 -> (
                        var_j_962 = expr_b_27);
                    record_j_964 = {checker = flatten_fun_j_932, generator = flatten_fun_j_961, wrapper = flatten_fun_j_963};
                    proj_j_965 = record_j_964.checker;
                    var_j_966 = expr_b_28;
                    appl_j_967 = proj_j_965 var_j_966;
                    t_check_b_29 = appl_j_967;
                    var_j_968 = t_check_b_29;
                    if_j_980 = var_j_968 ? (
                            bool_j_969 = false;
                            pred_check_b_30 = bool_j_969;
                            flatten_fun_j_973 = fun x_j_18 -> (
                                var_j_970 = x_j_18;
                                int_j_971 = 0;
                                m_bl_i_1453 = var_j_970 ~ int;
                                m_br_i_1454 = int_j_971 ~ int;
                                m_b_i_1455 = m_bl_i_1453 and m_br_i_1454;
                                binop_j_972 = m_b_i_1455 ? (
                                        c_binop_i_1456 = var_j_970 < int_j_971
                                    ) : (
                                        ab_i_1457 = abort
                                    ));
                            var_j_974 = expr_b_28;
                            appl_j_975 = flatten_fun_j_973 var_j_974;
                            if_j_978 = appl_j_975 ? (
                                    bool_j_976 = true
                                ) : (
                                    var_j_977 = pred_check_b_30
                                )
                        ) : (
                            var_j_979 = t_check_b_29
                        ));
                flatten_fun_j_1059 = fun bj_null_j_25 -> (
                    flatten_fun_j_1013 = fun expr_b_12 -> (
                        bool_j_982 = false;
                        fail_b_10 = bool_j_982;
                        flatten_fun_j_991 = fun expr_b_9 -> (
                            var_j_983 = expr_b_9;
                            m_match_bool_j_985 = var_j_983 ~ any;
                            m_match_bool_j_988 = var_j_983 ~ int;
                            m_match_cond_j_989 = m_match_bool_j_988 ? (
                                    bool_j_990 = true
                                ) : (
                                    m_match_cond_j_986 = m_match_bool_j_985 ? (
                                            var_j_987 = fail_b_10
                                        ) : (
                                            void_j_984 = {}
                                        )
                                ));
                        flatten_fun_j_993 = fun bj_null_j_19 -> (
                            input_j_992 = input);
                        flatten_fun_j_995 = fun expr_b_11 -> (
                            var_j_994 = expr_b_11);
                        record_j_996 = {checker = flatten_fun_j_991, generator = flatten_fun_j_993, wrapper = flatten_fun_j_995};
                        proj_j_997 = record_j_996.checker;
                        var_j_998 = expr_b_12;
                        appl_j_999 = proj_j_997 var_j_998;
                        t_check_b_13 = appl_j_999;
                        var_j_1000 = t_check_b_13;
                        if_j_1012 = var_j_1000 ? (
                                bool_j_1001 = false;
                                pred_check_b_14 = bool_j_1001;
                                flatten_fun_j_1005 = fun x_j_20 -> (
                                    int_j_1002 = 0;
                                    var_j_1003 = x_j_20;
                                    m_bl_i_1458 = int_j_1002 ~ int;
                                    m_br_i_1459 = var_j_1003 ~ int;
                                    m_b_i_1460 = m_bl_i_1458 and m_br_i_1459;
                                    binop_j_1004 = m_b_i_1460 ? (
                                            c_binop_i_1461 = int_j_1002 < var_j_1003
                                        ) : (
                                            ab_i_1462 = abort
                                        ));
                                var_j_1006 = expr_b_12;
                                appl_j_1007 = flatten_fun_j_1005 var_j_1006;
                                if_j_1010 = appl_j_1007 ? (
                                        bool_j_1008 = true
                                    ) : (
                                        var_j_1009 = pred_check_b_14
                                    )
                            ) : (
                                var_j_1011 = t_check_b_13
                            ));
                    flatten_fun_j_1042 = fun bj_null_j_23 -> (
                        bool_j_1014 = false;
                        fail_b_6 = bool_j_1014;
                        flatten_fun_j_1023 = fun expr_b_5 -> (
                            var_j_1015 = expr_b_5;
                            m_match_bool_j_1017 = var_j_1015 ~ any;
                            m_match_bool_j_1020 = var_j_1015 ~ int;
                            m_match_cond_j_1021 = m_match_bool_j_1020 ? (
                                    bool_j_1022 = true
                                ) : (
                                    m_match_cond_j_1018 = m_match_bool_j_1017 ? (
                                            var_j_1019 = fail_b_6
                                        ) : (
                                            void_j_1016 = {}
                                        )
                                ));
                        flatten_fun_j_1025 = fun bj_null_j_21 -> (
                            input_j_1024 = input);
                        flatten_fun_j_1027 = fun expr_b_7 -> (
                            var_j_1026 = expr_b_7);
                        record_j_1028 = {checker = flatten_fun_j_1023, generator = flatten_fun_j_1025, wrapper = flatten_fun_j_1027};
                        proj_j_1029 = record_j_1028.generator;
                        int_j_1030 = 0;
                        appl_j_1031 = proj_j_1029 int_j_1030;
                        candidate_b_8 = appl_j_1031;
                        flatten_fun_j_1035 = fun x_j_22 -> (
                            int_j_1032 = 0;
                            var_j_1033 = x_j_22;
                            m_bl_i_1463 = int_j_1032 ~ int;
                            m_br_i_1464 = var_j_1033 ~ int;
                            m_b_i_1465 = m_bl_i_1463 and m_br_i_1464;
                            binop_j_1034 = m_b_i_1465 ? (
                                    c_binop_i_1466 = int_j_1032 < var_j_1033
                                ) : (
                                    ab_i_1467 = abort
                                ));
                        var_j_1036 = candidate_b_8;
                        appl_j_1037 = flatten_fun_j_1035 var_j_1036;
                        if_j_1041 = appl_j_1037 ? (
                                var_j_1038 = candidate_b_8
                            ) : (
                                bool_j_1039 = false;
                                assume_j_1040 = assume bool_j_1039
                            ));
                    flatten_fun_j_1044 = fun expr_b_15 -> (
                        var_j_1043 = expr_b_15);
                    record_j_1045 = {checker = flatten_fun_j_1013, generator = flatten_fun_j_1042, wrapper = flatten_fun_j_1044};
                    proj_j_1046 = record_j_1045.generator;
                    int_j_1047 = 0;
                    appl_j_1048 = proj_j_1046 int_j_1047;
                    candidate_b_16 = appl_j_1048;
                    flatten_fun_j_1052 = fun x_j_24 -> (
                        var_j_1049 = x_j_24;
                        int_j_1050 = 0;
                        m_bl_i_1468 = var_j_1049 ~ int;
                        m_br_i_1469 = int_j_1050 ~ int;
                        m_b_i_1470 = m_bl_i_1468 and m_br_i_1469;
                        binop_j_1051 = m_b_i_1470 ? (
                                c_binop_i_1471 = var_j_1049 < int_j_1050
                            ) : (
                                ab_i_1472 = abort
                            ));
                    var_j_1053 = candidate_b_16;
                    appl_j_1054 = flatten_fun_j_1052 var_j_1053;
                    if_j_1058 = appl_j_1054 ? (
                            var_j_1055 = candidate_b_16
                        ) : (
                            bool_j_1056 = false;
                            assume_j_1057 = assume bool_j_1056
                        ));
                flatten_fun_j_1061 = fun expr_b_31 -> (
                    var_j_1060 = expr_b_31);
                record_j_1062 = {checker = flatten_fun_j_981, generator = flatten_fun_j_1059, wrapper = flatten_fun_j_1061};
                proj_j_1063 = record_j_1062.generator;
                int_j_1064 = 0;
                appl_j_1065 = proj_j_1063 int_j_1064
            ) : (
                bool_j_1066 = false;
                fail_b_33 = bool_j_1066;
                var_j_1067 = fail_b_33;
                assert_pred_j_1068 = var_j_1067;
                assert_res_j_1069 = assert_pred_j_1068 ? (
                        assert_res_true_j_1070 = {}
                    ) : (
                        ab_j_1071 = abort
                    )
            )));
flatten_fun_j_1267 = fun expr_b_97 -> (
    flatten_fun_j_1266 = fun arg_b_98 -> (
        bool_j_1075 = false;
        fail_b_68 = bool_j_1075;
        flatten_fun_j_1084 = fun expr_b_67 -> (
            var_j_1076 = expr_b_67;
            m_match_bool_j_1078 = var_j_1076 ~ any;
            m_match_bool_j_1081 = var_j_1076 ~ int;
            m_match_cond_j_1082 = m_match_bool_j_1081 ? (
                    bool_j_1083 = true
                ) : (
                    m_match_cond_j_1079 = m_match_bool_j_1078 ? (
                            var_j_1080 = fail_b_68
                        ) : (
                            void_j_1077 = {}
                        )
                ));
        flatten_fun_j_1086 = fun bj_null_j_27 -> (
            input_j_1085 = input);
        flatten_fun_j_1088 = fun expr_b_69 -> (
            var_j_1087 = expr_b_69);
        record_j_1089 = {checker = flatten_fun_j_1084, generator = flatten_fun_j_1086, wrapper = flatten_fun_j_1088};
        proj_j_1090 = record_j_1089.checker;
        var_j_1091 = arg_b_98;
        m_i_1473 = proj_j_1090 ~ fun;
        appl_j_1092 = m_i_1473 ? (
                c_appl_i_1474 = proj_j_1090 var_j_1091
            ) : (
                ab_i_1475 = abort
            );
        m_i_1476 = appl_j_1092 ~ bool;
        if_j_1265 = m_i_1476 ? (
                c_cond_i_1513 = appl_j_1092 ? (
                        flatten_fun_j_1173 = fun expr_b_93 -> (
                            flatten_fun_j_1124 = fun expr_b_89 -> (
                                bool_j_1093 = false;
                                fail_b_87 = bool_j_1093;
                                flatten_fun_j_1102 = fun expr_b_86 -> (
                                    var_j_1094 = expr_b_86;
                                    m_match_bool_j_1096 = var_j_1094 ~ any;
                                    m_match_bool_j_1099 = var_j_1094 ~ int;
                                    m_match_cond_j_1100 = m_match_bool_j_1099 ? (
                                            bool_j_1101 = true
                                        ) : (
                                            m_match_cond_j_1097 = m_match_bool_j_1096 ? (
                                                    var_j_1098 = fail_b_87
                                                ) : (
                                                    void_j_1095 = {}
                                                )
                                        ));
                                flatten_fun_j_1104 = fun bj_null_j_28 -> (
                                    input_j_1103 = input);
                                flatten_fun_j_1106 = fun expr_b_88 -> (
                                    var_j_1105 = expr_b_88);
                                record_j_1107 = {checker = flatten_fun_j_1102, generator = flatten_fun_j_1104, wrapper = flatten_fun_j_1106};
                                proj_j_1108 = record_j_1107.checker;
                                var_j_1109 = expr_b_89;
                                appl_j_1110 = proj_j_1108 var_j_1109;
                                t_check_b_90 = appl_j_1110;
                                var_j_1111 = t_check_b_90;
                                if_j_1123 = var_j_1111 ? (
                                        bool_j_1112 = false;
                                        pred_check_b_91 = bool_j_1112;
                                        flatten_fun_j_1116 = fun x_j_29 -> (
                                            int_j_1113 = 0;
                                            var_j_1114 = x_j_29;
                                            m_bl_i_1477 = int_j_1113 ~ int;
                                            m_br_i_1478 = var_j_1114 ~ int;
                                            m_b_i_1479 = m_bl_i_1477 and m_br_i_1478;
                                            binop_j_1115 = m_b_i_1479 ? (
                                                    c_binop_i_1480 = int_j_1113 < var_j_1114
                                                ) : (
                                                    ab_i_1481 = abort
                                                ));
                                        var_j_1117 = expr_b_89;
                                        appl_j_1118 = flatten_fun_j_1116 var_j_1117;
                                        if_j_1121 = appl_j_1118 ? (
                                                bool_j_1119 = true
                                            ) : (
                                                var_j_1120 = pred_check_b_91
                                            )
                                    ) : (
                                        var_j_1122 = t_check_b_90
                                    ));
                            flatten_fun_j_1153 = fun bj_null_j_32 -> (
                                bool_j_1125 = false;
                                fail_b_83 = bool_j_1125;
                                flatten_fun_j_1134 = fun expr_b_82 -> (
                                    var_j_1126 = expr_b_82;
                                    m_match_bool_j_1128 = var_j_1126 ~ any;
                                    m_match_bool_j_1131 = var_j_1126 ~ int;
                                    m_match_cond_j_1132 = m_match_bool_j_1131 ? (
                                            bool_j_1133 = true
                                        ) : (
                                            m_match_cond_j_1129 = m_match_bool_j_1128 ? (
                                                    var_j_1130 = fail_b_83
                                                ) : (
                                                    void_j_1127 = {}
                                                )
                                        ));
                                flatten_fun_j_1136 = fun bj_null_j_30 -> (
                                    input_j_1135 = input);
                                flatten_fun_j_1138 = fun expr_b_84 -> (
                                    var_j_1137 = expr_b_84);
                                record_j_1139 = {checker = flatten_fun_j_1134, generator = flatten_fun_j_1136, wrapper = flatten_fun_j_1138};
                                proj_j_1140 = record_j_1139.generator;
                                int_j_1141 = 0;
                                appl_j_1142 = proj_j_1140 int_j_1141;
                                candidate_b_85 = appl_j_1142;
                                flatten_fun_j_1146 = fun x_j_31 -> (
                                    int_j_1143 = 0;
                                    var_j_1144 = x_j_31;
                                    m_bl_i_1482 = int_j_1143 ~ int;
                                    m_br_i_1483 = var_j_1144 ~ int;
                                    m_b_i_1484 = m_bl_i_1482 and m_br_i_1483;
                                    binop_j_1145 = m_b_i_1484 ? (
                                            c_binop_i_1485 = int_j_1143 < var_j_1144
                                        ) : (
                                            ab_i_1486 = abort
                                        ));
                                var_j_1147 = candidate_b_85;
                                appl_j_1148 = flatten_fun_j_1146 var_j_1147;
                                if_j_1152 = appl_j_1148 ? (
                                        var_j_1149 = candidate_b_85
                                    ) : (
                                        bool_j_1150 = false;
                                        assume_j_1151 = assume bool_j_1150
                                    ));
                            flatten_fun_j_1155 = fun expr_b_92 -> (
                                var_j_1154 = expr_b_92);
                            record_j_1156 = {checker = flatten_fun_j_1124, generator = flatten_fun_j_1153, wrapper = flatten_fun_j_1155};
                            proj_j_1157 = record_j_1156.checker;
                            var_j_1158 = expr_b_93;
                            appl_j_1159 = proj_j_1157 var_j_1158;
                            t_check_b_94 = appl_j_1159;
                            var_j_1160 = t_check_b_94;
                            if_j_1172 = var_j_1160 ? (
                                    bool_j_1161 = false;
                                    pred_check_b_95 = bool_j_1161;
                                    flatten_fun_j_1165 = fun x_j_33 -> (
                                        var_j_1162 = x_j_33;
                                        int_j_1163 = 0;
                                        m_bl_i_1487 = var_j_1162 ~ int;
                                        m_br_i_1488 = int_j_1163 ~ int;
                                        m_b_i_1489 = m_bl_i_1487 and m_br_i_1488;
                                        binop_j_1164 = m_b_i_1489 ? (
                                                c_binop_i_1490 = var_j_1162 < int_j_1163
                                            ) : (
                                                ab_i_1491 = abort
                                            ));
                                    var_j_1166 = expr_b_93;
                                    appl_j_1167 = flatten_fun_j_1165 var_j_1166;
                                    if_j_1170 = appl_j_1167 ? (
                                            bool_j_1168 = true
                                        ) : (
                                            var_j_1169 = pred_check_b_95
                                        )
                                ) : (
                                    var_j_1171 = t_check_b_94
                                ));
                        flatten_fun_j_1251 = fun bj_null_j_40 -> (
                            flatten_fun_j_1205 = fun expr_b_77 -> (
                                bool_j_1174 = false;
                                fail_b_75 = bool_j_1174;
                                flatten_fun_j_1183 = fun expr_b_74 -> (
                                    var_j_1175 = expr_b_74;
                                    m_match_bool_j_1177 = var_j_1175 ~ any;
                                    m_match_bool_j_1180 = var_j_1175 ~ int;
                                    m_match_cond_j_1181 = m_match_bool_j_1180 ? (
                                            bool_j_1182 = true
                                        ) : (
                                            m_match_cond_j_1178 = m_match_bool_j_1177 ? (
                                                    var_j_1179 = fail_b_75
                                                ) : (
                                                    void_j_1176 = {}
                                                )
                                        ));
                                flatten_fun_j_1185 = fun bj_null_j_34 -> (
                                    input_j_1184 = input);
                                flatten_fun_j_1187 = fun expr_b_76 -> (
                                    var_j_1186 = expr_b_76);
                                record_j_1188 = {checker = flatten_fun_j_1183, generator = flatten_fun_j_1185, wrapper = flatten_fun_j_1187};
                                proj_j_1189 = record_j_1188.checker;
                                var_j_1190 = expr_b_77;
                                appl_j_1191 = proj_j_1189 var_j_1190;
                                t_check_b_78 = appl_j_1191;
                                var_j_1192 = t_check_b_78;
                                if_j_1204 = var_j_1192 ? (
                                        bool_j_1193 = false;
                                        pred_check_b_79 = bool_j_1193;
                                        flatten_fun_j_1197 = fun x_j_35 -> (
                                            int_j_1194 = 0;
                                            var_j_1195 = x_j_35;
                                            m_bl_i_1492 = int_j_1194 ~ int;
                                            m_br_i_1493 = var_j_1195 ~ int;
                                            m_b_i_1494 = m_bl_i_1492 and m_br_i_1493;
                                            binop_j_1196 = m_b_i_1494 ? (
                                                    c_binop_i_1495 = int_j_1194 < var_j_1195
                                                ) : (
                                                    ab_i_1496 = abort
                                                ));
                                        var_j_1198 = expr_b_77;
                                        appl_j_1199 = flatten_fun_j_1197 var_j_1198;
                                        if_j_1202 = appl_j_1199 ? (
                                                bool_j_1200 = true
                                            ) : (
                                                var_j_1201 = pred_check_b_79
                                            )
                                    ) : (
                                        var_j_1203 = t_check_b_78
                                    ));
                            flatten_fun_j_1234 = fun bj_null_j_38 -> (
                                bool_j_1206 = false;
                                fail_b_71 = bool_j_1206;
                                flatten_fun_j_1215 = fun expr_b_70 -> (
                                    var_j_1207 = expr_b_70;
                                    m_match_bool_j_1209 = var_j_1207 ~ any;
                                    m_match_bool_j_1212 = var_j_1207 ~ int;
                                    m_match_cond_j_1213 = m_match_bool_j_1212 ? (
                                            bool_j_1214 = true
                                        ) : (
                                            m_match_cond_j_1210 = m_match_bool_j_1209 ? (
                                                    var_j_1211 = fail_b_71
                                                ) : (
                                                    void_j_1208 = {}
                                                )
                                        ));
                                flatten_fun_j_1217 = fun bj_null_j_36 -> (
                                    input_j_1216 = input);
                                flatten_fun_j_1219 = fun expr_b_72 -> (
                                    var_j_1218 = expr_b_72);
                                record_j_1220 = {checker = flatten_fun_j_1215, generator = flatten_fun_j_1217, wrapper = flatten_fun_j_1219};
                                proj_j_1221 = record_j_1220.generator;
                                int_j_1222 = 0;
                                appl_j_1223 = proj_j_1221 int_j_1222;
                                candidate_b_73 = appl_j_1223;
                                flatten_fun_j_1227 = fun x_j_37 -> (
                                    int_j_1224 = 0;
                                    var_j_1225 = x_j_37;
                                    m_bl_i_1497 = int_j_1224 ~ int;
                                    m_br_i_1498 = var_j_1225 ~ int;
                                    m_b_i_1499 = m_bl_i_1497 and m_br_i_1498;
                                    binop_j_1226 = m_b_i_1499 ? (
                                            c_binop_i_1500 = int_j_1224 < var_j_1225
                                        ) : (
                                            ab_i_1501 = abort
                                        ));
                                var_j_1228 = candidate_b_73;
                                appl_j_1229 = flatten_fun_j_1227 var_j_1228;
                                if_j_1233 = appl_j_1229 ? (
                                        var_j_1230 = candidate_b_73
                                    ) : (
                                        bool_j_1231 = false;
                                        assume_j_1232 = assume bool_j_1231
                                    ));
                            flatten_fun_j_1236 = fun expr_b_80 -> (
                                var_j_1235 = expr_b_80);
                            record_j_1237 = {checker = flatten_fun_j_1205, generator = flatten_fun_j_1234, wrapper = flatten_fun_j_1236};
                            proj_j_1238 = record_j_1237.generator;
                            int_j_1239 = 0;
                            appl_j_1240 = proj_j_1238 int_j_1239;
                            candidate_b_81 = appl_j_1240;
                            flatten_fun_j_1244 = fun x_j_39 -> (
                                var_j_1241 = x_j_39;
                                int_j_1242 = 0;
                                m_bl_i_1502 = var_j_1241 ~ int;
                                m_br_i_1503 = int_j_1242 ~ int;
                                m_b_i_1504 = m_bl_i_1502 and m_br_i_1503;
                                binop_j_1243 = m_b_i_1504 ? (
                                        c_binop_i_1505 = var_j_1241 < int_j_1242
                                    ) : (
                                        ab_i_1506 = abort
                                    ));
                            var_j_1245 = candidate_b_81;
                            appl_j_1246 = flatten_fun_j_1244 var_j_1245;
                            if_j_1250 = appl_j_1246 ? (
                                    var_j_1247 = candidate_b_81
                                ) : (
                                    bool_j_1248 = false;
                                    assume_j_1249 = assume bool_j_1248
                                ));
                        flatten_fun_j_1253 = fun expr_b_96 -> (
                            var_j_1252 = expr_b_96);
                        record_j_1254 = {checker = flatten_fun_j_1173, generator = flatten_fun_j_1251, wrapper = flatten_fun_j_1253};
                        proj_j_1255 = record_j_1254.wrapper;
                        var_j_1256 = expr_b_97;
                        var_j_1257 = arg_b_98;
                        m_i_1507 = var_j_1256 ~ fun;
                        appl_j_1258 = m_i_1507 ? (
                                c_appl_i_1508 = var_j_1256 var_j_1257
                            ) : (
                                ab_i_1509 = abort
                            );
                        m_i_1510 = proj_j_1255 ~ fun;
                        appl_j_1259 = m_i_1510 ? (
                                c_appl_i_1511 = proj_j_1255 appl_j_1258
                            ) : (
                                ab_i_1512 = abort
                            )
                    ) : (
                        bool_j_1260 = false;
                        assert_pred_j_1261 = bool_j_1260;
                        assert_res_j_1262 = assert_pred_j_1261 ? (
                                assert_res_true_j_1263 = {}
                            ) : (
                                ab_j_1264 = abort
                            )
                    )
            ) : (
                ab_i_1514 = abort
            )));
record_j_1268 = {checker = flatten_fun_j_882, generator = flatten_fun_j_1074, wrapper = flatten_fun_j_1267};
proj_j_1269 = record_j_1268.generator;
int_j_1270 = 0;
appl_j_1271 = proj_j_1269 int_j_1270;
f_b_202 = appl_j_1271;
bool_j_1272 = false;
fail_b_200 = bool_j_1272;
flatten_fun_j_1281 = fun expr_b_199 -> (
    var_j_1273 = expr_b_199;
    m_match_bool_j_1275 = var_j_1273 ~ any;
    m_match_bool_j_1278 = var_j_1273 ~ int;
    m_match_cond_j_1279 = m_match_bool_j_1278 ? (
            bool_j_1280 = true
        ) : (
            m_match_cond_j_1276 = m_match_bool_j_1275 ? (
                    var_j_1277 = fail_b_200
                ) : (
                    void_j_1274 = {}
                )
        ));
flatten_fun_j_1283 = fun bj_null_j_41 -> (
    input_j_1282 = input);
flatten_fun_j_1285 = fun expr_b_201 -> (
    var_j_1284 = expr_b_201);
record_j_1286 = {checker = flatten_fun_j_1281, generator = flatten_fun_j_1283, wrapper = flatten_fun_j_1285};
proj_j_1287 = record_j_1286.checker;
appl_j_1290 = test f_b_202;
appl_j_1291 = proj_j_1287 appl_j_1290;
check_res_b_203 = appl_j_1291;
if_j_1299 = check_res_b_203 ? (
        var_j_1293 = test
    ) : (
        error_var_j_1294 = check_res_b_203;
        assert_pred_j_1295 = error_var_j_1294;
        assert_res_j_1296 = assert_pred_j_1295 ? (
                assert_res_true_j_1297 = {}
            ) : (
                ab_j_1298 = abort
            )
    );
i_result = if_j_1299