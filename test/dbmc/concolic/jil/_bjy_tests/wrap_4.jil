i_first = {};
f_j_185 = fun g -> (
    flatten_fun_j_182 = fun g_b_0 -> (
        int_j_15 = 0;
        input_j_16 = input;
        m_bl_i_349 = int_j_15 ~ int;
        m_br_i_350 = input_j_16 ~ int;
        m_b_i_351 = m_bl_i_349 and m_br_i_350;
        binop_j_17 = m_b_i_351 ? (
                c_binop_i_352 = int_j_15 < input_j_16
            ) : (
                ab_i_353 = abort
            );
        if_j_154 = binop_j_17 ? (
                flatten_fun_j_57 = fun expr_b_41 -> (
                    bool_j_18 = false;
                    fail_b_36 = bool_j_18;
                    flatten_fun_j_27 = fun expr_b_35 -> (
                        var_j_19 = expr_b_35;
                        m_match_bool_j_21 = var_j_19 ~ any;
                        m_match_bool_j_24 = var_j_19 ~ int;
                        m_match_cond_j_25 = m_match_bool_j_24 ? (
                                bool_j_26 = true
                            ) : (
                                m_match_cond_j_22 = m_match_bool_j_21 ? (
                                        var_j_23 = fail_b_36
                                    ) : (
                                        void_j_20 = {}
                                    )
                            ));
                    flatten_fun_j_29 = fun bj_null_j_7 -> (
                        input_j_28 = input);
                    flatten_fun_j_31 = fun expr_b_37 -> (
                        var_j_30 = expr_b_37);
                    record_j_32 = {checker = flatten_fun_j_27, generator = flatten_fun_j_29, wrapper = flatten_fun_j_31};
                    proj_j_33 = record_j_32.generator;
                    int_j_34 = 0;
                    appl_j_35 = proj_j_33 int_j_34;
                    arg_assert_b_42 = appl_j_35;
                    var_j_36 = expr_b_41;
                    var_j_37 = arg_assert_b_42;
                    appl_j_38 = var_j_36 var_j_37;
                    fun_ret_b_43 = appl_j_38;
                    bool_j_39 = false;
                    fail_b_39 = bool_j_39;
                    flatten_fun_j_48 = fun expr_b_38 -> (
                        var_j_40 = expr_b_38;
                        m_match_bool_j_42 = var_j_40 ~ any;
                        m_match_bool_j_45 = var_j_40 ~ int;
                        m_match_cond_j_46 = m_match_bool_j_45 ? (
                                bool_j_47 = true
                            ) : (
                                m_match_cond_j_43 = m_match_bool_j_42 ? (
                                        var_j_44 = fail_b_39
                                    ) : (
                                        void_j_41 = {}
                                    )
                            ));
                    flatten_fun_j_50 = fun bj_null_j_8 -> (
                        input_j_49 = input);
                    flatten_fun_j_52 = fun expr_b_40 -> (
                        var_j_51 = expr_b_40);
                    record_j_53 = {checker = flatten_fun_j_48, generator = flatten_fun_j_50, wrapper = flatten_fun_j_52};
                    proj_j_54 = record_j_53.checker;
                    var_j_55 = fun_ret_b_43;
                    appl_j_56 = proj_j_54 var_j_55);
                flatten_fun_j_102 = fun bj_null_j_11 -> (
                    flatten_fun_j_101 = fun arg_assume_b_33 -> (
                        bool_j_58 = false;
                        fail_b_28 = bool_j_58;
                        flatten_fun_j_67 = fun expr_b_27 -> (
                            var_j_59 = expr_b_27;
                            m_match_bool_j_61 = var_j_59 ~ any;
                            m_match_bool_j_64 = var_j_59 ~ int;
                            m_match_cond_j_65 = m_match_bool_j_64 ? (
                                    bool_j_66 = true
                                ) : (
                                    m_match_cond_j_62 = m_match_bool_j_61 ? (
                                            var_j_63 = fail_b_28
                                        ) : (
                                            void_j_60 = {}
                                        )
                                ));
                        flatten_fun_j_69 = fun bj_null_j_9 -> (
                            input_j_68 = input);
                        flatten_fun_j_71 = fun expr_b_29 -> (
                            var_j_70 = expr_b_29);
                        record_j_72 = {checker = flatten_fun_j_67, generator = flatten_fun_j_69, wrapper = flatten_fun_j_71};
                        proj_j_73 = record_j_72.checker;
                        var_j_74 = arg_assume_b_33;
                        appl_j_75 = proj_j_73 var_j_74;
                        if_j_100 = appl_j_75 ? (
                                bool_j_76 = false;
                                fail_b_31 = bool_j_76;
                                flatten_fun_j_85 = fun expr_b_30 -> (
                                    var_j_77 = expr_b_30;
                                    m_match_bool_j_79 = var_j_77 ~ any;
                                    m_match_bool_j_82 = var_j_77 ~ int;
                                    m_match_cond_j_83 = m_match_bool_j_82 ? (
                                            bool_j_84 = true
                                        ) : (
                                            m_match_cond_j_80 = m_match_bool_j_79 ? (
                                                    var_j_81 = fail_b_31
                                                ) : (
                                                    void_j_78 = {}
                                                )
                                        ));
                                flatten_fun_j_87 = fun bj_null_j_10 -> (
                                    input_j_86 = input);
                                flatten_fun_j_89 = fun expr_b_32 -> (
                                    var_j_88 = expr_b_32);
                                record_j_90 = {checker = flatten_fun_j_85, generator = flatten_fun_j_87, wrapper = flatten_fun_j_89};
                                proj_j_91 = record_j_90.generator;
                                int_j_92 = 0;
                                appl_j_93 = proj_j_91 int_j_92
                            ) : (
                                bool_j_94 = false;
                                fail_b_34 = bool_j_94;
                                var_j_95 = fail_b_34;
                                assert_pred_j_96 = var_j_95;
                                assert_res_j_97 = assert_pred_j_96 ? (
                                        assert_res_true_j_98 = {}
                                    ) : (
                                        ab_j_99 = abort
                                    )
                            )));
                flatten_fun_j_148 = fun expr_b_50 -> (
                    flatten_fun_j_147 = fun arg_b_51 -> (
                        bool_j_103 = false;
                        fail_b_45 = bool_j_103;
                        flatten_fun_j_112 = fun expr_b_44 -> (
                            var_j_104 = expr_b_44;
                            m_match_bool_j_106 = var_j_104 ~ any;
                            m_match_bool_j_109 = var_j_104 ~ int;
                            m_match_cond_j_110 = m_match_bool_j_109 ? (
                                    bool_j_111 = true
                                ) : (
                                    m_match_cond_j_107 = m_match_bool_j_106 ? (
                                            var_j_108 = fail_b_45
                                        ) : (
                                            void_j_105 = {}
                                        )
                                ));
                        flatten_fun_j_114 = fun bj_null_j_12 -> (
                            input_j_113 = input);
                        flatten_fun_j_116 = fun expr_b_46 -> (
                            var_j_115 = expr_b_46);
                        record_j_117 = {checker = flatten_fun_j_112, generator = flatten_fun_j_114, wrapper = flatten_fun_j_116};
                        proj_j_118 = record_j_117.checker;
                        var_j_119 = arg_b_51;
                        m_i_354 = proj_j_118 ~ fun;
                        appl_j_120 = m_i_354 ? (
                                c_appl_i_355 = proj_j_118 var_j_119
                            ) : (
                                ab_i_356 = abort
                            );
                        m_i_357 = appl_j_120 ~ bool;
                        if_j_146 = m_i_357 ? (
                                c_cond_i_364 = appl_j_120 ? (
                                        bool_j_121 = false;
                                        fail_b_48 = bool_j_121;
                                        flatten_fun_j_130 = fun expr_b_47 -> (
                                            var_j_122 = expr_b_47;
                                            m_match_bool_j_124 = var_j_122 ~ any;
                                            m_match_bool_j_127 = var_j_122 ~ int;
                                            m_match_cond_j_128 = m_match_bool_j_127 ? (
                                                    bool_j_129 = true
                                                ) : (
                                                    m_match_cond_j_125 = m_match_bool_j_124 ? (
                                                            var_j_126 = fail_b_48
                                                        ) : (
                                                            void_j_123 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_132 = fun bj_null_j_13 -> (
                                            input_j_131 = input);
                                        flatten_fun_j_134 = fun expr_b_49 -> (
                                            var_j_133 = expr_b_49);
                                        record_j_135 = {checker = flatten_fun_j_130, generator = flatten_fun_j_132, wrapper = flatten_fun_j_134};
                                        proj_j_136 = record_j_135.wrapper;
                                        var_j_137 = expr_b_50;
                                        var_j_138 = arg_b_51;
                                        m_i_358 = var_j_137 ~ fun;
                                        appl_j_139 = m_i_358 ? (
                                                c_appl_i_359 = var_j_137 var_j_138
                                            ) : (
                                                ab_i_360 = abort
                                            );
                                        m_i_361 = proj_j_136 ~ fun;
                                        appl_j_140 = m_i_361 ? (
                                                c_appl_i_362 = proj_j_136 appl_j_139
                                            ) : (
                                                ab_i_363 = abort
                                            )
                                    ) : (
                                        bool_j_141 = false;
                                        assert_pred_j_142 = bool_j_141;
                                        assert_res_j_143 = assert_pred_j_142 ? (
                                                assert_res_true_j_144 = 
                                                    {}
                                            ) : (
                                                ab_j_145 = abort
                                            )
                                    )
                            ) : (
                                ab_i_365 = abort
                            )));
                record_j_149 = {checker = flatten_fun_j_57, generator = flatten_fun_j_102, wrapper = flatten_fun_j_148};
                proj_j_150 = record_j_149.checker;
                var_j_151 = g_b_0;
                m_i_366 = proj_j_150 ~ fun;
                appl_j_152 = m_i_366 ? (
                        c_appl_i_367 = proj_j_150 var_j_151
                    ) : (
                        ab_i_368 = abort
                    )
            ) : (
                bool_j_153 = true
            );
        arg_check_b_1 = if_j_154;
        var_j_155 = arg_check_b_1;
        if_j_181 = var_j_155 ? (
                bool_j_156 = false;
                fail_b_53 = bool_j_156;
                flatten_fun_j_165 = fun expr_b_52 -> (
                    var_j_157 = expr_b_52;
                    m_match_bool_j_159 = var_j_157 ~ any;
                    m_match_bool_j_162 = var_j_157 ~ int;
                    m_match_cond_j_163 = m_match_bool_j_162 ? (
                            bool_j_164 = true
                        ) : (
                            m_match_cond_j_160 = m_match_bool_j_159 ? (
                                    var_j_161 = fail_b_53
                                ) : (
                                    void_j_158 = {}
                                )
                        ));
                flatten_fun_j_167 = fun bj_null_j_14 -> (
                    input_j_166 = input);
                flatten_fun_j_169 = fun expr_b_54 -> (
                    var_j_168 = expr_b_54);
                record_j_170 = {checker = flatten_fun_j_165, generator = flatten_fun_j_167, wrapper = flatten_fun_j_169};
                proj_j_171 = record_j_170.wrapper;
                var_j_172 = g;
                bool_j_173 = true;
                m_i_369 = var_j_172 ~ fun;
                appl_j_174 = m_i_369 ? (
                        c_appl_i_370 = var_j_172 bool_j_173
                    ) : (
                        ab_i_371 = abort
                    );
                m_i_372 = proj_j_171 ~ fun;
                appl_j_175 = m_i_372 ? (
                        c_appl_i_373 = proj_j_171 appl_j_174
                    ) : (
                        ab_i_374 = abort
                    )
            ) : (
                var_j_176 = arg_check_b_1;
                assert_pred_j_177 = var_j_176;
                assert_res_j_178 = assert_pred_j_177 ? (
                        assert_res_true_j_179 = {}
                    ) : (
                        ab_j_180 = abort
                    )
            ));
    var_j_183 = g;
    appl_j_184 = flatten_fun_j_182 var_j_183);
f = f_j_185;
flatten_fun_j_225 = fun expr_b_16 -> (
    bool_j_186 = false;
    fail_b_11 = bool_j_186;
    flatten_fun_j_195 = fun expr_b_10 -> (
        var_j_187 = expr_b_10;
        m_match_bool_j_189 = var_j_187 ~ any;
        m_match_bool_j_192 = var_j_187 ~ int;
        m_match_cond_j_193 = m_match_bool_j_192 ? (
                bool_j_194 = true
            ) : (
                m_match_cond_j_190 = m_match_bool_j_189 ? (
                        var_j_191 = fail_b_11
                    ) : (
                        void_j_188 = {}
                    )
            ));
    flatten_fun_j_197 = fun bj_null -> (
        input_j_196 = input);
    flatten_fun_j_199 = fun expr_b_12 -> (
        var_j_198 = expr_b_12);
    record_j_200 = {checker = flatten_fun_j_195, generator = flatten_fun_j_197, wrapper = flatten_fun_j_199};
    proj_j_201 = record_j_200.generator;
    int_j_202 = 0;
    appl_j_203 = proj_j_201 int_j_202;
    arg_assert_b_17 = appl_j_203;
    var_j_204 = expr_b_16;
    var_j_205 = arg_assert_b_17;
    appl_j_206 = var_j_204 var_j_205;
    fun_ret_b_18 = appl_j_206;
    bool_j_207 = false;
    fail_b_14 = bool_j_207;
    flatten_fun_j_216 = fun expr_b_13 -> (
        var_j_208 = expr_b_13;
        m_match_bool_j_210 = var_j_208 ~ any;
        m_match_bool_j_213 = var_j_208 ~ int;
        m_match_cond_j_214 = m_match_bool_j_213 ? (
                bool_j_215 = true
            ) : (
                m_match_cond_j_211 = m_match_bool_j_210 ? (
                        var_j_212 = fail_b_14
                    ) : (
                        void_j_209 = {}
                    )
            ));
    flatten_fun_j_218 = fun bj_null_j_0 -> (
        input_j_217 = input);
    flatten_fun_j_220 = fun expr_b_15 -> (
        var_j_219 = expr_b_15);
    record_j_221 = {checker = flatten_fun_j_216, generator = flatten_fun_j_218, wrapper = flatten_fun_j_220};
    proj_j_222 = record_j_221.checker;
    var_j_223 = fun_ret_b_18;
    appl_j_224 = proj_j_222 var_j_223);
flatten_fun_j_270 = fun bj_null_j_3 -> (
    flatten_fun_j_269 = fun arg_assume_b_8 -> (
        bool_j_226 = false;
        fail_b_3 = bool_j_226;
        flatten_fun_j_235 = fun expr_b_2 -> (
            var_j_227 = expr_b_2;
            m_match_bool_j_229 = var_j_227 ~ any;
            m_match_bool_j_232 = var_j_227 ~ int;
            m_match_cond_j_233 = m_match_bool_j_232 ? (
                    bool_j_234 = true
                ) : (
                    m_match_cond_j_230 = m_match_bool_j_229 ? (
                            var_j_231 = fail_b_3
                        ) : (
                            void_j_228 = {}
                        )
                ));
        flatten_fun_j_237 = fun bj_null_j_1 -> (
            input_j_236 = input);
        flatten_fun_j_239 = fun expr_b_4 -> (
            var_j_238 = expr_b_4);
        record_j_240 = {checker = flatten_fun_j_235, generator = flatten_fun_j_237, wrapper = flatten_fun_j_239};
        proj_j_241 = record_j_240.checker;
        var_j_242 = arg_assume_b_8;
        appl_j_243 = proj_j_241 var_j_242;
        if_j_268 = appl_j_243 ? (
                bool_j_244 = false;
                fail_b_6 = bool_j_244;
                flatten_fun_j_253 = fun expr_b_5 -> (
                    var_j_245 = expr_b_5;
                    m_match_bool_j_247 = var_j_245 ~ any;
                    m_match_bool_j_250 = var_j_245 ~ int;
                    m_match_cond_j_251 = m_match_bool_j_250 ? (
                            bool_j_252 = true
                        ) : (
                            m_match_cond_j_248 = m_match_bool_j_247 ? (
                                    var_j_249 = fail_b_6
                                ) : (
                                    void_j_246 = {}
                                )
                        ));
                flatten_fun_j_255 = fun bj_null_j_2 -> (
                    input_j_254 = input);
                flatten_fun_j_257 = fun expr_b_7 -> (
                    var_j_256 = expr_b_7);
                record_j_258 = {checker = flatten_fun_j_253, generator = flatten_fun_j_255, wrapper = flatten_fun_j_257};
                proj_j_259 = record_j_258.generator;
                int_j_260 = 0;
                appl_j_261 = proj_j_259 int_j_260
            ) : (
                bool_j_262 = false;
                fail_b_9 = bool_j_262;
                var_j_263 = fail_b_9;
                assert_pred_j_264 = var_j_263;
                assert_res_j_265 = assert_pred_j_264 ? (
                        assert_res_true_j_266 = {}
                    ) : (
                        ab_j_267 = abort
                    )
            )));
flatten_fun_j_316 = fun expr_b_25 -> (
    flatten_fun_j_315 = fun arg_b_26 -> (
        bool_j_271 = false;
        fail_b_20 = bool_j_271;
        flatten_fun_j_280 = fun expr_b_19 -> (
            var_j_272 = expr_b_19;
            m_match_bool_j_274 = var_j_272 ~ any;
            m_match_bool_j_277 = var_j_272 ~ int;
            m_match_cond_j_278 = m_match_bool_j_277 ? (
                    bool_j_279 = true
                ) : (
                    m_match_cond_j_275 = m_match_bool_j_274 ? (
                            var_j_276 = fail_b_20
                        ) : (
                            void_j_273 = {}
                        )
                ));
        flatten_fun_j_282 = fun bj_null_j_4 -> (
            input_j_281 = input);
        flatten_fun_j_284 = fun expr_b_21 -> (
            var_j_283 = expr_b_21);
        record_j_285 = {checker = flatten_fun_j_280, generator = flatten_fun_j_282, wrapper = flatten_fun_j_284};
        proj_j_286 = record_j_285.checker;
        var_j_287 = arg_b_26;
        m_i_375 = proj_j_286 ~ fun;
        appl_j_288 = m_i_375 ? (
                c_appl_i_376 = proj_j_286 var_j_287
            ) : (
                ab_i_377 = abort
            );
        m_i_378 = appl_j_288 ~ bool;
        if_j_314 = m_i_378 ? (
                c_cond_i_385 = appl_j_288 ? (
                        bool_j_289 = false;
                        fail_b_23 = bool_j_289;
                        flatten_fun_j_298 = fun expr_b_22 -> (
                            var_j_290 = expr_b_22;
                            m_match_bool_j_292 = var_j_290 ~ any;
                            m_match_bool_j_295 = var_j_290 ~ int;
                            m_match_cond_j_296 = m_match_bool_j_295 ? (
                                    bool_j_297 = true
                                ) : (
                                    m_match_cond_j_293 = m_match_bool_j_292 ? (
                                            var_j_294 = fail_b_23
                                        ) : (
                                            void_j_291 = {}
                                        )
                                ));
                        flatten_fun_j_300 = fun bj_null_j_5 -> (
                            input_j_299 = input);
                        flatten_fun_j_302 = fun expr_b_24 -> (
                            var_j_301 = expr_b_24);
                        record_j_303 = {checker = flatten_fun_j_298, generator = flatten_fun_j_300, wrapper = flatten_fun_j_302};
                        proj_j_304 = record_j_303.wrapper;
                        var_j_305 = expr_b_25;
                        var_j_306 = arg_b_26;
                        m_i_379 = var_j_305 ~ fun;
                        appl_j_307 = m_i_379 ? (
                                c_appl_i_380 = var_j_305 var_j_306
                            ) : (
                                ab_i_381 = abort
                            );
                        m_i_382 = proj_j_304 ~ fun;
                        appl_j_308 = m_i_382 ? (
                                c_appl_i_383 = proj_j_304 appl_j_307
                            ) : (
                                ab_i_384 = abort
                            )
                    ) : (
                        bool_j_309 = false;
                        assert_pred_j_310 = bool_j_309;
                        assert_res_j_311 = assert_pred_j_310 ? (
                                assert_res_true_j_312 = {}
                            ) : (
                                ab_j_313 = abort
                            )
                    )
            ) : (
                ab_i_386 = abort
            )));
record_j_317 = {checker = flatten_fun_j_225, generator = flatten_fun_j_270, wrapper = flatten_fun_j_316};
proj_j_318 = record_j_317.generator;
int_j_319 = 0;
appl_j_320 = proj_j_318 int_j_319;
g_b_58 = appl_j_320;
bool_j_321 = false;
fail_b_56 = bool_j_321;
flatten_fun_j_330 = fun expr_b_55 -> (
    var_j_322 = expr_b_55;
    m_match_bool_j_324 = var_j_322 ~ any;
    m_match_bool_j_327 = var_j_322 ~ int;
    m_match_cond_j_328 = m_match_bool_j_327 ? (
            bool_j_329 = true
        ) : (
            m_match_cond_j_325 = m_match_bool_j_324 ? (
                    var_j_326 = fail_b_56
                ) : (
                    void_j_323 = {}
                )
        ));
flatten_fun_j_332 = fun bj_null_j_6 -> (
    input_j_331 = input);
flatten_fun_j_334 = fun expr_b_57 -> (
    var_j_333 = expr_b_57);
record_j_335 = {checker = flatten_fun_j_330, generator = flatten_fun_j_332, wrapper = flatten_fun_j_334};
proj_j_336 = record_j_335.checker;
appl_j_339 = f g_b_58;
appl_j_340 = proj_j_336 appl_j_339;
check_res_b_59 = appl_j_340;
if_j_348 = check_res_b_59 ? (
        var_j_342 = f
    ) : (
        error_var_j_343 = check_res_b_59;
        assert_pred_j_344 = error_var_j_343;
        assert_res_j_345 = assert_pred_j_344 ? (
                assert_res_true_j_346 = {}
            ) : (
                ab_j_347 = abort
            )
    );
i_result = if_j_348