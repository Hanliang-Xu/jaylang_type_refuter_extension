i_first = {};
flatten_fun_j_85 = fun testFun_j_8 -> (
    flatten_fun_j_84 = fun l -> (
        var_j_58 = testFun_j_8;
        var_j_59 = testFun_j_8;
        appl_j_60 = var_j_58 var_j_59;
        testFun = appl_j_60;
        bool_j_61 = false;
        fail_b_0 = bool_j_61;
        var_j_62 = l;
        m_match_bool_j_64 = var_j_62 ~ {j_head, j_tail, _};
        m_match_bool_j_74 = var_j_62 ~ {j_empty, _};
        m_match_bool_j_77 = var_j_62 ~ {bj_untouched, _};
        m_match_cond_j_78 = m_match_bool_j_77 ? (
                var_j_79 = fail_b_0;
                assert_pred_j_80 = var_j_79;
                assert_res_j_81 = assert_pred_j_80 ? (
                        assert_res_true_j_82 = {}
                    ) : (
                        ab_j_83 = abort
                    )
            ) : (
                m_match_cond_j_75 = m_match_bool_j_74 ? (
                        bool_j_76 = true
                    ) : (
                        m_match_cond_j_65 = m_match_bool_j_64 ? (
                                hd = var_j_62.j_head;
                                tl = var_j_62.j_tail;
                                int_j_66 = 10;
                                var_j_67 = hd;
                                m_bl_i_599 = int_j_66 ~ int;
                                m_br_i_600 = var_j_67 ~ int;
                                m_b_i_601 = m_bl_i_599 and m_br_i_600;
                                binop_j_68 = m_b_i_601 ? (
                                        c_binop_i_602 = int_j_66 < var_j_67
                                    ) : (
                                        ab_i_603 = abort
                                    );
                                m_i_604 = binop_j_68 ~ bool;
                                if_j_73 = m_i_604 ? (
                                        c_cond_i_608 = binop_j_68 ? (
                                                var_j_69 = testFun;
                                                var_j_70 = tl;
                                                m_i_605 = var_j_69 ~ fun;
                                                appl_j_71 = m_i_605 ? (
                                                        c_appl_i_606 = var_j_69 var_j_70
                                                    ) : (
                                                        ab_i_607 = abort
                                                    )
                                            ) : (
                                                bool_j_72 = false
                                            )
                                    ) : (
                                        ab_i_609 = abort
                                    )
                            ) : (
                                ab_j_63 = abort
                            )
                    )
            )));
appl_j_88 = flatten_fun_j_85 flatten_fun_j_85;
input_j_89 = input;
userinput = input_j_89;
val = userinput;
flatten_fun_j_212 = fun expr_b_32 -> (
    flatten_fun_j_144 = fun expr_b_29 -> (
        bool_j_91 = false;
        lst_fail_b_30 = bool_j_91;
        var_j_92 = expr_b_29;
        m_match_bool_j_94 = var_j_92 ~ any;
        m_match_bool_j_97 = var_j_92 ~ {j_head, j_tail, _};
        m_match_bool_j_141 = var_j_92 ~ {j_empty, _};
        m_match_cond_j_142 = m_match_bool_j_141 ? (
                bool_j_143 = true
            ) : (
                m_match_cond_j_98 = m_match_bool_j_97 ? (
                        bj_underscore = var_j_92.j_head;
                        bj_underscore2 = var_j_92.j_tail;
                        flatten_fun_j_134 = fun test_fun_b_26_j_0 -> (
                            flatten_fun_j_133 = fun test_list_b_27 -> (
                                var_j_99 = test_fun_b_26_j_0;
                                var_j_100 = test_fun_b_26_j_0;
                                appl_j_101 = var_j_99 var_j_100;
                                test_fun_b_26 = appl_j_101;
                                var_j_102 = test_list_b_27;
                                m_match_bool_j_104 = var_j_102 ~ {j_head, j_tail, _};
                                m_match_bool_j_130 = var_j_102 ~ {j_empty, _};
                                m_match_cond_j_131 = m_match_bool_j_130 ? (
                                        bool_j_132 = true
                                    ) : (
                                        m_match_cond_j_105 = m_match_bool_j_104 ? (
                                                hd_j_10 = var_j_102.j_head;
                                                tl_j_9 = var_j_102.j_tail;
                                                bool_j_106 = false;
                                                fail_b_24 = bool_j_106;
                                                flatten_fun_j_115 = fun expr_b_23 -> (
                                                    var_j_107 = expr_b_23;
                                                    m_match_bool_j_109 = var_j_107 ~ any;
                                                    m_match_bool_j_112 = var_j_107 ~ int;
                                                    m_match_cond_j_113 = m_match_bool_j_112 ? (
                                                            bool_j_114 = true
                                                        ) : (
                                                            m_match_cond_j_110 = m_match_bool_j_109 ? (
                                                                    var_j_111 = fail_b_24
                                                                ) : (
                                                                    void_j_108 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_117 = fun bj_null -> (
                                                    input_j_116 = input);
                                                flatten_fun_j_119 = fun expr_b_25 -> (
                                                    var_j_118 = expr_b_25);
                                                record_j_120 = {checker = flatten_fun_j_115, generator = flatten_fun_j_117, wrapper = flatten_fun_j_119};
                                                proj_j_121 = record_j_120.checker;
                                                var_j_122 = hd_j_10;
                                                appl_j_123 = proj_j_121 var_j_122;
                                                elm_check_b_28 = appl_j_123;
                                                var_j_124 = elm_check_b_28;
                                                if_j_129 = var_j_124 ? (
                                                        var_j_125 = test_fun_b_26;
                                                        var_j_126 = tl_j_9;
                                                        appl_j_127 = var_j_125 var_j_126
                                                    ) : (
                                                        var_j_128 = elm_check_b_28
                                                    )
                                            ) : (
                                                void_j_103 = {}
                                            )
                                    )));
                        test_fun_b_26_j_0_j_12 = flatten_fun_j_134;
                        var_j_135 = test_fun_b_26_j_0_j_12;
                        var_j_136 = test_fun_b_26_j_0_j_12;
                        appl_j_137 = var_j_135 var_j_136;
                        test_fun_b_26_j_11 = appl_j_137;
                        var_j_138 = test_fun_b_26_j_11;
                        var_j_139 = expr_b_29;
                        appl_j_140 = var_j_138 var_j_139
                    ) : (
                        m_match_cond_j_95 = m_match_bool_j_94 ? (
                                var_j_96 = lst_fail_b_30
                            ) : (
                                void_j_93 = {}
                            )
                    )
            ));
    flatten_fun_j_195 = fun bj_null_j_17 -> (
        flatten_fun_j_181 = fun list_maker_b_21_j_1 -> (
            flatten_fun_j_180 = fun len_b_20 -> (
                var_j_145 = list_maker_b_21_j_1;
                var_j_146 = list_maker_b_21_j_1;
                appl_j_147 = var_j_145 var_j_146;
                list_maker_b_21 = appl_j_147;
                var_j_148 = len_b_20;
                int_j_149 = 0;
                binop_j_150 = var_j_148 == int_j_149;
                if_j_179 = binop_j_150 ? (
                        record_j_151 = {};
                        record_j_152 = {j_empty = record_j_151}
                    ) : (
                        bool_j_153 = false;
                        fail_b_18 = bool_j_153;
                        flatten_fun_j_162 = fun expr_b_17 -> (
                            var_j_154 = expr_b_17;
                            m_match_bool_j_156 = var_j_154 ~ any;
                            m_match_bool_j_159 = var_j_154 ~ int;
                            m_match_cond_j_160 = m_match_bool_j_159 ? (
                                    bool_j_161 = true
                                ) : (
                                    m_match_cond_j_157 = m_match_bool_j_156 ? (
                                            var_j_158 = fail_b_18
                                        ) : (
                                            void_j_155 = {}
                                        )
                                ));
                        flatten_fun_j_164 = fun bj_null_j_13 -> (
                            input_j_163 = input);
                        flatten_fun_j_166 = fun expr_b_19 -> (
                            var_j_165 = expr_b_19);
                        record_j_167 = {checker = flatten_fun_j_162, generator = flatten_fun_j_164, wrapper = flatten_fun_j_166};
                        proj_j_168 = record_j_167.generator;
                        int_j_169 = 0;
                        appl_j_170 = proj_j_168 int_j_169;
                        elm_b_22 = appl_j_170;
                        record_j_171 = {};
                        var_j_172 = elm_b_22;
                        var_j_173 = list_maker_b_21;
                        var_j_174 = len_b_20;
                        int_j_175 = 1;
                        binop_j_176 = var_j_174 - int_j_175;
                        appl_j_177 = var_j_173 binop_j_176;
                        record_j_178 = {j_cons = record_j_171, j_head = var_j_172, j_tail = appl_j_177}
                    )));
        list_maker_b_21_j_1_j_16 = flatten_fun_j_181;
        var_j_182 = list_maker_b_21_j_1_j_16;
        var_j_183 = list_maker_b_21_j_1_j_16;
        appl_j_184 = var_j_182 var_j_183;
        list_maker_b_21_j_15 = appl_j_184;
        input_j_185 = input;
        len_b_20_j_14 = input_j_185;
        int_j_186 = 0;
        var_j_187 = len_b_20_j_14;
        binop_j_188 = int_j_186 <= var_j_187;
        if_j_194 = binop_j_188 ? (
                var_j_189 = list_maker_b_21_j_15;
                var_j_190 = len_b_20_j_14;
                appl_j_191 = var_j_189 var_j_190
            ) : (
                bool_j_192 = false;
                assume_j_193 = assume bool_j_192
            ));
    flatten_fun_j_197 = fun expr_b_31 -> (
        var_j_196 = expr_b_31);
    record_j_198 = {checker = flatten_fun_j_144, generator = flatten_fun_j_195, wrapper = flatten_fun_j_197};
    proj_j_199 = record_j_198.checker;
    var_j_200 = expr_b_32;
    appl_j_201 = proj_j_199 var_j_200;
    t_check_b_33 = appl_j_201;
    var_j_202 = t_check_b_33;
    if_j_211 = var_j_202 ? (
            bool_j_203 = false;
            pred_check_b_34 = bool_j_203;
            var_j_204 = appl_j_88;
            var_j_205 = expr_b_32;
            appl_j_206 = var_j_204 var_j_205;
            if_j_209 = appl_j_206 ? (
                    bool_j_207 = true
                ) : (
                    var_j_208 = pred_check_b_34
                )
        ) : (
            var_j_210 = t_check_b_33
        ));
flatten_fun_j_331 = fun bj_null_j_30 -> (
    flatten_fun_j_266 = fun expr_b_13 -> (
        bool_j_213 = false;
        lst_fail_b_14 = bool_j_213;
        var_j_214 = expr_b_13;
        m_match_bool_j_216 = var_j_214 ~ any;
        m_match_bool_j_219 = var_j_214 ~ {j_head, j_tail, _};
        m_match_bool_j_263 = var_j_214 ~ {j_empty, _};
        m_match_cond_j_264 = m_match_bool_j_263 ? (
                bool_j_265 = true
            ) : (
                m_match_cond_j_220 = m_match_bool_j_219 ? (
                        bj_underscore_j_24 = var_j_214.j_head;
                        bj_underscore2_j_23 = var_j_214.j_tail;
                        flatten_fun_j_256 = fun test_fun_b_10_j_2 -> (
                            flatten_fun_j_255 = fun test_list_b_11 -> (
                                var_j_221 = test_fun_b_10_j_2;
                                var_j_222 = test_fun_b_10_j_2;
                                appl_j_223 = var_j_221 var_j_222;
                                test_fun_b_10 = appl_j_223;
                                var_j_224 = test_list_b_11;
                                m_match_bool_j_226 = var_j_224 ~ {j_head, j_tail, _};
                                m_match_bool_j_252 = var_j_224 ~ {j_empty, _};
                                m_match_cond_j_253 = m_match_bool_j_252 ? (
                                        bool_j_254 = true
                                    ) : (
                                        m_match_cond_j_227 = m_match_bool_j_226 ? (
                                                hd_j_20 = var_j_224.j_head;
                                                tl_j_19 = var_j_224.j_tail;
                                                bool_j_228 = false;
                                                fail_b_8 = bool_j_228;
                                                flatten_fun_j_237 = fun expr_b_7 -> (
                                                    var_j_229 = expr_b_7;
                                                    m_match_bool_j_231 = var_j_229 ~ any;
                                                    m_match_bool_j_234 = var_j_229 ~ int;
                                                    m_match_cond_j_235 = m_match_bool_j_234 ? (
                                                            bool_j_236 = true
                                                        ) : (
                                                            m_match_cond_j_232 = m_match_bool_j_231 ? (
                                                                    var_j_233 = fail_b_8
                                                                ) : (
                                                                    void_j_230 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_239 = fun bj_null_j_18 -> (
                                                    input_j_238 = input);
                                                flatten_fun_j_241 = fun expr_b_9 -> (
                                                    var_j_240 = expr_b_9);
                                                record_j_242 = {checker = flatten_fun_j_237, generator = flatten_fun_j_239, wrapper = flatten_fun_j_241};
                                                proj_j_243 = record_j_242.checker;
                                                var_j_244 = hd_j_20;
                                                appl_j_245 = proj_j_243 var_j_244;
                                                elm_check_b_12 = appl_j_245;
                                                var_j_246 = elm_check_b_12;
                                                if_j_251 = var_j_246 ? (
                                                        var_j_247 = test_fun_b_10;
                                                        var_j_248 = tl_j_19;
                                                        appl_j_249 = var_j_247 var_j_248
                                                    ) : (
                                                        var_j_250 = elm_check_b_12
                                                    )
                                            ) : (
                                                void_j_225 = {}
                                            )
                                    )));
                        test_fun_b_10_j_2_j_22 = flatten_fun_j_256;
                        var_j_257 = test_fun_b_10_j_2_j_22;
                        var_j_258 = test_fun_b_10_j_2_j_22;
                        appl_j_259 = var_j_257 var_j_258;
                        test_fun_b_10_j_21 = appl_j_259;
                        var_j_260 = test_fun_b_10_j_21;
                        var_j_261 = expr_b_13;
                        appl_j_262 = var_j_260 var_j_261
                    ) : (
                        m_match_cond_j_217 = m_match_bool_j_216 ? (
                                var_j_218 = lst_fail_b_14
                            ) : (
                                void_j_215 = {}
                            )
                    )
            ));
    flatten_fun_j_317 = fun bj_null_j_29 -> (
        flatten_fun_j_303 = fun list_maker_b_5_j_3 -> (
            flatten_fun_j_302 = fun len_b_4 -> (
                var_j_267 = list_maker_b_5_j_3;
                var_j_268 = list_maker_b_5_j_3;
                appl_j_269 = var_j_267 var_j_268;
                list_maker_b_5 = appl_j_269;
                var_j_270 = len_b_4;
                int_j_271 = 0;
                binop_j_272 = var_j_270 == int_j_271;
                if_j_301 = binop_j_272 ? (
                        record_j_273 = {};
                        record_j_274 = {j_empty = record_j_273}
                    ) : (
                        bool_j_275 = false;
                        fail_b_2 = bool_j_275;
                        flatten_fun_j_284 = fun expr_b_1 -> (
                            var_j_276 = expr_b_1;
                            m_match_bool_j_278 = var_j_276 ~ any;
                            m_match_bool_j_281 = var_j_276 ~ int;
                            m_match_cond_j_282 = m_match_bool_j_281 ? (
                                    bool_j_283 = true
                                ) : (
                                    m_match_cond_j_279 = m_match_bool_j_278 ? (
                                            var_j_280 = fail_b_2
                                        ) : (
                                            void_j_277 = {}
                                        )
                                ));
                        flatten_fun_j_286 = fun bj_null_j_25 -> (
                            input_j_285 = input);
                        flatten_fun_j_288 = fun expr_b_3 -> (
                            var_j_287 = expr_b_3);
                        record_j_289 = {checker = flatten_fun_j_284, generator = flatten_fun_j_286, wrapper = flatten_fun_j_288};
                        proj_j_290 = record_j_289.generator;
                        int_j_291 = 0;
                        appl_j_292 = proj_j_290 int_j_291;
                        elm_b_6 = appl_j_292;
                        record_j_293 = {};
                        var_j_294 = elm_b_6;
                        var_j_295 = list_maker_b_5;
                        var_j_296 = len_b_4;
                        int_j_297 = 1;
                        binop_j_298 = var_j_296 - int_j_297;
                        appl_j_299 = var_j_295 binop_j_298;
                        record_j_300 = {j_cons = record_j_293, j_head = var_j_294, j_tail = appl_j_299}
                    )));
        list_maker_b_5_j_3_j_28 = flatten_fun_j_303;
        var_j_304 = list_maker_b_5_j_3_j_28;
        var_j_305 = list_maker_b_5_j_3_j_28;
        appl_j_306 = var_j_304 var_j_305;
        list_maker_b_5_j_27 = appl_j_306;
        input_j_307 = input;
        len_b_4_j_26 = input_j_307;
        int_j_308 = 0;
        var_j_309 = len_b_4_j_26;
        binop_j_310 = int_j_308 <= var_j_309;
        if_j_316 = binop_j_310 ? (
                var_j_311 = list_maker_b_5_j_27;
                var_j_312 = len_b_4_j_26;
                appl_j_313 = var_j_311 var_j_312
            ) : (
                bool_j_314 = false;
                assume_j_315 = assume bool_j_314
            ));
    flatten_fun_j_319 = fun expr_b_15 -> (
        var_j_318 = expr_b_15);
    record_j_320 = {checker = flatten_fun_j_266, generator = flatten_fun_j_317, wrapper = flatten_fun_j_319};
    proj_j_321 = record_j_320.generator;
    int_j_322 = 0;
    appl_j_323 = proj_j_321 int_j_322;
    candidate_b_16 = appl_j_323;
    var_j_324 = appl_j_88;
    var_j_325 = candidate_b_16;
    appl_j_326 = var_j_324 var_j_325;
    if_j_330 = appl_j_326 ? (
            var_j_327 = candidate_b_16
        ) : (
            bool_j_328 = false;
            assume_j_329 = assume bool_j_328
        ));
flatten_fun_j_333 = fun expr_b_35 -> (
    var_j_332 = expr_b_35);
record_j_334 = {checker = flatten_fun_j_212, generator = flatten_fun_j_331, wrapper = flatten_fun_j_333};
proj_j_335 = record_j_334.wrapper;
record_j_338 = {};
record_j_339 = {j_empty = record_j_338};
record_j_340 = {j_head = val, j_tail = record_j_339};
record_j_341 = {j_head = val, j_tail = record_j_340};
m_i_610 = proj_j_335 ~ fun;
appl_j_342 = m_i_610 ? (
        c_appl_i_611 = proj_j_335 record_j_341
    ) : (
        ab_i_612 = abort
    );
x_b_71 = appl_j_342;
x = x_b_71;
flatten_fun_j_465 = fun expr_b_67 -> (
    flatten_fun_j_397 = fun expr_b_64 -> (
        bool_j_344 = false;
        lst_fail_b_65 = bool_j_344;
        var_j_345 = expr_b_64;
        m_match_bool_j_347 = var_j_345 ~ any;
        m_match_bool_j_350 = var_j_345 ~ {j_head, j_tail, _};
        m_match_bool_j_394 = var_j_345 ~ {j_empty, _};
        m_match_cond_j_395 = m_match_bool_j_394 ? (
                bool_j_396 = true
            ) : (
                m_match_cond_j_351 = m_match_bool_j_350 ? (
                        bj_underscore_j_37 = var_j_345.j_head;
                        bj_underscore2_j_36 = var_j_345.j_tail;
                        flatten_fun_j_387 = fun test_fun_b_61_j_4 -> (
                            flatten_fun_j_386 = fun test_list_b_62 -> (
                                var_j_352 = test_fun_b_61_j_4;
                                var_j_353 = test_fun_b_61_j_4;
                                appl_j_354 = var_j_352 var_j_353;
                                test_fun_b_61 = appl_j_354;
                                var_j_355 = test_list_b_62;
                                m_match_bool_j_357 = var_j_355 ~ {j_head, j_tail, _};
                                m_match_bool_j_383 = var_j_355 ~ {j_empty, _};
                                m_match_cond_j_384 = m_match_bool_j_383 ? (
                                        bool_j_385 = true
                                    ) : (
                                        m_match_cond_j_358 = m_match_bool_j_357 ? (
                                                hd_j_33 = var_j_355.j_head;
                                                tl_j_32 = var_j_355.j_tail;
                                                bool_j_359 = false;
                                                fail_b_59 = bool_j_359;
                                                flatten_fun_j_368 = fun expr_b_58 -> (
                                                    var_j_360 = expr_b_58;
                                                    m_match_bool_j_362 = var_j_360 ~ any;
                                                    m_match_bool_j_365 = var_j_360 ~ int;
                                                    m_match_cond_j_366 = m_match_bool_j_365 ? (
                                                            bool_j_367 = true
                                                        ) : (
                                                            m_match_cond_j_363 = m_match_bool_j_362 ? (
                                                                    var_j_364 = fail_b_59
                                                                ) : (
                                                                    void_j_361 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_370 = fun bj_null_j_31 -> (
                                                    input_j_369 = input);
                                                flatten_fun_j_372 = fun expr_b_60 -> (
                                                    var_j_371 = expr_b_60);
                                                record_j_373 = {checker = flatten_fun_j_368, generator = flatten_fun_j_370, wrapper = flatten_fun_j_372};
                                                proj_j_374 = record_j_373.checker;
                                                var_j_375 = hd_j_33;
                                                appl_j_376 = proj_j_374 var_j_375;
                                                elm_check_b_63 = appl_j_376;
                                                var_j_377 = elm_check_b_63;
                                                if_j_382 = var_j_377 ? (
                                                        var_j_378 = test_fun_b_61;
                                                        var_j_379 = tl_j_32;
                                                        appl_j_380 = var_j_378 var_j_379
                                                    ) : (
                                                        var_j_381 = elm_check_b_63
                                                    )
                                            ) : (
                                                void_j_356 = {}
                                            )
                                    )));
                        test_fun_b_61_j_4_j_35 = flatten_fun_j_387;
                        var_j_388 = test_fun_b_61_j_4_j_35;
                        var_j_389 = test_fun_b_61_j_4_j_35;
                        appl_j_390 = var_j_388 var_j_389;
                        test_fun_b_61_j_34 = appl_j_390;
                        var_j_391 = test_fun_b_61_j_34;
                        var_j_392 = expr_b_64;
                        appl_j_393 = var_j_391 var_j_392
                    ) : (
                        m_match_cond_j_348 = m_match_bool_j_347 ? (
                                var_j_349 = lst_fail_b_65
                            ) : (
                                void_j_346 = {}
                            )
                    )
            ));
    flatten_fun_j_448 = fun bj_null_j_42 -> (
        flatten_fun_j_434 = fun list_maker_b_56_j_5 -> (
            flatten_fun_j_433 = fun len_b_55 -> (
                var_j_398 = list_maker_b_56_j_5;
                var_j_399 = list_maker_b_56_j_5;
                appl_j_400 = var_j_398 var_j_399;
                list_maker_b_56 = appl_j_400;
                var_j_401 = len_b_55;
                int_j_402 = 0;
                binop_j_403 = var_j_401 == int_j_402;
                if_j_432 = binop_j_403 ? (
                        record_j_404 = {};
                        record_j_405 = {j_empty = record_j_404}
                    ) : (
                        bool_j_406 = false;
                        fail_b_53 = bool_j_406;
                        flatten_fun_j_415 = fun expr_b_52 -> (
                            var_j_407 = expr_b_52;
                            m_match_bool_j_409 = var_j_407 ~ any;
                            m_match_bool_j_412 = var_j_407 ~ int;
                            m_match_cond_j_413 = m_match_bool_j_412 ? (
                                    bool_j_414 = true
                                ) : (
                                    m_match_cond_j_410 = m_match_bool_j_409 ? (
                                            var_j_411 = fail_b_53
                                        ) : (
                                            void_j_408 = {}
                                        )
                                ));
                        flatten_fun_j_417 = fun bj_null_j_38 -> (
                            input_j_416 = input);
                        flatten_fun_j_419 = fun expr_b_54 -> (
                            var_j_418 = expr_b_54);
                        record_j_420 = {checker = flatten_fun_j_415, generator = flatten_fun_j_417, wrapper = flatten_fun_j_419};
                        proj_j_421 = record_j_420.generator;
                        int_j_422 = 0;
                        appl_j_423 = proj_j_421 int_j_422;
                        elm_b_57 = appl_j_423;
                        record_j_424 = {};
                        var_j_425 = elm_b_57;
                        var_j_426 = list_maker_b_56;
                        var_j_427 = len_b_55;
                        int_j_428 = 1;
                        binop_j_429 = var_j_427 - int_j_428;
                        appl_j_430 = var_j_426 binop_j_429;
                        record_j_431 = {j_cons = record_j_424, j_head = var_j_425, j_tail = appl_j_430}
                    )));
        list_maker_b_56_j_5_j_41 = flatten_fun_j_434;
        var_j_435 = list_maker_b_56_j_5_j_41;
        var_j_436 = list_maker_b_56_j_5_j_41;
        appl_j_437 = var_j_435 var_j_436;
        list_maker_b_56_j_40 = appl_j_437;
        input_j_438 = input;
        len_b_55_j_39 = input_j_438;
        int_j_439 = 0;
        var_j_440 = len_b_55_j_39;
        binop_j_441 = int_j_439 <= var_j_440;
        if_j_447 = binop_j_441 ? (
                var_j_442 = list_maker_b_56_j_40;
                var_j_443 = len_b_55_j_39;
                appl_j_444 = var_j_442 var_j_443
            ) : (
                bool_j_445 = false;
                assume_j_446 = assume bool_j_445
            ));
    flatten_fun_j_450 = fun expr_b_66 -> (
        var_j_449 = expr_b_66);
    record_j_451 = {checker = flatten_fun_j_397, generator = flatten_fun_j_448, wrapper = flatten_fun_j_450};
    proj_j_452 = record_j_451.checker;
    var_j_453 = expr_b_67;
    appl_j_454 = proj_j_452 var_j_453;
    t_check_b_68 = appl_j_454;
    var_j_455 = t_check_b_68;
    if_j_464 = var_j_455 ? (
            bool_j_456 = false;
            pred_check_b_69 = bool_j_456;
            var_j_457 = appl_j_88;
            var_j_458 = expr_b_67;
            appl_j_459 = var_j_457 var_j_458;
            if_j_462 = appl_j_459 ? (
                    bool_j_460 = true
                ) : (
                    var_j_461 = pred_check_b_69
                )
        ) : (
            var_j_463 = t_check_b_68
        ));
flatten_fun_j_584 = fun bj_null_j_55 -> (
    flatten_fun_j_519 = fun expr_b_48 -> (
        bool_j_466 = false;
        lst_fail_b_49 = bool_j_466;
        var_j_467 = expr_b_48;
        m_match_bool_j_469 = var_j_467 ~ any;
        m_match_bool_j_472 = var_j_467 ~ {j_head, j_tail, _};
        m_match_bool_j_516 = var_j_467 ~ {j_empty, _};
        m_match_cond_j_517 = m_match_bool_j_516 ? (
                bool_j_518 = true
            ) : (
                m_match_cond_j_473 = m_match_bool_j_472 ? (
                        bj_underscore_j_49 = var_j_467.j_head;
                        bj_underscore2_j_48 = var_j_467.j_tail;
                        flatten_fun_j_509 = fun test_fun_b_45_j_6 -> (
                            flatten_fun_j_508 = fun test_list_b_46 -> (
                                var_j_474 = test_fun_b_45_j_6;
                                var_j_475 = test_fun_b_45_j_6;
                                appl_j_476 = var_j_474 var_j_475;
                                test_fun_b_45 = appl_j_476;
                                var_j_477 = test_list_b_46;
                                m_match_bool_j_479 = var_j_477 ~ {j_head, j_tail, _};
                                m_match_bool_j_505 = var_j_477 ~ {j_empty, _};
                                m_match_cond_j_506 = m_match_bool_j_505 ? (
                                        bool_j_507 = true
                                    ) : (
                                        m_match_cond_j_480 = m_match_bool_j_479 ? (
                                                hd_j_45 = var_j_477.j_head;
                                                tl_j_44 = var_j_477.j_tail;
                                                bool_j_481 = false;
                                                fail_b_43 = bool_j_481;
                                                flatten_fun_j_490 = fun expr_b_42 -> (
                                                    var_j_482 = expr_b_42;
                                                    m_match_bool_j_484 = var_j_482 ~ any;
                                                    m_match_bool_j_487 = var_j_482 ~ int;
                                                    m_match_cond_j_488 = m_match_bool_j_487 ? (
                                                            bool_j_489 = true
                                                        ) : (
                                                            m_match_cond_j_485 = m_match_bool_j_484 ? (
                                                                    var_j_486 = fail_b_43
                                                                ) : (
                                                                    void_j_483 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_492 = fun bj_null_j_43 -> (
                                                    input_j_491 = input);
                                                flatten_fun_j_494 = fun expr_b_44 -> (
                                                    var_j_493 = expr_b_44);
                                                record_j_495 = {checker = flatten_fun_j_490, generator = flatten_fun_j_492, wrapper = flatten_fun_j_494};
                                                proj_j_496 = record_j_495.checker;
                                                var_j_497 = hd_j_45;
                                                appl_j_498 = proj_j_496 var_j_497;
                                                elm_check_b_47 = appl_j_498;
                                                var_j_499 = elm_check_b_47;
                                                if_j_504 = var_j_499 ? (
                                                        var_j_500 = test_fun_b_45;
                                                        var_j_501 = tl_j_44;
                                                        appl_j_502 = var_j_500 var_j_501
                                                    ) : (
                                                        var_j_503 = elm_check_b_47
                                                    )
                                            ) : (
                                                void_j_478 = {}
                                            )
                                    )));
                        test_fun_b_45_j_6_j_47 = flatten_fun_j_509;
                        var_j_510 = test_fun_b_45_j_6_j_47;
                        var_j_511 = test_fun_b_45_j_6_j_47;
                        appl_j_512 = var_j_510 var_j_511;
                        test_fun_b_45_j_46 = appl_j_512;
                        var_j_513 = test_fun_b_45_j_46;
                        var_j_514 = expr_b_48;
                        appl_j_515 = var_j_513 var_j_514
                    ) : (
                        m_match_cond_j_470 = m_match_bool_j_469 ? (
                                var_j_471 = lst_fail_b_49
                            ) : (
                                void_j_468 = {}
                            )
                    )
            ));
    flatten_fun_j_570 = fun bj_null_j_54 -> (
        flatten_fun_j_556 = fun list_maker_b_40_j_7 -> (
            flatten_fun_j_555 = fun len_b_39 -> (
                var_j_520 = list_maker_b_40_j_7;
                var_j_521 = list_maker_b_40_j_7;
                appl_j_522 = var_j_520 var_j_521;
                list_maker_b_40 = appl_j_522;
                var_j_523 = len_b_39;
                int_j_524 = 0;
                binop_j_525 = var_j_523 == int_j_524;
                if_j_554 = binop_j_525 ? (
                        record_j_526 = {};
                        record_j_527 = {j_empty = record_j_526}
                    ) : (
                        bool_j_528 = false;
                        fail_b_37 = bool_j_528;
                        flatten_fun_j_537 = fun expr_b_36 -> (
                            var_j_529 = expr_b_36;
                            m_match_bool_j_531 = var_j_529 ~ any;
                            m_match_bool_j_534 = var_j_529 ~ int;
                            m_match_cond_j_535 = m_match_bool_j_534 ? (
                                    bool_j_536 = true
                                ) : (
                                    m_match_cond_j_532 = m_match_bool_j_531 ? (
                                            var_j_533 = fail_b_37
                                        ) : (
                                            void_j_530 = {}
                                        )
                                ));
                        flatten_fun_j_539 = fun bj_null_j_50 -> (
                            input_j_538 = input);
                        flatten_fun_j_541 = fun expr_b_38 -> (
                            var_j_540 = expr_b_38);
                        record_j_542 = {checker = flatten_fun_j_537, generator = flatten_fun_j_539, wrapper = flatten_fun_j_541};
                        proj_j_543 = record_j_542.generator;
                        int_j_544 = 0;
                        appl_j_545 = proj_j_543 int_j_544;
                        elm_b_41 = appl_j_545;
                        record_j_546 = {};
                        var_j_547 = elm_b_41;
                        var_j_548 = list_maker_b_40;
                        var_j_549 = len_b_39;
                        int_j_550 = 1;
                        binop_j_551 = var_j_549 - int_j_550;
                        appl_j_552 = var_j_548 binop_j_551;
                        record_j_553 = {j_cons = record_j_546, j_head = var_j_547, j_tail = appl_j_552}
                    )));
        list_maker_b_40_j_7_j_53 = flatten_fun_j_556;
        var_j_557 = list_maker_b_40_j_7_j_53;
        var_j_558 = list_maker_b_40_j_7_j_53;
        appl_j_559 = var_j_557 var_j_558;
        list_maker_b_40_j_52 = appl_j_559;
        input_j_560 = input;
        len_b_39_j_51 = input_j_560;
        int_j_561 = 0;
        var_j_562 = len_b_39_j_51;
        binop_j_563 = int_j_561 <= var_j_562;
        if_j_569 = binop_j_563 ? (
                var_j_564 = list_maker_b_40_j_52;
                var_j_565 = len_b_39_j_51;
                appl_j_566 = var_j_564 var_j_565
            ) : (
                bool_j_567 = false;
                assume_j_568 = assume bool_j_567
            ));
    flatten_fun_j_572 = fun expr_b_50 -> (
        var_j_571 = expr_b_50);
    record_j_573 = {checker = flatten_fun_j_519, generator = flatten_fun_j_570, wrapper = flatten_fun_j_572};
    proj_j_574 = record_j_573.generator;
    int_j_575 = 0;
    appl_j_576 = proj_j_574 int_j_575;
    candidate_b_51 = appl_j_576;
    var_j_577 = appl_j_88;
    var_j_578 = candidate_b_51;
    appl_j_579 = var_j_577 var_j_578;
    if_j_583 = appl_j_579 ? (
            var_j_580 = candidate_b_51
        ) : (
            bool_j_581 = false;
            assume_j_582 = assume bool_j_581
        ));
flatten_fun_j_586 = fun expr_b_70 -> (
    var_j_585 = expr_b_70);
record_j_587 = {checker = flatten_fun_j_465, generator = flatten_fun_j_584, wrapper = flatten_fun_j_586};
proj_j_588 = record_j_587.checker;
appl_j_590 = proj_j_588 x_b_71;
check_res_b_72 = appl_j_590;
if_j_598 = check_res_b_72 ? (
        var_j_592 = x
    ) : (
        error_var_j_593 = check_res_b_72;
        assert_pred_j_594 = error_var_j_593;
        assert_res_j_595 = assert_pred_j_594 ? (
                assert_res_true_j_596 = {}
            ) : (
                ab_j_597 = abort
            )
    );
i_result = if_j_598