# Here is part of an ngram program implementation that contains a type error I made along the way to implementing the full program.
# This has been trimmed down to remove any code that had no intersection with the erroring code.


let pos_int = {. int | fun i -> i > 0 }
in

let rec len ls = 
  match ls with
  | [] -> 0
  | hd :: tl -> 1 + len tl
  end
in

letd rec take (n : pos_int) : (List 'a) -> {. List 'a | fun ls -> len ls <= n } =
  fun l ->
    match l with
    | [] -> []
    | hd :: tl ->
      if n == 1
      then hd # ERROR: should be `[hd]` here
      else hd :: take (n - 1) tl
    end
in

take
