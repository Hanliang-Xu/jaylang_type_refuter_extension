# This program has a condition that is satisfied if the solver can choose the right
# recursive depth to solve for a sum

x = input;

zero = 0;
one = 1;

desired_sum = 78; # depth 12

f = fun self -> (
    f0 = fun counter -> (
        is_done = counter == zero;
        r = is_done ? (
          done_val = zero
        ) : (
          ss = self self;
          new_counter = counter - one;
          res = ss new_counter;
          sum_val = counter + res
        );
    );
);
ff = f f;

neg_1 = -1;
x_is_non_neg = neg_1 < x;
call_fun_branch = x_is_non_neg ? (
  z = ff x;

  sum_val_is_desired_cond = z == desired_sum;
  sum_val_is_desired_branch = sum_val_is_desired_cond ? (
    yay = 10000
  ) : (
    darn = -10000
  )
) : (
  w = 0
)