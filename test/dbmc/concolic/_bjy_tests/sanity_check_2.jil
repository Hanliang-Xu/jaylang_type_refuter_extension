i_first = {};
flatten_fun_j_205 = fun expr_b_58 -> (
    flatten_fun_j_88 = fun expr_b_44 -> (
        bool_j_49 = false;
        fail_b_39 = bool_j_49;
        flatten_fun_j_58 = fun expr_b_38 -> (
            var_j_50 = expr_b_38;
            m_match_bool_j_52 = var_j_50 ~ any;
            m_match_bool_j_55 = var_j_50 ~ int;
            m_match_cond_j_56 = m_match_bool_j_55 ? (
                    bool_j_57 = true
                ) : (
                    m_match_cond_j_53 = m_match_bool_j_52 ? (
                            var_j_54 = fail_b_39
                        ) : (
                            void_j_51 = {}
                        )
                ));
        flatten_fun_j_60 = fun bj_null -> (
            input_j_59 = input);
        flatten_fun_j_62 = fun expr_b_40 -> (
            var_j_61 = expr_b_40);
        record_j_63 = {checker = flatten_fun_j_58, generator = flatten_fun_j_60, wrapper = flatten_fun_j_62};
        proj_j_64 = record_j_63.generator;
        int_j_65 = 0;
        appl_j_66 = proj_j_64 int_j_65;
        arg_assert_b_45 = appl_j_66;
        var_j_67 = expr_b_44;
        var_j_68 = arg_assert_b_45;
        appl_j_69 = var_j_67 var_j_68;
        fun_ret_b_46 = appl_j_69;
        bool_j_70 = false;
        fail_b_42 = bool_j_70;
        flatten_fun_j_79 = fun expr_b_41 -> (
            var_j_71 = expr_b_41;
            m_match_bool_j_73 = var_j_71 ~ any;
            m_match_bool_j_76 = var_j_71 ~ int;
            m_match_cond_j_77 = m_match_bool_j_76 ? (
                    bool_j_78 = true
                ) : (
                    m_match_cond_j_74 = m_match_bool_j_73 ? (
                            var_j_75 = fail_b_42
                        ) : (
                            void_j_72 = {}
                        )
                ));
        flatten_fun_j_81 = fun bj_null_j_0 -> (
            input_j_80 = input);
        flatten_fun_j_83 = fun expr_b_43 -> (
            var_j_82 = expr_b_43);
        record_j_84 = {checker = flatten_fun_j_79, generator = flatten_fun_j_81, wrapper = flatten_fun_j_83};
        proj_j_85 = record_j_84.checker;
        var_j_86 = fun_ret_b_46;
        appl_j_87 = proj_j_85 var_j_86);
    flatten_fun_j_133 = fun bj_null_j_3 -> (
        flatten_fun_j_132 = fun arg_assume_b_36 -> (
            bool_j_89 = false;
            fail_b_31 = bool_j_89;
            flatten_fun_j_98 = fun expr_b_30 -> (
                var_j_90 = expr_b_30;
                m_match_bool_j_92 = var_j_90 ~ any;
                m_match_bool_j_95 = var_j_90 ~ int;
                m_match_cond_j_96 = m_match_bool_j_95 ? (
                        bool_j_97 = true
                    ) : (
                        m_match_cond_j_93 = m_match_bool_j_92 ? (
                                var_j_94 = fail_b_31
                            ) : (
                                void_j_91 = {}
                            )
                    ));
            flatten_fun_j_100 = fun bj_null_j_1 -> (
                input_j_99 = input);
            flatten_fun_j_102 = fun expr_b_32 -> (
                var_j_101 = expr_b_32);
            record_j_103 = {checker = flatten_fun_j_98, generator = flatten_fun_j_100, wrapper = flatten_fun_j_102};
            proj_j_104 = record_j_103.checker;
            var_j_105 = arg_assume_b_36;
            appl_j_106 = proj_j_104 var_j_105;
            if_j_131 = appl_j_106 ? (
                    bool_j_107 = false;
                    fail_b_34 = bool_j_107;
                    flatten_fun_j_116 = fun expr_b_33 -> (
                        var_j_108 = expr_b_33;
                        m_match_bool_j_110 = var_j_108 ~ any;
                        m_match_bool_j_113 = var_j_108 ~ int;
                        m_match_cond_j_114 = m_match_bool_j_113 ? (
                                bool_j_115 = true
                            ) : (
                                m_match_cond_j_111 = m_match_bool_j_110 ? (
                                        var_j_112 = fail_b_34
                                    ) : (
                                        void_j_109 = {}
                                    )
                            ));
                    flatten_fun_j_118 = fun bj_null_j_2 -> (
                        input_j_117 = input);
                    flatten_fun_j_120 = fun expr_b_35 -> (
                        var_j_119 = expr_b_35);
                    record_j_121 = {checker = flatten_fun_j_116, generator = flatten_fun_j_118, wrapper = flatten_fun_j_120};
                    proj_j_122 = record_j_121.generator;
                    int_j_123 = 0;
                    appl_j_124 = proj_j_122 int_j_123
                ) : (
                    bool_j_125 = false;
                    fail_b_37 = bool_j_125;
                    var_j_126 = fail_b_37;
                    assert_pred_j_127 = var_j_126;
                    assert_res_j_128 = assert_pred_j_127 ? (
                            assert_res_true_j_129 = {}
                        ) : (
                            ab_j_130 = abort
                        )
                )));
    flatten_fun_j_179 = fun expr_b_53 -> (
        flatten_fun_j_178 = fun arg_b_54 -> (
            bool_j_134 = false;
            fail_b_48 = bool_j_134;
            flatten_fun_j_143 = fun expr_b_47 -> (
                var_j_135 = expr_b_47;
                m_match_bool_j_137 = var_j_135 ~ any;
                m_match_bool_j_140 = var_j_135 ~ int;
                m_match_cond_j_141 = m_match_bool_j_140 ? (
                        bool_j_142 = true
                    ) : (
                        m_match_cond_j_138 = m_match_bool_j_137 ? (
                                var_j_139 = fail_b_48
                            ) : (
                                void_j_136 = {}
                            )
                    ));
            flatten_fun_j_145 = fun bj_null_j_4 -> (
                input_j_144 = input);
            flatten_fun_j_147 = fun expr_b_49 -> (
                var_j_146 = expr_b_49);
            record_j_148 = {checker = flatten_fun_j_143, generator = flatten_fun_j_145, wrapper = flatten_fun_j_147};
            proj_j_149 = record_j_148.checker;
            var_j_150 = arg_b_54;
            m_i_1033 = proj_j_149 ~ fun;
            appl_j_151 = m_i_1033 ? (
                    c_appl_i_1034 = proj_j_149 var_j_150
                ) : (
                    ab_i_1035 = abort
                );
            m_i_1036 = appl_j_151 ~ bool;
            if_j_177 = m_i_1036 ? (
                    c_cond_i_1043 = appl_j_151 ? (
                            bool_j_152 = false;
                            fail_b_51 = bool_j_152;
                            flatten_fun_j_161 = fun expr_b_50 -> (
                                var_j_153 = expr_b_50;
                                m_match_bool_j_155 = var_j_153 ~ any;
                                m_match_bool_j_158 = var_j_153 ~ int;
                                m_match_cond_j_159 = m_match_bool_j_158 ? (
                                        bool_j_160 = true
                                    ) : (
                                        m_match_cond_j_156 = m_match_bool_j_155 ? (
                                                var_j_157 = fail_b_51
                                            ) : (
                                                void_j_154 = {}
                                            )
                                    ));
                            flatten_fun_j_163 = fun bj_null_j_5 -> (
                                input_j_162 = input);
                            flatten_fun_j_165 = fun expr_b_52 -> (
                                var_j_164 = expr_b_52);
                            record_j_166 = {checker = flatten_fun_j_161, generator = flatten_fun_j_163, wrapper = flatten_fun_j_165};
                            proj_j_167 = record_j_166.wrapper;
                            var_j_168 = expr_b_53;
                            var_j_169 = arg_b_54;
                            m_i_1037 = var_j_168 ~ fun;
                            appl_j_170 = m_i_1037 ? (
                                    c_appl_i_1038 = var_j_168 var_j_169
                                ) : (
                                    ab_i_1039 = abort
                                );
                            m_i_1040 = proj_j_167 ~ fun;
                            appl_j_171 = m_i_1040 ? (
                                    c_appl_i_1041 = proj_j_167 appl_j_170
                                ) : (
                                    ab_i_1042 = abort
                                )
                        ) : (
                            bool_j_172 = false;
                            assert_pred_j_173 = bool_j_172;
                            assert_res_j_174 = assert_pred_j_173 ? (
                                    assert_res_true_j_175 = {}
                                ) : (
                                    ab_j_176 = abort
                                )
                        )
                ) : (
                    ab_i_1044 = abort
                )));
    record_j_180 = {checker = flatten_fun_j_88, generator = flatten_fun_j_133, wrapper = flatten_fun_j_179};
    proj_j_181 = record_j_180.generator;
    int_j_182 = 0;
    appl_j_183 = proj_j_181 int_j_182;
    arg_assert_b_59 = appl_j_183;
    var_j_184 = expr_b_58;
    var_j_185 = arg_assert_b_59;
    appl_j_186 = var_j_184 var_j_185;
    fun_ret_b_60 = appl_j_186;
    bool_j_187 = false;
    fail_b_56 = bool_j_187;
    flatten_fun_j_196 = fun expr_b_55 -> (
        var_j_188 = expr_b_55;
        m_match_bool_j_190 = var_j_188 ~ any;
        m_match_bool_j_193 = var_j_188 ~ int;
        m_match_cond_j_194 = m_match_bool_j_193 ? (
                bool_j_195 = true
            ) : (
                m_match_cond_j_191 = m_match_bool_j_190 ? (
                        var_j_192 = fail_b_56
                    ) : (
                        void_j_189 = {}
                    )
            ));
    flatten_fun_j_198 = fun bj_null_j_6 -> (
        input_j_197 = input);
    flatten_fun_j_200 = fun expr_b_57 -> (
        var_j_199 = expr_b_57);
    record_j_201 = {checker = flatten_fun_j_196, generator = flatten_fun_j_198, wrapper = flatten_fun_j_200};
    proj_j_202 = record_j_201.checker;
    var_j_203 = fun_ret_b_60;
    appl_j_204 = proj_j_202 var_j_203);
flatten_fun_j_367 = fun bj_null_j_15 -> (
    flatten_fun_j_366 = fun arg_assume_b_28 -> (
        flatten_fun_j_245 = fun expr_b_14 -> (
            bool_j_206 = false;
            fail_b_9 = bool_j_206;
            flatten_fun_j_215 = fun expr_b_8 -> (
                var_j_207 = expr_b_8;
                m_match_bool_j_209 = var_j_207 ~ any;
                m_match_bool_j_212 = var_j_207 ~ int;
                m_match_cond_j_213 = m_match_bool_j_212 ? (
                        bool_j_214 = true
                    ) : (
                        m_match_cond_j_210 = m_match_bool_j_209 ? (
                                var_j_211 = fail_b_9
                            ) : (
                                void_j_208 = {}
                            )
                    ));
            flatten_fun_j_217 = fun bj_null_j_7 -> (
                input_j_216 = input);
            flatten_fun_j_219 = fun expr_b_10 -> (
                var_j_218 = expr_b_10);
            record_j_220 = {checker = flatten_fun_j_215, generator = flatten_fun_j_217, wrapper = flatten_fun_j_219};
            proj_j_221 = record_j_220.generator;
            int_j_222 = 0;
            appl_j_223 = proj_j_221 int_j_222;
            arg_assert_b_15 = appl_j_223;
            var_j_224 = expr_b_14;
            var_j_225 = arg_assert_b_15;
            appl_j_226 = var_j_224 var_j_225;
            fun_ret_b_16 = appl_j_226;
            bool_j_227 = false;
            fail_b_12 = bool_j_227;
            flatten_fun_j_236 = fun expr_b_11 -> (
                var_j_228 = expr_b_11;
                m_match_bool_j_230 = var_j_228 ~ any;
                m_match_bool_j_233 = var_j_228 ~ int;
                m_match_cond_j_234 = m_match_bool_j_233 ? (
                        bool_j_235 = true
                    ) : (
                        m_match_cond_j_231 = m_match_bool_j_230 ? (
                                var_j_232 = fail_b_12
                            ) : (
                                void_j_229 = {}
                            )
                    ));
            flatten_fun_j_238 = fun bj_null_j_8 -> (
                input_j_237 = input);
            flatten_fun_j_240 = fun expr_b_13 -> (
                var_j_239 = expr_b_13);
            record_j_241 = {checker = flatten_fun_j_236, generator = flatten_fun_j_238, wrapper = flatten_fun_j_240};
            proj_j_242 = record_j_241.checker;
            var_j_243 = fun_ret_b_16;
            appl_j_244 = proj_j_242 var_j_243);
        flatten_fun_j_290 = fun bj_null_j_11 -> (
            flatten_fun_j_289 = fun arg_assume_b_6 -> (
                bool_j_246 = false;
                fail_b_1 = bool_j_246;
                flatten_fun_j_255 = fun expr_b_0 -> (
                    var_j_247 = expr_b_0;
                    m_match_bool_j_249 = var_j_247 ~ any;
                    m_match_bool_j_252 = var_j_247 ~ int;
                    m_match_cond_j_253 = m_match_bool_j_252 ? (
                            bool_j_254 = true
                        ) : (
                            m_match_cond_j_250 = m_match_bool_j_249 ? (
                                    var_j_251 = fail_b_1
                                ) : (
                                    void_j_248 = {}
                                )
                        ));
                flatten_fun_j_257 = fun bj_null_j_9 -> (
                    input_j_256 = input);
                flatten_fun_j_259 = fun expr_b_2 -> (
                    var_j_258 = expr_b_2);
                record_j_260 = {checker = flatten_fun_j_255, generator = flatten_fun_j_257, wrapper = flatten_fun_j_259};
                proj_j_261 = record_j_260.checker;
                var_j_262 = arg_assume_b_6;
                appl_j_263 = proj_j_261 var_j_262;
                if_j_288 = appl_j_263 ? (
                        bool_j_264 = false;
                        fail_b_4 = bool_j_264;
                        flatten_fun_j_273 = fun expr_b_3 -> (
                            var_j_265 = expr_b_3;
                            m_match_bool_j_267 = var_j_265 ~ any;
                            m_match_bool_j_270 = var_j_265 ~ int;
                            m_match_cond_j_271 = m_match_bool_j_270 ? (
                                    bool_j_272 = true
                                ) : (
                                    m_match_cond_j_268 = m_match_bool_j_267 ? (
                                            var_j_269 = fail_b_4
                                        ) : (
                                            void_j_266 = {}
                                        )
                                ));
                        flatten_fun_j_275 = fun bj_null_j_10 -> (
                            input_j_274 = input);
                        flatten_fun_j_277 = fun expr_b_5 -> (
                            var_j_276 = expr_b_5);
                        record_j_278 = {checker = flatten_fun_j_273, generator = flatten_fun_j_275, wrapper = flatten_fun_j_277};
                        proj_j_279 = record_j_278.generator;
                        int_j_280 = 0;
                        appl_j_281 = proj_j_279 int_j_280
                    ) : (
                        bool_j_282 = false;
                        fail_b_7 = bool_j_282;
                        var_j_283 = fail_b_7;
                        assert_pred_j_284 = var_j_283;
                        assert_res_j_285 = assert_pred_j_284 ? (
                                assert_res_true_j_286 = {}
                            ) : (
                                ab_j_287 = abort
                            )
                    )));
        flatten_fun_j_336 = fun expr_b_23 -> (
            flatten_fun_j_335 = fun arg_b_24 -> (
                bool_j_291 = false;
                fail_b_18 = bool_j_291;
                flatten_fun_j_300 = fun expr_b_17 -> (
                    var_j_292 = expr_b_17;
                    m_match_bool_j_294 = var_j_292 ~ any;
                    m_match_bool_j_297 = var_j_292 ~ int;
                    m_match_cond_j_298 = m_match_bool_j_297 ? (
                            bool_j_299 = true
                        ) : (
                            m_match_cond_j_295 = m_match_bool_j_294 ? (
                                    var_j_296 = fail_b_18
                                ) : (
                                    void_j_293 = {}
                                )
                        ));
                flatten_fun_j_302 = fun bj_null_j_12 -> (
                    input_j_301 = input);
                flatten_fun_j_304 = fun expr_b_19 -> (
                    var_j_303 = expr_b_19);
                record_j_305 = {checker = flatten_fun_j_300, generator = flatten_fun_j_302, wrapper = flatten_fun_j_304};
                proj_j_306 = record_j_305.checker;
                var_j_307 = arg_b_24;
                m_i_1045 = proj_j_306 ~ fun;
                appl_j_308 = m_i_1045 ? (
                        c_appl_i_1046 = proj_j_306 var_j_307
                    ) : (
                        ab_i_1047 = abort
                    );
                m_i_1048 = appl_j_308 ~ bool;
                if_j_334 = m_i_1048 ? (
                        c_cond_i_1055 = appl_j_308 ? (
                                bool_j_309 = false;
                                fail_b_21 = bool_j_309;
                                flatten_fun_j_318 = fun expr_b_20 -> (
                                    var_j_310 = expr_b_20;
                                    m_match_bool_j_312 = var_j_310 ~ any;
                                    m_match_bool_j_315 = var_j_310 ~ int;
                                    m_match_cond_j_316 = m_match_bool_j_315 ? (
                                            bool_j_317 = true
                                        ) : (
                                            m_match_cond_j_313 = m_match_bool_j_312 ? (
                                                    var_j_314 = fail_b_21
                                                ) : (
                                                    void_j_311 = {}
                                                )
                                        ));
                                flatten_fun_j_320 = fun bj_null_j_13 -> (
                                    input_j_319 = input);
                                flatten_fun_j_322 = fun expr_b_22 -> (
                                    var_j_321 = expr_b_22);
                                record_j_323 = {checker = flatten_fun_j_318, generator = flatten_fun_j_320, wrapper = flatten_fun_j_322};
                                proj_j_324 = record_j_323.wrapper;
                                var_j_325 = expr_b_23;
                                var_j_326 = arg_b_24;
                                m_i_1049 = var_j_325 ~ fun;
                                appl_j_327 = m_i_1049 ? (
                                        c_appl_i_1050 = var_j_325 var_j_326
                                    ) : (
                                        ab_i_1051 = abort
                                    );
                                m_i_1052 = proj_j_324 ~ fun;
                                appl_j_328 = m_i_1052 ? (
                                        c_appl_i_1053 = proj_j_324 appl_j_327
                                    ) : (
                                        ab_i_1054 = abort
                                    )
                            ) : (
                                bool_j_329 = false;
                                assert_pred_j_330 = bool_j_329;
                                assert_res_j_331 = assert_pred_j_330 ? (
                                        assert_res_true_j_332 = {}
                                    ) : (
                                        ab_j_333 = abort
                                    )
                            )
                    ) : (
                        ab_i_1056 = abort
                    )));
        record_j_337 = {checker = flatten_fun_j_245, generator = flatten_fun_j_290, wrapper = flatten_fun_j_336};
        proj_j_338 = record_j_337.checker;
        var_j_339 = arg_assume_b_28;
        appl_j_340 = proj_j_338 var_j_339;
        if_j_365 = appl_j_340 ? (
                bool_j_341 = false;
                fail_b_26 = bool_j_341;
                flatten_fun_j_350 = fun expr_b_25 -> (
                    var_j_342 = expr_b_25;
                    m_match_bool_j_344 = var_j_342 ~ any;
                    m_match_bool_j_347 = var_j_342 ~ int;
                    m_match_cond_j_348 = m_match_bool_j_347 ? (
                            bool_j_349 = true
                        ) : (
                            m_match_cond_j_345 = m_match_bool_j_344 ? (
                                    var_j_346 = fail_b_26
                                ) : (
                                    void_j_343 = {}
                                )
                        ));
                flatten_fun_j_352 = fun bj_null_j_14 -> (
                    input_j_351 = input);
                flatten_fun_j_354 = fun expr_b_27 -> (
                    var_j_353 = expr_b_27);
                record_j_355 = {checker = flatten_fun_j_350, generator = flatten_fun_j_352, wrapper = flatten_fun_j_354};
                proj_j_356 = record_j_355.generator;
                int_j_357 = 0;
                appl_j_358 = proj_j_356 int_j_357
            ) : (
                bool_j_359 = false;
                fail_b_29 = bool_j_359;
                var_j_360 = fail_b_29;
                assert_pred_j_361 = var_j_360;
                assert_res_j_362 = assert_pred_j_361 ? (
                        assert_res_true_j_363 = {}
                    ) : (
                        ab_j_364 = abort
                    )
            )));
flatten_fun_j_530 = fun expr_b_89 -> (
    flatten_fun_j_529 = fun arg_b_90 -> (
        flatten_fun_j_407 = fun expr_b_75 -> (
            bool_j_368 = false;
            fail_b_70 = bool_j_368;
            flatten_fun_j_377 = fun expr_b_69 -> (
                var_j_369 = expr_b_69;
                m_match_bool_j_371 = var_j_369 ~ any;
                m_match_bool_j_374 = var_j_369 ~ int;
                m_match_cond_j_375 = m_match_bool_j_374 ? (
                        bool_j_376 = true
                    ) : (
                        m_match_cond_j_372 = m_match_bool_j_371 ? (
                                var_j_373 = fail_b_70
                            ) : (
                                void_j_370 = {}
                            )
                    ));
            flatten_fun_j_379 = fun bj_null_j_16 -> (
                input_j_378 = input);
            flatten_fun_j_381 = fun expr_b_71 -> (
                var_j_380 = expr_b_71);
            record_j_382 = {checker = flatten_fun_j_377, generator = flatten_fun_j_379, wrapper = flatten_fun_j_381};
            proj_j_383 = record_j_382.generator;
            int_j_384 = 0;
            appl_j_385 = proj_j_383 int_j_384;
            arg_assert_b_76 = appl_j_385;
            var_j_386 = expr_b_75;
            var_j_387 = arg_assert_b_76;
            appl_j_388 = var_j_386 var_j_387;
            fun_ret_b_77 = appl_j_388;
            bool_j_389 = false;
            fail_b_73 = bool_j_389;
            flatten_fun_j_398 = fun expr_b_72 -> (
                var_j_390 = expr_b_72;
                m_match_bool_j_392 = var_j_390 ~ any;
                m_match_bool_j_395 = var_j_390 ~ int;
                m_match_cond_j_396 = m_match_bool_j_395 ? (
                        bool_j_397 = true
                    ) : (
                        m_match_cond_j_393 = m_match_bool_j_392 ? (
                                var_j_394 = fail_b_73
                            ) : (
                                void_j_391 = {}
                            )
                    ));
            flatten_fun_j_400 = fun bj_null_j_17 -> (
                input_j_399 = input);
            flatten_fun_j_402 = fun expr_b_74 -> (
                var_j_401 = expr_b_74);
            record_j_403 = {checker = flatten_fun_j_398, generator = flatten_fun_j_400, wrapper = flatten_fun_j_402};
            proj_j_404 = record_j_403.checker;
            var_j_405 = fun_ret_b_77;
            appl_j_406 = proj_j_404 var_j_405);
        flatten_fun_j_452 = fun bj_null_j_20 -> (
            flatten_fun_j_451 = fun arg_assume_b_67 -> (
                bool_j_408 = false;
                fail_b_62 = bool_j_408;
                flatten_fun_j_417 = fun expr_b_61 -> (
                    var_j_409 = expr_b_61;
                    m_match_bool_j_411 = var_j_409 ~ any;
                    m_match_bool_j_414 = var_j_409 ~ int;
                    m_match_cond_j_415 = m_match_bool_j_414 ? (
                            bool_j_416 = true
                        ) : (
                            m_match_cond_j_412 = m_match_bool_j_411 ? (
                                    var_j_413 = fail_b_62
                                ) : (
                                    void_j_410 = {}
                                )
                        ));
                flatten_fun_j_419 = fun bj_null_j_18 -> (
                    input_j_418 = input);
                flatten_fun_j_421 = fun expr_b_63 -> (
                    var_j_420 = expr_b_63);
                record_j_422 = {checker = flatten_fun_j_417, generator = flatten_fun_j_419, wrapper = flatten_fun_j_421};
                proj_j_423 = record_j_422.checker;
                var_j_424 = arg_assume_b_67;
                appl_j_425 = proj_j_423 var_j_424;
                if_j_450 = appl_j_425 ? (
                        bool_j_426 = false;
                        fail_b_65 = bool_j_426;
                        flatten_fun_j_435 = fun expr_b_64 -> (
                            var_j_427 = expr_b_64;
                            m_match_bool_j_429 = var_j_427 ~ any;
                            m_match_bool_j_432 = var_j_427 ~ int;
                            m_match_cond_j_433 = m_match_bool_j_432 ? (
                                    bool_j_434 = true
                                ) : (
                                    m_match_cond_j_430 = m_match_bool_j_429 ? (
                                            var_j_431 = fail_b_65
                                        ) : (
                                            void_j_428 = {}
                                        )
                                ));
                        flatten_fun_j_437 = fun bj_null_j_19 -> (
                            input_j_436 = input);
                        flatten_fun_j_439 = fun expr_b_66 -> (
                            var_j_438 = expr_b_66);
                        record_j_440 = {checker = flatten_fun_j_435, generator = flatten_fun_j_437, wrapper = flatten_fun_j_439};
                        proj_j_441 = record_j_440.generator;
                        int_j_442 = 0;
                        appl_j_443 = proj_j_441 int_j_442
                    ) : (
                        bool_j_444 = false;
                        fail_b_68 = bool_j_444;
                        var_j_445 = fail_b_68;
                        assert_pred_j_446 = var_j_445;
                        assert_res_j_447 = assert_pred_j_446 ? (
                                assert_res_true_j_448 = {}
                            ) : (
                                ab_j_449 = abort
                            )
                    )));
        flatten_fun_j_498 = fun expr_b_84 -> (
            flatten_fun_j_497 = fun arg_b_85 -> (
                bool_j_453 = false;
                fail_b_79 = bool_j_453;
                flatten_fun_j_462 = fun expr_b_78 -> (
                    var_j_454 = expr_b_78;
                    m_match_bool_j_456 = var_j_454 ~ any;
                    m_match_bool_j_459 = var_j_454 ~ int;
                    m_match_cond_j_460 = m_match_bool_j_459 ? (
                            bool_j_461 = true
                        ) : (
                            m_match_cond_j_457 = m_match_bool_j_456 ? (
                                    var_j_458 = fail_b_79
                                ) : (
                                    void_j_455 = {}
                                )
                        ));
                flatten_fun_j_464 = fun bj_null_j_21 -> (
                    input_j_463 = input);
                flatten_fun_j_466 = fun expr_b_80 -> (
                    var_j_465 = expr_b_80);
                record_j_467 = {checker = flatten_fun_j_462, generator = flatten_fun_j_464, wrapper = flatten_fun_j_466};
                proj_j_468 = record_j_467.checker;
                var_j_469 = arg_b_85;
                m_i_1057 = proj_j_468 ~ fun;
                appl_j_470 = m_i_1057 ? (
                        c_appl_i_1058 = proj_j_468 var_j_469
                    ) : (
                        ab_i_1059 = abort
                    );
                m_i_1060 = appl_j_470 ~ bool;
                if_j_496 = m_i_1060 ? (
                        c_cond_i_1067 = appl_j_470 ? (
                                bool_j_471 = false;
                                fail_b_82 = bool_j_471;
                                flatten_fun_j_480 = fun expr_b_81 -> (
                                    var_j_472 = expr_b_81;
                                    m_match_bool_j_474 = var_j_472 ~ any;
                                    m_match_bool_j_477 = var_j_472 ~ int;
                                    m_match_cond_j_478 = m_match_bool_j_477 ? (
                                            bool_j_479 = true
                                        ) : (
                                            m_match_cond_j_475 = m_match_bool_j_474 ? (
                                                    var_j_476 = fail_b_82
                                                ) : (
                                                    void_j_473 = {}
                                                )
                                        ));
                                flatten_fun_j_482 = fun bj_null_j_22 -> (
                                    input_j_481 = input);
                                flatten_fun_j_484 = fun expr_b_83 -> (
                                    var_j_483 = expr_b_83);
                                record_j_485 = {checker = flatten_fun_j_480, generator = flatten_fun_j_482, wrapper = flatten_fun_j_484};
                                proj_j_486 = record_j_485.wrapper;
                                var_j_487 = expr_b_84;
                                var_j_488 = arg_b_85;
                                m_i_1061 = var_j_487 ~ fun;
                                appl_j_489 = m_i_1061 ? (
                                        c_appl_i_1062 = var_j_487 var_j_488
                                    ) : (
                                        ab_i_1063 = abort
                                    );
                                m_i_1064 = proj_j_486 ~ fun;
                                appl_j_490 = m_i_1064 ? (
                                        c_appl_i_1065 = proj_j_486 appl_j_489
                                    ) : (
                                        ab_i_1066 = abort
                                    )
                            ) : (
                                bool_j_491 = false;
                                assert_pred_j_492 = bool_j_491;
                                assert_res_j_493 = assert_pred_j_492 ? (
                                        assert_res_true_j_494 = {}
                                    ) : (
                                        ab_j_495 = abort
                                    )
                            )
                    ) : (
                        ab_i_1068 = abort
                    )));
        record_j_499 = {checker = flatten_fun_j_407, generator = flatten_fun_j_452, wrapper = flatten_fun_j_498};
        proj_j_500 = record_j_499.checker;
        var_j_501 = arg_b_90;
        m_i_1069 = proj_j_500 ~ fun;
        appl_j_502 = m_i_1069 ? (
                c_appl_i_1070 = proj_j_500 var_j_501
            ) : (
                ab_i_1071 = abort
            );
        m_i_1072 = appl_j_502 ~ bool;
        if_j_528 = m_i_1072 ? (
                c_cond_i_1079 = appl_j_502 ? (
                        bool_j_503 = false;
                        fail_b_87 = bool_j_503;
                        flatten_fun_j_512 = fun expr_b_86 -> (
                            var_j_504 = expr_b_86;
                            m_match_bool_j_506 = var_j_504 ~ any;
                            m_match_bool_j_509 = var_j_504 ~ int;
                            m_match_cond_j_510 = m_match_bool_j_509 ? (
                                    bool_j_511 = true
                                ) : (
                                    m_match_cond_j_507 = m_match_bool_j_506 ? (
                                            var_j_508 = fail_b_87
                                        ) : (
                                            void_j_505 = {}
                                        )
                                ));
                        flatten_fun_j_514 = fun bj_null_j_23 -> (
                            input_j_513 = input);
                        flatten_fun_j_516 = fun expr_b_88 -> (
                            var_j_515 = expr_b_88);
                        record_j_517 = {checker = flatten_fun_j_512, generator = flatten_fun_j_514, wrapper = flatten_fun_j_516};
                        proj_j_518 = record_j_517.wrapper;
                        var_j_519 = expr_b_89;
                        var_j_520 = arg_b_90;
                        m_i_1073 = var_j_519 ~ fun;
                        appl_j_521 = m_i_1073 ? (
                                c_appl_i_1074 = var_j_519 var_j_520
                            ) : (
                                ab_i_1075 = abort
                            );
                        m_i_1076 = proj_j_518 ~ fun;
                        appl_j_522 = m_i_1076 ? (
                                c_appl_i_1077 = proj_j_518 appl_j_521
                            ) : (
                                ab_i_1078 = abort
                            )
                    ) : (
                        bool_j_523 = false;
                        assert_pred_j_524 = bool_j_523;
                        assert_res_j_525 = assert_pred_j_524 ? (
                                assert_res_true_j_526 = {}
                            ) : (
                                ab_j_527 = abort
                            )
                    )
            ) : (
                ab_i_1080 = abort
            )));
record_j_531 = {checker = flatten_fun_j_205, generator = flatten_fun_j_367, wrapper = flatten_fun_j_530};
proj_j_532 = record_j_531.wrapper;
flatten_fun_j_536 = fun x -> (
    var_j_533 = x;
    var_j_534 = x;
    m_i_1081 = var_j_533 ~ fun;
    appl_j_535 = m_i_1081 ? (
            c_appl_i_1082 = var_j_533 var_j_534
        ) : (
            ab_i_1083 = abort
        ));
m_i_1084 = proj_j_532 ~ fun;
appl_j_537 = m_i_1084 ? (
        c_appl_i_1085 = proj_j_532 flatten_fun_j_536
    ) : (
        ab_i_1086 = abort
    );
o_half_b_182 = appl_j_537;
o_half = o_half_b_182;
flatten_fun_j_695 = fun expr_b_149 -> (
    flatten_fun_j_578 = fun expr_b_135 -> (
        bool_j_539 = false;
        fail_b_130 = bool_j_539;
        flatten_fun_j_548 = fun expr_b_129 -> (
            var_j_540 = expr_b_129;
            m_match_bool_j_542 = var_j_540 ~ any;
            m_match_bool_j_545 = var_j_540 ~ int;
            m_match_cond_j_546 = m_match_bool_j_545 ? (
                    bool_j_547 = true
                ) : (
                    m_match_cond_j_543 = m_match_bool_j_542 ? (
                            var_j_544 = fail_b_130
                        ) : (
                            void_j_541 = {}
                        )
                ));
        flatten_fun_j_550 = fun bj_null_j_24 -> (
            input_j_549 = input);
        flatten_fun_j_552 = fun expr_b_131 -> (
            var_j_551 = expr_b_131);
        record_j_553 = {checker = flatten_fun_j_548, generator = flatten_fun_j_550, wrapper = flatten_fun_j_552};
        proj_j_554 = record_j_553.generator;
        int_j_555 = 0;
        appl_j_556 = proj_j_554 int_j_555;
        arg_assert_b_136 = appl_j_556;
        var_j_557 = expr_b_135;
        var_j_558 = arg_assert_b_136;
        appl_j_559 = var_j_557 var_j_558;
        fun_ret_b_137 = appl_j_559;
        bool_j_560 = false;
        fail_b_133 = bool_j_560;
        flatten_fun_j_569 = fun expr_b_132 -> (
            var_j_561 = expr_b_132;
            m_match_bool_j_563 = var_j_561 ~ any;
            m_match_bool_j_566 = var_j_561 ~ int;
            m_match_cond_j_567 = m_match_bool_j_566 ? (
                    bool_j_568 = true
                ) : (
                    m_match_cond_j_564 = m_match_bool_j_563 ? (
                            var_j_565 = fail_b_133
                        ) : (
                            void_j_562 = {}
                        )
                ));
        flatten_fun_j_571 = fun bj_null_j_25 -> (
            input_j_570 = input);
        flatten_fun_j_573 = fun expr_b_134 -> (
            var_j_572 = expr_b_134);
        record_j_574 = {checker = flatten_fun_j_569, generator = flatten_fun_j_571, wrapper = flatten_fun_j_573};
        proj_j_575 = record_j_574.checker;
        var_j_576 = fun_ret_b_137;
        appl_j_577 = proj_j_575 var_j_576);
    flatten_fun_j_623 = fun bj_null_j_28 -> (
        flatten_fun_j_622 = fun arg_assume_b_127 -> (
            bool_j_579 = false;
            fail_b_122 = bool_j_579;
            flatten_fun_j_588 = fun expr_b_121 -> (
                var_j_580 = expr_b_121;
                m_match_bool_j_582 = var_j_580 ~ any;
                m_match_bool_j_585 = var_j_580 ~ int;
                m_match_cond_j_586 = m_match_bool_j_585 ? (
                        bool_j_587 = true
                    ) : (
                        m_match_cond_j_583 = m_match_bool_j_582 ? (
                                var_j_584 = fail_b_122
                            ) : (
                                void_j_581 = {}
                            )
                    ));
            flatten_fun_j_590 = fun bj_null_j_26 -> (
                input_j_589 = input);
            flatten_fun_j_592 = fun expr_b_123 -> (
                var_j_591 = expr_b_123);
            record_j_593 = {checker = flatten_fun_j_588, generator = flatten_fun_j_590, wrapper = flatten_fun_j_592};
            proj_j_594 = record_j_593.checker;
            var_j_595 = arg_assume_b_127;
            appl_j_596 = proj_j_594 var_j_595;
            if_j_621 = appl_j_596 ? (
                    bool_j_597 = false;
                    fail_b_125 = bool_j_597;
                    flatten_fun_j_606 = fun expr_b_124 -> (
                        var_j_598 = expr_b_124;
                        m_match_bool_j_600 = var_j_598 ~ any;
                        m_match_bool_j_603 = var_j_598 ~ int;
                        m_match_cond_j_604 = m_match_bool_j_603 ? (
                                bool_j_605 = true
                            ) : (
                                m_match_cond_j_601 = m_match_bool_j_600 ? (
                                        var_j_602 = fail_b_125
                                    ) : (
                                        void_j_599 = {}
                                    )
                            ));
                    flatten_fun_j_608 = fun bj_null_j_27 -> (
                        input_j_607 = input);
                    flatten_fun_j_610 = fun expr_b_126 -> (
                        var_j_609 = expr_b_126);
                    record_j_611 = {checker = flatten_fun_j_606, generator = flatten_fun_j_608, wrapper = flatten_fun_j_610};
                    proj_j_612 = record_j_611.generator;
                    int_j_613 = 0;
                    appl_j_614 = proj_j_612 int_j_613
                ) : (
                    bool_j_615 = false;
                    fail_b_128 = bool_j_615;
                    var_j_616 = fail_b_128;
                    assert_pred_j_617 = var_j_616;
                    assert_res_j_618 = assert_pred_j_617 ? (
                            assert_res_true_j_619 = {}
                        ) : (
                            ab_j_620 = abort
                        )
                )));
    flatten_fun_j_669 = fun expr_b_144 -> (
        flatten_fun_j_668 = fun arg_b_145 -> (
            bool_j_624 = false;
            fail_b_139 = bool_j_624;
            flatten_fun_j_633 = fun expr_b_138 -> (
                var_j_625 = expr_b_138;
                m_match_bool_j_627 = var_j_625 ~ any;
                m_match_bool_j_630 = var_j_625 ~ int;
                m_match_cond_j_631 = m_match_bool_j_630 ? (
                        bool_j_632 = true
                    ) : (
                        m_match_cond_j_628 = m_match_bool_j_627 ? (
                                var_j_629 = fail_b_139
                            ) : (
                                void_j_626 = {}
                            )
                    ));
            flatten_fun_j_635 = fun bj_null_j_29 -> (
                input_j_634 = input);
            flatten_fun_j_637 = fun expr_b_140 -> (
                var_j_636 = expr_b_140);
            record_j_638 = {checker = flatten_fun_j_633, generator = flatten_fun_j_635, wrapper = flatten_fun_j_637};
            proj_j_639 = record_j_638.checker;
            var_j_640 = arg_b_145;
            m_i_1087 = proj_j_639 ~ fun;
            appl_j_641 = m_i_1087 ? (
                    c_appl_i_1088 = proj_j_639 var_j_640
                ) : (
                    ab_i_1089 = abort
                );
            m_i_1090 = appl_j_641 ~ bool;
            if_j_667 = m_i_1090 ? (
                    c_cond_i_1097 = appl_j_641 ? (
                            bool_j_642 = false;
                            fail_b_142 = bool_j_642;
                            flatten_fun_j_651 = fun expr_b_141 -> (
                                var_j_643 = expr_b_141;
                                m_match_bool_j_645 = var_j_643 ~ any;
                                m_match_bool_j_648 = var_j_643 ~ int;
                                m_match_cond_j_649 = m_match_bool_j_648 ? (
                                        bool_j_650 = true
                                    ) : (
                                        m_match_cond_j_646 = m_match_bool_j_645 ? (
                                                var_j_647 = fail_b_142
                                            ) : (
                                                void_j_644 = {}
                                            )
                                    ));
                            flatten_fun_j_653 = fun bj_null_j_30 -> (
                                input_j_652 = input);
                            flatten_fun_j_655 = fun expr_b_143 -> (
                                var_j_654 = expr_b_143);
                            record_j_656 = {checker = flatten_fun_j_651, generator = flatten_fun_j_653, wrapper = flatten_fun_j_655};
                            proj_j_657 = record_j_656.wrapper;
                            var_j_658 = expr_b_144;
                            var_j_659 = arg_b_145;
                            m_i_1091 = var_j_658 ~ fun;
                            appl_j_660 = m_i_1091 ? (
                                    c_appl_i_1092 = var_j_658 var_j_659
                                ) : (
                                    ab_i_1093 = abort
                                );
                            m_i_1094 = proj_j_657 ~ fun;
                            appl_j_661 = m_i_1094 ? (
                                    c_appl_i_1095 = proj_j_657 appl_j_660
                                ) : (
                                    ab_i_1096 = abort
                                )
                        ) : (
                            bool_j_662 = false;
                            assert_pred_j_663 = bool_j_662;
                            assert_res_j_664 = assert_pred_j_663 ? (
                                    assert_res_true_j_665 = {}
                                ) : (
                                    ab_j_666 = abort
                                )
                        )
                ) : (
                    ab_i_1098 = abort
                )));
    record_j_670 = {checker = flatten_fun_j_578, generator = flatten_fun_j_623, wrapper = flatten_fun_j_669};
    proj_j_671 = record_j_670.generator;
    int_j_672 = 0;
    appl_j_673 = proj_j_671 int_j_672;
    arg_assert_b_150 = appl_j_673;
    var_j_674 = expr_b_149;
    var_j_675 = arg_assert_b_150;
    appl_j_676 = var_j_674 var_j_675;
    fun_ret_b_151 = appl_j_676;
    bool_j_677 = false;
    fail_b_147 = bool_j_677;
    flatten_fun_j_686 = fun expr_b_146 -> (
        var_j_678 = expr_b_146;
        m_match_bool_j_680 = var_j_678 ~ any;
        m_match_bool_j_683 = var_j_678 ~ int;
        m_match_cond_j_684 = m_match_bool_j_683 ? (
                bool_j_685 = true
            ) : (
                m_match_cond_j_681 = m_match_bool_j_680 ? (
                        var_j_682 = fail_b_147
                    ) : (
                        void_j_679 = {}
                    )
            ));
    flatten_fun_j_688 = fun bj_null_j_31 -> (
        input_j_687 = input);
    flatten_fun_j_690 = fun expr_b_148 -> (
        var_j_689 = expr_b_148);
    record_j_691 = {checker = flatten_fun_j_686, generator = flatten_fun_j_688, wrapper = flatten_fun_j_690};
    proj_j_692 = record_j_691.checker;
    var_j_693 = fun_ret_b_151;
    appl_j_694 = proj_j_692 var_j_693);
flatten_fun_j_857 = fun bj_null_j_40 -> (
    flatten_fun_j_856 = fun arg_assume_b_119 -> (
        flatten_fun_j_735 = fun expr_b_105 -> (
            bool_j_696 = false;
            fail_b_100 = bool_j_696;
            flatten_fun_j_705 = fun expr_b_99 -> (
                var_j_697 = expr_b_99;
                m_match_bool_j_699 = var_j_697 ~ any;
                m_match_bool_j_702 = var_j_697 ~ int;
                m_match_cond_j_703 = m_match_bool_j_702 ? (
                        bool_j_704 = true
                    ) : (
                        m_match_cond_j_700 = m_match_bool_j_699 ? (
                                var_j_701 = fail_b_100
                            ) : (
                                void_j_698 = {}
                            )
                    ));
            flatten_fun_j_707 = fun bj_null_j_32 -> (
                input_j_706 = input);
            flatten_fun_j_709 = fun expr_b_101 -> (
                var_j_708 = expr_b_101);
            record_j_710 = {checker = flatten_fun_j_705, generator = flatten_fun_j_707, wrapper = flatten_fun_j_709};
            proj_j_711 = record_j_710.generator;
            int_j_712 = 0;
            appl_j_713 = proj_j_711 int_j_712;
            arg_assert_b_106 = appl_j_713;
            var_j_714 = expr_b_105;
            var_j_715 = arg_assert_b_106;
            appl_j_716 = var_j_714 var_j_715;
            fun_ret_b_107 = appl_j_716;
            bool_j_717 = false;
            fail_b_103 = bool_j_717;
            flatten_fun_j_726 = fun expr_b_102 -> (
                var_j_718 = expr_b_102;
                m_match_bool_j_720 = var_j_718 ~ any;
                m_match_bool_j_723 = var_j_718 ~ int;
                m_match_cond_j_724 = m_match_bool_j_723 ? (
                        bool_j_725 = true
                    ) : (
                        m_match_cond_j_721 = m_match_bool_j_720 ? (
                                var_j_722 = fail_b_103
                            ) : (
                                void_j_719 = {}
                            )
                    ));
            flatten_fun_j_728 = fun bj_null_j_33 -> (
                input_j_727 = input);
            flatten_fun_j_730 = fun expr_b_104 -> (
                var_j_729 = expr_b_104);
            record_j_731 = {checker = flatten_fun_j_726, generator = flatten_fun_j_728, wrapper = flatten_fun_j_730};
            proj_j_732 = record_j_731.checker;
            var_j_733 = fun_ret_b_107;
            appl_j_734 = proj_j_732 var_j_733);
        flatten_fun_j_780 = fun bj_null_j_36 -> (
            flatten_fun_j_779 = fun arg_assume_b_97 -> (
                bool_j_736 = false;
                fail_b_92 = bool_j_736;
                flatten_fun_j_745 = fun expr_b_91 -> (
                    var_j_737 = expr_b_91;
                    m_match_bool_j_739 = var_j_737 ~ any;
                    m_match_bool_j_742 = var_j_737 ~ int;
                    m_match_cond_j_743 = m_match_bool_j_742 ? (
                            bool_j_744 = true
                        ) : (
                            m_match_cond_j_740 = m_match_bool_j_739 ? (
                                    var_j_741 = fail_b_92
                                ) : (
                                    void_j_738 = {}
                                )
                        ));
                flatten_fun_j_747 = fun bj_null_j_34 -> (
                    input_j_746 = input);
                flatten_fun_j_749 = fun expr_b_93 -> (
                    var_j_748 = expr_b_93);
                record_j_750 = {checker = flatten_fun_j_745, generator = flatten_fun_j_747, wrapper = flatten_fun_j_749};
                proj_j_751 = record_j_750.checker;
                var_j_752 = arg_assume_b_97;
                appl_j_753 = proj_j_751 var_j_752;
                if_j_778 = appl_j_753 ? (
                        bool_j_754 = false;
                        fail_b_95 = bool_j_754;
                        flatten_fun_j_763 = fun expr_b_94 -> (
                            var_j_755 = expr_b_94;
                            m_match_bool_j_757 = var_j_755 ~ any;
                            m_match_bool_j_760 = var_j_755 ~ int;
                            m_match_cond_j_761 = m_match_bool_j_760 ? (
                                    bool_j_762 = true
                                ) : (
                                    m_match_cond_j_758 = m_match_bool_j_757 ? (
                                            var_j_759 = fail_b_95
                                        ) : (
                                            void_j_756 = {}
                                        )
                                ));
                        flatten_fun_j_765 = fun bj_null_j_35 -> (
                            input_j_764 = input);
                        flatten_fun_j_767 = fun expr_b_96 -> (
                            var_j_766 = expr_b_96);
                        record_j_768 = {checker = flatten_fun_j_763, generator = flatten_fun_j_765, wrapper = flatten_fun_j_767};
                        proj_j_769 = record_j_768.generator;
                        int_j_770 = 0;
                        appl_j_771 = proj_j_769 int_j_770
                    ) : (
                        bool_j_772 = false;
                        fail_b_98 = bool_j_772;
                        var_j_773 = fail_b_98;
                        assert_pred_j_774 = var_j_773;
                        assert_res_j_775 = assert_pred_j_774 ? (
                                assert_res_true_j_776 = {}
                            ) : (
                                ab_j_777 = abort
                            )
                    )));
        flatten_fun_j_826 = fun expr_b_114 -> (
            flatten_fun_j_825 = fun arg_b_115 -> (
                bool_j_781 = false;
                fail_b_109 = bool_j_781;
                flatten_fun_j_790 = fun expr_b_108 -> (
                    var_j_782 = expr_b_108;
                    m_match_bool_j_784 = var_j_782 ~ any;
                    m_match_bool_j_787 = var_j_782 ~ int;
                    m_match_cond_j_788 = m_match_bool_j_787 ? (
                            bool_j_789 = true
                        ) : (
                            m_match_cond_j_785 = m_match_bool_j_784 ? (
                                    var_j_786 = fail_b_109
                                ) : (
                                    void_j_783 = {}
                                )
                        ));
                flatten_fun_j_792 = fun bj_null_j_37 -> (
                    input_j_791 = input);
                flatten_fun_j_794 = fun expr_b_110 -> (
                    var_j_793 = expr_b_110);
                record_j_795 = {checker = flatten_fun_j_790, generator = flatten_fun_j_792, wrapper = flatten_fun_j_794};
                proj_j_796 = record_j_795.checker;
                var_j_797 = arg_b_115;
                m_i_1099 = proj_j_796 ~ fun;
                appl_j_798 = m_i_1099 ? (
                        c_appl_i_1100 = proj_j_796 var_j_797
                    ) : (
                        ab_i_1101 = abort
                    );
                m_i_1102 = appl_j_798 ~ bool;
                if_j_824 = m_i_1102 ? (
                        c_cond_i_1109 = appl_j_798 ? (
                                bool_j_799 = false;
                                fail_b_112 = bool_j_799;
                                flatten_fun_j_808 = fun expr_b_111 -> (
                                    var_j_800 = expr_b_111;
                                    m_match_bool_j_802 = var_j_800 ~ any;
                                    m_match_bool_j_805 = var_j_800 ~ int;
                                    m_match_cond_j_806 = m_match_bool_j_805 ? (
                                            bool_j_807 = true
                                        ) : (
                                            m_match_cond_j_803 = m_match_bool_j_802 ? (
                                                    var_j_804 = fail_b_112
                                                ) : (
                                                    void_j_801 = {}
                                                )
                                        ));
                                flatten_fun_j_810 = fun bj_null_j_38 -> (
                                    input_j_809 = input);
                                flatten_fun_j_812 = fun expr_b_113 -> (
                                    var_j_811 = expr_b_113);
                                record_j_813 = {checker = flatten_fun_j_808, generator = flatten_fun_j_810, wrapper = flatten_fun_j_812};
                                proj_j_814 = record_j_813.wrapper;
                                var_j_815 = expr_b_114;
                                var_j_816 = arg_b_115;
                                m_i_1103 = var_j_815 ~ fun;
                                appl_j_817 = m_i_1103 ? (
                                        c_appl_i_1104 = var_j_815 var_j_816
                                    ) : (
                                        ab_i_1105 = abort
                                    );
                                m_i_1106 = proj_j_814 ~ fun;
                                appl_j_818 = m_i_1106 ? (
                                        c_appl_i_1107 = proj_j_814 appl_j_817
                                    ) : (
                                        ab_i_1108 = abort
                                    )
                            ) : (
                                bool_j_819 = false;
                                assert_pred_j_820 = bool_j_819;
                                assert_res_j_821 = assert_pred_j_820 ? (
                                        assert_res_true_j_822 = {}
                                    ) : (
                                        ab_j_823 = abort
                                    )
                            )
                    ) : (
                        ab_i_1110 = abort
                    )));
        record_j_827 = {checker = flatten_fun_j_735, generator = flatten_fun_j_780, wrapper = flatten_fun_j_826};
        proj_j_828 = record_j_827.checker;
        var_j_829 = arg_assume_b_119;
        appl_j_830 = proj_j_828 var_j_829;
        if_j_855 = appl_j_830 ? (
                bool_j_831 = false;
                fail_b_117 = bool_j_831;
                flatten_fun_j_840 = fun expr_b_116 -> (
                    var_j_832 = expr_b_116;
                    m_match_bool_j_834 = var_j_832 ~ any;
                    m_match_bool_j_837 = var_j_832 ~ int;
                    m_match_cond_j_838 = m_match_bool_j_837 ? (
                            bool_j_839 = true
                        ) : (
                            m_match_cond_j_835 = m_match_bool_j_834 ? (
                                    var_j_836 = fail_b_117
                                ) : (
                                    void_j_833 = {}
                                )
                        ));
                flatten_fun_j_842 = fun bj_null_j_39 -> (
                    input_j_841 = input);
                flatten_fun_j_844 = fun expr_b_118 -> (
                    var_j_843 = expr_b_118);
                record_j_845 = {checker = flatten_fun_j_840, generator = flatten_fun_j_842, wrapper = flatten_fun_j_844};
                proj_j_846 = record_j_845.generator;
                int_j_847 = 0;
                appl_j_848 = proj_j_846 int_j_847
            ) : (
                bool_j_849 = false;
                fail_b_120 = bool_j_849;
                var_j_850 = fail_b_120;
                assert_pred_j_851 = var_j_850;
                assert_res_j_852 = assert_pred_j_851 ? (
                        assert_res_true_j_853 = {}
                    ) : (
                        ab_j_854 = abort
                    )
            )));
flatten_fun_j_1020 = fun expr_b_180 -> (
    flatten_fun_j_1019 = fun arg_b_181 -> (
        flatten_fun_j_897 = fun expr_b_166 -> (
            bool_j_858 = false;
            fail_b_161 = bool_j_858;
            flatten_fun_j_867 = fun expr_b_160 -> (
                var_j_859 = expr_b_160;
                m_match_bool_j_861 = var_j_859 ~ any;
                m_match_bool_j_864 = var_j_859 ~ int;
                m_match_cond_j_865 = m_match_bool_j_864 ? (
                        bool_j_866 = true
                    ) : (
                        m_match_cond_j_862 = m_match_bool_j_861 ? (
                                var_j_863 = fail_b_161
                            ) : (
                                void_j_860 = {}
                            )
                    ));
            flatten_fun_j_869 = fun bj_null_j_41 -> (
                input_j_868 = input);
            flatten_fun_j_871 = fun expr_b_162 -> (
                var_j_870 = expr_b_162);
            record_j_872 = {checker = flatten_fun_j_867, generator = flatten_fun_j_869, wrapper = flatten_fun_j_871};
            proj_j_873 = record_j_872.generator;
            int_j_874 = 0;
            appl_j_875 = proj_j_873 int_j_874;
            arg_assert_b_167 = appl_j_875;
            var_j_876 = expr_b_166;
            var_j_877 = arg_assert_b_167;
            appl_j_878 = var_j_876 var_j_877;
            fun_ret_b_168 = appl_j_878;
            bool_j_879 = false;
            fail_b_164 = bool_j_879;
            flatten_fun_j_888 = fun expr_b_163 -> (
                var_j_880 = expr_b_163;
                m_match_bool_j_882 = var_j_880 ~ any;
                m_match_bool_j_885 = var_j_880 ~ int;
                m_match_cond_j_886 = m_match_bool_j_885 ? (
                        bool_j_887 = true
                    ) : (
                        m_match_cond_j_883 = m_match_bool_j_882 ? (
                                var_j_884 = fail_b_164
                            ) : (
                                void_j_881 = {}
                            )
                    ));
            flatten_fun_j_890 = fun bj_null_j_42 -> (
                input_j_889 = input);
            flatten_fun_j_892 = fun expr_b_165 -> (
                var_j_891 = expr_b_165);
            record_j_893 = {checker = flatten_fun_j_888, generator = flatten_fun_j_890, wrapper = flatten_fun_j_892};
            proj_j_894 = record_j_893.checker;
            var_j_895 = fun_ret_b_168;
            appl_j_896 = proj_j_894 var_j_895);
        flatten_fun_j_942 = fun bj_null_j_45 -> (
            flatten_fun_j_941 = fun arg_assume_b_158 -> (
                bool_j_898 = false;
                fail_b_153 = bool_j_898;
                flatten_fun_j_907 = fun expr_b_152 -> (
                    var_j_899 = expr_b_152;
                    m_match_bool_j_901 = var_j_899 ~ any;
                    m_match_bool_j_904 = var_j_899 ~ int;
                    m_match_cond_j_905 = m_match_bool_j_904 ? (
                            bool_j_906 = true
                        ) : (
                            m_match_cond_j_902 = m_match_bool_j_901 ? (
                                    var_j_903 = fail_b_153
                                ) : (
                                    void_j_900 = {}
                                )
                        ));
                flatten_fun_j_909 = fun bj_null_j_43 -> (
                    input_j_908 = input);
                flatten_fun_j_911 = fun expr_b_154 -> (
                    var_j_910 = expr_b_154);
                record_j_912 = {checker = flatten_fun_j_907, generator = flatten_fun_j_909, wrapper = flatten_fun_j_911};
                proj_j_913 = record_j_912.checker;
                var_j_914 = arg_assume_b_158;
                appl_j_915 = proj_j_913 var_j_914;
                if_j_940 = appl_j_915 ? (
                        bool_j_916 = false;
                        fail_b_156 = bool_j_916;
                        flatten_fun_j_925 = fun expr_b_155 -> (
                            var_j_917 = expr_b_155;
                            m_match_bool_j_919 = var_j_917 ~ any;
                            m_match_bool_j_922 = var_j_917 ~ int;
                            m_match_cond_j_923 = m_match_bool_j_922 ? (
                                    bool_j_924 = true
                                ) : (
                                    m_match_cond_j_920 = m_match_bool_j_919 ? (
                                            var_j_921 = fail_b_156
                                        ) : (
                                            void_j_918 = {}
                                        )
                                ));
                        flatten_fun_j_927 = fun bj_null_j_44 -> (
                            input_j_926 = input);
                        flatten_fun_j_929 = fun expr_b_157 -> (
                            var_j_928 = expr_b_157);
                        record_j_930 = {checker = flatten_fun_j_925, generator = flatten_fun_j_927, wrapper = flatten_fun_j_929};
                        proj_j_931 = record_j_930.generator;
                        int_j_932 = 0;
                        appl_j_933 = proj_j_931 int_j_932
                    ) : (
                        bool_j_934 = false;
                        fail_b_159 = bool_j_934;
                        var_j_935 = fail_b_159;
                        assert_pred_j_936 = var_j_935;
                        assert_res_j_937 = assert_pred_j_936 ? (
                                assert_res_true_j_938 = {}
                            ) : (
                                ab_j_939 = abort
                            )
                    )));
        flatten_fun_j_988 = fun expr_b_175 -> (
            flatten_fun_j_987 = fun arg_b_176 -> (
                bool_j_943 = false;
                fail_b_170 = bool_j_943;
                flatten_fun_j_952 = fun expr_b_169 -> (
                    var_j_944 = expr_b_169;
                    m_match_bool_j_946 = var_j_944 ~ any;
                    m_match_bool_j_949 = var_j_944 ~ int;
                    m_match_cond_j_950 = m_match_bool_j_949 ? (
                            bool_j_951 = true
                        ) : (
                            m_match_cond_j_947 = m_match_bool_j_946 ? (
                                    var_j_948 = fail_b_170
                                ) : (
                                    void_j_945 = {}
                                )
                        ));
                flatten_fun_j_954 = fun bj_null_j_46 -> (
                    input_j_953 = input);
                flatten_fun_j_956 = fun expr_b_171 -> (
                    var_j_955 = expr_b_171);
                record_j_957 = {checker = flatten_fun_j_952, generator = flatten_fun_j_954, wrapper = flatten_fun_j_956};
                proj_j_958 = record_j_957.checker;
                var_j_959 = arg_b_176;
                m_i_1111 = proj_j_958 ~ fun;
                appl_j_960 = m_i_1111 ? (
                        c_appl_i_1112 = proj_j_958 var_j_959
                    ) : (
                        ab_i_1113 = abort
                    );
                m_i_1114 = appl_j_960 ~ bool;
                if_j_986 = m_i_1114 ? (
                        c_cond_i_1121 = appl_j_960 ? (
                                bool_j_961 = false;
                                fail_b_173 = bool_j_961;
                                flatten_fun_j_970 = fun expr_b_172 -> (
                                    var_j_962 = expr_b_172;
                                    m_match_bool_j_964 = var_j_962 ~ any;
                                    m_match_bool_j_967 = var_j_962 ~ int;
                                    m_match_cond_j_968 = m_match_bool_j_967 ? (
                                            bool_j_969 = true
                                        ) : (
                                            m_match_cond_j_965 = m_match_bool_j_964 ? (
                                                    var_j_966 = fail_b_173
                                                ) : (
                                                    void_j_963 = {}
                                                )
                                        ));
                                flatten_fun_j_972 = fun bj_null_j_47 -> (
                                    input_j_971 = input);
                                flatten_fun_j_974 = fun expr_b_174 -> (
                                    var_j_973 = expr_b_174);
                                record_j_975 = {checker = flatten_fun_j_970, generator = flatten_fun_j_972, wrapper = flatten_fun_j_974};
                                proj_j_976 = record_j_975.wrapper;
                                var_j_977 = expr_b_175;
                                var_j_978 = arg_b_176;
                                m_i_1115 = var_j_977 ~ fun;
                                appl_j_979 = m_i_1115 ? (
                                        c_appl_i_1116 = var_j_977 var_j_978
                                    ) : (
                                        ab_i_1117 = abort
                                    );
                                m_i_1118 = proj_j_976 ~ fun;
                                appl_j_980 = m_i_1118 ? (
                                        c_appl_i_1119 = proj_j_976 appl_j_979
                                    ) : (
                                        ab_i_1120 = abort
                                    )
                            ) : (
                                bool_j_981 = false;
                                assert_pred_j_982 = bool_j_981;
                                assert_res_j_983 = assert_pred_j_982 ? (
                                        assert_res_true_j_984 = {}
                                    ) : (
                                        ab_j_985 = abort
                                    )
                            )
                    ) : (
                        ab_i_1122 = abort
                    )));
        record_j_989 = {checker = flatten_fun_j_897, generator = flatten_fun_j_942, wrapper = flatten_fun_j_988};
        proj_j_990 = record_j_989.checker;
        var_j_991 = arg_b_181;
        m_i_1123 = proj_j_990 ~ fun;
        appl_j_992 = m_i_1123 ? (
                c_appl_i_1124 = proj_j_990 var_j_991
            ) : (
                ab_i_1125 = abort
            );
        m_i_1126 = appl_j_992 ~ bool;
        if_j_1018 = m_i_1126 ? (
                c_cond_i_1133 = appl_j_992 ? (
                        bool_j_993 = false;
                        fail_b_178 = bool_j_993;
                        flatten_fun_j_1002 = fun expr_b_177 -> (
                            var_j_994 = expr_b_177;
                            m_match_bool_j_996 = var_j_994 ~ any;
                            m_match_bool_j_999 = var_j_994 ~ int;
                            m_match_cond_j_1000 = m_match_bool_j_999 ? (
                                    bool_j_1001 = true
                                ) : (
                                    m_match_cond_j_997 = m_match_bool_j_996 ? (
                                            var_j_998 = fail_b_178
                                        ) : (
                                            void_j_995 = {}
                                        )
                                ));
                        flatten_fun_j_1004 = fun bj_null_j_48 -> (
                            input_j_1003 = input);
                        flatten_fun_j_1006 = fun expr_b_179 -> (
                            var_j_1005 = expr_b_179);
                        record_j_1007 = {checker = flatten_fun_j_1002, generator = flatten_fun_j_1004, wrapper = flatten_fun_j_1006};
                        proj_j_1008 = record_j_1007.wrapper;
                        var_j_1009 = expr_b_180;
                        var_j_1010 = arg_b_181;
                        m_i_1127 = var_j_1009 ~ fun;
                        appl_j_1011 = m_i_1127 ? (
                                c_appl_i_1128 = var_j_1009 var_j_1010
                            ) : (
                                ab_i_1129 = abort
                            );
                        m_i_1130 = proj_j_1008 ~ fun;
                        appl_j_1012 = m_i_1130 ? (
                                c_appl_i_1131 = proj_j_1008 appl_j_1011
                            ) : (
                                ab_i_1132 = abort
                            )
                    ) : (
                        bool_j_1013 = false;
                        assert_pred_j_1014 = bool_j_1013;
                        assert_res_j_1015 = assert_pred_j_1014 ? (
                                assert_res_true_j_1016 = {}
                            ) : (
                                ab_j_1017 = abort
                            )
                    )
            ) : (
                ab_i_1134 = abort
            )));
record_j_1021 = {checker = flatten_fun_j_695, generator = flatten_fun_j_857, wrapper = flatten_fun_j_1020};
proj_j_1022 = record_j_1021.checker;
appl_j_1024 = proj_j_1022 o_half_b_182;
check_res_b_183 = appl_j_1024;
if_j_1032 = check_res_b_183 ? (
        var_j_1026 = o_half
    ) : (
        error_var_j_1027 = check_res_b_183;
        assert_pred_j_1028 = error_var_j_1027;
        assert_res_j_1029 = assert_pred_j_1028 ? (
                assert_res_true_j_1030 = {}
            ) : (
                ab_j_1031 = abort
            )
    );
i_result = if_j_1032