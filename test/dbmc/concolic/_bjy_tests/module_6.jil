i_first = {};
flatten_fun_j_27 = fun x -> (
    flatten_fun_j_26 = fun s -> (
        record_j_22 = {};
        var_j_23 = x;
        var_j_24 = s;
        record_j_25 = {j_cons = record_j_22, j_head = var_j_23, j_tail = var_j_24}));
record_j_28 = {};
record_j_29 = {j_empty = record_j_28};
record_j_30 = {add = flatten_fun_j_27, emptyset = record_j_29};
record_j_31 = {};
record_j_32 = {};
record_j_33 = {add = record_j_31, emptyset = record_j_32};
record_j_34 = {bj_actual_rec = record_j_30, bj_decl_lbls = record_j_33};
set_m = record_j_34;
flatten_fun_j_95 = fun expr_b_14 -> (
    bool_j_35 = false;
    lst_fail_b_15 = bool_j_35;
    var_j_36 = expr_b_14;
    m_match_bool_j_38 = var_j_36 ~ any;
    m_match_bool_j_41 = var_j_36 ~ {j_head, j_tail, _};
    m_match_bool_j_92 = var_j_36 ~ {j_empty, _};
    m_match_cond_j_93 = m_match_bool_j_92 ? (
            bool_j_94 = true
        ) : (
            m_match_cond_j_42 = m_match_bool_j_41 ? (
                    bj_underscore = var_j_36.j_head;
                    bj_underscore2 = var_j_36.j_tail;
                    flatten_fun_j_85 = fun test_fun_b_11_j_0 -> (
                        flatten_fun_j_84 = fun test_list_b_12 -> (
                            var_j_43 = test_fun_b_11_j_0;
                            var_j_44 = test_fun_b_11_j_0;
                            appl_j_45 = var_j_43 var_j_44;
                            test_fun_b_11 = appl_j_45;
                            var_j_46 = test_list_b_12;
                            m_match_bool_j_48 = var_j_46 ~ {j_head, j_tail, _};
                            m_match_bool_j_81 = var_j_46 ~ {j_empty, _};
                            m_match_cond_j_82 = m_match_bool_j_81 ? (
                                    bool_j_83 = true
                                ) : (
                                    m_match_cond_j_49 = m_match_bool_j_48 ? (
                                            hd = var_j_46.j_head;
                                            tl = var_j_46.j_tail;
                                            bool_j_50 = false;
                                            fail_b_7 = bool_j_50;
                                            flatten_fun_j_66 = fun expr_b_8 -> (
                                                var_j_51 = expr_b_8;
                                                m_match_bool_j_53 = var_j_51 ~ any;
                                                m_match_bool_j_56 = var_j_51 ~ 
                                                    {bj_untouched, _};
                                                m_match_cond_j_57 = m_match_bool_j_56 ? (
                                                        bj_poly_var_b_9 = var_j_51.bj_untouched;
                                                        var_j_58 = bj_poly_var_b_9;
                                                        m_match_bool_j_60 = var_j_58 ~ any;
                                                        m_match_bool_j_63 = var_j_58 ~ 
                                                            {bj_ticka, _};
                                                        m_match_cond_j_64 = m_match_bool_j_63 ? (
                                                                bool_j_65 = true
                                                            ) : (
                                                                m_match_cond_j_61 = m_match_bool_j_60 ? (
                                                                        
                                                                    var_j_62 = fail_b_7
                                                                    ) : (
                                                                        
                                                                    void_j_59 = 
                                                                    {}
                                                                    )
                                                            )
                                                    ) : (
                                                        m_match_cond_j_54 = m_match_bool_j_53 ? (
                                                                var_j_55 = fail_b_7
                                                            ) : (
                                                                void_j_52 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_70 = fun bj_null -> (
                                                record_j_67 = {};
                                                record_j_68 = {bj_ticka = record_j_67};
                                                record_j_69 = {bj_untouched = record_j_68});
                                            record_j_71 = {checker = flatten_fun_j_66, generator = flatten_fun_j_70};
                                            proj_j_72 = record_j_71.checker;
                                            var_j_73 = hd;
                                            appl_j_74 = proj_j_72 var_j_73;
                                            elm_check_b_13 = appl_j_74;
                                            var_j_75 = elm_check_b_13;
                                            if_j_80 = var_j_75 ? (
                                                    var_j_76 = test_fun_b_11;
                                                    var_j_77 = tl;
                                                    appl_j_78 = var_j_76 var_j_77
                                                ) : (
                                                    var_j_79 = elm_check_b_13
                                                )
                                        ) : (
                                            void_j_47 = {}
                                        )
                                )));
                    test_fun_b_11_j_0_j_3 = flatten_fun_j_85;
                    var_j_86 = test_fun_b_11_j_0_j_3;
                    var_j_87 = test_fun_b_11_j_0_j_3;
                    appl_j_88 = var_j_86 var_j_87;
                    test_fun_b_11_j_2 = appl_j_88;
                    var_j_89 = test_fun_b_11_j_2;
                    var_j_90 = expr_b_14;
                    appl_j_91 = var_j_89 var_j_90
                ) : (
                    m_match_cond_j_39 = m_match_bool_j_38 ? (
                            var_j_40 = lst_fail_b_15
                        ) : (
                            void_j_37 = {}
                        )
                )
        ));
flatten_fun_j_153 = fun bj_null_j_8 -> (
    flatten_fun_j_139 = fun list_maker_b_5_j_1 -> (
        flatten_fun_j_138 = fun len_b_4 -> (
            var_j_96 = list_maker_b_5_j_1;
            var_j_97 = list_maker_b_5_j_1;
            appl_j_98 = var_j_96 var_j_97;
            list_maker_b_5 = appl_j_98;
            var_j_99 = len_b_4;
            int_j_100 = 0;
            binop_j_101 = var_j_99 == int_j_100;
            if_j_137 = binop_j_101 ? (
                    record_j_102 = {};
                    record_j_103 = {j_empty = record_j_102}
                ) : (
                    bool_j_104 = false;
                    fail_b_0 = bool_j_104;
                    flatten_fun_j_120 = fun expr_b_1 -> (
                        var_j_105 = expr_b_1;
                        m_match_bool_j_107 = var_j_105 ~ any;
                        m_match_bool_j_110 = var_j_105 ~ {bj_untouched, _};
                        m_match_cond_j_111 = m_match_bool_j_110 ? (
                                bj_poly_var_b_2 = var_j_105.bj_untouched;
                                var_j_112 = bj_poly_var_b_2;
                                m_match_bool_j_114 = var_j_112 ~ any;
                                m_match_bool_j_117 = var_j_112 ~ {bj_ticka, _};
                                m_match_cond_j_118 = m_match_bool_j_117 ? (
                                        bool_j_119 = true
                                    ) : (
                                        m_match_cond_j_115 = m_match_bool_j_114 ? (
                                                var_j_116 = fail_b_0
                                            ) : (
                                                void_j_113 = {}
                                            )
                                    )
                            ) : (
                                m_match_cond_j_108 = m_match_bool_j_107 ? (
                                        var_j_109 = fail_b_0
                                    ) : (
                                        void_j_106 = {}
                                    )
                            ));
                    flatten_fun_j_124 = fun bj_null_j_4 -> (
                        record_j_121 = {};
                        record_j_122 = {bj_ticka = record_j_121};
                        record_j_123 = {bj_untouched = record_j_122});
                    record_j_125 = {checker = flatten_fun_j_120, generator = flatten_fun_j_124};
                    proj_j_126 = record_j_125.generator;
                    int_j_127 = 0;
                    appl_j_128 = proj_j_126 int_j_127;
                    elm_b_6 = appl_j_128;
                    record_j_129 = {};
                    var_j_130 = elm_b_6;
                    var_j_131 = list_maker_b_5;
                    var_j_132 = len_b_4;
                    int_j_133 = 1;
                    binop_j_134 = var_j_132 - int_j_133;
                    appl_j_135 = var_j_131 binop_j_134;
                    record_j_136 = {j_cons = record_j_129, j_head = var_j_130, j_tail = appl_j_135}
                )));
    list_maker_b_5_j_1_j_7 = flatten_fun_j_139;
    var_j_140 = list_maker_b_5_j_1_j_7;
    var_j_141 = list_maker_b_5_j_1_j_7;
    appl_j_142 = var_j_140 var_j_141;
    list_maker_b_5_j_6 = appl_j_142;
    input_j_143 = input;
    len_b_4_j_5 = input_j_143;
    int_j_144 = 0;
    var_j_145 = len_b_4_j_5;
    binop_j_146 = int_j_144 <= var_j_145;
    if_j_152 = binop_j_146 ? (
            var_j_147 = list_maker_b_5_j_6;
            var_j_148 = len_b_4_j_5;
            appl_j_149 = var_j_147 var_j_148
        ) : (
            bool_j_150 = false;
            assume_j_151 = assume bool_j_150
        ));
record_j_154 = {checker = flatten_fun_j_95, generator = flatten_fun_j_153};
t = record_j_154;
flatten_fun_j_321 = fun expr_b_62 -> (
    bool_j_155 = false;
    rec_fail_b_61 = bool_j_155;
    bool_j_156 = false;
    rec_fail_b_60 = bool_j_156;
    bool_j_157 = false;
    rec_fail_b_59 = bool_j_157;
    var_j_158 = expr_b_62;
    m_match_bool_j_160 = var_j_158 ~ any;
    m_match_bool_j_163 = var_j_158 ~ {bj_actual_rec, _};
    m_match_cond_j_164 = m_match_bool_j_163 ? (
            var_j_165 = expr_b_62;
            proj_j_166 = var_j_165.bj_decl_lbls;
            m_match_bool_j_168 = proj_j_166 ~ any;
            m_match_bool_j_171 = proj_j_166 ~ {add, emptyset, _};
            m_match_cond_j_172 = m_match_bool_j_171 ? (
                    add_j_15 = proj_j_166.add;
                    emptyset_j_14 = proj_j_166.emptyset;
                    var_j_173 = expr_b_62;
                    proj_j_174 = var_j_173.bj_actual_rec;
                    m_match_bool_j_176 = proj_j_174 ~ any;
                    m_match_bool_j_179 = proj_j_174 ~ {add, emptyset, _};
                    m_match_cond_j_180 = m_match_bool_j_179 ? (
                            add = proj_j_174.add;
                            emptyset = proj_j_174.emptyset;
                            flatten_fun_j_242 = fun expr_b_88 -> (
                                bool_j_181 = false;
                                fail_b_77 = bool_j_181;
                                flatten_fun_j_197 = fun expr_b_78 -> (
                                    var_j_182 = expr_b_78;
                                    m_match_bool_j_184 = var_j_182 ~ any;
                                    m_match_bool_j_187 = var_j_182 ~ 
                                        {bj_untouched, _};
                                    m_match_cond_j_188 = m_match_bool_j_187 ? (
                                            bj_poly_var_b_79 = var_j_182.bj_untouched;
                                            var_j_189 = bj_poly_var_b_79;
                                            m_match_bool_j_191 = var_j_189 ~ any;
                                            m_match_bool_j_194 = var_j_189 ~ 
                                                {bj_ticka, _};
                                            m_match_cond_j_195 = m_match_bool_j_194 ? (
                                                    bool_j_196 = true
                                                ) : (
                                                    m_match_cond_j_192 = m_match_bool_j_191 ? (
                                                            var_j_193 = fail_b_77
                                                        ) : (
                                                            void_j_190 = 
                                                                {}
                                                        )
                                                )
                                        ) : (
                                            m_match_cond_j_185 = m_match_bool_j_184 ? (
                                                    var_j_186 = fail_b_77
                                                ) : (
                                                    void_j_183 = {}
                                                )
                                        ));
                                flatten_fun_j_201 = fun bj_null_j_9 -> (
                                    record_j_198 = {};
                                    record_j_199 = {bj_ticka = record_j_198};
                                    record_j_200 = {bj_untouched = record_j_199});
                                record_j_202 = {checker = flatten_fun_j_197, generator = flatten_fun_j_201};
                                proj_j_203 = record_j_202.generator;
                                int_j_204 = 0;
                                appl_j_205 = proj_j_203 int_j_204;
                                arg_assert_b_89 = appl_j_205;
                                var_j_206 = expr_b_88;
                                var_j_207 = arg_assert_b_89;
                                appl_j_208 = var_j_206 var_j_207;
                                fun_ret_b_90 = appl_j_208;
                                flatten_fun_j_220 = fun expr_b_83 -> (
                                    var_j_209 = t;
                                    proj_j_210 = var_j_209.generator;
                                    int_j_211 = 0;
                                    appl_j_212 = proj_j_210 int_j_211;
                                    arg_assert_b_84 = appl_j_212;
                                    var_j_213 = expr_b_83;
                                    var_j_214 = arg_assert_b_84;
                                    appl_j_215 = var_j_213 var_j_214;
                                    fun_ret_b_85 = appl_j_215;
                                    var_j_216 = t;
                                    proj_j_217 = var_j_216.checker;
                                    var_j_218 = fun_ret_b_85;
                                    appl_j_219 = proj_j_217 var_j_218);
                                flatten_fun_j_237 = fun bj_null_j_10 -> (
                                    flatten_fun_j_236 = fun arg_assume_b_81 -> (
                                        var_j_221 = t;
                                        proj_j_222 = var_j_221.checker;
                                        var_j_223 = arg_assume_b_81;
                                        appl_j_224 = proj_j_222 var_j_223;
                                        if_j_235 = appl_j_224 ? (
                                                var_j_225 = t;
                                                proj_j_226 = var_j_225.generator;
                                                int_j_227 = 0;
                                                appl_j_228 = proj_j_226 int_j_227
                                            ) : (
                                                bool_j_229 = false;
                                                fail_b_82 = bool_j_229;
                                                var_j_230 = fail_b_82;
                                                assert_pred_j_231 = var_j_230;
                                                assert_res_j_232 = assert_pred_j_231 ? (
                                                        assert_res_true_j_233 = 
                                                            {}
                                                    ) : (
                                                        ab_j_234 = abort
                                                    )
                                            )));
                                record_j_238 = {checker = flatten_fun_j_220, generator = flatten_fun_j_237};
                                proj_j_239 = record_j_238.checker;
                                var_j_240 = fun_ret_b_90;
                                appl_j_241 = proj_j_239 var_j_240);
                            flatten_fun_j_309 = fun bj_null_j_13 -> (
                                flatten_fun_j_308 = fun arg_assume_b_75 -> (
                                    bool_j_243 = false;
                                    fail_b_64 = bool_j_243;
                                    flatten_fun_j_259 = fun expr_b_65 -> (
                                        var_j_244 = expr_b_65;
                                        m_match_bool_j_246 = var_j_244 ~ any;
                                        m_match_bool_j_249 = var_j_244 ~ 
                                            {bj_untouched, _};
                                        m_match_cond_j_250 = m_match_bool_j_249 ? (
                                                bj_poly_var_b_66 = var_j_244.bj_untouched;
                                                var_j_251 = bj_poly_var_b_66;
                                                m_match_bool_j_253 = var_j_251 ~ any;
                                                m_match_bool_j_256 = var_j_251 ~ 
                                                    {bj_ticka, _};
                                                m_match_cond_j_257 = m_match_bool_j_256 ? (
                                                        bool_j_258 = true
                                                    ) : (
                                                        m_match_cond_j_254 = m_match_bool_j_253 ? (
                                                                var_j_255 = fail_b_64
                                                            ) : (
                                                                void_j_252 = 
                                                                    {}
                                                            )
                                                    )
                                            ) : (
                                                m_match_cond_j_247 = m_match_bool_j_246 ? (
                                                        var_j_248 = fail_b_64
                                                    ) : (
                                                        void_j_245 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_263 = fun bj_null_j_11 -> (
                                        record_j_260 = {};
                                        record_j_261 = {bj_ticka = record_j_260};
                                        record_j_262 = {bj_untouched = record_j_261});
                                    record_j_264 = {checker = flatten_fun_j_259, generator = flatten_fun_j_263};
                                    proj_j_265 = record_j_264.checker;
                                    var_j_266 = arg_assume_b_75;
                                    appl_j_267 = proj_j_265 var_j_266;
                                    if_j_307 = appl_j_267 ? (
                                            flatten_fun_j_279 = fun expr_b_70 -> (
                                                var_j_268 = t;
                                                proj_j_269 = var_j_268.generator;
                                                int_j_270 = 0;
                                                appl_j_271 = proj_j_269 int_j_270;
                                                arg_assert_b_71 = appl_j_271;
                                                var_j_272 = expr_b_70;
                                                var_j_273 = arg_assert_b_71;
                                                appl_j_274 = var_j_272 var_j_273;
                                                fun_ret_b_72 = appl_j_274;
                                                var_j_275 = t;
                                                proj_j_276 = var_j_275.checker;
                                                var_j_277 = fun_ret_b_72;
                                                appl_j_278 = proj_j_276 var_j_277);
                                            flatten_fun_j_296 = fun bj_null_j_12 -> (
                                                flatten_fun_j_295 = fun arg_assume_b_68 -> (
                                                    var_j_280 = t;
                                                    proj_j_281 = var_j_280.checker;
                                                    var_j_282 = arg_assume_b_68;
                                                    appl_j_283 = proj_j_281 var_j_282;
                                                    if_j_294 = appl_j_283 ? (
                                                            var_j_284 = t;
                                                            proj_j_285 = var_j_284.generator;
                                                            int_j_286 = 0;
                                                            appl_j_287 = proj_j_285 int_j_286
                                                        ) : (
                                                            bool_j_288 = false;
                                                            fail_b_69 = bool_j_288;
                                                            var_j_289 = fail_b_69;
                                                            assert_pred_j_290 = var_j_289;
                                                            assert_res_j_291 = assert_pred_j_290 ? (
                                                                    assert_res_true_j_292 = 
                                                                    {}
                                                                ) : (
                                                                    ab_j_293 = abort
                                                                )
                                                        )));
                                            record_j_297 = {checker = flatten_fun_j_279, generator = flatten_fun_j_296};
                                            proj_j_298 = record_j_297.generator;
                                            int_j_299 = 0;
                                            appl_j_300 = proj_j_298 int_j_299
                                        ) : (
                                            bool_j_301 = false;
                                            fail_b_76 = bool_j_301;
                                            var_j_302 = fail_b_76;
                                            assert_pred_j_303 = var_j_302;
                                            assert_res_j_304 = assert_pred_j_303 ? (
                                                    assert_res_true_j_305 = 
                                                        {}
                                                ) : (
                                                    ab_j_306 = abort
                                                )
                                        )));
                            record_j_310 = {checker = flatten_fun_j_242, generator = flatten_fun_j_309};
                            proj_j_311 = record_j_310.checker;
                            var_j_312 = add;
                            appl_j_313 = proj_j_311 var_j_312;
                            lbl_check_b_63 = appl_j_313;
                            var_j_314 = lbl_check_b_63;
                            if_j_320 = var_j_314 ? (
                                    var_j_315 = t;
                                    proj_j_316 = var_j_315.checker;
                                    var_j_317 = emptyset;
                                    appl_j_318 = proj_j_316 var_j_317
                                ) : (
                                    var_j_319 = lbl_check_b_63
                                )
                        ) : (
                            m_match_cond_j_177 = m_match_bool_j_176 ? (
                                    var_j_178 = rec_fail_b_59
                                ) : (
                                    void_j_175 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_169 = m_match_bool_j_168 ? (
                            var_j_170 = rec_fail_b_60
                        ) : (
                            void_j_167 = {}
                        )
                )
        ) : (
            m_match_cond_j_161 = m_match_bool_j_160 ? (
                    var_j_162 = rec_fail_b_61
                ) : (
                    void_j_159 = {}
                )
        ));
flatten_fun_j_466 = fun bj_null_j_21 -> (
    var_j_322 = t;
    proj_j_323 = var_j_322.generator;
    int_j_324 = 0;
    appl_j_325 = proj_j_323 int_j_324;
    emptyset_b_18 = appl_j_325;
    flatten_fun_j_387 = fun expr_b_43 -> (
        bool_j_326 = false;
        fail_b_32 = bool_j_326;
        flatten_fun_j_342 = fun expr_b_33 -> (
            var_j_327 = expr_b_33;
            m_match_bool_j_329 = var_j_327 ~ any;
            m_match_bool_j_332 = var_j_327 ~ {bj_untouched, _};
            m_match_cond_j_333 = m_match_bool_j_332 ? (
                    bj_poly_var_b_34 = var_j_327.bj_untouched;
                    var_j_334 = bj_poly_var_b_34;
                    m_match_bool_j_336 = var_j_334 ~ any;
                    m_match_bool_j_339 = var_j_334 ~ {bj_ticka, _};
                    m_match_cond_j_340 = m_match_bool_j_339 ? (
                            bool_j_341 = true
                        ) : (
                            m_match_cond_j_337 = m_match_bool_j_336 ? (
                                    var_j_338 = fail_b_32
                                ) : (
                                    void_j_335 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_330 = m_match_bool_j_329 ? (
                            var_j_331 = fail_b_32
                        ) : (
                            void_j_328 = {}
                        )
                ));
        flatten_fun_j_346 = fun bj_null_j_16 -> (
            record_j_343 = {};
            record_j_344 = {bj_ticka = record_j_343};
            record_j_345 = {bj_untouched = record_j_344});
        record_j_347 = {checker = flatten_fun_j_342, generator = flatten_fun_j_346};
        proj_j_348 = record_j_347.generator;
        int_j_349 = 0;
        appl_j_350 = proj_j_348 int_j_349;
        arg_assert_b_44 = appl_j_350;
        var_j_351 = expr_b_43;
        var_j_352 = arg_assert_b_44;
        appl_j_353 = var_j_351 var_j_352;
        fun_ret_b_45 = appl_j_353;
        flatten_fun_j_365 = fun expr_b_38 -> (
            var_j_354 = t;
            proj_j_355 = var_j_354.generator;
            int_j_356 = 0;
            appl_j_357 = proj_j_355 int_j_356;
            arg_assert_b_39 = appl_j_357;
            var_j_358 = expr_b_38;
            var_j_359 = arg_assert_b_39;
            appl_j_360 = var_j_358 var_j_359;
            fun_ret_b_40 = appl_j_360;
            var_j_361 = t;
            proj_j_362 = var_j_361.checker;
            var_j_363 = fun_ret_b_40;
            appl_j_364 = proj_j_362 var_j_363);
        flatten_fun_j_382 = fun bj_null_j_17 -> (
            flatten_fun_j_381 = fun arg_assume_b_36 -> (
                var_j_366 = t;
                proj_j_367 = var_j_366.checker;
                var_j_368 = arg_assume_b_36;
                appl_j_369 = proj_j_367 var_j_368;
                if_j_380 = appl_j_369 ? (
                        var_j_370 = t;
                        proj_j_371 = var_j_370.generator;
                        int_j_372 = 0;
                        appl_j_373 = proj_j_371 int_j_372
                    ) : (
                        bool_j_374 = false;
                        fail_b_37 = bool_j_374;
                        var_j_375 = fail_b_37;
                        assert_pred_j_376 = var_j_375;
                        assert_res_j_377 = assert_pred_j_376 ? (
                                assert_res_true_j_378 = {}
                            ) : (
                                ab_j_379 = abort
                            )
                    )));
        record_j_383 = {checker = flatten_fun_j_365, generator = flatten_fun_j_382};
        proj_j_384 = record_j_383.checker;
        var_j_385 = fun_ret_b_45;
        appl_j_386 = proj_j_384 var_j_385);
    flatten_fun_j_454 = fun bj_null_j_20 -> (
        flatten_fun_j_453 = fun arg_assume_b_30 -> (
            bool_j_388 = false;
            fail_b_19 = bool_j_388;
            flatten_fun_j_404 = fun expr_b_20 -> (
                var_j_389 = expr_b_20;
                m_match_bool_j_391 = var_j_389 ~ any;
                m_match_bool_j_394 = var_j_389 ~ {bj_untouched, _};
                m_match_cond_j_395 = m_match_bool_j_394 ? (
                        bj_poly_var_b_21 = var_j_389.bj_untouched;
                        var_j_396 = bj_poly_var_b_21;
                        m_match_bool_j_398 = var_j_396 ~ any;
                        m_match_bool_j_401 = var_j_396 ~ {bj_ticka, _};
                        m_match_cond_j_402 = m_match_bool_j_401 ? (
                                bool_j_403 = true
                            ) : (
                                m_match_cond_j_399 = m_match_bool_j_398 ? (
                                        var_j_400 = fail_b_19
                                    ) : (
                                        void_j_397 = {}
                                    )
                            )
                    ) : (
                        m_match_cond_j_392 = m_match_bool_j_391 ? (
                                var_j_393 = fail_b_19
                            ) : (
                                void_j_390 = {}
                            )
                    ));
            flatten_fun_j_408 = fun bj_null_j_18 -> (
                record_j_405 = {};
                record_j_406 = {bj_ticka = record_j_405};
                record_j_407 = {bj_untouched = record_j_406});
            record_j_409 = {checker = flatten_fun_j_404, generator = flatten_fun_j_408};
            proj_j_410 = record_j_409.checker;
            var_j_411 = arg_assume_b_30;
            appl_j_412 = proj_j_410 var_j_411;
            if_j_452 = appl_j_412 ? (
                    flatten_fun_j_424 = fun expr_b_25 -> (
                        var_j_413 = t;
                        proj_j_414 = var_j_413.generator;
                        int_j_415 = 0;
                        appl_j_416 = proj_j_414 int_j_415;
                        arg_assert_b_26 = appl_j_416;
                        var_j_417 = expr_b_25;
                        var_j_418 = arg_assert_b_26;
                        appl_j_419 = var_j_417 var_j_418;
                        fun_ret_b_27 = appl_j_419;
                        var_j_420 = t;
                        proj_j_421 = var_j_420.checker;
                        var_j_422 = fun_ret_b_27;
                        appl_j_423 = proj_j_421 var_j_422);
                    flatten_fun_j_441 = fun bj_null_j_19 -> (
                        flatten_fun_j_440 = fun arg_assume_b_23 -> (
                            var_j_425 = t;
                            proj_j_426 = var_j_425.checker;
                            var_j_427 = arg_assume_b_23;
                            appl_j_428 = proj_j_426 var_j_427;
                            if_j_439 = appl_j_428 ? (
                                    var_j_429 = t;
                                    proj_j_430 = var_j_429.generator;
                                    int_j_431 = 0;
                                    appl_j_432 = proj_j_430 int_j_431
                                ) : (
                                    bool_j_433 = false;
                                    fail_b_24 = bool_j_433;
                                    var_j_434 = fail_b_24;
                                    assert_pred_j_435 = var_j_434;
                                    assert_res_j_436 = assert_pred_j_435 ? (
                                            assert_res_true_j_437 = {}
                                        ) : (
                                            ab_j_438 = abort
                                        )
                                )));
                    record_j_442 = {checker = flatten_fun_j_424, generator = flatten_fun_j_441};
                    proj_j_443 = record_j_442.generator;
                    int_j_444 = 0;
                    appl_j_445 = proj_j_443 int_j_444
                ) : (
                    bool_j_446 = false;
                    fail_b_31 = bool_j_446;
                    var_j_447 = fail_b_31;
                    assert_pred_j_448 = var_j_447;
                    assert_res_j_449 = assert_pred_j_448 ? (
                            assert_res_true_j_450 = {}
                        ) : (
                            ab_j_451 = abort
                        )
                )));
    record_j_455 = {checker = flatten_fun_j_387, generator = flatten_fun_j_454};
    proj_j_456 = record_j_455.generator;
    int_j_457 = 0;
    appl_j_458 = proj_j_456 int_j_457;
    add_b_17 = appl_j_458;
    var_j_459 = add_b_17;
    var_j_460 = emptyset_b_18;
    record_j_461 = {add = var_j_459, emptyset = var_j_460};
    record_j_462 = {};
    record_j_463 = {};
    record_j_464 = {add = record_j_462, emptyset = record_j_463};
    record_j_465 = {bj_actual_rec = record_j_461, bj_decl_lbls = record_j_464});
record_j_467 = {checker = flatten_fun_j_321, generator = flatten_fun_j_466};
set_m_type = record_j_467;
check_type_b_105 = set_m;
check_type = check_type_b_105;
proj_j_471 = set_m_type.checker;
appl_j_473 = proj_j_471 check_type_b_105;
check_res_b_106 = appl_j_473;
if_j_481 = check_res_b_106 ? (
        var_j_475 = check_type
    ) : (
        error_var_j_476 = check_res_b_106;
        assert_pred_j_477 = error_var_j_476;
        assert_res_j_478 = assert_pred_j_477 ? (
                assert_res_true_j_479 = {}
            ) : (
                ab_j_480 = abort
            )
    );
i_result = if_j_481