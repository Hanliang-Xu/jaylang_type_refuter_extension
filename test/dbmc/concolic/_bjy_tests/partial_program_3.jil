i_first = {};
g_j_442 = fun f -> (
    g_j_441 = fun x -> (
        flatten_fun_j_438 = fun f_b_2 -> (
            flatten_fun_j_136 = fun expr_b_86 -> (
                bool_j_48 = false;
                fail_b_73 = bool_j_48;
                flatten_fun_j_57 = fun expr_b_72 -> (
                    var_j_49 = expr_b_72;
                    m_match_bool_j_51 = var_j_49 ~ any;
                    m_match_bool_j_54 = var_j_49 ~ int;
                    m_match_cond_j_55 = m_match_bool_j_54 ? (
                            bool_j_56 = true
                        ) : (
                            m_match_cond_j_52 = m_match_bool_j_51 ? (
                                    var_j_53 = fail_b_73
                                ) : (
                                    void_j_50 = {}
                                )
                        ));
                flatten_fun_j_59 = fun bj_null_j_23 -> (
                    input_j_58 = input);
                flatten_fun_j_61 = fun expr_b_74 -> (
                    var_j_60 = expr_b_74);
                record_j_62 = {checker = flatten_fun_j_57, generator = flatten_fun_j_59, wrapper = flatten_fun_j_61};
                proj_j_63 = record_j_62.generator;
                int_j_64 = 0;
                appl_j_65 = proj_j_63 int_j_64;
                arg_assert_b_87 = appl_j_65;
                var_j_66 = expr_b_86;
                var_j_67 = arg_assert_b_87;
                appl_j_68 = var_j_66 var_j_67;
                fun_ret_b_88 = appl_j_68;
                flatten_fun_j_100 = fun expr_b_82 -> (
                    bool_j_69 = false;
                    fail_b_80 = bool_j_69;
                    flatten_fun_j_78 = fun expr_b_79 -> (
                        var_j_70 = expr_b_79;
                        m_match_bool_j_72 = var_j_70 ~ any;
                        m_match_bool_j_75 = var_j_70 ~ int;
                        m_match_cond_j_76 = m_match_bool_j_75 ? (
                                bool_j_77 = true
                            ) : (
                                m_match_cond_j_73 = m_match_bool_j_72 ? (
                                        var_j_74 = fail_b_80
                                    ) : (
                                        void_j_71 = {}
                                    )
                            ));
                    flatten_fun_j_80 = fun bj_null_j_24 -> (
                        input_j_79 = input);
                    flatten_fun_j_82 = fun expr_b_81 -> (
                        var_j_81 = expr_b_81);
                    record_j_83 = {checker = flatten_fun_j_78, generator = flatten_fun_j_80, wrapper = flatten_fun_j_82};
                    proj_j_84 = record_j_83.checker;
                    var_j_85 = expr_b_82;
                    appl_j_86 = proj_j_84 var_j_85;
                    t_check_b_83 = appl_j_86;
                    var_j_87 = t_check_b_83;
                    if_j_99 = var_j_87 ? (
                            bool_j_88 = false;
                            pred_check_b_84 = bool_j_88;
                            flatten_fun_j_92 = fun n_j_25 -> (
                                int_j_89 = 0;
                                var_j_90 = n_j_25;
                                m_bl_i_822 = int_j_89 ~ int;
                                m_br_i_823 = var_j_90 ~ int;
                                m_b_i_824 = m_bl_i_822 and m_br_i_823;
                                binop_j_91 = m_b_i_824 ? (
                                        c_binop_i_825 = int_j_89 < var_j_90
                                    ) : (
                                        ab_i_826 = abort
                                    ));
                            var_j_93 = expr_b_82;
                            appl_j_94 = flatten_fun_j_92 var_j_93;
                            if_j_97 = appl_j_94 ? (
                                    bool_j_95 = true
                                ) : (
                                    var_j_96 = pred_check_b_84
                                )
                        ) : (
                            var_j_98 = t_check_b_83
                        ));
                flatten_fun_j_129 = fun bj_null_j_28 -> (
                    bool_j_101 = false;
                    fail_b_76 = bool_j_101;
                    flatten_fun_j_110 = fun expr_b_75 -> (
                        var_j_102 = expr_b_75;
                        m_match_bool_j_104 = var_j_102 ~ any;
                        m_match_bool_j_107 = var_j_102 ~ int;
                        m_match_cond_j_108 = m_match_bool_j_107 ? (
                                bool_j_109 = true
                            ) : (
                                m_match_cond_j_105 = m_match_bool_j_104 ? (
                                        var_j_106 = fail_b_76
                                    ) : (
                                        void_j_103 = {}
                                    )
                            ));
                    flatten_fun_j_112 = fun bj_null_j_26 -> (
                        input_j_111 = input);
                    flatten_fun_j_114 = fun expr_b_77 -> (
                        var_j_113 = expr_b_77);
                    record_j_115 = {checker = flatten_fun_j_110, generator = flatten_fun_j_112, wrapper = flatten_fun_j_114};
                    proj_j_116 = record_j_115.generator;
                    int_j_117 = 0;
                    appl_j_118 = proj_j_116 int_j_117;
                    candidate_b_78 = appl_j_118;
                    flatten_fun_j_122 = fun n_j_27 -> (
                        int_j_119 = 0;
                        var_j_120 = n_j_27;
                        m_bl_i_827 = int_j_119 ~ int;
                        m_br_i_828 = var_j_120 ~ int;
                        m_b_i_829 = m_bl_i_827 and m_br_i_828;
                        binop_j_121 = m_b_i_829 ? (
                                c_binop_i_830 = int_j_119 < var_j_120
                            ) : (
                                ab_i_831 = abort
                            ));
                    var_j_123 = candidate_b_78;
                    appl_j_124 = flatten_fun_j_122 var_j_123;
                    if_j_128 = appl_j_124 ? (
                            var_j_125 = candidate_b_78
                        ) : (
                            bool_j_126 = false;
                            assume_j_127 = assume bool_j_126
                        ));
                flatten_fun_j_131 = fun expr_b_85 -> (
                    var_j_130 = expr_b_85);
                record_j_132 = {checker = flatten_fun_j_100, generator = flatten_fun_j_129, wrapper = flatten_fun_j_131};
                proj_j_133 = record_j_132.checker;
                var_j_134 = fun_ret_b_88;
                appl_j_135 = proj_j_133 var_j_134);
            flatten_fun_j_230 = fun bj_null_j_35 -> (
                flatten_fun_j_229 = fun arg_assume_b_70 -> (
                    bool_j_137 = false;
                    fail_b_57 = bool_j_137;
                    flatten_fun_j_146 = fun expr_b_56 -> (
                        var_j_138 = expr_b_56;
                        m_match_bool_j_140 = var_j_138 ~ any;
                        m_match_bool_j_143 = var_j_138 ~ int;
                        m_match_cond_j_144 = m_match_bool_j_143 ? (
                                bool_j_145 = true
                            ) : (
                                m_match_cond_j_141 = m_match_bool_j_140 ? (
                                        var_j_142 = fail_b_57
                                    ) : (
                                        void_j_139 = {}
                                    )
                            ));
                    flatten_fun_j_148 = fun bj_null_j_29 -> (
                        input_j_147 = input);
                    flatten_fun_j_150 = fun expr_b_58 -> (
                        var_j_149 = expr_b_58);
                    record_j_151 = {checker = flatten_fun_j_146, generator = flatten_fun_j_148, wrapper = flatten_fun_j_150};
                    proj_j_152 = record_j_151.checker;
                    var_j_153 = arg_assume_b_70;
                    appl_j_154 = proj_j_152 var_j_153;
                    if_j_228 = appl_j_154 ? (
                            flatten_fun_j_186 = fun expr_b_66 -> (
                                bool_j_155 = false;
                                fail_b_64 = bool_j_155;
                                flatten_fun_j_164 = fun expr_b_63 -> (
                                    var_j_156 = expr_b_63;
                                    m_match_bool_j_158 = var_j_156 ~ any;
                                    m_match_bool_j_161 = var_j_156 ~ int;
                                    m_match_cond_j_162 = m_match_bool_j_161 ? (
                                            bool_j_163 = true
                                        ) : (
                                            m_match_cond_j_159 = m_match_bool_j_158 ? (
                                                    var_j_160 = fail_b_64
                                                ) : (
                                                    void_j_157 = {}
                                                )
                                        ));
                                flatten_fun_j_166 = fun bj_null_j_30 -> (
                                    input_j_165 = input);
                                flatten_fun_j_168 = fun expr_b_65 -> (
                                    var_j_167 = expr_b_65);
                                record_j_169 = {checker = flatten_fun_j_164, generator = flatten_fun_j_166, wrapper = flatten_fun_j_168};
                                proj_j_170 = record_j_169.checker;
                                var_j_171 = expr_b_66;
                                appl_j_172 = proj_j_170 var_j_171;
                                t_check_b_67 = appl_j_172;
                                var_j_173 = t_check_b_67;
                                if_j_185 = var_j_173 ? (
                                        bool_j_174 = false;
                                        pred_check_b_68 = bool_j_174;
                                        flatten_fun_j_178 = fun n_j_31 -> (
                                            int_j_175 = 0;
                                            var_j_176 = n_j_31;
                                            m_bl_i_832 = int_j_175 ~ int;
                                            m_br_i_833 = var_j_176 ~ int;
                                            m_b_i_834 = m_bl_i_832 and m_br_i_833;
                                            binop_j_177 = m_b_i_834 ? (
                                                    c_binop_i_835 = int_j_175 < var_j_176
                                                ) : (
                                                    ab_i_836 = abort
                                                ));
                                        var_j_179 = expr_b_66;
                                        appl_j_180 = flatten_fun_j_178 var_j_179;
                                        if_j_183 = appl_j_180 ? (
                                                bool_j_181 = true
                                            ) : (
                                                var_j_182 = pred_check_b_68
                                            )
                                    ) : (
                                        var_j_184 = t_check_b_67
                                    ));
                            flatten_fun_j_215 = fun bj_null_j_34 -> (
                                bool_j_187 = false;
                                fail_b_60 = bool_j_187;
                                flatten_fun_j_196 = fun expr_b_59 -> (
                                    var_j_188 = expr_b_59;
                                    m_match_bool_j_190 = var_j_188 ~ any;
                                    m_match_bool_j_193 = var_j_188 ~ int;
                                    m_match_cond_j_194 = m_match_bool_j_193 ? (
                                            bool_j_195 = true
                                        ) : (
                                            m_match_cond_j_191 = m_match_bool_j_190 ? (
                                                    var_j_192 = fail_b_60
                                                ) : (
                                                    void_j_189 = {}
                                                )
                                        ));
                                flatten_fun_j_198 = fun bj_null_j_32 -> (
                                    input_j_197 = input);
                                flatten_fun_j_200 = fun expr_b_61 -> (
                                    var_j_199 = expr_b_61);
                                record_j_201 = {checker = flatten_fun_j_196, generator = flatten_fun_j_198, wrapper = flatten_fun_j_200};
                                proj_j_202 = record_j_201.generator;
                                int_j_203 = 0;
                                appl_j_204 = proj_j_202 int_j_203;
                                candidate_b_62 = appl_j_204;
                                flatten_fun_j_208 = fun n_j_33 -> (
                                    int_j_205 = 0;
                                    var_j_206 = n_j_33;
                                    m_bl_i_837 = int_j_205 ~ int;
                                    m_br_i_838 = var_j_206 ~ int;
                                    m_b_i_839 = m_bl_i_837 and m_br_i_838;
                                    binop_j_207 = m_b_i_839 ? (
                                            c_binop_i_840 = int_j_205 < var_j_206
                                        ) : (
                                            ab_i_841 = abort
                                        ));
                                var_j_209 = candidate_b_62;
                                appl_j_210 = flatten_fun_j_208 var_j_209;
                                if_j_214 = appl_j_210 ? (
                                        var_j_211 = candidate_b_62
                                    ) : (
                                        bool_j_212 = false;
                                        assume_j_213 = assume bool_j_212
                                    ));
                            flatten_fun_j_217 = fun expr_b_69 -> (
                                var_j_216 = expr_b_69);
                            record_j_218 = {checker = flatten_fun_j_186, generator = flatten_fun_j_215, wrapper = flatten_fun_j_217};
                            proj_j_219 = record_j_218.generator;
                            int_j_220 = 0;
                            appl_j_221 = proj_j_219 int_j_220
                        ) : (
                            bool_j_222 = false;
                            fail_b_71 = bool_j_222;
                            var_j_223 = fail_b_71;
                            assert_pred_j_224 = var_j_223;
                            assert_res_j_225 = assert_pred_j_224 ? (
                                    assert_res_true_j_226 = {}
                                ) : (
                                    ab_j_227 = abort
                                )
                        )));
            flatten_fun_j_325 = fun expr_b_103 -> (
                flatten_fun_j_324 = fun arg_b_104 -> (
                    bool_j_231 = false;
                    fail_b_90 = bool_j_231;
                    flatten_fun_j_240 = fun expr_b_89 -> (
                        var_j_232 = expr_b_89;
                        m_match_bool_j_234 = var_j_232 ~ any;
                        m_match_bool_j_237 = var_j_232 ~ int;
                        m_match_cond_j_238 = m_match_bool_j_237 ? (
                                bool_j_239 = true
                            ) : (
                                m_match_cond_j_235 = m_match_bool_j_234 ? (
                                        var_j_236 = fail_b_90
                                    ) : (
                                        void_j_233 = {}
                                    )
                            ));
                    flatten_fun_j_242 = fun bj_null_j_36 -> (
                        input_j_241 = input);
                    flatten_fun_j_244 = fun expr_b_91 -> (
                        var_j_243 = expr_b_91);
                    record_j_245 = {checker = flatten_fun_j_240, generator = flatten_fun_j_242, wrapper = flatten_fun_j_244};
                    proj_j_246 = record_j_245.checker;
                    var_j_247 = arg_b_104;
                    m_i_842 = proj_j_246 ~ fun;
                    appl_j_248 = m_i_842 ? (
                            c_appl_i_843 = proj_j_246 var_j_247
                        ) : (
                            ab_i_844 = abort
                        );
                    m_i_845 = appl_j_248 ~ bool;
                    if_j_323 = m_i_845 ? (
                            c_cond_i_862 = appl_j_248 ? (
                                    flatten_fun_j_280 = fun expr_b_99 -> (
                                        bool_j_249 = false;
                                        fail_b_97 = bool_j_249;
                                        flatten_fun_j_258 = fun expr_b_96 -> (
                                            var_j_250 = expr_b_96;
                                            m_match_bool_j_252 = var_j_250 ~ any;
                                            m_match_bool_j_255 = var_j_250 ~ int;
                                            m_match_cond_j_256 = m_match_bool_j_255 ? (
                                                    bool_j_257 = true
                                                ) : (
                                                    m_match_cond_j_253 = m_match_bool_j_252 ? (
                                                            var_j_254 = fail_b_97
                                                        ) : (
                                                            void_j_251 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_260 = fun bj_null_j_37 -> (
                                            input_j_259 = input);
                                        flatten_fun_j_262 = fun expr_b_98 -> (
                                            var_j_261 = expr_b_98);
                                        record_j_263 = {checker = flatten_fun_j_258, generator = flatten_fun_j_260, wrapper = flatten_fun_j_262};
                                        proj_j_264 = record_j_263.checker;
                                        var_j_265 = expr_b_99;
                                        appl_j_266 = proj_j_264 var_j_265;
                                        t_check_b_100 = appl_j_266;
                                        var_j_267 = t_check_b_100;
                                        if_j_279 = var_j_267 ? (
                                                bool_j_268 = false;
                                                pred_check_b_101 = bool_j_268;
                                                flatten_fun_j_272 = fun n_j_38 -> (
                                                    int_j_269 = 0;
                                                    var_j_270 = n_j_38;
                                                    m_bl_i_846 = int_j_269 ~ int;
                                                    m_br_i_847 = var_j_270 ~ int;
                                                    m_b_i_848 = m_bl_i_846 and m_br_i_847;
                                                    binop_j_271 = m_b_i_848 ? (
                                                            c_binop_i_849 = int_j_269 < var_j_270
                                                        ) : (
                                                            ab_i_850 = abort
                                                        ));
                                                var_j_273 = expr_b_99;
                                                appl_j_274 = flatten_fun_j_272 var_j_273;
                                                if_j_277 = appl_j_274 ? (
                                                        bool_j_275 = true
                                                    ) : (
                                                        var_j_276 = pred_check_b_101
                                                    )
                                            ) : (
                                                var_j_278 = t_check_b_100
                                            ));
                                    flatten_fun_j_309 = fun bj_null_j_41 -> (
                                        bool_j_281 = false;
                                        fail_b_93 = bool_j_281;
                                        flatten_fun_j_290 = fun expr_b_92 -> (
                                            var_j_282 = expr_b_92;
                                            m_match_bool_j_284 = var_j_282 ~ any;
                                            m_match_bool_j_287 = var_j_282 ~ int;
                                            m_match_cond_j_288 = m_match_bool_j_287 ? (
                                                    bool_j_289 = true
                                                ) : (
                                                    m_match_cond_j_285 = m_match_bool_j_284 ? (
                                                            var_j_286 = fail_b_93
                                                        ) : (
                                                            void_j_283 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_292 = fun bj_null_j_39 -> (
                                            input_j_291 = input);
                                        flatten_fun_j_294 = fun expr_b_94 -> (
                                            var_j_293 = expr_b_94);
                                        record_j_295 = {checker = flatten_fun_j_290, generator = flatten_fun_j_292, wrapper = flatten_fun_j_294};
                                        proj_j_296 = record_j_295.generator;
                                        int_j_297 = 0;
                                        appl_j_298 = proj_j_296 int_j_297;
                                        candidate_b_95 = appl_j_298;
                                        flatten_fun_j_302 = fun n_j_40 -> (
                                            int_j_299 = 0;
                                            var_j_300 = n_j_40;
                                            m_bl_i_851 = int_j_299 ~ int;
                                            m_br_i_852 = var_j_300 ~ int;
                                            m_b_i_853 = m_bl_i_851 and m_br_i_852;
                                            binop_j_301 = m_b_i_853 ? (
                                                    c_binop_i_854 = int_j_299 < var_j_300
                                                ) : (
                                                    ab_i_855 = abort
                                                ));
                                        var_j_303 = candidate_b_95;
                                        appl_j_304 = flatten_fun_j_302 var_j_303;
                                        if_j_308 = appl_j_304 ? (
                                                var_j_305 = candidate_b_95
                                            ) : (
                                                bool_j_306 = false;
                                                assume_j_307 = assume bool_j_306
                                            ));
                                    flatten_fun_j_311 = fun expr_b_102 -> (
                                        var_j_310 = expr_b_102);
                                    record_j_312 = {checker = flatten_fun_j_280, generator = flatten_fun_j_309, wrapper = flatten_fun_j_311};
                                    proj_j_313 = record_j_312.wrapper;
                                    var_j_314 = expr_b_103;
                                    var_j_315 = arg_b_104;
                                    m_i_856 = var_j_314 ~ fun;
                                    appl_j_316 = m_i_856 ? (
                                            c_appl_i_857 = var_j_314 var_j_315
                                        ) : (
                                            ab_i_858 = abort
                                        );
                                    m_i_859 = proj_j_313 ~ fun;
                                    appl_j_317 = m_i_859 ? (
                                            c_appl_i_860 = proj_j_313 appl_j_316
                                        ) : (
                                            ab_i_861 = abort
                                        )
                                ) : (
                                    bool_j_318 = false;
                                    assert_pred_j_319 = bool_j_318;
                                    assert_res_j_320 = assert_pred_j_319 ? (
                                            assert_res_true_j_321 = {}
                                        ) : (
                                            ab_j_322 = abort
                                        )
                                )
                        ) : (
                            ab_i_863 = abort
                        )));
            record_j_326 = {checker = flatten_fun_j_136, generator = flatten_fun_j_230, wrapper = flatten_fun_j_325};
            proj_j_327 = record_j_326.checker;
            var_j_328 = f_b_2;
            appl_j_329 = proj_j_327 var_j_328;
            arg_check_b_3 = appl_j_329;
            var_j_330 = arg_check_b_3;
            if_j_437 = var_j_330 ? (
                    flatten_fun_j_429 = fun x_b_0 -> (
                        bool_j_331 = false;
                        fail_b_106 = bool_j_331;
                        flatten_fun_j_340 = fun expr_b_105 -> (
                            var_j_332 = expr_b_105;
                            m_match_bool_j_334 = var_j_332 ~ any;
                            m_match_bool_j_337 = var_j_332 ~ int;
                            m_match_cond_j_338 = m_match_bool_j_337 ? (
                                    bool_j_339 = true
                                ) : (
                                    m_match_cond_j_335 = m_match_bool_j_334 ? (
                                            var_j_336 = fail_b_106
                                        ) : (
                                            void_j_333 = {}
                                        )
                                ));
                        flatten_fun_j_342 = fun bj_null_j_42 -> (
                            input_j_341 = input);
                        flatten_fun_j_344 = fun expr_b_107 -> (
                            var_j_343 = expr_b_107);
                        record_j_345 = {checker = flatten_fun_j_340, generator = flatten_fun_j_342, wrapper = flatten_fun_j_344};
                        proj_j_346 = record_j_345.checker;
                        var_j_347 = x_b_0;
                        appl_j_348 = proj_j_346 var_j_347;
                        arg_check_b_1 = appl_j_348;
                        var_j_349 = arg_check_b_1;
                        if_j_428 = var_j_349 ? (
                                flatten_fun_j_381 = fun expr_b_115 -> (
                                    bool_j_350 = false;
                                    fail_b_113 = bool_j_350;
                                    flatten_fun_j_359 = fun expr_b_112 -> (
                                        var_j_351 = expr_b_112;
                                        m_match_bool_j_353 = var_j_351 ~ any;
                                        m_match_bool_j_356 = var_j_351 ~ int;
                                        m_match_cond_j_357 = m_match_bool_j_356 ? (
                                                bool_j_358 = true
                                            ) : (
                                                m_match_cond_j_354 = m_match_bool_j_353 ? (
                                                        var_j_355 = fail_b_113
                                                    ) : (
                                                        void_j_352 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_361 = fun bj_null_j_43 -> (
                                        input_j_360 = input);
                                    flatten_fun_j_363 = fun expr_b_114 -> (
                                        var_j_362 = expr_b_114);
                                    record_j_364 = {checker = flatten_fun_j_359, generator = flatten_fun_j_361, wrapper = flatten_fun_j_363};
                                    proj_j_365 = record_j_364.checker;
                                    var_j_366 = expr_b_115;
                                    appl_j_367 = proj_j_365 var_j_366;
                                    t_check_b_116 = appl_j_367;
                                    var_j_368 = t_check_b_116;
                                    if_j_380 = var_j_368 ? (
                                            bool_j_369 = false;
                                            pred_check_b_117 = bool_j_369;
                                            flatten_fun_j_373 = fun n_j_44 -> (
                                                int_j_370 = 0;
                                                var_j_371 = n_j_44;
                                                m_bl_i_864 = int_j_370 ~ int;
                                                m_br_i_865 = var_j_371 ~ int;
                                                m_b_i_866 = m_bl_i_864 and m_br_i_865;
                                                binop_j_372 = m_b_i_866 ? (
                                                        c_binop_i_867 = int_j_370 < var_j_371
                                                    ) : (
                                                        ab_i_868 = abort
                                                    ));
                                            var_j_374 = expr_b_115;
                                            appl_j_375 = flatten_fun_j_373 var_j_374;
                                            if_j_378 = appl_j_375 ? (
                                                    bool_j_376 = true
                                                ) : (
                                                    var_j_377 = pred_check_b_117
                                                )
                                        ) : (
                                            var_j_379 = t_check_b_116
                                        ));
                                flatten_fun_j_410 = fun bj_null_j_47 -> (
                                    bool_j_382 = false;
                                    fail_b_109 = bool_j_382;
                                    flatten_fun_j_391 = fun expr_b_108 -> (
                                        var_j_383 = expr_b_108;
                                        m_match_bool_j_385 = var_j_383 ~ any;
                                        m_match_bool_j_388 = var_j_383 ~ int;
                                        m_match_cond_j_389 = m_match_bool_j_388 ? (
                                                bool_j_390 = true
                                            ) : (
                                                m_match_cond_j_386 = m_match_bool_j_385 ? (
                                                        var_j_387 = fail_b_109
                                                    ) : (
                                                        void_j_384 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_393 = fun bj_null_j_45 -> (
                                        input_j_392 = input);
                                    flatten_fun_j_395 = fun expr_b_110 -> (
                                        var_j_394 = expr_b_110);
                                    record_j_396 = {checker = flatten_fun_j_391, generator = flatten_fun_j_393, wrapper = flatten_fun_j_395};
                                    proj_j_397 = record_j_396.generator;
                                    int_j_398 = 0;
                                    appl_j_399 = proj_j_397 int_j_398;
                                    candidate_b_111 = appl_j_399;
                                    flatten_fun_j_403 = fun n_j_46 -> (
                                        int_j_400 = 0;
                                        var_j_401 = n_j_46;
                                        m_bl_i_869 = int_j_400 ~ int;
                                        m_br_i_870 = var_j_401 ~ int;
                                        m_b_i_871 = m_bl_i_869 and m_br_i_870;
                                        binop_j_402 = m_b_i_871 ? (
                                                c_binop_i_872 = int_j_400 < var_j_401
                                            ) : (
                                                ab_i_873 = abort
                                            ));
                                    var_j_404 = candidate_b_111;
                                    appl_j_405 = flatten_fun_j_403 var_j_404;
                                    if_j_409 = appl_j_405 ? (
                                            var_j_406 = candidate_b_111
                                        ) : (
                                            bool_j_407 = false;
                                            assume_j_408 = assume bool_j_407
                                        ));
                                flatten_fun_j_412 = fun expr_b_118 -> (
                                    var_j_411 = expr_b_118);
                                record_j_413 = {checker = flatten_fun_j_381, generator = flatten_fun_j_410, wrapper = flatten_fun_j_412};
                                proj_j_414 = record_j_413.wrapper;
                                var_j_415 = f;
                                var_j_416 = x;
                                m_i_874 = var_j_415 ~ fun;
                                appl_j_417 = m_i_874 ? (
                                        c_appl_i_875 = var_j_415 var_j_416
                                    ) : (
                                        ab_i_876 = abort
                                    );
                                var_j_418 = f;
                                var_j_419 = x;
                                m_i_877 = var_j_418 ~ fun;
                                appl_j_420 = m_i_877 ? (
                                        c_appl_i_878 = var_j_418 var_j_419
                                    ) : (
                                        ab_i_879 = abort
                                    );
                                m_bl_i_880 = appl_j_417 ~ int;
                                m_br_i_881 = appl_j_420 ~ int;
                                m_b_i_882 = m_bl_i_880 and m_br_i_881;
                                binop_j_421 = m_b_i_882 ? (
                                        c_binop_i_883 = appl_j_417 * appl_j_420
                                    ) : (
                                        ab_i_884 = abort
                                    );
                                m_i_885 = proj_j_414 ~ fun;
                                appl_j_422 = m_i_885 ? (
                                        c_appl_i_886 = proj_j_414 binop_j_421
                                    ) : (
                                        ab_i_887 = abort
                                    )
                            ) : (
                                var_j_423 = arg_check_b_1;
                                assert_pred_j_424 = var_j_423;
                                assert_res_j_425 = assert_pred_j_424 ? (
                                        assert_res_true_j_426 = {}
                                    ) : (
                                        ab_j_427 = abort
                                    )
                            ));
                    var_j_430 = x;
                    appl_j_431 = flatten_fun_j_429 var_j_430
                ) : (
                    var_j_432 = arg_check_b_3;
                    assert_pred_j_433 = var_j_432;
                    assert_res_j_434 = assert_pred_j_433 ? (
                            assert_res_true_j_435 = {}
                        ) : (
                            ab_j_436 = abort
                        )
                ));
        var_j_439 = f;
        appl_j_440 = flatten_fun_j_438 var_j_439));
g = g_j_442;
flatten_fun_j_531 = fun expr_b_34 -> (
    bool_j_443 = false;
    fail_b_21 = bool_j_443;
    flatten_fun_j_452 = fun expr_b_20 -> (
        var_j_444 = expr_b_20;
        m_match_bool_j_446 = var_j_444 ~ any;
        m_match_bool_j_449 = var_j_444 ~ int;
        m_match_cond_j_450 = m_match_bool_j_449 ? (
                bool_j_451 = true
            ) : (
                m_match_cond_j_447 = m_match_bool_j_446 ? (
                        var_j_448 = fail_b_21
                    ) : (
                        void_j_445 = {}
                    )
            ));
    flatten_fun_j_454 = fun bj_null -> (
        input_j_453 = input);
    flatten_fun_j_456 = fun expr_b_22 -> (
        var_j_455 = expr_b_22);
    record_j_457 = {checker = flatten_fun_j_452, generator = flatten_fun_j_454, wrapper = flatten_fun_j_456};
    proj_j_458 = record_j_457.generator;
    int_j_459 = 0;
    appl_j_460 = proj_j_458 int_j_459;
    arg_assert_b_35 = appl_j_460;
    var_j_461 = expr_b_34;
    var_j_462 = arg_assert_b_35;
    appl_j_463 = var_j_461 var_j_462;
    fun_ret_b_36 = appl_j_463;
    flatten_fun_j_495 = fun expr_b_30 -> (
        bool_j_464 = false;
        fail_b_28 = bool_j_464;
        flatten_fun_j_473 = fun expr_b_27 -> (
            var_j_465 = expr_b_27;
            m_match_bool_j_467 = var_j_465 ~ any;
            m_match_bool_j_470 = var_j_465 ~ int;
            m_match_cond_j_471 = m_match_bool_j_470 ? (
                    bool_j_472 = true
                ) : (
                    m_match_cond_j_468 = m_match_bool_j_467 ? (
                            var_j_469 = fail_b_28
                        ) : (
                            void_j_466 = {}
                        )
                ));
        flatten_fun_j_475 = fun bj_null_j_0 -> (
            input_j_474 = input);
        flatten_fun_j_477 = fun expr_b_29 -> (
            var_j_476 = expr_b_29);
        record_j_478 = {checker = flatten_fun_j_473, generator = flatten_fun_j_475, wrapper = flatten_fun_j_477};
        proj_j_479 = record_j_478.checker;
        var_j_480 = expr_b_30;
        appl_j_481 = proj_j_479 var_j_480;
        t_check_b_31 = appl_j_481;
        var_j_482 = t_check_b_31;
        if_j_494 = var_j_482 ? (
                bool_j_483 = false;
                pred_check_b_32 = bool_j_483;
                flatten_fun_j_487 = fun n -> (
                    int_j_484 = 0;
                    var_j_485 = n;
                    m_bl_i_888 = int_j_484 ~ int;
                    m_br_i_889 = var_j_485 ~ int;
                    m_b_i_890 = m_bl_i_888 and m_br_i_889;
                    binop_j_486 = m_b_i_890 ? (
                            c_binop_i_891 = int_j_484 < var_j_485
                        ) : (
                            ab_i_892 = abort
                        ));
                var_j_488 = expr_b_30;
                appl_j_489 = flatten_fun_j_487 var_j_488;
                if_j_492 = appl_j_489 ? (
                        bool_j_490 = true
                    ) : (
                        var_j_491 = pred_check_b_32
                    )
            ) : (
                var_j_493 = t_check_b_31
            ));
    flatten_fun_j_524 = fun bj_null_j_3 -> (
        bool_j_496 = false;
        fail_b_24 = bool_j_496;
        flatten_fun_j_505 = fun expr_b_23 -> (
            var_j_497 = expr_b_23;
            m_match_bool_j_499 = var_j_497 ~ any;
            m_match_bool_j_502 = var_j_497 ~ int;
            m_match_cond_j_503 = m_match_bool_j_502 ? (
                    bool_j_504 = true
                ) : (
                    m_match_cond_j_500 = m_match_bool_j_499 ? (
                            var_j_501 = fail_b_24
                        ) : (
                            void_j_498 = {}
                        )
                ));
        flatten_fun_j_507 = fun bj_null_j_1 -> (
            input_j_506 = input);
        flatten_fun_j_509 = fun expr_b_25 -> (
            var_j_508 = expr_b_25);
        record_j_510 = {checker = flatten_fun_j_505, generator = flatten_fun_j_507, wrapper = flatten_fun_j_509};
        proj_j_511 = record_j_510.generator;
        int_j_512 = 0;
        appl_j_513 = proj_j_511 int_j_512;
        candidate_b_26 = appl_j_513;
        flatten_fun_j_517 = fun n_j_2 -> (
            int_j_514 = 0;
            var_j_515 = n_j_2;
            m_bl_i_893 = int_j_514 ~ int;
            m_br_i_894 = var_j_515 ~ int;
            m_b_i_895 = m_bl_i_893 and m_br_i_894;
            binop_j_516 = m_b_i_895 ? (
                    c_binop_i_896 = int_j_514 < var_j_515
                ) : (
                    ab_i_897 = abort
                ));
        var_j_518 = candidate_b_26;
        appl_j_519 = flatten_fun_j_517 var_j_518;
        if_j_523 = appl_j_519 ? (
                var_j_520 = candidate_b_26
            ) : (
                bool_j_521 = false;
                assume_j_522 = assume bool_j_521
            ));
    flatten_fun_j_526 = fun expr_b_33 -> (
        var_j_525 = expr_b_33);
    record_j_527 = {checker = flatten_fun_j_495, generator = flatten_fun_j_524, wrapper = flatten_fun_j_526};
    proj_j_528 = record_j_527.checker;
    var_j_529 = fun_ret_b_36;
    appl_j_530 = proj_j_528 var_j_529);
flatten_fun_j_625 = fun bj_null_j_10 -> (
    flatten_fun_j_624 = fun arg_assume_b_18 -> (
        bool_j_532 = false;
        fail_b_5 = bool_j_532;
        flatten_fun_j_541 = fun expr_b_4 -> (
            var_j_533 = expr_b_4;
            m_match_bool_j_535 = var_j_533 ~ any;
            m_match_bool_j_538 = var_j_533 ~ int;
            m_match_cond_j_539 = m_match_bool_j_538 ? (
                    bool_j_540 = true
                ) : (
                    m_match_cond_j_536 = m_match_bool_j_535 ? (
                            var_j_537 = fail_b_5
                        ) : (
                            void_j_534 = {}
                        )
                ));
        flatten_fun_j_543 = fun bj_null_j_4 -> (
            input_j_542 = input);
        flatten_fun_j_545 = fun expr_b_6 -> (
            var_j_544 = expr_b_6);
        record_j_546 = {checker = flatten_fun_j_541, generator = flatten_fun_j_543, wrapper = flatten_fun_j_545};
        proj_j_547 = record_j_546.checker;
        var_j_548 = arg_assume_b_18;
        appl_j_549 = proj_j_547 var_j_548;
        if_j_623 = appl_j_549 ? (
                flatten_fun_j_581 = fun expr_b_14 -> (
                    bool_j_550 = false;
                    fail_b_12 = bool_j_550;
                    flatten_fun_j_559 = fun expr_b_11 -> (
                        var_j_551 = expr_b_11;
                        m_match_bool_j_553 = var_j_551 ~ any;
                        m_match_bool_j_556 = var_j_551 ~ int;
                        m_match_cond_j_557 = m_match_bool_j_556 ? (
                                bool_j_558 = true
                            ) : (
                                m_match_cond_j_554 = m_match_bool_j_553 ? (
                                        var_j_555 = fail_b_12
                                    ) : (
                                        void_j_552 = {}
                                    )
                            ));
                    flatten_fun_j_561 = fun bj_null_j_5 -> (
                        input_j_560 = input);
                    flatten_fun_j_563 = fun expr_b_13 -> (
                        var_j_562 = expr_b_13);
                    record_j_564 = {checker = flatten_fun_j_559, generator = flatten_fun_j_561, wrapper = flatten_fun_j_563};
                    proj_j_565 = record_j_564.checker;
                    var_j_566 = expr_b_14;
                    appl_j_567 = proj_j_565 var_j_566;
                    t_check_b_15 = appl_j_567;
                    var_j_568 = t_check_b_15;
                    if_j_580 = var_j_568 ? (
                            bool_j_569 = false;
                            pred_check_b_16 = bool_j_569;
                            flatten_fun_j_573 = fun n_j_6 -> (
                                int_j_570 = 0;
                                var_j_571 = n_j_6;
                                m_bl_i_898 = int_j_570 ~ int;
                                m_br_i_899 = var_j_571 ~ int;
                                m_b_i_900 = m_bl_i_898 and m_br_i_899;
                                binop_j_572 = m_b_i_900 ? (
                                        c_binop_i_901 = int_j_570 < var_j_571
                                    ) : (
                                        ab_i_902 = abort
                                    ));
                            var_j_574 = expr_b_14;
                            appl_j_575 = flatten_fun_j_573 var_j_574;
                            if_j_578 = appl_j_575 ? (
                                    bool_j_576 = true
                                ) : (
                                    var_j_577 = pred_check_b_16
                                )
                        ) : (
                            var_j_579 = t_check_b_15
                        ));
                flatten_fun_j_610 = fun bj_null_j_9 -> (
                    bool_j_582 = false;
                    fail_b_8 = bool_j_582;
                    flatten_fun_j_591 = fun expr_b_7 -> (
                        var_j_583 = expr_b_7;
                        m_match_bool_j_585 = var_j_583 ~ any;
                        m_match_bool_j_588 = var_j_583 ~ int;
                        m_match_cond_j_589 = m_match_bool_j_588 ? (
                                bool_j_590 = true
                            ) : (
                                m_match_cond_j_586 = m_match_bool_j_585 ? (
                                        var_j_587 = fail_b_8
                                    ) : (
                                        void_j_584 = {}
                                    )
                            ));
                    flatten_fun_j_593 = fun bj_null_j_7 -> (
                        input_j_592 = input);
                    flatten_fun_j_595 = fun expr_b_9 -> (
                        var_j_594 = expr_b_9);
                    record_j_596 = {checker = flatten_fun_j_591, generator = flatten_fun_j_593, wrapper = flatten_fun_j_595};
                    proj_j_597 = record_j_596.generator;
                    int_j_598 = 0;
                    appl_j_599 = proj_j_597 int_j_598;
                    candidate_b_10 = appl_j_599;
                    flatten_fun_j_603 = fun n_j_8 -> (
                        int_j_600 = 0;
                        var_j_601 = n_j_8;
                        m_bl_i_903 = int_j_600 ~ int;
                        m_br_i_904 = var_j_601 ~ int;
                        m_b_i_905 = m_bl_i_903 and m_br_i_904;
                        binop_j_602 = m_b_i_905 ? (
                                c_binop_i_906 = int_j_600 < var_j_601
                            ) : (
                                ab_i_907 = abort
                            ));
                    var_j_604 = candidate_b_10;
                    appl_j_605 = flatten_fun_j_603 var_j_604;
                    if_j_609 = appl_j_605 ? (
                            var_j_606 = candidate_b_10
                        ) : (
                            bool_j_607 = false;
                            assume_j_608 = assume bool_j_607
                        ));
                flatten_fun_j_612 = fun expr_b_17 -> (
                    var_j_611 = expr_b_17);
                record_j_613 = {checker = flatten_fun_j_581, generator = flatten_fun_j_610, wrapper = flatten_fun_j_612};
                proj_j_614 = record_j_613.generator;
                int_j_615 = 0;
                appl_j_616 = proj_j_614 int_j_615
            ) : (
                bool_j_617 = false;
                fail_b_19 = bool_j_617;
                var_j_618 = fail_b_19;
                assert_pred_j_619 = var_j_618;
                assert_res_j_620 = assert_pred_j_619 ? (
                        assert_res_true_j_621 = {}
                    ) : (
                        ab_j_622 = abort
                    )
            )));
flatten_fun_j_720 = fun expr_b_51 -> (
    flatten_fun_j_719 = fun arg_b_52 -> (
        bool_j_626 = false;
        fail_b_38 = bool_j_626;
        flatten_fun_j_635 = fun expr_b_37 -> (
            var_j_627 = expr_b_37;
            m_match_bool_j_629 = var_j_627 ~ any;
            m_match_bool_j_632 = var_j_627 ~ int;
            m_match_cond_j_633 = m_match_bool_j_632 ? (
                    bool_j_634 = true
                ) : (
                    m_match_cond_j_630 = m_match_bool_j_629 ? (
                            var_j_631 = fail_b_38
                        ) : (
                            void_j_628 = {}
                        )
                ));
        flatten_fun_j_637 = fun bj_null_j_11 -> (
            input_j_636 = input);
        flatten_fun_j_639 = fun expr_b_39 -> (
            var_j_638 = expr_b_39);
        record_j_640 = {checker = flatten_fun_j_635, generator = flatten_fun_j_637, wrapper = flatten_fun_j_639};
        proj_j_641 = record_j_640.checker;
        var_j_642 = arg_b_52;
        m_i_908 = proj_j_641 ~ fun;
        appl_j_643 = m_i_908 ? (
                c_appl_i_909 = proj_j_641 var_j_642
            ) : (
                ab_i_910 = abort
            );
        m_i_911 = appl_j_643 ~ bool;
        if_j_718 = m_i_911 ? (
                c_cond_i_928 = appl_j_643 ? (
                        flatten_fun_j_675 = fun expr_b_47 -> (
                            bool_j_644 = false;
                            fail_b_45 = bool_j_644;
                            flatten_fun_j_653 = fun expr_b_44 -> (
                                var_j_645 = expr_b_44;
                                m_match_bool_j_647 = var_j_645 ~ any;
                                m_match_bool_j_650 = var_j_645 ~ int;
                                m_match_cond_j_651 = m_match_bool_j_650 ? (
                                        bool_j_652 = true
                                    ) : (
                                        m_match_cond_j_648 = m_match_bool_j_647 ? (
                                                var_j_649 = fail_b_45
                                            ) : (
                                                void_j_646 = {}
                                            )
                                    ));
                            flatten_fun_j_655 = fun bj_null_j_12 -> (
                                input_j_654 = input);
                            flatten_fun_j_657 = fun expr_b_46 -> (
                                var_j_656 = expr_b_46);
                            record_j_658 = {checker = flatten_fun_j_653, generator = flatten_fun_j_655, wrapper = flatten_fun_j_657};
                            proj_j_659 = record_j_658.checker;
                            var_j_660 = expr_b_47;
                            appl_j_661 = proj_j_659 var_j_660;
                            t_check_b_48 = appl_j_661;
                            var_j_662 = t_check_b_48;
                            if_j_674 = var_j_662 ? (
                                    bool_j_663 = false;
                                    pred_check_b_49 = bool_j_663;
                                    flatten_fun_j_667 = fun n_j_13 -> (
                                        int_j_664 = 0;
                                        var_j_665 = n_j_13;
                                        m_bl_i_912 = int_j_664 ~ int;
                                        m_br_i_913 = var_j_665 ~ int;
                                        m_b_i_914 = m_bl_i_912 and m_br_i_913;
                                        binop_j_666 = m_b_i_914 ? (
                                                c_binop_i_915 = int_j_664 < var_j_665
                                            ) : (
                                                ab_i_916 = abort
                                            ));
                                    var_j_668 = expr_b_47;
                                    appl_j_669 = flatten_fun_j_667 var_j_668;
                                    if_j_672 = appl_j_669 ? (
                                            bool_j_670 = true
                                        ) : (
                                            var_j_671 = pred_check_b_49
                                        )
                                ) : (
                                    var_j_673 = t_check_b_48
                                ));
                        flatten_fun_j_704 = fun bj_null_j_16 -> (
                            bool_j_676 = false;
                            fail_b_41 = bool_j_676;
                            flatten_fun_j_685 = fun expr_b_40 -> (
                                var_j_677 = expr_b_40;
                                m_match_bool_j_679 = var_j_677 ~ any;
                                m_match_bool_j_682 = var_j_677 ~ int;
                                m_match_cond_j_683 = m_match_bool_j_682 ? (
                                        bool_j_684 = true
                                    ) : (
                                        m_match_cond_j_680 = m_match_bool_j_679 ? (
                                                var_j_681 = fail_b_41
                                            ) : (
                                                void_j_678 = {}
                                            )
                                    ));
                            flatten_fun_j_687 = fun bj_null_j_14 -> (
                                input_j_686 = input);
                            flatten_fun_j_689 = fun expr_b_42 -> (
                                var_j_688 = expr_b_42);
                            record_j_690 = {checker = flatten_fun_j_685, generator = flatten_fun_j_687, wrapper = flatten_fun_j_689};
                            proj_j_691 = record_j_690.generator;
                            int_j_692 = 0;
                            appl_j_693 = proj_j_691 int_j_692;
                            candidate_b_43 = appl_j_693;
                            flatten_fun_j_697 = fun n_j_15 -> (
                                int_j_694 = 0;
                                var_j_695 = n_j_15;
                                m_bl_i_917 = int_j_694 ~ int;
                                m_br_i_918 = var_j_695 ~ int;
                                m_b_i_919 = m_bl_i_917 and m_br_i_918;
                                binop_j_696 = m_b_i_919 ? (
                                        c_binop_i_920 = int_j_694 < var_j_695
                                    ) : (
                                        ab_i_921 = abort
                                    ));
                            var_j_698 = candidate_b_43;
                            appl_j_699 = flatten_fun_j_697 var_j_698;
                            if_j_703 = appl_j_699 ? (
                                    var_j_700 = candidate_b_43
                                ) : (
                                    bool_j_701 = false;
                                    assume_j_702 = assume bool_j_701
                                ));
                        flatten_fun_j_706 = fun expr_b_50 -> (
                            var_j_705 = expr_b_50);
                        record_j_707 = {checker = flatten_fun_j_675, generator = flatten_fun_j_704, wrapper = flatten_fun_j_706};
                        proj_j_708 = record_j_707.wrapper;
                        var_j_709 = expr_b_51;
                        var_j_710 = arg_b_52;
                        m_i_922 = var_j_709 ~ fun;
                        appl_j_711 = m_i_922 ? (
                                c_appl_i_923 = var_j_709 var_j_710
                            ) : (
                                ab_i_924 = abort
                            );
                        m_i_925 = proj_j_708 ~ fun;
                        appl_j_712 = m_i_925 ? (
                                c_appl_i_926 = proj_j_708 appl_j_711
                            ) : (
                                ab_i_927 = abort
                            )
                    ) : (
                        bool_j_713 = false;
                        assert_pred_j_714 = bool_j_713;
                        assert_res_j_715 = assert_pred_j_714 ? (
                                assert_res_true_j_716 = {}
                            ) : (
                                ab_j_717 = abort
                            )
                    )
            ) : (
                ab_i_929 = abort
            )));
record_j_721 = {checker = flatten_fun_j_531, generator = flatten_fun_j_625, wrapper = flatten_fun_j_720};
proj_j_722 = record_j_721.generator;
int_j_723 = 0;
appl_j_724 = proj_j_722 int_j_723;
f_b_131 = appl_j_724;
bool_j_725 = false;
fail_b_54 = bool_j_725;
flatten_fun_j_734 = fun expr_b_53 -> (
    var_j_726 = expr_b_53;
    m_match_bool_j_728 = var_j_726 ~ any;
    m_match_bool_j_731 = var_j_726 ~ int;
    m_match_cond_j_732 = m_match_bool_j_731 ? (
            bool_j_733 = true
        ) : (
            m_match_cond_j_729 = m_match_bool_j_728 ? (
                    var_j_730 = fail_b_54
                ) : (
                    void_j_727 = {}
                )
        ));
flatten_fun_j_736 = fun bj_null_j_17 -> (
    input_j_735 = input);
flatten_fun_j_738 = fun expr_b_55 -> (
    var_j_737 = expr_b_55);
record_j_739 = {checker = flatten_fun_j_734, generator = flatten_fun_j_736, wrapper = flatten_fun_j_738};
proj_j_740 = record_j_739.generator;
int_j_741 = 0;
appl_j_742 = proj_j_740 int_j_741;
x_b_130 = appl_j_742;
flatten_fun_j_774 = fun expr_b_126 -> (
    bool_j_743 = false;
    fail_b_124 = bool_j_743;
    flatten_fun_j_752 = fun expr_b_123 -> (
        var_j_744 = expr_b_123;
        m_match_bool_j_746 = var_j_744 ~ any;
        m_match_bool_j_749 = var_j_744 ~ int;
        m_match_cond_j_750 = m_match_bool_j_749 ? (
                bool_j_751 = true
            ) : (
                m_match_cond_j_747 = m_match_bool_j_746 ? (
                        var_j_748 = fail_b_124
                    ) : (
                        void_j_745 = {}
                    )
            ));
    flatten_fun_j_754 = fun bj_null_j_18 -> (
        input_j_753 = input);
    flatten_fun_j_756 = fun expr_b_125 -> (
        var_j_755 = expr_b_125);
    record_j_757 = {checker = flatten_fun_j_752, generator = flatten_fun_j_754, wrapper = flatten_fun_j_756};
    proj_j_758 = record_j_757.checker;
    var_j_759 = expr_b_126;
    appl_j_760 = proj_j_758 var_j_759;
    t_check_b_127 = appl_j_760;
    var_j_761 = t_check_b_127;
    if_j_773 = var_j_761 ? (
            bool_j_762 = false;
            pred_check_b_128 = bool_j_762;
            flatten_fun_j_766 = fun n_j_19 -> (
                int_j_763 = 0;
                var_j_764 = n_j_19;
                m_bl_i_930 = int_j_763 ~ int;
                m_br_i_931 = var_j_764 ~ int;
                m_b_i_932 = m_bl_i_930 and m_br_i_931;
                binop_j_765 = m_b_i_932 ? (
                        c_binop_i_933 = int_j_763 < var_j_764
                    ) : (
                        ab_i_934 = abort
                    ));
            var_j_767 = expr_b_126;
            appl_j_768 = flatten_fun_j_766 var_j_767;
            if_j_771 = appl_j_768 ? (
                    bool_j_769 = true
                ) : (
                    var_j_770 = pred_check_b_128
                )
        ) : (
            var_j_772 = t_check_b_127
        ));
flatten_fun_j_803 = fun bj_null_j_22 -> (
    bool_j_775 = false;
    fail_b_120 = bool_j_775;
    flatten_fun_j_784 = fun expr_b_119 -> (
        var_j_776 = expr_b_119;
        m_match_bool_j_778 = var_j_776 ~ any;
        m_match_bool_j_781 = var_j_776 ~ int;
        m_match_cond_j_782 = m_match_bool_j_781 ? (
                bool_j_783 = true
            ) : (
                m_match_cond_j_779 = m_match_bool_j_778 ? (
                        var_j_780 = fail_b_120
                    ) : (
                        void_j_777 = {}
                    )
            ));
    flatten_fun_j_786 = fun bj_null_j_20 -> (
        input_j_785 = input);
    flatten_fun_j_788 = fun expr_b_121 -> (
        var_j_787 = expr_b_121);
    record_j_789 = {checker = flatten_fun_j_784, generator = flatten_fun_j_786, wrapper = flatten_fun_j_788};
    proj_j_790 = record_j_789.generator;
    int_j_791 = 0;
    appl_j_792 = proj_j_790 int_j_791;
    candidate_b_122 = appl_j_792;
    flatten_fun_j_796 = fun n_j_21 -> (
        int_j_793 = 0;
        var_j_794 = n_j_21;
        m_bl_i_935 = int_j_793 ~ int;
        m_br_i_936 = var_j_794 ~ int;
        m_b_i_937 = m_bl_i_935 and m_br_i_936;
        binop_j_795 = m_b_i_937 ? (
                c_binop_i_938 = int_j_793 < var_j_794
            ) : (
                ab_i_939 = abort
            ));
    var_j_797 = candidate_b_122;
    appl_j_798 = flatten_fun_j_796 var_j_797;
    if_j_802 = appl_j_798 ? (
            var_j_799 = candidate_b_122
        ) : (
            bool_j_800 = false;
            assume_j_801 = assume bool_j_800
        ));
flatten_fun_j_805 = fun expr_b_129 -> (
    var_j_804 = expr_b_129);
record_j_806 = {checker = flatten_fun_j_774, generator = flatten_fun_j_803, wrapper = flatten_fun_j_805};
proj_j_807 = record_j_806.checker;
appl_j_810 = g f_b_131;
appl_j_812 = appl_j_810 x_b_130;
appl_j_813 = proj_j_807 appl_j_812;
check_res_b_132 = appl_j_813;
if_j_821 = check_res_b_132 ? (
        var_j_815 = g
    ) : (
        error_var_j_816 = check_res_b_132;
        assert_pred_j_817 = error_var_j_816;
        assert_res_j_818 = assert_pred_j_817 ? (
                assert_res_true_j_819 = {}
            ) : (
                ab_j_820 = abort
            )
    );
i_result = if_j_821