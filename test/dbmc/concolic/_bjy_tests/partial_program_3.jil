i_first = {};
g_j_25 = fun f -> (
    g_j_24 = fun x -> (
        var_j_17 = f;
        var_j_18 = x;
        m_i_286 = var_j_17 ~ fun;
        appl_j_19 = m_i_286 ? (
                c_appl_i_287 = var_j_17 var_j_18
            ) : (
                ab_i_288 = abort
            );
        var_j_20 = f;
        var_j_21 = x;
        m_i_289 = var_j_20 ~ fun;
        appl_j_22 = m_i_289 ? (
                c_appl_i_290 = var_j_20 var_j_21
            ) : (
                ab_i_291 = abort
            );
        m_bl_i_292 = appl_j_19 ~ int;
        m_br_i_293 = appl_j_22 ~ int;
        m_b_i_294 = m_bl_i_292 and m_br_i_293;
        binop_j_23 = m_b_i_294 ? (
                c_binop_i_295 = appl_j_19 * appl_j_22
            ) : (
                ab_i_296 = abort
            )));
g = g_j_25;
flatten_fun_j_106 = fun expr_b_30 -> (
    bool_j_26 = false;
    fail_b_17 = bool_j_26;
    flatten_fun_j_35 = fun expr_b_16 -> (
        var_j_27 = expr_b_16;
        m_match_bool_j_29 = var_j_27 ~ any;
        m_match_bool_j_32 = var_j_27 ~ int;
        m_match_cond_j_33 = m_match_bool_j_32 ? (
                bool_j_34 = true
            ) : (
                m_match_cond_j_30 = m_match_bool_j_29 ? (
                        var_j_31 = fail_b_17
                    ) : (
                        void_j_28 = {}
                    )
            ));
    flatten_fun_j_37 = fun bj_null -> (
        input_j_36 = input);
    record_j_38 = {checker = flatten_fun_j_35, generator = flatten_fun_j_37};
    proj_j_39 = record_j_38.generator;
    int_j_40 = 0;
    appl_j_41 = proj_j_39 int_j_40;
    arg_assert_b_31 = appl_j_41;
    var_j_42 = expr_b_30;
    var_j_43 = arg_assert_b_31;
    appl_j_44 = var_j_42 var_j_43;
    fun_ret_b_32 = appl_j_44;
    flatten_fun_j_74 = fun expr_b_26 -> (
        bool_j_45 = false;
        fail_b_24 = bool_j_45;
        flatten_fun_j_54 = fun expr_b_23 -> (
            var_j_46 = expr_b_23;
            m_match_bool_j_48 = var_j_46 ~ any;
            m_match_bool_j_51 = var_j_46 ~ int;
            m_match_cond_j_52 = m_match_bool_j_51 ? (
                    bool_j_53 = true
                ) : (
                    m_match_cond_j_49 = m_match_bool_j_48 ? (
                            var_j_50 = fail_b_24
                        ) : (
                            void_j_47 = {}
                        )
                ));
        flatten_fun_j_56 = fun bj_null_j_0 -> (
            input_j_55 = input);
        record_j_57 = {checker = flatten_fun_j_54, generator = flatten_fun_j_56};
        proj_j_58 = record_j_57.checker;
        var_j_59 = expr_b_26;
        appl_j_60 = proj_j_58 var_j_59;
        t_check_b_27 = appl_j_60;
        var_j_61 = t_check_b_27;
        if_j_73 = var_j_61 ? (
                bool_j_62 = false;
                pred_check_b_28 = bool_j_62;
                flatten_fun_j_66 = fun n -> (
                    int_j_63 = 0;
                    var_j_64 = n;
                    m_bl_i_297 = int_j_63 ~ int;
                    m_br_i_298 = var_j_64 ~ int;
                    m_b_i_299 = m_bl_i_297 and m_br_i_298;
                    binop_j_65 = m_b_i_299 ? (
                            c_binop_i_300 = int_j_63 < var_j_64
                        ) : (
                            ab_i_301 = abort
                        ));
                var_j_67 = expr_b_26;
                appl_j_68 = flatten_fun_j_66 var_j_67;
                if_j_71 = appl_j_68 ? (
                        bool_j_69 = true
                    ) : (
                        var_j_70 = pred_check_b_28
                    )
            ) : (
                var_j_72 = t_check_b_27
            ));
    flatten_fun_j_101 = fun bj_null_j_3 -> (
        bool_j_75 = false;
        fail_b_20 = bool_j_75;
        flatten_fun_j_84 = fun expr_b_19 -> (
            var_j_76 = expr_b_19;
            m_match_bool_j_78 = var_j_76 ~ any;
            m_match_bool_j_81 = var_j_76 ~ int;
            m_match_cond_j_82 = m_match_bool_j_81 ? (
                    bool_j_83 = true
                ) : (
                    m_match_cond_j_79 = m_match_bool_j_78 ? (
                            var_j_80 = fail_b_20
                        ) : (
                            void_j_77 = {}
                        )
                ));
        flatten_fun_j_86 = fun bj_null_j_1 -> (
            input_j_85 = input);
        record_j_87 = {checker = flatten_fun_j_84, generator = flatten_fun_j_86};
        proj_j_88 = record_j_87.generator;
        int_j_89 = 0;
        appl_j_90 = proj_j_88 int_j_89;
        candidate_b_22 = appl_j_90;
        flatten_fun_j_94 = fun n_j_2 -> (
            int_j_91 = 0;
            var_j_92 = n_j_2;
            m_bl_i_302 = int_j_91 ~ int;
            m_br_i_303 = var_j_92 ~ int;
            m_b_i_304 = m_bl_i_302 and m_br_i_303;
            binop_j_93 = m_b_i_304 ? (
                    c_binop_i_305 = int_j_91 < var_j_92
                ) : (
                    ab_i_306 = abort
                ));
        var_j_95 = candidate_b_22;
        appl_j_96 = flatten_fun_j_94 var_j_95;
        if_j_100 = appl_j_96 ? (
                var_j_97 = candidate_b_22
            ) : (
                bool_j_98 = false;
                assume_j_99 = assume bool_j_98
            ));
    record_j_102 = {checker = flatten_fun_j_74, generator = flatten_fun_j_101};
    proj_j_103 = record_j_102.checker;
    var_j_104 = fun_ret_b_32;
    appl_j_105 = proj_j_103 var_j_104);
flatten_fun_j_192 = fun bj_null_j_10 -> (
    flatten_fun_j_191 = fun arg_assume_b_14 -> (
        bool_j_107 = false;
        fail_b_1 = bool_j_107;
        flatten_fun_j_116 = fun expr_b_0 -> (
            var_j_108 = expr_b_0;
            m_match_bool_j_110 = var_j_108 ~ any;
            m_match_bool_j_113 = var_j_108 ~ int;
            m_match_cond_j_114 = m_match_bool_j_113 ? (
                    bool_j_115 = true
                ) : (
                    m_match_cond_j_111 = m_match_bool_j_110 ? (
                            var_j_112 = fail_b_1
                        ) : (
                            void_j_109 = {}
                        )
                ));
        flatten_fun_j_118 = fun bj_null_j_4 -> (
            input_j_117 = input);
        record_j_119 = {checker = flatten_fun_j_116, generator = flatten_fun_j_118};
        proj_j_120 = record_j_119.checker;
        var_j_121 = arg_assume_b_14;
        appl_j_122 = proj_j_120 var_j_121;
        if_j_190 = appl_j_122 ? (
                flatten_fun_j_152 = fun expr_b_10 -> (
                    bool_j_123 = false;
                    fail_b_8 = bool_j_123;
                    flatten_fun_j_132 = fun expr_b_7 -> (
                        var_j_124 = expr_b_7;
                        m_match_bool_j_126 = var_j_124 ~ any;
                        m_match_bool_j_129 = var_j_124 ~ int;
                        m_match_cond_j_130 = m_match_bool_j_129 ? (
                                bool_j_131 = true
                            ) : (
                                m_match_cond_j_127 = m_match_bool_j_126 ? (
                                        var_j_128 = fail_b_8
                                    ) : (
                                        void_j_125 = {}
                                    )
                            ));
                    flatten_fun_j_134 = fun bj_null_j_5 -> (
                        input_j_133 = input);
                    record_j_135 = {checker = flatten_fun_j_132, generator = flatten_fun_j_134};
                    proj_j_136 = record_j_135.checker;
                    var_j_137 = expr_b_10;
                    appl_j_138 = proj_j_136 var_j_137;
                    t_check_b_11 = appl_j_138;
                    var_j_139 = t_check_b_11;
                    if_j_151 = var_j_139 ? (
                            bool_j_140 = false;
                            pred_check_b_12 = bool_j_140;
                            flatten_fun_j_144 = fun n_j_6 -> (
                                int_j_141 = 0;
                                var_j_142 = n_j_6;
                                m_bl_i_307 = int_j_141 ~ int;
                                m_br_i_308 = var_j_142 ~ int;
                                m_b_i_309 = m_bl_i_307 and m_br_i_308;
                                binop_j_143 = m_b_i_309 ? (
                                        c_binop_i_310 = int_j_141 < var_j_142
                                    ) : (
                                        ab_i_311 = abort
                                    ));
                            var_j_145 = expr_b_10;
                            appl_j_146 = flatten_fun_j_144 var_j_145;
                            if_j_149 = appl_j_146 ? (
                                    bool_j_147 = true
                                ) : (
                                    var_j_148 = pred_check_b_12
                                )
                        ) : (
                            var_j_150 = t_check_b_11
                        ));
                flatten_fun_j_179 = fun bj_null_j_9 -> (
                    bool_j_153 = false;
                    fail_b_4 = bool_j_153;
                    flatten_fun_j_162 = fun expr_b_3 -> (
                        var_j_154 = expr_b_3;
                        m_match_bool_j_156 = var_j_154 ~ any;
                        m_match_bool_j_159 = var_j_154 ~ int;
                        m_match_cond_j_160 = m_match_bool_j_159 ? (
                                bool_j_161 = true
                            ) : (
                                m_match_cond_j_157 = m_match_bool_j_156 ? (
                                        var_j_158 = fail_b_4
                                    ) : (
                                        void_j_155 = {}
                                    )
                            ));
                    flatten_fun_j_164 = fun bj_null_j_7 -> (
                        input_j_163 = input);
                    record_j_165 = {checker = flatten_fun_j_162, generator = flatten_fun_j_164};
                    proj_j_166 = record_j_165.generator;
                    int_j_167 = 0;
                    appl_j_168 = proj_j_166 int_j_167;
                    candidate_b_6 = appl_j_168;
                    flatten_fun_j_172 = fun n_j_8 -> (
                        int_j_169 = 0;
                        var_j_170 = n_j_8;
                        m_bl_i_312 = int_j_169 ~ int;
                        m_br_i_313 = var_j_170 ~ int;
                        m_b_i_314 = m_bl_i_312 and m_br_i_313;
                        binop_j_171 = m_b_i_314 ? (
                                c_binop_i_315 = int_j_169 < var_j_170
                            ) : (
                                ab_i_316 = abort
                            ));
                    var_j_173 = candidate_b_6;
                    appl_j_174 = flatten_fun_j_172 var_j_173;
                    if_j_178 = appl_j_174 ? (
                            var_j_175 = candidate_b_6
                        ) : (
                            bool_j_176 = false;
                            assume_j_177 = assume bool_j_176
                        ));
                record_j_180 = {checker = flatten_fun_j_152, generator = flatten_fun_j_179};
                proj_j_181 = record_j_180.generator;
                int_j_182 = 0;
                appl_j_183 = proj_j_181 int_j_182
            ) : (
                bool_j_184 = false;
                fail_b_15 = bool_j_184;
                var_j_185 = fail_b_15;
                assert_pred_j_186 = var_j_185;
                assert_res_j_187 = assert_pred_j_186 ? (
                        assert_res_true_j_188 = {}
                    ) : (
                        ab_j_189 = abort
                    )
            )));
record_j_193 = {checker = flatten_fun_j_106, generator = flatten_fun_j_192};
proj_j_194 = record_j_193.generator;
int_j_195 = 0;
appl_j_196 = proj_j_194 int_j_195;
f_b_64 = appl_j_196;
bool_j_197 = false;
fail_b_50 = bool_j_197;
flatten_fun_j_206 = fun expr_b_49 -> (
    var_j_198 = expr_b_49;
    m_match_bool_j_200 = var_j_198 ~ any;
    m_match_bool_j_203 = var_j_198 ~ int;
    m_match_cond_j_204 = m_match_bool_j_203 ? (
            bool_j_205 = true
        ) : (
            m_match_cond_j_201 = m_match_bool_j_200 ? (
                    var_j_202 = fail_b_50
                ) : (
                    void_j_199 = {}
                )
        ));
flatten_fun_j_208 = fun bj_null_j_11 -> (
    input_j_207 = input);
record_j_209 = {checker = flatten_fun_j_206, generator = flatten_fun_j_208};
proj_j_210 = record_j_209.generator;
int_j_211 = 0;
appl_j_212 = proj_j_210 int_j_211;
x_b_63 = appl_j_212;
flatten_fun_j_242 = fun expr_b_59 -> (
    bool_j_213 = false;
    fail_b_57 = bool_j_213;
    flatten_fun_j_222 = fun expr_b_56 -> (
        var_j_214 = expr_b_56;
        m_match_bool_j_216 = var_j_214 ~ any;
        m_match_bool_j_219 = var_j_214 ~ int;
        m_match_cond_j_220 = m_match_bool_j_219 ? (
                bool_j_221 = true
            ) : (
                m_match_cond_j_217 = m_match_bool_j_216 ? (
                        var_j_218 = fail_b_57
                    ) : (
                        void_j_215 = {}
                    )
            ));
    flatten_fun_j_224 = fun bj_null_j_12 -> (
        input_j_223 = input);
    record_j_225 = {checker = flatten_fun_j_222, generator = flatten_fun_j_224};
    proj_j_226 = record_j_225.checker;
    var_j_227 = expr_b_59;
    appl_j_228 = proj_j_226 var_j_227;
    t_check_b_60 = appl_j_228;
    var_j_229 = t_check_b_60;
    if_j_241 = var_j_229 ? (
            bool_j_230 = false;
            pred_check_b_61 = bool_j_230;
            flatten_fun_j_234 = fun n_j_13 -> (
                int_j_231 = 0;
                var_j_232 = n_j_13;
                m_bl_i_317 = int_j_231 ~ int;
                m_br_i_318 = var_j_232 ~ int;
                m_b_i_319 = m_bl_i_317 and m_br_i_318;
                binop_j_233 = m_b_i_319 ? (
                        c_binop_i_320 = int_j_231 < var_j_232
                    ) : (
                        ab_i_321 = abort
                    ));
            var_j_235 = expr_b_59;
            appl_j_236 = flatten_fun_j_234 var_j_235;
            if_j_239 = appl_j_236 ? (
                    bool_j_237 = true
                ) : (
                    var_j_238 = pred_check_b_61
                )
        ) : (
            var_j_240 = t_check_b_60
        ));
flatten_fun_j_269 = fun bj_null_j_16 -> (
    bool_j_243 = false;
    fail_b_53 = bool_j_243;
    flatten_fun_j_252 = fun expr_b_52 -> (
        var_j_244 = expr_b_52;
        m_match_bool_j_246 = var_j_244 ~ any;
        m_match_bool_j_249 = var_j_244 ~ int;
        m_match_cond_j_250 = m_match_bool_j_249 ? (
                bool_j_251 = true
            ) : (
                m_match_cond_j_247 = m_match_bool_j_246 ? (
                        var_j_248 = fail_b_53
                    ) : (
                        void_j_245 = {}
                    )
            ));
    flatten_fun_j_254 = fun bj_null_j_14 -> (
        input_j_253 = input);
    record_j_255 = {checker = flatten_fun_j_252, generator = flatten_fun_j_254};
    proj_j_256 = record_j_255.generator;
    int_j_257 = 0;
    appl_j_258 = proj_j_256 int_j_257;
    candidate_b_55 = appl_j_258;
    flatten_fun_j_262 = fun n_j_15 -> (
        int_j_259 = 0;
        var_j_260 = n_j_15;
        m_bl_i_322 = int_j_259 ~ int;
        m_br_i_323 = var_j_260 ~ int;
        m_b_i_324 = m_bl_i_322 and m_br_i_323;
        binop_j_261 = m_b_i_324 ? (
                c_binop_i_325 = int_j_259 < var_j_260
            ) : (
                ab_i_326 = abort
            ));
    var_j_263 = candidate_b_55;
    appl_j_264 = flatten_fun_j_262 var_j_263;
    if_j_268 = appl_j_264 ? (
            var_j_265 = candidate_b_55
        ) : (
            bool_j_266 = false;
            assume_j_267 = assume bool_j_266
        ));
record_j_270 = {checker = flatten_fun_j_242, generator = flatten_fun_j_269};
proj_j_271 = record_j_270.checker;
appl_j_274 = g f_b_64;
appl_j_276 = appl_j_274 x_b_63;
appl_j_277 = proj_j_271 appl_j_276;
check_res_b_65 = appl_j_277;
if_j_285 = check_res_b_65 ? (
        var_j_279 = g
    ) : (
        error_var_j_280 = check_res_b_65;
        assert_pred_j_281 = error_var_j_280;
        assert_res_j_282 = assert_pred_j_281 ? (
                assert_res_true_j_283 = {}
            ) : (
                ab_j_284 = abort
            )
    );
i_result = if_j_285