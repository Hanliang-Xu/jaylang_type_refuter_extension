i_first = {};
sample_functor_j_49 = fun module -> (
    bool_j_5 = false;
    fail_b_1 = bool_j_5;
    flatten_fun_j_14 = fun expr_b_0 -> (
        var_j_6 = expr_b_0;
        m_match_bool_j_8 = var_j_6 ~ any;
        m_match_bool_j_11 = var_j_6 ~ bool;
        m_match_cond_j_12 = m_match_bool_j_11 ? (
                bool_j_13 = true
            ) : (
                m_match_cond_j_9 = m_match_bool_j_8 ? (
                        var_j_10 = fail_b_1
                    ) : (
                        void_j_7 = {}
                    )
            ));
    flatten_fun_j_18 = fun bj_null_j_3 -> (
        int_j_15 = 0;
        input_j_16 = input;
        m_bl_i_200 = int_j_15 ~ int;
        m_br_i_201 = input_j_16 ~ int;
        m_b_i_202 = m_bl_i_200 and m_br_i_201;
        binop_j_17 = m_b_i_202 ? (
                c_binop_i_203 = int_j_15 <= input_j_16
            ) : (
                ab_i_204 = abort
            ));
    record_j_19 = {checker = flatten_fun_j_14, generator = flatten_fun_j_18};
    t_j_4 = record_j_19;
    var_j_20 = module;
    proj_j_21 = var_j_20.bj_decl_lbls;
    m_match_bool_j_23 = proj_j_21 ~ any;
    m_match_bool_j_30 = proj_j_21 ~ {emptyset, _};
    m_match_cond_j_31 = m_match_bool_j_30 ? (
            var_j_32 = module;
            proj_j_33 = var_j_32.bj_actual_rec;
            proj_j_34 = proj_j_33.emptyset
        ) : (
            m_match_cond_j_24 = m_match_bool_j_23 ? (
                    bool_j_25 = false;
                    assert_pred_j_26 = bool_j_25;
                    assert_res_j_27 = assert_pred_j_26 ? (
                            assert_res_true_j_28 = {}
                        ) : (
                            ab_j_29 = abort
                        )
                ) : (
                    void_j_22 = {}
                )
        );
    record_j_35 = {empty = m_match_cond_j_31};
    record_j_36 = {};
    record_j_37 = {empty = record_j_36};
    record_j_38 = {bj_actual_rec = record_j_35, bj_decl_lbls = record_j_37};
    var_j_39 = t_j_4;
    record_j_40 = {t = var_j_39};
    record_j_41 = {};
    record_j_42 = {t = record_j_41};
    record_j_43 = {bj_actual_rec = record_j_40, bj_decl_lbls = record_j_42};
    record_j_44 = {module = record_j_38, type = record_j_43};
    record_j_45 = {};
    record_j_46 = {};
    record_j_47 = {module = record_j_45, type = record_j_46};
    record_j_48 = {bj_actual_rec = record_j_44, bj_decl_lbls = record_j_47});
sample_functor = sample_functor_j_49;
bool_j_50 = false;
fail_b_4 = bool_j_50;
flatten_fun_j_59 = fun expr_b_3 -> (
    var_j_51 = expr_b_3;
    m_match_bool_j_53 = var_j_51 ~ any;
    m_match_bool_j_56 = var_j_51 ~ bool;
    m_match_cond_j_57 = m_match_bool_j_56 ? (
            bool_j_58 = true
        ) : (
            m_match_cond_j_54 = m_match_bool_j_53 ? (
                    var_j_55 = fail_b_4
                ) : (
                    void_j_52 = {}
                )
        ));
flatten_fun_j_63 = fun bj_null -> (
    int_j_60 = 0;
    input_j_61 = input;
    m_bl_i_205 = int_j_60 ~ int;
    m_br_i_206 = input_j_61 ~ int;
    m_b_i_207 = m_bl_i_205 and m_br_i_206;
    binop_j_62 = m_b_i_207 ? (
            c_binop_i_208 = int_j_60 <= input_j_61
        ) : (
            ab_i_209 = abort
        ));
record_j_64 = {checker = flatten_fun_j_59, generator = flatten_fun_j_63};
t = record_j_64;
int_j_65 = 1;
record_j_66 = {emptyset = int_j_65};
record_j_67 = {};
record_j_68 = {emptyset = record_j_67};
record_j_69 = {bj_actual_rec = record_j_66, bj_decl_lbls = record_j_68};
record_j_71 = {t = t};
record_j_72 = {};
record_j_73 = {t = record_j_72};
record_j_74 = {bj_actual_rec = record_j_71, bj_decl_lbls = record_j_73};
record_j_75 = {module = record_j_69, type = record_j_74};
record_j_76 = {};
record_j_77 = {};
record_j_78 = {module = record_j_76, type = record_j_77};
record_j_79 = {bj_actual_rec = record_j_75, bj_decl_lbls = record_j_78};
sample_module = record_j_79;
flatten_fun_j_122 = fun t_j_2 -> (
    flatten_fun_j_110 = fun expr_b_10 -> (
        bool_j_80 = false;
        rec_fail_b_9 = bool_j_80;
        bool_j_81 = false;
        rec_fail_b_8 = bool_j_81;
        bool_j_82 = false;
        rec_fail_b_7 = bool_j_82;
        var_j_83 = expr_b_10;
        m_match_bool_j_85 = var_j_83 ~ any;
        m_match_bool_j_88 = var_j_83 ~ {bj_actual_rec, _};
        m_match_cond_j_89 = m_match_bool_j_88 ? (
                var_j_90 = expr_b_10;
                proj_j_91 = var_j_90.bj_decl_lbls;
                m_match_bool_j_93 = proj_j_91 ~ any;
                m_match_bool_j_96 = proj_j_91 ~ {empty, _};
                m_match_cond_j_97 = m_match_bool_j_96 ? (
                        empty_j_0 = proj_j_91.empty;
                        var_j_98 = expr_b_10;
                        proj_j_99 = var_j_98.bj_actual_rec;
                        m_match_bool_j_101 = proj_j_99 ~ any;
                        m_match_bool_j_104 = proj_j_99 ~ {empty, _};
                        m_match_cond_j_105 = m_match_bool_j_104 ? (
                                empty = proj_j_99.empty;
                                var_j_106 = t_j_2;
                                proj_j_107 = var_j_106.checker;
                                var_j_108 = empty;
                                appl_j_109 = proj_j_107 var_j_108
                            ) : (
                                m_match_cond_j_102 = m_match_bool_j_101 ? (
                                        var_j_103 = rec_fail_b_7
                                    ) : (
                                        void_j_100 = {}
                                    )
                            )
                    ) : (
                        m_match_cond_j_94 = m_match_bool_j_93 ? (
                                var_j_95 = rec_fail_b_8
                            ) : (
                                void_j_92 = {}
                            )
                    )
            ) : (
                m_match_cond_j_86 = m_match_bool_j_85 ? (
                        var_j_87 = rec_fail_b_9
                    ) : (
                        void_j_84 = {}
                    )
            ));
    flatten_fun_j_120 = fun bj_null_j_1 -> (
        var_j_111 = t_j_2;
        proj_j_112 = var_j_111.generator;
        int_j_113 = 0;
        appl_j_114 = proj_j_112 int_j_113;
        empty_b_6 = appl_j_114;
        var_j_115 = empty_b_6;
        record_j_116 = {empty = var_j_115};
        record_j_117 = {};
        record_j_118 = {empty = record_j_117};
        record_j_119 = {bj_actual_rec = record_j_116, bj_decl_lbls = record_j_118});
    record_j_121 = {checker = flatten_fun_j_110, generator = flatten_fun_j_120});
res_module_type = flatten_fun_j_122;
m_i_210 = sample_functor ~ fun;
appl_j_125 = m_i_210 ? (
        c_appl_i_211 = sample_functor sample_module
    ) : (
        ab_i_212 = abort
    );
functor_appld = appl_j_125;
proj_j_127 = functor_appld.bj_decl_lbls;
m_match_bool_j_129 = proj_j_127 ~ any;
m_match_bool_j_136 = proj_j_127 ~ {type, _};
m_match_cond_j_137 = m_match_bool_j_136 ? (
        var_j_138 = functor_appld;
        proj_j_139 = var_j_138.bj_actual_rec;
        proj_j_140 = proj_j_139.type
    ) : (
        m_match_cond_j_130 = m_match_bool_j_129 ? (
                bool_j_131 = false;
                assert_pred_j_132 = bool_j_131;
                assert_res_j_133 = assert_pred_j_132 ? (
                        assert_res_true_j_134 = {}
                    ) : (
                        ab_j_135 = abort
                    )
            ) : (
                void_j_128 = {}
            )
    );
proj_j_141 = m_match_cond_j_137.bj_decl_lbls;
m_match_bool_j_143 = proj_j_141 ~ any;
m_match_bool_j_150 = proj_j_141 ~ {t, _};
m_match_cond_j_151 = m_match_bool_j_150 ? (
        var_j_152 = functor_appld;
        proj_j_153 = var_j_152.bj_decl_lbls;
        m_match_bool_j_155 = proj_j_153 ~ any;
        m_match_bool_j_162 = proj_j_153 ~ {type, _};
        m_match_cond_j_163 = m_match_bool_j_162 ? (
                var_j_164 = functor_appld;
                proj_j_165 = var_j_164.bj_actual_rec;
                proj_j_166 = proj_j_165.type
            ) : (
                m_match_cond_j_156 = m_match_bool_j_155 ? (
                        bool_j_157 = false;
                        assert_pred_j_158 = bool_j_157;
                        assert_res_j_159 = assert_pred_j_158 ? (
                                assert_res_true_j_160 = {}
                            ) : (
                                ab_j_161 = abort
                            )
                    ) : (
                        void_j_154 = {}
                    )
            );
        proj_j_167 = m_match_cond_j_163.bj_actual_rec;
        proj_j_168 = proj_j_167.t
    ) : (
        m_match_cond_j_144 = m_match_bool_j_143 ? (
                bool_j_145 = false;
                assert_pred_j_146 = bool_j_145;
                assert_res_j_147 = assert_pred_j_146 ? (
                        assert_res_true_j_148 = {}
                    ) : (
                        ab_j_149 = abort
                    )
            ) : (
                void_j_142 = {}
            )
    );
inner_t = m_match_cond_j_151;
m_i_213 = res_module_type ~ fun;
appl_j_171 = m_i_213 ? (
        c_appl_i_214 = res_module_type inner_t
    ) : (
        ab_i_215 = abort
    );
module_type_check = appl_j_171;
proj_j_173 = functor_appld.bj_decl_lbls;
m_match_bool_j_175 = proj_j_173 ~ any;
m_match_bool_j_182 = proj_j_173 ~ {module, _};
m_match_cond_j_183 = m_match_bool_j_182 ? (
        var_j_184 = functor_appld;
        proj_j_185 = var_j_184.bj_actual_rec;
        proj_j_186 = proj_j_185.module
    ) : (
        m_match_cond_j_176 = m_match_bool_j_175 ? (
                bool_j_177 = false;
                assert_pred_j_178 = bool_j_177;
                assert_res_j_179 = assert_pred_j_178 ? (
                        assert_res_true_j_180 = {}
                    ) : (
                        ab_j_181 = abort
                    )
            ) : (
                void_j_174 = {}
            )
    );
check_type_b_12 = m_match_cond_j_183;
check_type = check_type_b_12;
proj_j_189 = module_type_check.checker;
appl_j_191 = proj_j_189 check_type_b_12;
check_res_b_13 = appl_j_191;
if_j_199 = check_res_b_13 ? (
        var_j_193 = functor_appld
    ) : (
        error_var_j_194 = check_res_b_13;
        assert_pred_j_195 = error_var_j_194;
        assert_res_j_196 = assert_pred_j_195 ? (
                assert_res_true_j_197 = {}
            ) : (
                ab_j_198 = abort
            )
    );
i_result = if_j_199