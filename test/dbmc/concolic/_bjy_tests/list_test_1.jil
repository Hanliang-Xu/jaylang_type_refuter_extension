_i_first = {};
list_test_j_28 = fun lst -> (
    bool_j_12 = false;
    fail_b_15 = bool_j_12;
    var_j_13 = lst;
    m_match_bool_j_15 = var_j_13 ~ {_j_head, _j_tail, _};
    m_match_bool_j_18 = var_j_13 ~ {_j_empty, _};
    m_match_bool_j_21 = var_j_13 ~ {~untouched, _};
    m_match_cond_j_22 = m_match_bool_j_21 ? (
            var_j_23 = fail_b_15;
            assert_pred_j_24 = var_j_23;
            assert_res_j_25 = assert_pred_j_24 ? (
                    assert_res_true_j_26 = {}
                ) : (
                    ab_j_27 = abort
                )
        ) : (
            m_match_cond_j_19 = m_match_bool_j_18 ? (
                    bool_j_20 = false
                ) : (
                    m_match_cond_j_16 = m_match_bool_j_15 ? (
                            hd_j_11 = var_j_13._j_head;
                            tl_j_10 = var_j_13._j_tail;
                            int_j_17 = 5
                        ) : (
                            ab_j_14 = abort
                        )
                )
        ));
list_test = list_test_j_28;
flatten_fun_j_80 = fun expr_b_12 -> (
    bool_j_29 = false;
    lst_fail_b_13 = bool_j_29;
    var_j_30 = expr_b_12;
    m_match_bool_j_32 = var_j_30 ~ any;
    m_match_bool_j_35 = var_j_30 ~ {_j_head, _j_tail, _};
    m_match_bool_j_77 = var_j_30 ~ {_j_empty, _};
    m_match_cond_j_78 = m_match_bool_j_77 ? (
            bool_j_79 = true
        ) : (
            m_match_cond_j_36 = m_match_bool_j_35 ? (
                    ~underscore = var_j_30._j_head;
                    ~underscore2 = var_j_30._j_tail;
                    flatten_fun_j_70 = fun test_fun_b_9_j_0 -> (
                        flatten_fun_j_69 = fun test_list_b_10 -> (
                            var_j_37 = test_fun_b_9_j_0;
                            var_j_38 = test_fun_b_9_j_0;
                            appl_j_39 = var_j_37 var_j_38;
                            test_fun_b_9 = appl_j_39;
                            var_j_40 = test_list_b_10;
                            m_match_bool_j_42 = var_j_40 ~ {_j_head, _j_tail, _};
                            m_match_bool_j_66 = var_j_40 ~ {_j_empty, _};
                            m_match_cond_j_67 = m_match_bool_j_66 ? (
                                    bool_j_68 = true
                                ) : (
                                    m_match_cond_j_43 = m_match_bool_j_42 ? (
                                            hd = var_j_40._j_head;
                                            tl = var_j_40._j_tail;
                                            bool_j_44 = false;
                                            fail_b_7 = bool_j_44;
                                            flatten_fun_j_53 = fun expr_b_6 -> (
                                                var_j_45 = expr_b_6;
                                                m_match_bool_j_47 = var_j_45 ~ any;
                                                m_match_bool_j_50 = var_j_45 ~ int;
                                                m_match_cond_j_51 = m_match_bool_j_50 ? (
                                                        bool_j_52 = true
                                                    ) : (
                                                        m_match_cond_j_48 = m_match_bool_j_47 ? (
                                                                var_j_49 = fail_b_7
                                                            ) : (
                                                                void_j_46 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_55 = fun ~null -> (
                                                input_j_54 = input);
                                            record_j_56 = {checker = flatten_fun_j_53, generator = flatten_fun_j_55};
                                            proj_j_57 = record_j_56.checker;
                                            var_j_58 = hd;
                                            appl_j_59 = proj_j_57 var_j_58;
                                            elm_check_b_11 = appl_j_59;
                                            var_j_60 = elm_check_b_11;
                                            if_j_65 = var_j_60 ? (
                                                    var_j_61 = test_fun_b_9;
                                                    var_j_62 = tl;
                                                    appl_j_63 = var_j_61 var_j_62
                                                ) : (
                                                    var_j_64 = elm_check_b_11
                                                )
                                        ) : (
                                            void_j_41 = {}
                                        )
                                )));
                    test_fun_b_9_j_0_j_3 = flatten_fun_j_70;
                    var_j_71 = test_fun_b_9_j_0_j_3;
                    var_j_72 = test_fun_b_9_j_0_j_3;
                    appl_j_73 = var_j_71 var_j_72;
                    test_fun_b_9_j_2 = appl_j_73;
                    var_j_74 = test_fun_b_9_j_2;
                    var_j_75 = expr_b_12;
                    appl_j_76 = var_j_74 var_j_75
                ) : (
                    m_match_cond_j_33 = m_match_bool_j_32 ? (
                            var_j_34 = lst_fail_b_13
                        ) : (
                            void_j_31 = {}
                        )
                )
        ));
flatten_fun_j_129 = fun ~null_j_8 -> (
    flatten_fun_j_115 = fun list_maker_b_4_j_1 -> (
        flatten_fun_j_114 = fun len_b_3 -> (
            var_j_81 = list_maker_b_4_j_1;
            var_j_82 = list_maker_b_4_j_1;
            appl_j_83 = var_j_81 var_j_82;
            list_maker_b_4 = appl_j_83;
            var_j_84 = len_b_3;
            int_j_85 = 0;
            binop_j_86 = var_j_84 == int_j_85;
            if_j_113 = binop_j_86 ? (
                    record_j_87 = {};
                    record_j_88 = {_j_empty = record_j_87}
                ) : (
                    bool_j_89 = false;
                    fail_b_1 = bool_j_89;
                    flatten_fun_j_98 = fun expr_b_0 -> (
                        var_j_90 = expr_b_0;
                        m_match_bool_j_92 = var_j_90 ~ any;
                        m_match_bool_j_95 = var_j_90 ~ int;
                        m_match_cond_j_96 = m_match_bool_j_95 ? (
                                bool_j_97 = true
                            ) : (
                                m_match_cond_j_93 = m_match_bool_j_92 ? (
                                        var_j_94 = fail_b_1
                                    ) : (
                                        void_j_91 = {}
                                    )
                            ));
                    flatten_fun_j_100 = fun ~null_j_4 -> (
                        input_j_99 = input);
                    record_j_101 = {checker = flatten_fun_j_98, generator = flatten_fun_j_100};
                    proj_j_102 = record_j_101.generator;
                    int_j_103 = 0;
                    appl_j_104 = proj_j_102 int_j_103;
                    elm_b_5 = appl_j_104;
                    record_j_105 = {};
                    var_j_106 = elm_b_5;
                    var_j_107 = list_maker_b_4;
                    var_j_108 = len_b_3;
                    int_j_109 = 1;
                    binop_j_110 = var_j_108 - int_j_109;
                    appl_j_111 = var_j_107 binop_j_110;
                    record_j_112 = {_j_cons = record_j_105, _j_head = var_j_106, _j_tail = appl_j_111}
                )));
    list_maker_b_4_j_1_j_7 = flatten_fun_j_115;
    var_j_116 = list_maker_b_4_j_1_j_7;
    var_j_117 = list_maker_b_4_j_1_j_7;
    appl_j_118 = var_j_116 var_j_117;
    list_maker_b_4_j_6 = appl_j_118;
    input_j_119 = input;
    len_b_3_j_5 = input_j_119;
    int_j_120 = 0;
    var_j_121 = len_b_3_j_5;
    binop_j_122 = int_j_120 <= var_j_121;
    if_j_128 = binop_j_122 ? (
            var_j_123 = list_maker_b_4_j_6;
            var_j_124 = len_b_3_j_5;
            appl_j_125 = var_j_123 var_j_124
        ) : (
            bool_j_126 = false;
            assume_j_127 = assume bool_j_126
        ));
record_j_130 = {checker = flatten_fun_j_80, generator = flatten_fun_j_129};
proj_j_131 = record_j_130.generator;
int_j_132 = 0;
appl_j_133 = proj_j_131 int_j_132;
lst_b_19 = appl_j_133;
bool_j_134 = false;
fail_b_17 = bool_j_134;
flatten_fun_j_143 = fun expr_b_16 -> (
    var_j_135 = expr_b_16;
    m_match_bool_j_137 = var_j_135 ~ any;
    m_match_bool_j_140 = var_j_135 ~ int;
    m_match_cond_j_141 = m_match_bool_j_140 ? (
            bool_j_142 = true
        ) : (
            m_match_cond_j_138 = m_match_bool_j_137 ? (
                    var_j_139 = fail_b_17
                ) : (
                    void_j_136 = {}
                )
        ));
flatten_fun_j_145 = fun ~null_j_9 -> (
    input_j_144 = input);
record_j_146 = {checker = flatten_fun_j_143, generator = flatten_fun_j_145};
proj_j_147 = record_j_146.checker;
appl_j_150 = list_test lst_b_19;
appl_j_151 = proj_j_147 appl_j_150;
check_res_b_20 = appl_j_151;
if_j_159 = check_res_b_20 ? (
        var_j_153 = list_test
    ) : (
        error_var_j_154 = check_res_b_20;
        assert_pred_j_155 = error_var_j_154;
        assert_res_j_156 = assert_pred_j_155 ? (
                assert_res_true_j_157 = {}
            ) : (
                ab_j_158 = abort
            )
    );
_i_result = if_j_159