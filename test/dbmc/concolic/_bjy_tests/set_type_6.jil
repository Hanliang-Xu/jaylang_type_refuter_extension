i_first = {};
test_j_19 = fun f -> (
    var_j_16 = f;
    int_j_17 = 1;
    m_i_262 = var_j_16 ~ fun;
    appl_j_18 = m_i_262 ? (
            c_appl_i_263 = var_j_16 int_j_17
        ) : (
            ab_i_264 = abort
        ));
test = test_j_19;
flatten_fun_j_100 = fun expr_b_30 -> (
    bool_j_20 = false;
    fail_b_17 = bool_j_20;
    flatten_fun_j_29 = fun expr_b_16 -> (
        var_j_21 = expr_b_16;
        m_match_bool_j_23 = var_j_21 ~ any;
        m_match_bool_j_26 = var_j_21 ~ int;
        m_match_cond_j_27 = m_match_bool_j_26 ? (
                bool_j_28 = true
            ) : (
                m_match_cond_j_24 = m_match_bool_j_23 ? (
                        var_j_25 = fail_b_17
                    ) : (
                        void_j_22 = {}
                    )
            ));
    flatten_fun_j_31 = fun bj_null -> (
        input_j_30 = input);
    record_j_32 = {checker = flatten_fun_j_29, generator = flatten_fun_j_31};
    proj_j_33 = record_j_32.generator;
    int_j_34 = 0;
    appl_j_35 = proj_j_33 int_j_34;
    arg_assert_b_31 = appl_j_35;
    var_j_36 = expr_b_30;
    var_j_37 = arg_assert_b_31;
    appl_j_38 = var_j_36 var_j_37;
    fun_ret_b_32 = appl_j_38;
    flatten_fun_j_68 = fun expr_b_26 -> (
        bool_j_39 = false;
        fail_b_24 = bool_j_39;
        flatten_fun_j_48 = fun expr_b_23 -> (
            var_j_40 = expr_b_23;
            m_match_bool_j_42 = var_j_40 ~ any;
            m_match_bool_j_45 = var_j_40 ~ int;
            m_match_cond_j_46 = m_match_bool_j_45 ? (
                    bool_j_47 = true
                ) : (
                    m_match_cond_j_43 = m_match_bool_j_42 ? (
                            var_j_44 = fail_b_24
                        ) : (
                            void_j_41 = {}
                        )
                ));
        flatten_fun_j_50 = fun bj_null_j_0 -> (
            input_j_49 = input);
        record_j_51 = {checker = flatten_fun_j_48, generator = flatten_fun_j_50};
        proj_j_52 = record_j_51.checker;
        var_j_53 = expr_b_26;
        appl_j_54 = proj_j_52 var_j_53;
        t_check_b_27 = appl_j_54;
        var_j_55 = t_check_b_27;
        if_j_67 = var_j_55 ? (
                bool_j_56 = false;
                pred_check_b_28 = bool_j_56;
                flatten_fun_j_60 = fun a -> (
                    int_j_57 = 0;
                    var_j_58 = a;
                    m_bl_i_265 = int_j_57 ~ int;
                    m_br_i_266 = var_j_58 ~ int;
                    m_b_i_267 = m_bl_i_265 and m_br_i_266;
                    binop_j_59 = m_b_i_267 ? (
                            c_binop_i_268 = int_j_57 < var_j_58
                        ) : (
                            ab_i_269 = abort
                        ));
                var_j_61 = expr_b_26;
                appl_j_62 = flatten_fun_j_60 var_j_61;
                if_j_65 = appl_j_62 ? (
                        bool_j_63 = true
                    ) : (
                        var_j_64 = pred_check_b_28
                    )
            ) : (
                var_j_66 = t_check_b_27
            ));
    flatten_fun_j_95 = fun bj_null_j_3 -> (
        bool_j_69 = false;
        fail_b_20 = bool_j_69;
        flatten_fun_j_78 = fun expr_b_19 -> (
            var_j_70 = expr_b_19;
            m_match_bool_j_72 = var_j_70 ~ any;
            m_match_bool_j_75 = var_j_70 ~ int;
            m_match_cond_j_76 = m_match_bool_j_75 ? (
                    bool_j_77 = true
                ) : (
                    m_match_cond_j_73 = m_match_bool_j_72 ? (
                            var_j_74 = fail_b_20
                        ) : (
                            void_j_71 = {}
                        )
                ));
        flatten_fun_j_80 = fun bj_null_j_1 -> (
            input_j_79 = input);
        record_j_81 = {checker = flatten_fun_j_78, generator = flatten_fun_j_80};
        proj_j_82 = record_j_81.generator;
        int_j_83 = 0;
        appl_j_84 = proj_j_82 int_j_83;
        candidate_b_22 = appl_j_84;
        flatten_fun_j_88 = fun a_j_2 -> (
            int_j_85 = 0;
            var_j_86 = a_j_2;
            m_bl_i_270 = int_j_85 ~ int;
            m_br_i_271 = var_j_86 ~ int;
            m_b_i_272 = m_bl_i_270 and m_br_i_271;
            binop_j_87 = m_b_i_272 ? (
                    c_binop_i_273 = int_j_85 < var_j_86
                ) : (
                    ab_i_274 = abort
                ));
        var_j_89 = candidate_b_22;
        appl_j_90 = flatten_fun_j_88 var_j_89;
        if_j_94 = appl_j_90 ? (
                var_j_91 = candidate_b_22
            ) : (
                bool_j_92 = false;
                assume_j_93 = assume bool_j_92
            ));
    record_j_96 = {checker = flatten_fun_j_68, generator = flatten_fun_j_95};
    proj_j_97 = record_j_96.checker;
    var_j_98 = fun_ret_b_32;
    appl_j_99 = proj_j_97 var_j_98);
flatten_fun_j_186 = fun bj_null_j_10 -> (
    flatten_fun_j_185 = fun arg_assume_b_14 -> (
        bool_j_101 = false;
        fail_b_1 = bool_j_101;
        flatten_fun_j_110 = fun expr_b_0 -> (
            var_j_102 = expr_b_0;
            m_match_bool_j_104 = var_j_102 ~ any;
            m_match_bool_j_107 = var_j_102 ~ int;
            m_match_cond_j_108 = m_match_bool_j_107 ? (
                    bool_j_109 = true
                ) : (
                    m_match_cond_j_105 = m_match_bool_j_104 ? (
                            var_j_106 = fail_b_1
                        ) : (
                            void_j_103 = {}
                        )
                ));
        flatten_fun_j_112 = fun bj_null_j_4 -> (
            input_j_111 = input);
        record_j_113 = {checker = flatten_fun_j_110, generator = flatten_fun_j_112};
        proj_j_114 = record_j_113.checker;
        var_j_115 = arg_assume_b_14;
        appl_j_116 = proj_j_114 var_j_115;
        if_j_184 = appl_j_116 ? (
                flatten_fun_j_146 = fun expr_b_10 -> (
                    bool_j_117 = false;
                    fail_b_8 = bool_j_117;
                    flatten_fun_j_126 = fun expr_b_7 -> (
                        var_j_118 = expr_b_7;
                        m_match_bool_j_120 = var_j_118 ~ any;
                        m_match_bool_j_123 = var_j_118 ~ int;
                        m_match_cond_j_124 = m_match_bool_j_123 ? (
                                bool_j_125 = true
                            ) : (
                                m_match_cond_j_121 = m_match_bool_j_120 ? (
                                        var_j_122 = fail_b_8
                                    ) : (
                                        void_j_119 = {}
                                    )
                            ));
                    flatten_fun_j_128 = fun bj_null_j_5 -> (
                        input_j_127 = input);
                    record_j_129 = {checker = flatten_fun_j_126, generator = flatten_fun_j_128};
                    proj_j_130 = record_j_129.checker;
                    var_j_131 = expr_b_10;
                    appl_j_132 = proj_j_130 var_j_131;
                    t_check_b_11 = appl_j_132;
                    var_j_133 = t_check_b_11;
                    if_j_145 = var_j_133 ? (
                            bool_j_134 = false;
                            pred_check_b_12 = bool_j_134;
                            flatten_fun_j_138 = fun a_j_6 -> (
                                int_j_135 = 0;
                                var_j_136 = a_j_6;
                                m_bl_i_275 = int_j_135 ~ int;
                                m_br_i_276 = var_j_136 ~ int;
                                m_b_i_277 = m_bl_i_275 and m_br_i_276;
                                binop_j_137 = m_b_i_277 ? (
                                        c_binop_i_278 = int_j_135 < var_j_136
                                    ) : (
                                        ab_i_279 = abort
                                    ));
                            var_j_139 = expr_b_10;
                            appl_j_140 = flatten_fun_j_138 var_j_139;
                            if_j_143 = appl_j_140 ? (
                                    bool_j_141 = true
                                ) : (
                                    var_j_142 = pred_check_b_12
                                )
                        ) : (
                            var_j_144 = t_check_b_11
                        ));
                flatten_fun_j_173 = fun bj_null_j_9 -> (
                    bool_j_147 = false;
                    fail_b_4 = bool_j_147;
                    flatten_fun_j_156 = fun expr_b_3 -> (
                        var_j_148 = expr_b_3;
                        m_match_bool_j_150 = var_j_148 ~ any;
                        m_match_bool_j_153 = var_j_148 ~ int;
                        m_match_cond_j_154 = m_match_bool_j_153 ? (
                                bool_j_155 = true
                            ) : (
                                m_match_cond_j_151 = m_match_bool_j_150 ? (
                                        var_j_152 = fail_b_4
                                    ) : (
                                        void_j_149 = {}
                                    )
                            ));
                    flatten_fun_j_158 = fun bj_null_j_7 -> (
                        input_j_157 = input);
                    record_j_159 = {checker = flatten_fun_j_156, generator = flatten_fun_j_158};
                    proj_j_160 = record_j_159.generator;
                    int_j_161 = 0;
                    appl_j_162 = proj_j_160 int_j_161;
                    candidate_b_6 = appl_j_162;
                    flatten_fun_j_166 = fun a_j_8 -> (
                        int_j_163 = 0;
                        var_j_164 = a_j_8;
                        m_bl_i_280 = int_j_163 ~ int;
                        m_br_i_281 = var_j_164 ~ int;
                        m_b_i_282 = m_bl_i_280 and m_br_i_281;
                        binop_j_165 = m_b_i_282 ? (
                                c_binop_i_283 = int_j_163 < var_j_164
                            ) : (
                                ab_i_284 = abort
                            ));
                    var_j_167 = candidate_b_6;
                    appl_j_168 = flatten_fun_j_166 var_j_167;
                    if_j_172 = appl_j_168 ? (
                            var_j_169 = candidate_b_6
                        ) : (
                            bool_j_170 = false;
                            assume_j_171 = assume bool_j_170
                        ));
                record_j_174 = {checker = flatten_fun_j_146, generator = flatten_fun_j_173};
                proj_j_175 = record_j_174.generator;
                int_j_176 = 0;
                appl_j_177 = proj_j_175 int_j_176
            ) : (
                bool_j_178 = false;
                fail_b_15 = bool_j_178;
                var_j_179 = fail_b_15;
                assert_pred_j_180 = var_j_179;
                assert_res_j_181 = assert_pred_j_180 ? (
                        assert_res_true_j_182 = {}
                    ) : (
                        ab_j_183 = abort
                    )
            )));
record_j_187 = {checker = flatten_fun_j_100, generator = flatten_fun_j_186};
proj_j_188 = record_j_187.generator;
int_j_189 = 0;
appl_j_190 = proj_j_188 int_j_189;
f_b_60 = appl_j_190;
flatten_fun_j_220 = fun expr_b_56 -> (
    bool_j_191 = false;
    fail_b_54 = bool_j_191;
    flatten_fun_j_200 = fun expr_b_53 -> (
        var_j_192 = expr_b_53;
        m_match_bool_j_194 = var_j_192 ~ any;
        m_match_bool_j_197 = var_j_192 ~ int;
        m_match_cond_j_198 = m_match_bool_j_197 ? (
                bool_j_199 = true
            ) : (
                m_match_cond_j_195 = m_match_bool_j_194 ? (
                        var_j_196 = fail_b_54
                    ) : (
                        void_j_193 = {}
                    )
            ));
    flatten_fun_j_202 = fun bj_null_j_11 -> (
        input_j_201 = input);
    record_j_203 = {checker = flatten_fun_j_200, generator = flatten_fun_j_202};
    proj_j_204 = record_j_203.checker;
    var_j_205 = expr_b_56;
    appl_j_206 = proj_j_204 var_j_205;
    t_check_b_57 = appl_j_206;
    var_j_207 = t_check_b_57;
    if_j_219 = var_j_207 ? (
            bool_j_208 = false;
            pred_check_b_58 = bool_j_208;
            flatten_fun_j_212 = fun a_j_12 -> (
                var_j_209 = a_j_12;
                int_j_210 = 0;
                m_bl_i_285 = var_j_209 ~ int;
                m_br_i_286 = int_j_210 ~ int;
                m_b_i_287 = m_bl_i_285 and m_br_i_286;
                binop_j_211 = m_b_i_287 ? (
                        c_binop_i_288 = var_j_209 < int_j_210
                    ) : (
                        ab_i_289 = abort
                    ));
            var_j_213 = expr_b_56;
            appl_j_214 = flatten_fun_j_212 var_j_213;
            if_j_217 = appl_j_214 ? (
                    bool_j_215 = true
                ) : (
                    var_j_216 = pred_check_b_58
                )
        ) : (
            var_j_218 = t_check_b_57
        ));
flatten_fun_j_247 = fun bj_null_j_15 -> (
    bool_j_221 = false;
    fail_b_50 = bool_j_221;
    flatten_fun_j_230 = fun expr_b_49 -> (
        var_j_222 = expr_b_49;
        m_match_bool_j_224 = var_j_222 ~ any;
        m_match_bool_j_227 = var_j_222 ~ int;
        m_match_cond_j_228 = m_match_bool_j_227 ? (
                bool_j_229 = true
            ) : (
                m_match_cond_j_225 = m_match_bool_j_224 ? (
                        var_j_226 = fail_b_50
                    ) : (
                        void_j_223 = {}
                    )
            ));
    flatten_fun_j_232 = fun bj_null_j_13 -> (
        input_j_231 = input);
    record_j_233 = {checker = flatten_fun_j_230, generator = flatten_fun_j_232};
    proj_j_234 = record_j_233.generator;
    int_j_235 = 0;
    appl_j_236 = proj_j_234 int_j_235;
    candidate_b_52 = appl_j_236;
    flatten_fun_j_240 = fun a_j_14 -> (
        var_j_237 = a_j_14;
        int_j_238 = 0;
        m_bl_i_290 = var_j_237 ~ int;
        m_br_i_291 = int_j_238 ~ int;
        m_b_i_292 = m_bl_i_290 and m_br_i_291;
        binop_j_239 = m_b_i_292 ? (
                c_binop_i_293 = var_j_237 < int_j_238
            ) : (
                ab_i_294 = abort
            ));
    var_j_241 = candidate_b_52;
    appl_j_242 = flatten_fun_j_240 var_j_241;
    if_j_246 = appl_j_242 ? (
            var_j_243 = candidate_b_52
        ) : (
            bool_j_244 = false;
            assume_j_245 = assume bool_j_244
        ));
record_j_248 = {checker = flatten_fun_j_220, generator = flatten_fun_j_247};
proj_j_249 = record_j_248.checker;
appl_j_252 = test f_b_60;
appl_j_253 = proj_j_249 appl_j_252;
check_res_b_61 = appl_j_253;
if_j_261 = check_res_b_61 ? (
        var_j_255 = test
    ) : (
        error_var_j_256 = check_res_b_61;
        assert_pred_j_257 = error_var_j_256;
        assert_res_j_258 = assert_pred_j_257 ? (
                assert_res_true_j_259 = {}
            ) : (
                ab_j_260 = abort
            )
    );
i_result = if_j_261