i_first = {};
g_j_271 = fun f -> (
    g_j_270 = fun x -> (
        flatten_fun_j_267 = fun f_b_2 -> (
            flatten_fun_j_63 = fun expr_b_46 -> (
                bool_j_24 = false;
                fail_b_41 = bool_j_24;
                flatten_fun_j_33 = fun expr_b_40 -> (
                    var_j_25 = expr_b_40;
                    m_match_bool_j_27 = var_j_25 ~ any;
                    m_match_bool_j_30 = var_j_25 ~ int;
                    m_match_cond_j_31 = m_match_bool_j_30 ? (
                            bool_j_32 = true
                        ) : (
                            m_match_cond_j_28 = m_match_bool_j_27 ? (
                                    var_j_29 = fail_b_41
                                ) : (
                                    void_j_26 = {}
                                )
                        ));
                flatten_fun_j_35 = fun bj_null_j_11 -> (
                    input_j_34 = input);
                flatten_fun_j_37 = fun expr_b_42 -> (
                    var_j_36 = expr_b_42);
                record_j_38 = {checker = flatten_fun_j_33, generator = flatten_fun_j_35, wrapper = flatten_fun_j_37};
                proj_j_39 = record_j_38.generator;
                int_j_40 = 0;
                appl_j_41 = proj_j_39 int_j_40;
                arg_assert_b_47 = appl_j_41;
                var_j_42 = expr_b_46;
                var_j_43 = arg_assert_b_47;
                appl_j_44 = var_j_42 var_j_43;
                fun_ret_b_48 = appl_j_44;
                bool_j_45 = false;
                fail_b_44 = bool_j_45;
                flatten_fun_j_54 = fun expr_b_43 -> (
                    var_j_46 = expr_b_43;
                    m_match_bool_j_48 = var_j_46 ~ any;
                    m_match_bool_j_51 = var_j_46 ~ int;
                    m_match_cond_j_52 = m_match_bool_j_51 ? (
                            bool_j_53 = true
                        ) : (
                            m_match_cond_j_49 = m_match_bool_j_48 ? (
                                    var_j_50 = fail_b_44
                                ) : (
                                    void_j_47 = {}
                                )
                        ));
                flatten_fun_j_56 = fun bj_null_j_12 -> (
                    input_j_55 = input);
                flatten_fun_j_58 = fun expr_b_45 -> (
                    var_j_57 = expr_b_45);
                record_j_59 = {checker = flatten_fun_j_54, generator = flatten_fun_j_56, wrapper = flatten_fun_j_58};
                proj_j_60 = record_j_59.checker;
                var_j_61 = fun_ret_b_48;
                appl_j_62 = proj_j_60 var_j_61);
            flatten_fun_j_108 = fun bj_null_j_15 -> (
                flatten_fun_j_107 = fun arg_assume_b_38 -> (
                    bool_j_64 = false;
                    fail_b_33 = bool_j_64;
                    flatten_fun_j_73 = fun expr_b_32 -> (
                        var_j_65 = expr_b_32;
                        m_match_bool_j_67 = var_j_65 ~ any;
                        m_match_bool_j_70 = var_j_65 ~ int;
                        m_match_cond_j_71 = m_match_bool_j_70 ? (
                                bool_j_72 = true
                            ) : (
                                m_match_cond_j_68 = m_match_bool_j_67 ? (
                                        var_j_69 = fail_b_33
                                    ) : (
                                        void_j_66 = {}
                                    )
                            ));
                    flatten_fun_j_75 = fun bj_null_j_13 -> (
                        input_j_74 = input);
                    flatten_fun_j_77 = fun expr_b_34 -> (
                        var_j_76 = expr_b_34);
                    record_j_78 = {checker = flatten_fun_j_73, generator = flatten_fun_j_75, wrapper = flatten_fun_j_77};
                    proj_j_79 = record_j_78.checker;
                    var_j_80 = arg_assume_b_38;
                    appl_j_81 = proj_j_79 var_j_80;
                    if_j_106 = appl_j_81 ? (
                            bool_j_82 = false;
                            fail_b_36 = bool_j_82;
                            flatten_fun_j_91 = fun expr_b_35 -> (
                                var_j_83 = expr_b_35;
                                m_match_bool_j_85 = var_j_83 ~ any;
                                m_match_bool_j_88 = var_j_83 ~ int;
                                m_match_cond_j_89 = m_match_bool_j_88 ? (
                                        bool_j_90 = true
                                    ) : (
                                        m_match_cond_j_86 = m_match_bool_j_85 ? (
                                                var_j_87 = fail_b_36
                                            ) : (
                                                void_j_84 = {}
                                            )
                                    ));
                            flatten_fun_j_93 = fun bj_null_j_14 -> (
                                input_j_92 = input);
                            flatten_fun_j_95 = fun expr_b_37 -> (
                                var_j_94 = expr_b_37);
                            record_j_96 = {checker = flatten_fun_j_91, generator = flatten_fun_j_93, wrapper = flatten_fun_j_95};
                            proj_j_97 = record_j_96.generator;
                            int_j_98 = 0;
                            appl_j_99 = proj_j_97 int_j_98
                        ) : (
                            bool_j_100 = false;
                            fail_b_39 = bool_j_100;
                            var_j_101 = fail_b_39;
                            assert_pred_j_102 = var_j_101;
                            assert_res_j_103 = assert_pred_j_102 ? (
                                    assert_res_true_j_104 = {}
                                ) : (
                                    ab_j_105 = abort
                                )
                        )));
            flatten_fun_j_154 = fun expr_b_55 -> (
                flatten_fun_j_153 = fun arg_b_56 -> (
                    bool_j_109 = false;
                    fail_b_50 = bool_j_109;
                    flatten_fun_j_118 = fun expr_b_49 -> (
                        var_j_110 = expr_b_49;
                        m_match_bool_j_112 = var_j_110 ~ any;
                        m_match_bool_j_115 = var_j_110 ~ int;
                        m_match_cond_j_116 = m_match_bool_j_115 ? (
                                bool_j_117 = true
                            ) : (
                                m_match_cond_j_113 = m_match_bool_j_112 ? (
                                        var_j_114 = fail_b_50
                                    ) : (
                                        void_j_111 = {}
                                    )
                            ));
                    flatten_fun_j_120 = fun bj_null_j_16 -> (
                        input_j_119 = input);
                    flatten_fun_j_122 = fun expr_b_51 -> (
                        var_j_121 = expr_b_51);
                    record_j_123 = {checker = flatten_fun_j_118, generator = flatten_fun_j_120, wrapper = flatten_fun_j_122};
                    proj_j_124 = record_j_123.checker;
                    var_j_125 = arg_b_56;
                    m_i_504 = proj_j_124 ~ fun;
                    appl_j_126 = m_i_504 ? (
                            c_appl_i_505 = proj_j_124 var_j_125
                        ) : (
                            ab_i_506 = abort
                        );
                    m_i_507 = appl_j_126 ~ bool;
                    if_j_152 = m_i_507 ? (
                            c_cond_i_514 = appl_j_126 ? (
                                    bool_j_127 = false;
                                    fail_b_53 = bool_j_127;
                                    flatten_fun_j_136 = fun expr_b_52 -> (
                                        var_j_128 = expr_b_52;
                                        m_match_bool_j_130 = var_j_128 ~ any;
                                        m_match_bool_j_133 = var_j_128 ~ int;
                                        m_match_cond_j_134 = m_match_bool_j_133 ? (
                                                bool_j_135 = true
                                            ) : (
                                                m_match_cond_j_131 = m_match_bool_j_130 ? (
                                                        var_j_132 = fail_b_53
                                                    ) : (
                                                        void_j_129 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_138 = fun bj_null_j_17 -> (
                                        input_j_137 = input);
                                    flatten_fun_j_140 = fun expr_b_54 -> (
                                        var_j_139 = expr_b_54);
                                    record_j_141 = {checker = flatten_fun_j_136, generator = flatten_fun_j_138, wrapper = flatten_fun_j_140};
                                    proj_j_142 = record_j_141.wrapper;
                                    var_j_143 = expr_b_55;
                                    var_j_144 = arg_b_56;
                                    m_i_508 = var_j_143 ~ fun;
                                    appl_j_145 = m_i_508 ? (
                                            c_appl_i_509 = var_j_143 var_j_144
                                        ) : (
                                            ab_i_510 = abort
                                        );
                                    m_i_511 = proj_j_142 ~ fun;
                                    appl_j_146 = m_i_511 ? (
                                            c_appl_i_512 = proj_j_142 appl_j_145
                                        ) : (
                                            ab_i_513 = abort
                                        )
                                ) : (
                                    bool_j_147 = false;
                                    assert_pred_j_148 = bool_j_147;
                                    assert_res_j_149 = assert_pred_j_148 ? (
                                            assert_res_true_j_150 = {}
                                        ) : (
                                            ab_j_151 = abort
                                        )
                                )
                        ) : (
                            ab_i_515 = abort
                        )));
            record_j_155 = {checker = flatten_fun_j_63, generator = flatten_fun_j_108, wrapper = flatten_fun_j_154};
            proj_j_156 = record_j_155.checker;
            var_j_157 = f_b_2;
            appl_j_158 = proj_j_156 var_j_157;
            arg_check_b_3 = appl_j_158;
            var_j_159 = arg_check_b_3;
            if_j_266 = var_j_159 ? (
                    flatten_fun_j_258 = fun x_b_0 -> (
                        bool_j_160 = false;
                        fail_b_58 = bool_j_160;
                        flatten_fun_j_169 = fun expr_b_57 -> (
                            var_j_161 = expr_b_57;
                            m_match_bool_j_163 = var_j_161 ~ any;
                            m_match_bool_j_166 = var_j_161 ~ int;
                            m_match_cond_j_167 = m_match_bool_j_166 ? (
                                    bool_j_168 = true
                                ) : (
                                    m_match_cond_j_164 = m_match_bool_j_163 ? (
                                            var_j_165 = fail_b_58
                                        ) : (
                                            void_j_162 = {}
                                        )
                                ));
                        flatten_fun_j_171 = fun bj_null_j_18 -> (
                            input_j_170 = input);
                        flatten_fun_j_173 = fun expr_b_59 -> (
                            var_j_172 = expr_b_59);
                        record_j_174 = {checker = flatten_fun_j_169, generator = flatten_fun_j_171, wrapper = flatten_fun_j_173};
                        proj_j_175 = record_j_174.checker;
                        var_j_176 = x_b_0;
                        appl_j_177 = proj_j_175 var_j_176;
                        arg_check_b_1 = appl_j_177;
                        var_j_178 = arg_check_b_1;
                        if_j_257 = var_j_178 ? (
                                flatten_fun_j_210 = fun expr_b_67 -> (
                                    bool_j_179 = false;
                                    fail_b_65 = bool_j_179;
                                    flatten_fun_j_188 = fun expr_b_64 -> (
                                        var_j_180 = expr_b_64;
                                        m_match_bool_j_182 = var_j_180 ~ any;
                                        m_match_bool_j_185 = var_j_180 ~ int;
                                        m_match_cond_j_186 = m_match_bool_j_185 ? (
                                                bool_j_187 = true
                                            ) : (
                                                m_match_cond_j_183 = m_match_bool_j_182 ? (
                                                        var_j_184 = fail_b_65
                                                    ) : (
                                                        void_j_181 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_190 = fun bj_null_j_19 -> (
                                        input_j_189 = input);
                                    flatten_fun_j_192 = fun expr_b_66 -> (
                                        var_j_191 = expr_b_66);
                                    record_j_193 = {checker = flatten_fun_j_188, generator = flatten_fun_j_190, wrapper = flatten_fun_j_192};
                                    proj_j_194 = record_j_193.checker;
                                    var_j_195 = expr_b_67;
                                    appl_j_196 = proj_j_194 var_j_195;
                                    t_check_b_68 = appl_j_196;
                                    var_j_197 = t_check_b_68;
                                    if_j_209 = var_j_197 ? (
                                            bool_j_198 = false;
                                            pred_check_b_69 = bool_j_198;
                                            flatten_fun_j_202 = fun n_j_20 -> (
                                                int_j_199 = 0;
                                                var_j_200 = n_j_20;
                                                m_bl_i_516 = int_j_199 ~ int;
                                                m_br_i_517 = var_j_200 ~ int;
                                                m_b_i_518 = m_bl_i_516 and m_br_i_517;
                                                binop_j_201 = m_b_i_518 ? (
                                                        c_binop_i_519 = int_j_199 < var_j_200
                                                    ) : (
                                                        ab_i_520 = abort
                                                    ));
                                            var_j_203 = expr_b_67;
                                            appl_j_204 = flatten_fun_j_202 var_j_203;
                                            if_j_207 = appl_j_204 ? (
                                                    bool_j_205 = true
                                                ) : (
                                                    var_j_206 = pred_check_b_69
                                                )
                                        ) : (
                                            var_j_208 = t_check_b_68
                                        ));
                                flatten_fun_j_239 = fun bj_null_j_23 -> (
                                    bool_j_211 = false;
                                    fail_b_61 = bool_j_211;
                                    flatten_fun_j_220 = fun expr_b_60 -> (
                                        var_j_212 = expr_b_60;
                                        m_match_bool_j_214 = var_j_212 ~ any;
                                        m_match_bool_j_217 = var_j_212 ~ int;
                                        m_match_cond_j_218 = m_match_bool_j_217 ? (
                                                bool_j_219 = true
                                            ) : (
                                                m_match_cond_j_215 = m_match_bool_j_214 ? (
                                                        var_j_216 = fail_b_61
                                                    ) : (
                                                        void_j_213 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_222 = fun bj_null_j_21 -> (
                                        input_j_221 = input);
                                    flatten_fun_j_224 = fun expr_b_62 -> (
                                        var_j_223 = expr_b_62);
                                    record_j_225 = {checker = flatten_fun_j_220, generator = flatten_fun_j_222, wrapper = flatten_fun_j_224};
                                    proj_j_226 = record_j_225.generator;
                                    int_j_227 = 0;
                                    appl_j_228 = proj_j_226 int_j_227;
                                    candidate_b_63 = appl_j_228;
                                    flatten_fun_j_232 = fun n_j_22 -> (
                                        int_j_229 = 0;
                                        var_j_230 = n_j_22;
                                        m_bl_i_521 = int_j_229 ~ int;
                                        m_br_i_522 = var_j_230 ~ int;
                                        m_b_i_523 = m_bl_i_521 and m_br_i_522;
                                        binop_j_231 = m_b_i_523 ? (
                                                c_binop_i_524 = int_j_229 < var_j_230
                                            ) : (
                                                ab_i_525 = abort
                                            ));
                                    var_j_233 = candidate_b_63;
                                    appl_j_234 = flatten_fun_j_232 var_j_233;
                                    if_j_238 = appl_j_234 ? (
                                            var_j_235 = candidate_b_63
                                        ) : (
                                            bool_j_236 = false;
                                            assume_j_237 = assume bool_j_236
                                        ));
                                flatten_fun_j_241 = fun expr_b_70 -> (
                                    var_j_240 = expr_b_70);
                                record_j_242 = {checker = flatten_fun_j_210, generator = flatten_fun_j_239, wrapper = flatten_fun_j_241};
                                proj_j_243 = record_j_242.wrapper;
                                var_j_244 = f;
                                var_j_245 = x;
                                m_i_526 = var_j_244 ~ fun;
                                appl_j_246 = m_i_526 ? (
                                        c_appl_i_527 = var_j_244 var_j_245
                                    ) : (
                                        ab_i_528 = abort
                                    );
                                var_j_247 = f;
                                var_j_248 = x;
                                m_i_529 = var_j_247 ~ fun;
                                appl_j_249 = m_i_529 ? (
                                        c_appl_i_530 = var_j_247 var_j_248
                                    ) : (
                                        ab_i_531 = abort
                                    );
                                m_bl_i_532 = appl_j_246 ~ int;
                                m_br_i_533 = appl_j_249 ~ int;
                                m_b_i_534 = m_bl_i_532 and m_br_i_533;
                                binop_j_250 = m_b_i_534 ? (
                                        c_binop_i_535 = appl_j_246 * appl_j_249
                                    ) : (
                                        ab_i_536 = abort
                                    );
                                m_i_537 = proj_j_243 ~ fun;
                                appl_j_251 = m_i_537 ? (
                                        c_appl_i_538 = proj_j_243 binop_j_250
                                    ) : (
                                        ab_i_539 = abort
                                    )
                            ) : (
                                var_j_252 = arg_check_b_1;
                                assert_pred_j_253 = var_j_252;
                                assert_res_j_254 = assert_pred_j_253 ? (
                                        assert_res_true_j_255 = {}
                                    ) : (
                                        ab_j_256 = abort
                                    )
                            ));
                    var_j_259 = x;
                    appl_j_260 = flatten_fun_j_258 var_j_259
                ) : (
                    var_j_261 = arg_check_b_3;
                    assert_pred_j_262 = var_j_261;
                    assert_res_j_263 = assert_pred_j_262 ? (
                            assert_res_true_j_264 = {}
                        ) : (
                            ab_j_265 = abort
                        )
                ));
        var_j_268 = f;
        appl_j_269 = flatten_fun_j_267 var_j_268));
g = g_j_271;
flatten_fun_j_311 = fun expr_b_18 -> (
    bool_j_272 = false;
    fail_b_13 = bool_j_272;
    flatten_fun_j_281 = fun expr_b_12 -> (
        var_j_273 = expr_b_12;
        m_match_bool_j_275 = var_j_273 ~ any;
        m_match_bool_j_278 = var_j_273 ~ int;
        m_match_cond_j_279 = m_match_bool_j_278 ? (
                bool_j_280 = true
            ) : (
                m_match_cond_j_276 = m_match_bool_j_275 ? (
                        var_j_277 = fail_b_13
                    ) : (
                        void_j_274 = {}
                    )
            ));
    flatten_fun_j_283 = fun bj_null -> (
        input_j_282 = input);
    flatten_fun_j_285 = fun expr_b_14 -> (
        var_j_284 = expr_b_14);
    record_j_286 = {checker = flatten_fun_j_281, generator = flatten_fun_j_283, wrapper = flatten_fun_j_285};
    proj_j_287 = record_j_286.generator;
    int_j_288 = 0;
    appl_j_289 = proj_j_287 int_j_288;
    arg_assert_b_19 = appl_j_289;
    var_j_290 = expr_b_18;
    var_j_291 = arg_assert_b_19;
    appl_j_292 = var_j_290 var_j_291;
    fun_ret_b_20 = appl_j_292;
    bool_j_293 = false;
    fail_b_16 = bool_j_293;
    flatten_fun_j_302 = fun expr_b_15 -> (
        var_j_294 = expr_b_15;
        m_match_bool_j_296 = var_j_294 ~ any;
        m_match_bool_j_299 = var_j_294 ~ int;
        m_match_cond_j_300 = m_match_bool_j_299 ? (
                bool_j_301 = true
            ) : (
                m_match_cond_j_297 = m_match_bool_j_296 ? (
                        var_j_298 = fail_b_16
                    ) : (
                        void_j_295 = {}
                    )
            ));
    flatten_fun_j_304 = fun bj_null_j_0 -> (
        input_j_303 = input);
    flatten_fun_j_306 = fun expr_b_17 -> (
        var_j_305 = expr_b_17);
    record_j_307 = {checker = flatten_fun_j_302, generator = flatten_fun_j_304, wrapper = flatten_fun_j_306};
    proj_j_308 = record_j_307.checker;
    var_j_309 = fun_ret_b_20;
    appl_j_310 = proj_j_308 var_j_309);
flatten_fun_j_356 = fun bj_null_j_3 -> (
    flatten_fun_j_355 = fun arg_assume_b_10 -> (
        bool_j_312 = false;
        fail_b_5 = bool_j_312;
        flatten_fun_j_321 = fun expr_b_4 -> (
            var_j_313 = expr_b_4;
            m_match_bool_j_315 = var_j_313 ~ any;
            m_match_bool_j_318 = var_j_313 ~ int;
            m_match_cond_j_319 = m_match_bool_j_318 ? (
                    bool_j_320 = true
                ) : (
                    m_match_cond_j_316 = m_match_bool_j_315 ? (
                            var_j_317 = fail_b_5
                        ) : (
                            void_j_314 = {}
                        )
                ));
        flatten_fun_j_323 = fun bj_null_j_1 -> (
            input_j_322 = input);
        flatten_fun_j_325 = fun expr_b_6 -> (
            var_j_324 = expr_b_6);
        record_j_326 = {checker = flatten_fun_j_321, generator = flatten_fun_j_323, wrapper = flatten_fun_j_325};
        proj_j_327 = record_j_326.checker;
        var_j_328 = arg_assume_b_10;
        appl_j_329 = proj_j_327 var_j_328;
        if_j_354 = appl_j_329 ? (
                bool_j_330 = false;
                fail_b_8 = bool_j_330;
                flatten_fun_j_339 = fun expr_b_7 -> (
                    var_j_331 = expr_b_7;
                    m_match_bool_j_333 = var_j_331 ~ any;
                    m_match_bool_j_336 = var_j_331 ~ int;
                    m_match_cond_j_337 = m_match_bool_j_336 ? (
                            bool_j_338 = true
                        ) : (
                            m_match_cond_j_334 = m_match_bool_j_333 ? (
                                    var_j_335 = fail_b_8
                                ) : (
                                    void_j_332 = {}
                                )
                        ));
                flatten_fun_j_341 = fun bj_null_j_2 -> (
                    input_j_340 = input);
                flatten_fun_j_343 = fun expr_b_9 -> (
                    var_j_342 = expr_b_9);
                record_j_344 = {checker = flatten_fun_j_339, generator = flatten_fun_j_341, wrapper = flatten_fun_j_343};
                proj_j_345 = record_j_344.generator;
                int_j_346 = 0;
                appl_j_347 = proj_j_345 int_j_346
            ) : (
                bool_j_348 = false;
                fail_b_11 = bool_j_348;
                var_j_349 = fail_b_11;
                assert_pred_j_350 = var_j_349;
                assert_res_j_351 = assert_pred_j_350 ? (
                        assert_res_true_j_352 = {}
                    ) : (
                        ab_j_353 = abort
                    )
            )));
flatten_fun_j_402 = fun expr_b_27 -> (
    flatten_fun_j_401 = fun arg_b_28 -> (
        bool_j_357 = false;
        fail_b_22 = bool_j_357;
        flatten_fun_j_366 = fun expr_b_21 -> (
            var_j_358 = expr_b_21;
            m_match_bool_j_360 = var_j_358 ~ any;
            m_match_bool_j_363 = var_j_358 ~ int;
            m_match_cond_j_364 = m_match_bool_j_363 ? (
                    bool_j_365 = true
                ) : (
                    m_match_cond_j_361 = m_match_bool_j_360 ? (
                            var_j_362 = fail_b_22
                        ) : (
                            void_j_359 = {}
                        )
                ));
        flatten_fun_j_368 = fun bj_null_j_4 -> (
            input_j_367 = input);
        flatten_fun_j_370 = fun expr_b_23 -> (
            var_j_369 = expr_b_23);
        record_j_371 = {checker = flatten_fun_j_366, generator = flatten_fun_j_368, wrapper = flatten_fun_j_370};
        proj_j_372 = record_j_371.checker;
        var_j_373 = arg_b_28;
        m_i_540 = proj_j_372 ~ fun;
        appl_j_374 = m_i_540 ? (
                c_appl_i_541 = proj_j_372 var_j_373
            ) : (
                ab_i_542 = abort
            );
        m_i_543 = appl_j_374 ~ bool;
        if_j_400 = m_i_543 ? (
                c_cond_i_550 = appl_j_374 ? (
                        bool_j_375 = false;
                        fail_b_25 = bool_j_375;
                        flatten_fun_j_384 = fun expr_b_24 -> (
                            var_j_376 = expr_b_24;
                            m_match_bool_j_378 = var_j_376 ~ any;
                            m_match_bool_j_381 = var_j_376 ~ int;
                            m_match_cond_j_382 = m_match_bool_j_381 ? (
                                    bool_j_383 = true
                                ) : (
                                    m_match_cond_j_379 = m_match_bool_j_378 ? (
                                            var_j_380 = fail_b_25
                                        ) : (
                                            void_j_377 = {}
                                        )
                                ));
                        flatten_fun_j_386 = fun bj_null_j_5 -> (
                            input_j_385 = input);
                        flatten_fun_j_388 = fun expr_b_26 -> (
                            var_j_387 = expr_b_26);
                        record_j_389 = {checker = flatten_fun_j_384, generator = flatten_fun_j_386, wrapper = flatten_fun_j_388};
                        proj_j_390 = record_j_389.wrapper;
                        var_j_391 = expr_b_27;
                        var_j_392 = arg_b_28;
                        m_i_544 = var_j_391 ~ fun;
                        appl_j_393 = m_i_544 ? (
                                c_appl_i_545 = var_j_391 var_j_392
                            ) : (
                                ab_i_546 = abort
                            );
                        m_i_547 = proj_j_390 ~ fun;
                        appl_j_394 = m_i_547 ? (
                                c_appl_i_548 = proj_j_390 appl_j_393
                            ) : (
                                ab_i_549 = abort
                            )
                    ) : (
                        bool_j_395 = false;
                        assert_pred_j_396 = bool_j_395;
                        assert_res_j_397 = assert_pred_j_396 ? (
                                assert_res_true_j_398 = {}
                            ) : (
                                ab_j_399 = abort
                            )
                    )
            ) : (
                ab_i_551 = abort
            )));
record_j_403 = {checker = flatten_fun_j_311, generator = flatten_fun_j_356, wrapper = flatten_fun_j_402};
proj_j_404 = record_j_403.generator;
int_j_405 = 0;
appl_j_406 = proj_j_404 int_j_405;
f_b_83 = appl_j_406;
bool_j_407 = false;
fail_b_30 = bool_j_407;
flatten_fun_j_416 = fun expr_b_29 -> (
    var_j_408 = expr_b_29;
    m_match_bool_j_410 = var_j_408 ~ any;
    m_match_bool_j_413 = var_j_408 ~ int;
    m_match_cond_j_414 = m_match_bool_j_413 ? (
            bool_j_415 = true
        ) : (
            m_match_cond_j_411 = m_match_bool_j_410 ? (
                    var_j_412 = fail_b_30
                ) : (
                    void_j_409 = {}
                )
        ));
flatten_fun_j_418 = fun bj_null_j_6 -> (
    input_j_417 = input);
flatten_fun_j_420 = fun expr_b_31 -> (
    var_j_419 = expr_b_31);
record_j_421 = {checker = flatten_fun_j_416, generator = flatten_fun_j_418, wrapper = flatten_fun_j_420};
proj_j_422 = record_j_421.generator;
int_j_423 = 0;
appl_j_424 = proj_j_422 int_j_423;
x_b_82 = appl_j_424;
flatten_fun_j_456 = fun expr_b_78 -> (
    bool_j_425 = false;
    fail_b_76 = bool_j_425;
    flatten_fun_j_434 = fun expr_b_75 -> (
        var_j_426 = expr_b_75;
        m_match_bool_j_428 = var_j_426 ~ any;
        m_match_bool_j_431 = var_j_426 ~ int;
        m_match_cond_j_432 = m_match_bool_j_431 ? (
                bool_j_433 = true
            ) : (
                m_match_cond_j_429 = m_match_bool_j_428 ? (
                        var_j_430 = fail_b_76
                    ) : (
                        void_j_427 = {}
                    )
            ));
    flatten_fun_j_436 = fun bj_null_j_7 -> (
        input_j_435 = input);
    flatten_fun_j_438 = fun expr_b_77 -> (
        var_j_437 = expr_b_77);
    record_j_439 = {checker = flatten_fun_j_434, generator = flatten_fun_j_436, wrapper = flatten_fun_j_438};
    proj_j_440 = record_j_439.checker;
    var_j_441 = expr_b_78;
    appl_j_442 = proj_j_440 var_j_441;
    t_check_b_79 = appl_j_442;
    var_j_443 = t_check_b_79;
    if_j_455 = var_j_443 ? (
            bool_j_444 = false;
            pred_check_b_80 = bool_j_444;
            flatten_fun_j_448 = fun n -> (
                int_j_445 = 0;
                var_j_446 = n;
                m_bl_i_552 = int_j_445 ~ int;
                m_br_i_553 = var_j_446 ~ int;
                m_b_i_554 = m_bl_i_552 and m_br_i_553;
                binop_j_447 = m_b_i_554 ? (
                        c_binop_i_555 = int_j_445 < var_j_446
                    ) : (
                        ab_i_556 = abort
                    ));
            var_j_449 = expr_b_78;
            appl_j_450 = flatten_fun_j_448 var_j_449;
            if_j_453 = appl_j_450 ? (
                    bool_j_451 = true
                ) : (
                    var_j_452 = pred_check_b_80
                )
        ) : (
            var_j_454 = t_check_b_79
        ));
flatten_fun_j_485 = fun bj_null_j_10 -> (
    bool_j_457 = false;
    fail_b_72 = bool_j_457;
    flatten_fun_j_466 = fun expr_b_71 -> (
        var_j_458 = expr_b_71;
        m_match_bool_j_460 = var_j_458 ~ any;
        m_match_bool_j_463 = var_j_458 ~ int;
        m_match_cond_j_464 = m_match_bool_j_463 ? (
                bool_j_465 = true
            ) : (
                m_match_cond_j_461 = m_match_bool_j_460 ? (
                        var_j_462 = fail_b_72
                    ) : (
                        void_j_459 = {}
                    )
            ));
    flatten_fun_j_468 = fun bj_null_j_8 -> (
        input_j_467 = input);
    flatten_fun_j_470 = fun expr_b_73 -> (
        var_j_469 = expr_b_73);
    record_j_471 = {checker = flatten_fun_j_466, generator = flatten_fun_j_468, wrapper = flatten_fun_j_470};
    proj_j_472 = record_j_471.generator;
    int_j_473 = 0;
    appl_j_474 = proj_j_472 int_j_473;
    candidate_b_74 = appl_j_474;
    flatten_fun_j_478 = fun n_j_9 -> (
        int_j_475 = 0;
        var_j_476 = n_j_9;
        m_bl_i_557 = int_j_475 ~ int;
        m_br_i_558 = var_j_476 ~ int;
        m_b_i_559 = m_bl_i_557 and m_br_i_558;
        binop_j_477 = m_b_i_559 ? (
                c_binop_i_560 = int_j_475 < var_j_476
            ) : (
                ab_i_561 = abort
            ));
    var_j_479 = candidate_b_74;
    appl_j_480 = flatten_fun_j_478 var_j_479;
    if_j_484 = appl_j_480 ? (
            var_j_481 = candidate_b_74
        ) : (
            bool_j_482 = false;
            assume_j_483 = assume bool_j_482
        ));
flatten_fun_j_487 = fun expr_b_81 -> (
    var_j_486 = expr_b_81);
record_j_488 = {checker = flatten_fun_j_456, generator = flatten_fun_j_485, wrapper = flatten_fun_j_487};
proj_j_489 = record_j_488.checker;
appl_j_492 = g f_b_83;
appl_j_494 = appl_j_492 x_b_82;
appl_j_495 = proj_j_489 appl_j_494;
check_res_b_84 = appl_j_495;
if_j_503 = check_res_b_84 ? (
        var_j_497 = g
    ) : (
        error_var_j_498 = check_res_b_84;
        assert_pred_j_499 = error_var_j_498;
        assert_res_j_500 = assert_pred_j_499 ? (
                assert_res_true_j_501 = {}
            ) : (
                ab_j_502 = abort
            )
    );
i_result = if_j_503