i_first = {};
access_record_j_22 = fun r -> (
    var_j_7 = r;
    proj_j_8 = var_j_7.bj_decl_lbls;
    m_match_bool_j_10 = proj_j_8 ~ any;
    m_match_bool_j_17 = proj_j_8 ~ {b, _};
    m_match_cond_j_18 = m_match_bool_j_17 ? (
            var_j_19 = r;
            proj_j_20 = var_j_19.bj_actual_rec;
            proj_j_21 = proj_j_20.b
        ) : (
            m_match_cond_j_11 = m_match_bool_j_10 ? (
                    bool_j_12 = false;
                    assert_pred_j_13 = bool_j_12;
                    assert_res_j_14 = assert_pred_j_13 ? (
                            assert_res_true_j_15 = {}
                        ) : (
                            ab_j_16 = abort
                        )
                ) : (
                    void_j_9 = {}
                )
        ));
access_record = access_record_j_22;
flatten_fun_j_86 = fun expr_b_11 -> (
    bool_j_23 = false;
    rec_fail_b_10 = bool_j_23;
    bool_j_24 = false;
    rec_fail_b_9 = bool_j_24;
    bool_j_25 = false;
    rec_fail_b_8 = bool_j_25;
    var_j_26 = expr_b_11;
    m_match_bool_j_28 = var_j_26 ~ any;
    m_match_bool_j_31 = var_j_26 ~ {bj_actual_rec, _};
    m_match_cond_j_32 = m_match_bool_j_31 ? (
            var_j_33 = expr_b_11;
            proj_j_34 = var_j_33.bj_decl_lbls;
            m_match_bool_j_36 = proj_j_34 ~ any;
            m_match_bool_j_39 = proj_j_34 ~ {a, b, _};
            m_match_cond_j_40 = m_match_bool_j_39 ? (
                    a_j_2 = proj_j_34.a;
                    b_j_1 = proj_j_34.b;
                    var_j_41 = expr_b_11;
                    proj_j_42 = var_j_41.bj_actual_rec;
                    m_match_bool_j_44 = proj_j_42 ~ any;
                    m_match_bool_j_47 = proj_j_42 ~ {a, b, _};
                    m_match_cond_j_48 = m_match_bool_j_47 ? (
                            a = proj_j_42.a;
                            b = proj_j_42.b;
                            bool_j_49 = false;
                            fail_b_17 = bool_j_49;
                            flatten_fun_j_58 = fun expr_b_16 -> (
                                var_j_50 = expr_b_16;
                                m_match_bool_j_52 = var_j_50 ~ any;
                                m_match_bool_j_55 = var_j_50 ~ int;
                                m_match_cond_j_56 = m_match_bool_j_55 ? (
                                        bool_j_57 = true
                                    ) : (
                                        m_match_cond_j_53 = m_match_bool_j_52 ? (
                                                var_j_54 = fail_b_17
                                            ) : (
                                                void_j_51 = {}
                                            )
                                    ));
                            flatten_fun_j_60 = fun bj_null -> (
                                input_j_59 = input);
                            record_j_61 = {checker = flatten_fun_j_58, generator = flatten_fun_j_60};
                            proj_j_62 = record_j_61.checker;
                            var_j_63 = a;
                            appl_j_64 = proj_j_62 var_j_63;
                            lbl_check_b_15 = appl_j_64;
                            var_j_65 = lbl_check_b_15;
                            if_j_85 = var_j_65 ? (
                                    bool_j_66 = false;
                                    fail_b_13 = bool_j_66;
                                    flatten_fun_j_75 = fun expr_b_12 -> (
                                        var_j_67 = expr_b_12;
                                        m_match_bool_j_69 = var_j_67 ~ any;
                                        m_match_bool_j_72 = var_j_67 ~ bool;
                                        m_match_cond_j_73 = m_match_bool_j_72 ? (
                                                bool_j_74 = true
                                            ) : (
                                                m_match_cond_j_70 = m_match_bool_j_69 ? (
                                                        var_j_71 = fail_b_13
                                                    ) : (
                                                        void_j_68 = {}
                                                    )
                                            ));
                                    flatten_fun_j_79 = fun bj_null_j_0 -> (
                                        int_j_76 = 0;
                                        input_j_77 = input;
                                        m_bl_i_159 = int_j_76 ~ int;
                                        m_br_i_160 = input_j_77 ~ int;
                                        m_b_i_161 = m_bl_i_159 and m_br_i_160;
                                        binop_j_78 = m_b_i_161 ? (
                                                c_binop_i_162 = int_j_76 <= input_j_77
                                            ) : (
                                                ab_i_163 = abort
                                            ));
                                    record_j_80 = {checker = flatten_fun_j_75, generator = flatten_fun_j_79};
                                    proj_j_81 = record_j_80.checker;
                                    var_j_82 = b;
                                    appl_j_83 = proj_j_81 var_j_82
                                ) : (
                                    var_j_84 = lbl_check_b_15
                                )
                        ) : (
                            m_match_cond_j_45 = m_match_bool_j_44 ? (
                                    var_j_46 = rec_fail_b_8
                                ) : (
                                    void_j_43 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_37 = m_match_bool_j_36 ? (
                            var_j_38 = rec_fail_b_9
                        ) : (
                            void_j_35 = {}
                        )
                )
        ) : (
            m_match_cond_j_29 = m_match_bool_j_28 ? (
                    var_j_30 = rec_fail_b_10
                ) : (
                    void_j_27 = {}
                )
        ));
flatten_fun_j_128 = fun bj_null_j_5 -> (
    bool_j_87 = false;
    fail_b_6 = bool_j_87;
    flatten_fun_j_96 = fun expr_b_5 -> (
        var_j_88 = expr_b_5;
        m_match_bool_j_90 = var_j_88 ~ any;
        m_match_bool_j_93 = var_j_88 ~ bool;
        m_match_cond_j_94 = m_match_bool_j_93 ? (
                bool_j_95 = true
            ) : (
                m_match_cond_j_91 = m_match_bool_j_90 ? (
                        var_j_92 = fail_b_6
                    ) : (
                        void_j_89 = {}
                    )
            ));
    flatten_fun_j_100 = fun bj_null_j_3 -> (
        int_j_97 = 0;
        input_j_98 = input;
        m_bl_i_164 = int_j_97 ~ int;
        m_br_i_165 = input_j_98 ~ int;
        m_b_i_166 = m_bl_i_164 and m_br_i_165;
        binop_j_99 = m_b_i_166 ? (
                c_binop_i_167 = int_j_97 <= input_j_98
            ) : (
                ab_i_168 = abort
            ));
    record_j_101 = {checker = flatten_fun_j_96, generator = flatten_fun_j_100};
    proj_j_102 = record_j_101.generator;
    int_j_103 = 0;
    appl_j_104 = proj_j_102 int_j_103;
    b_b_1 = appl_j_104;
    bool_j_105 = false;
    fail_b_3 = bool_j_105;
    flatten_fun_j_114 = fun expr_b_2 -> (
        var_j_106 = expr_b_2;
        m_match_bool_j_108 = var_j_106 ~ any;
        m_match_bool_j_111 = var_j_106 ~ int;
        m_match_cond_j_112 = m_match_bool_j_111 ? (
                bool_j_113 = true
            ) : (
                m_match_cond_j_109 = m_match_bool_j_108 ? (
                        var_j_110 = fail_b_3
                    ) : (
                        void_j_107 = {}
                    )
            ));
    flatten_fun_j_116 = fun bj_null_j_4 -> (
        input_j_115 = input);
    record_j_117 = {checker = flatten_fun_j_114, generator = flatten_fun_j_116};
    proj_j_118 = record_j_117.generator;
    int_j_119 = 0;
    appl_j_120 = proj_j_118 int_j_119;
    a_b_0 = appl_j_120;
    var_j_121 = a_b_0;
    var_j_122 = b_b_1;
    record_j_123 = {a = var_j_121, b = var_j_122};
    record_j_124 = {};
    record_j_125 = {};
    record_j_126 = {a = record_j_124, b = record_j_125};
    record_j_127 = {bj_actual_rec = record_j_123, bj_decl_lbls = record_j_126});
record_j_129 = {checker = flatten_fun_j_86, generator = flatten_fun_j_128};
proj_j_130 = record_j_129.generator;
int_j_131 = 0;
appl_j_132 = proj_j_130 int_j_131;
r_b_23 = appl_j_132;
bool_j_133 = false;
fail_b_21 = bool_j_133;
flatten_fun_j_142 = fun expr_b_20 -> (
    var_j_134 = expr_b_20;
    m_match_bool_j_136 = var_j_134 ~ any;
    m_match_bool_j_139 = var_j_134 ~ int;
    m_match_cond_j_140 = m_match_bool_j_139 ? (
            bool_j_141 = true
        ) : (
            m_match_cond_j_137 = m_match_bool_j_136 ? (
                    var_j_138 = fail_b_21
                ) : (
                    void_j_135 = {}
                )
        ));
flatten_fun_j_144 = fun bj_null_j_6 -> (
    input_j_143 = input);
record_j_145 = {checker = flatten_fun_j_142, generator = flatten_fun_j_144};
proj_j_146 = record_j_145.checker;
appl_j_149 = access_record r_b_23;
appl_j_150 = proj_j_146 appl_j_149;
check_res_b_24 = appl_j_150;
if_j_158 = check_res_b_24 ? (
        var_j_152 = access_record
    ) : (
        error_var_j_153 = check_res_b_24;
        assert_pred_j_154 = error_var_j_153;
        assert_res_j_155 = assert_pred_j_154 ? (
                assert_res_true_j_156 = {}
            ) : (
                ab_j_157 = abort
            )
    );
i_result = if_j_158