bool_j_0 = false;
fail_b_1 = bool_j_0;
flatten_fun_j_9 = fun expr_b_0 -> (
    var_j_1 = expr_b_0;
    m_match_bool_j_3 = var_j_1 ~ any;
    m_match_bool_j_6 = var_j_1 ~ int;
    m_match_cond_j_7 = m_match_bool_j_6 ? (
            bool_j_8 = true
        ) : (
            m_match_cond_j_4 = m_match_bool_j_3 ? (
                    var_j_5 = fail_b_1
                ) : (
                    void_j_2 = {}
                )
        ));
flatten_fun_j_11 = fun bj_null -> (
    input_j_10 = input);
flatten_fun_j_13 = fun expr_b_2 -> (
    var_j_12 = expr_b_2);
record_j_14 = {checker = flatten_fun_j_9, generator = flatten_fun_j_11, wrapper = flatten_fun_j_13};
i_result = record_j_14