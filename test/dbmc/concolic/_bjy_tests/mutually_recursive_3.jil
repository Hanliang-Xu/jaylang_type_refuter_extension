i_first = {};
flatten_fun_j_86 = fun f_j_0 -> (
    flatten_fun_j_85 = fun g_j_1 -> (
        flatten_fun_j_84 = fun x -> (
            var_j_17 = f_j_0;
            var_j_18 = f_j_0;
            appl_j_19 = var_j_17 var_j_18;
            var_j_20 = g_j_1;
            appl_j_21 = appl_j_19 var_j_20;
            f = appl_j_21;
            var_j_22 = g_j_1;
            var_j_23 = f_j_0;
            appl_j_24 = var_j_22 var_j_23;
            var_j_25 = g_j_1;
            appl_j_26 = appl_j_24 var_j_25;
            g = appl_j_26;
            flatten_fun_j_81 = fun x_b_0 -> (
                bool_j_27 = false;
                fail_b_8 = bool_j_27;
                flatten_fun_j_36 = fun expr_b_7 -> (
                    var_j_28 = expr_b_7;
                    m_match_bool_j_30 = var_j_28 ~ any;
                    m_match_bool_j_33 = var_j_28 ~ int;
                    m_match_cond_j_34 = m_match_bool_j_33 ? (
                            bool_j_35 = true
                        ) : (
                            m_match_cond_j_31 = m_match_bool_j_30 ? (
                                    var_j_32 = fail_b_8
                                ) : (
                                    void_j_29 = {}
                                )
                        ));
                flatten_fun_j_38 = fun bj_null -> (
                    input_j_37 = input);
                flatten_fun_j_40 = fun expr_b_9 -> (
                    var_j_39 = expr_b_9);
                record_j_41 = {checker = flatten_fun_j_36, generator = flatten_fun_j_38, wrapper = flatten_fun_j_40};
                proj_j_42 = record_j_41.checker;
                var_j_43 = x_b_0;
                appl_j_44 = proj_j_42 var_j_43;
                arg_check_b_1 = appl_j_44;
                var_j_45 = arg_check_b_1;
                if_j_80 = var_j_45 ? (
                        bool_j_46 = false;
                        fail_b_11 = bool_j_46;
                        flatten_fun_j_55 = fun expr_b_10 -> (
                            var_j_47 = expr_b_10;
                            m_match_bool_j_49 = var_j_47 ~ any;
                            m_match_bool_j_52 = var_j_47 ~ int;
                            m_match_cond_j_53 = m_match_bool_j_52 ? (
                                    bool_j_54 = true
                                ) : (
                                    m_match_cond_j_50 = m_match_bool_j_49 ? (
                                            var_j_51 = fail_b_11
                                        ) : (
                                            void_j_48 = {}
                                        )
                                ));
                        flatten_fun_j_57 = fun bj_null_j_2 -> (
                            input_j_56 = input);
                        flatten_fun_j_59 = fun expr_b_12 -> (
                            var_j_58 = expr_b_12);
                        record_j_60 = {checker = flatten_fun_j_55, generator = flatten_fun_j_57, wrapper = flatten_fun_j_59};
                        proj_j_61 = record_j_60.wrapper;
                        var_j_62 = x;
                        int_j_63 = 0;
                        m_bl_i_258 = var_j_62 ~ int;
                        m_br_i_259 = int_j_63 ~ int;
                        m_b_i_260 = m_bl_i_258 and m_br_i_259;
                        binop_j_64 = m_b_i_260 ? (
                                c_binop_i_261 = var_j_62 == int_j_63
                            ) : (
                                ab_i_262 = abort
                            );
                        m_i_263 = binop_j_64 ~ bool;
                        if_j_73 = m_i_263 ? (
                                c_cond_i_277 = binop_j_64 ? (
                                        int_j_65 = 0
                                    ) : (
                                        int_j_66 = 0;
                                        var_j_67 = g;
                                        var_j_68 = x;
                                        int_j_69 = 1;
                                        m_bl_i_264 = var_j_68 ~ int;
                                        m_br_i_265 = int_j_69 ~ int;
                                        m_b_i_266 = m_bl_i_264 and m_br_i_265;
                                        binop_j_70 = m_b_i_266 ? (
                                                c_binop_i_267 = var_j_68 - int_j_69
                                            ) : (
                                                ab_i_268 = abort
                                            );
                                        m_i_269 = var_j_67 ~ fun;
                                        appl_j_71 = m_i_269 ? (
                                                c_appl_i_270 = var_j_67 binop_j_70
                                            ) : (
                                                ab_i_271 = abort
                                            );
                                        m_bl_i_272 = int_j_66 ~ int;
                                        m_br_i_273 = appl_j_71 ~ int;
                                        m_b_i_274 = m_bl_i_272 and m_br_i_273;
                                        binop_j_72 = m_b_i_274 ? (
                                                c_binop_i_275 = int_j_66 < appl_j_71
                                            ) : (
                                                ab_i_276 = abort
                                            )
                                    )
                            ) : (
                                ab_i_278 = abort
                            );
                        m_i_279 = proj_j_61 ~ fun;
                        appl_j_74 = m_i_279 ? (
                                c_appl_i_280 = proj_j_61 if_j_73
                            ) : (
                                ab_i_281 = abort
                            )
                    ) : (
                        var_j_75 = arg_check_b_1;
                        assert_pred_j_76 = var_j_75;
                        assert_res_j_77 = assert_pred_j_76 ? (
                                assert_res_true_j_78 = {}
                            ) : (
                                ab_j_79 = abort
                            )
                    ));
            var_j_82 = x;
            appl_j_83 = flatten_fun_j_81 var_j_82)));
flatten_fun_j_154 = fun f_j_0_j_8 -> (
    flatten_fun_j_153 = fun g_j_1_j_7 -> (
        flatten_fun_j_152 = fun y -> (
            var_j_87 = f_j_0_j_8;
            var_j_88 = f_j_0_j_8;
            appl_j_89 = var_j_87 var_j_88;
            var_j_90 = g_j_1_j_7;
            appl_j_91 = appl_j_89 var_j_90;
            f_j_6 = appl_j_91;
            var_j_92 = g_j_1_j_7;
            var_j_93 = f_j_0_j_8;
            appl_j_94 = var_j_92 var_j_93;
            var_j_95 = g_j_1_j_7;
            appl_j_96 = appl_j_94 var_j_95;
            g_j_5 = appl_j_96;
            flatten_fun_j_149 = fun y_b_2 -> (
                bool_j_97 = false;
                fail_b_20 = bool_j_97;
                flatten_fun_j_106 = fun expr_b_19 -> (
                    var_j_98 = expr_b_19;
                    m_match_bool_j_100 = var_j_98 ~ any;
                    m_match_bool_j_103 = var_j_98 ~ int;
                    m_match_cond_j_104 = m_match_bool_j_103 ? (
                            bool_j_105 = true
                        ) : (
                            m_match_cond_j_101 = m_match_bool_j_100 ? (
                                    var_j_102 = fail_b_20
                                ) : (
                                    void_j_99 = {}
                                )
                        ));
                flatten_fun_j_108 = fun bj_null_j_3 -> (
                    input_j_107 = input);
                flatten_fun_j_110 = fun expr_b_21 -> (
                    var_j_109 = expr_b_21);
                record_j_111 = {checker = flatten_fun_j_106, generator = flatten_fun_j_108, wrapper = flatten_fun_j_110};
                proj_j_112 = record_j_111.checker;
                var_j_113 = y_b_2;
                appl_j_114 = proj_j_112 var_j_113;
                arg_check_b_3 = appl_j_114;
                var_j_115 = arg_check_b_3;
                if_j_148 = var_j_115 ? (
                        bool_j_116 = false;
                        fail_b_23 = bool_j_116;
                        flatten_fun_j_125 = fun expr_b_22 -> (
                            var_j_117 = expr_b_22;
                            m_match_bool_j_119 = var_j_117 ~ any;
                            m_match_bool_j_122 = var_j_117 ~ int;
                            m_match_cond_j_123 = m_match_bool_j_122 ? (
                                    bool_j_124 = true
                                ) : (
                                    m_match_cond_j_120 = m_match_bool_j_119 ? (
                                            var_j_121 = fail_b_23
                                        ) : (
                                            void_j_118 = {}
                                        )
                                ));
                        flatten_fun_j_127 = fun bj_null_j_4 -> (
                            input_j_126 = input);
                        flatten_fun_j_129 = fun expr_b_24 -> (
                            var_j_128 = expr_b_24);
                        record_j_130 = {checker = flatten_fun_j_125, generator = flatten_fun_j_127, wrapper = flatten_fun_j_129};
                        proj_j_131 = record_j_130.wrapper;
                        var_j_132 = y;
                        int_j_133 = 0;
                        m_bl_i_282 = var_j_132 ~ int;
                        m_br_i_283 = int_j_133 ~ int;
                        m_b_i_284 = m_bl_i_282 and m_br_i_283;
                        binop_j_134 = m_b_i_284 ? (
                                c_binop_i_285 = var_j_132 < int_j_133
                            ) : (
                                ab_i_286 = abort
                            );
                        m_i_287 = binop_j_134 ~ bool;
                        if_j_141 = m_i_287 ? (
                                c_cond_i_296 = binop_j_134 ? (
                                        bool_j_135 = false
                                    ) : (
                                        var_j_136 = f_j_6;
                                        var_j_137 = y;
                                        int_j_138 = 1;
                                        m_bl_i_288 = var_j_137 ~ int;
                                        m_br_i_289 = int_j_138 ~ int;
                                        m_b_i_290 = m_bl_i_288 and m_br_i_289;
                                        binop_j_139 = m_b_i_290 ? (
                                                c_binop_i_291 = var_j_137 - int_j_138
                                            ) : (
                                                ab_i_292 = abort
                                            );
                                        m_i_293 = var_j_136 ~ fun;
                                        appl_j_140 = m_i_293 ? (
                                                c_appl_i_294 = var_j_136 binop_j_139
                                            ) : (
                                                ab_i_295 = abort
                                            )
                                    )
                            ) : (
                                ab_i_297 = abort
                            );
                        m_i_298 = proj_j_131 ~ fun;
                        appl_j_142 = m_i_298 ? (
                                c_appl_i_299 = proj_j_131 if_j_141
                            ) : (
                                ab_i_300 = abort
                            )
                    ) : (
                        var_j_143 = arg_check_b_3;
                        assert_pred_j_144 = var_j_143;
                        assert_res_j_145 = assert_pred_j_144 ? (
                                assert_res_true_j_146 = {}
                            ) : (
                                ab_j_147 = abort
                            )
                    ));
            var_j_150 = y;
            appl_j_151 = flatten_fun_j_149 var_j_150)));
appl_j_157 = flatten_fun_j_86 flatten_fun_j_86;
appl_j_159 = appl_j_157 flatten_fun_j_154;
appl_j_162 = flatten_fun_j_154 flatten_fun_j_86;
appl_j_164 = appl_j_162 flatten_fun_j_154;
bool_j_165 = false;
fail_b_5 = bool_j_165;
flatten_fun_j_174 = fun expr_b_4 -> (
    var_j_166 = expr_b_4;
    m_match_bool_j_168 = var_j_166 ~ any;
    m_match_bool_j_171 = var_j_166 ~ int;
    m_match_cond_j_172 = m_match_bool_j_171 ? (
            bool_j_173 = true
        ) : (
            m_match_cond_j_169 = m_match_bool_j_168 ? (
                    var_j_170 = fail_b_5
                ) : (
                    void_j_167 = {}
                )
        ));
flatten_fun_j_176 = fun bj_null_j_9 -> (
    input_j_175 = input);
flatten_fun_j_178 = fun expr_b_6 -> (
    var_j_177 = expr_b_6);
record_j_179 = {checker = flatten_fun_j_174, generator = flatten_fun_j_176, wrapper = flatten_fun_j_178};
proj_j_180 = record_j_179.generator;
int_j_181 = 0;
appl_j_182 = proj_j_180 int_j_181;
x_b_31 = appl_j_182;
bool_j_183 = false;
fail_b_14 = bool_j_183;
flatten_fun_j_192 = fun expr_b_13 -> (
    var_j_184 = expr_b_13;
    m_match_bool_j_186 = var_j_184 ~ any;
    m_match_bool_j_189 = var_j_184 ~ int;
    m_match_cond_j_190 = m_match_bool_j_189 ? (
            bool_j_191 = true
        ) : (
            m_match_cond_j_187 = m_match_bool_j_186 ? (
                    var_j_188 = fail_b_14
                ) : (
                    void_j_185 = {}
                )
        ));
flatten_fun_j_194 = fun bj_null_j_10 -> (
    input_j_193 = input);
flatten_fun_j_196 = fun expr_b_15 -> (
    var_j_195 = expr_b_15);
record_j_197 = {checker = flatten_fun_j_192, generator = flatten_fun_j_194, wrapper = flatten_fun_j_196};
proj_j_198 = record_j_197.checker;
appl_j_201 = appl_j_159 x_b_31;
appl_j_202 = proj_j_198 appl_j_201;
check_res_b_30 = appl_j_202;
if_j_257 = check_res_b_30 ? (
        bool_j_204 = false;
        fail_b_17 = bool_j_204;
        flatten_fun_j_213 = fun expr_b_16 -> (
            var_j_205 = expr_b_16;
            m_match_bool_j_207 = var_j_205 ~ any;
            m_match_bool_j_210 = var_j_205 ~ int;
            m_match_cond_j_211 = m_match_bool_j_210 ? (
                    bool_j_212 = true
                ) : (
                    m_match_cond_j_208 = m_match_bool_j_207 ? (
                            var_j_209 = fail_b_17
                        ) : (
                            void_j_206 = {}
                        )
                ));
        flatten_fun_j_215 = fun bj_null_j_11 -> (
            input_j_214 = input);
        flatten_fun_j_217 = fun expr_b_18 -> (
            var_j_216 = expr_b_18);
        record_j_218 = {checker = flatten_fun_j_213, generator = flatten_fun_j_215, wrapper = flatten_fun_j_217};
        proj_j_219 = record_j_218.generator;
        int_j_220 = 0;
        appl_j_221 = proj_j_219 int_j_220;
        y_b_29 = appl_j_221;
        bool_j_222 = false;
        fail_b_26 = bool_j_222;
        flatten_fun_j_231 = fun expr_b_25 -> (
            var_j_223 = expr_b_25;
            m_match_bool_j_225 = var_j_223 ~ any;
            m_match_bool_j_228 = var_j_223 ~ int;
            m_match_cond_j_229 = m_match_bool_j_228 ? (
                    bool_j_230 = true
                ) : (
                    m_match_cond_j_226 = m_match_bool_j_225 ? (
                            var_j_227 = fail_b_26
                        ) : (
                            void_j_224 = {}
                        )
                ));
        flatten_fun_j_233 = fun bj_null_j_12 -> (
            input_j_232 = input);
        flatten_fun_j_235 = fun expr_b_27 -> (
            var_j_234 = expr_b_27);
        record_j_236 = {checker = flatten_fun_j_231, generator = flatten_fun_j_233, wrapper = flatten_fun_j_235};
        proj_j_237 = record_j_236.checker;
        var_j_238 = appl_j_164;
        var_j_239 = y_b_29;
        appl_j_240 = var_j_238 var_j_239;
        appl_j_241 = proj_j_237 appl_j_240;
        check_res_b_28 = appl_j_241;
        var_j_242 = check_res_b_28;
        if_j_251 = var_j_242 ? (
                var_j_243 = appl_j_159;
                int_j_244 = 1;
                m_i_301 = var_j_243 ~ fun;
                appl_j_245 = m_i_301 ? (
                        c_appl_i_302 = var_j_243 int_j_244
                    ) : (
                        ab_i_303 = abort
                    )
            ) : (
                error_var_j_246 = check_res_b_28;
                assert_pred_j_247 = error_var_j_246;
                assert_res_j_248 = assert_pred_j_247 ? (
                        assert_res_true_j_249 = {}
                    ) : (
                        ab_j_250 = abort
                    )
            )
    ) : (
        error_var_j_252 = check_res_b_30;
        assert_pred_j_253 = error_var_j_252;
        assert_res_j_254 = assert_pred_j_253 ? (
                assert_res_true_j_255 = {}
            ) : (
                ab_j_256 = abort
            )
    );
i_result = if_j_257