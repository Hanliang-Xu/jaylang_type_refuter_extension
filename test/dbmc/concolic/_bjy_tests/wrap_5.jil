i_first = {};
flatten_fun_j_52 = fun expr_b_14 -> (
    bool_j_13 = false;
    fail_b_9 = bool_j_13;
    flatten_fun_j_22 = fun expr_b_8 -> (
        var_j_14 = expr_b_8;
        m_match_bool_j_16 = var_j_14 ~ any;
        m_match_bool_j_19 = var_j_14 ~ int;
        m_match_cond_j_20 = m_match_bool_j_19 ? (
                bool_j_21 = true
            ) : (
                m_match_cond_j_17 = m_match_bool_j_16 ? (
                        var_j_18 = fail_b_9
                    ) : (
                        void_j_15 = {}
                    )
            ));
    flatten_fun_j_24 = fun bj_null -> (
        input_j_23 = input);
    flatten_fun_j_26 = fun expr_b_10 -> (
        var_j_25 = expr_b_10);
    record_j_27 = {checker = flatten_fun_j_22, generator = flatten_fun_j_24, wrapper = flatten_fun_j_26};
    proj_j_28 = record_j_27.generator;
    int_j_29 = 0;
    appl_j_30 = proj_j_28 int_j_29;
    arg_assert_b_15 = appl_j_30;
    var_j_31 = expr_b_14;
    var_j_32 = arg_assert_b_15;
    appl_j_33 = var_j_31 var_j_32;
    fun_ret_b_16 = appl_j_33;
    bool_j_34 = false;
    fail_b_12 = bool_j_34;
    flatten_fun_j_43 = fun expr_b_11 -> (
        var_j_35 = expr_b_11;
        m_match_bool_j_37 = var_j_35 ~ any;
        m_match_bool_j_40 = var_j_35 ~ int;
        m_match_cond_j_41 = m_match_bool_j_40 ? (
                bool_j_42 = true
            ) : (
                m_match_cond_j_38 = m_match_bool_j_37 ? (
                        var_j_39 = fail_b_12
                    ) : (
                        void_j_36 = {}
                    )
            ));
    flatten_fun_j_45 = fun bj_null_j_0 -> (
        input_j_44 = input);
    flatten_fun_j_47 = fun expr_b_13 -> (
        var_j_46 = expr_b_13);
    record_j_48 = {checker = flatten_fun_j_43, generator = flatten_fun_j_45, wrapper = flatten_fun_j_47};
    proj_j_49 = record_j_48.checker;
    var_j_50 = fun_ret_b_16;
    appl_j_51 = proj_j_49 var_j_50);
flatten_fun_j_97 = fun bj_null_j_3 -> (
    flatten_fun_j_96 = fun arg_assume_b_6 -> (
        bool_j_53 = false;
        fail_b_1 = bool_j_53;
        flatten_fun_j_62 = fun expr_b_0 -> (
            var_j_54 = expr_b_0;
            m_match_bool_j_56 = var_j_54 ~ any;
            m_match_bool_j_59 = var_j_54 ~ int;
            m_match_cond_j_60 = m_match_bool_j_59 ? (
                    bool_j_61 = true
                ) : (
                    m_match_cond_j_57 = m_match_bool_j_56 ? (
                            var_j_58 = fail_b_1
                        ) : (
                            void_j_55 = {}
                        )
                ));
        flatten_fun_j_64 = fun bj_null_j_1 -> (
            input_j_63 = input);
        flatten_fun_j_66 = fun expr_b_2 -> (
            var_j_65 = expr_b_2);
        record_j_67 = {checker = flatten_fun_j_62, generator = flatten_fun_j_64, wrapper = flatten_fun_j_66};
        proj_j_68 = record_j_67.checker;
        var_j_69 = arg_assume_b_6;
        appl_j_70 = proj_j_68 var_j_69;
        if_j_95 = appl_j_70 ? (
                bool_j_71 = false;
                fail_b_4 = bool_j_71;
                flatten_fun_j_80 = fun expr_b_3 -> (
                    var_j_72 = expr_b_3;
                    m_match_bool_j_74 = var_j_72 ~ any;
                    m_match_bool_j_77 = var_j_72 ~ int;
                    m_match_cond_j_78 = m_match_bool_j_77 ? (
                            bool_j_79 = true
                        ) : (
                            m_match_cond_j_75 = m_match_bool_j_74 ? (
                                    var_j_76 = fail_b_4
                                ) : (
                                    void_j_73 = {}
                                )
                        ));
                flatten_fun_j_82 = fun bj_null_j_2 -> (
                    input_j_81 = input);
                flatten_fun_j_84 = fun expr_b_5 -> (
                    var_j_83 = expr_b_5);
                record_j_85 = {checker = flatten_fun_j_80, generator = flatten_fun_j_82, wrapper = flatten_fun_j_84};
                proj_j_86 = record_j_85.generator;
                int_j_87 = 0;
                appl_j_88 = proj_j_86 int_j_87
            ) : (
                bool_j_89 = false;
                fail_b_7 = bool_j_89;
                var_j_90 = fail_b_7;
                assert_pred_j_91 = var_j_90;
                assert_res_j_92 = assert_pred_j_91 ? (
                        assert_res_true_j_93 = {}
                    ) : (
                        ab_j_94 = abort
                    )
            )));
flatten_fun_j_143 = fun expr_b_23 -> (
    flatten_fun_j_142 = fun arg_b_24 -> (
        bool_j_98 = false;
        fail_b_18 = bool_j_98;
        flatten_fun_j_107 = fun expr_b_17 -> (
            var_j_99 = expr_b_17;
            m_match_bool_j_101 = var_j_99 ~ any;
            m_match_bool_j_104 = var_j_99 ~ int;
            m_match_cond_j_105 = m_match_bool_j_104 ? (
                    bool_j_106 = true
                ) : (
                    m_match_cond_j_102 = m_match_bool_j_101 ? (
                            var_j_103 = fail_b_18
                        ) : (
                            void_j_100 = {}
                        )
                ));
        flatten_fun_j_109 = fun bj_null_j_4 -> (
            input_j_108 = input);
        flatten_fun_j_111 = fun expr_b_19 -> (
            var_j_110 = expr_b_19);
        record_j_112 = {checker = flatten_fun_j_107, generator = flatten_fun_j_109, wrapper = flatten_fun_j_111};
        proj_j_113 = record_j_112.checker;
        var_j_114 = arg_b_24;
        m_i_295 = proj_j_113 ~ fun;
        appl_j_115 = m_i_295 ? (
                c_appl_i_296 = proj_j_113 var_j_114
            ) : (
                ab_i_297 = abort
            );
        m_i_298 = appl_j_115 ~ bool;
        if_j_141 = m_i_298 ? (
                c_cond_i_305 = appl_j_115 ? (
                        bool_j_116 = false;
                        fail_b_21 = bool_j_116;
                        flatten_fun_j_125 = fun expr_b_20 -> (
                            var_j_117 = expr_b_20;
                            m_match_bool_j_119 = var_j_117 ~ any;
                            m_match_bool_j_122 = var_j_117 ~ int;
                            m_match_cond_j_123 = m_match_bool_j_122 ? (
                                    bool_j_124 = true
                                ) : (
                                    m_match_cond_j_120 = m_match_bool_j_119 ? (
                                            var_j_121 = fail_b_21
                                        ) : (
                                            void_j_118 = {}
                                        )
                                ));
                        flatten_fun_j_127 = fun bj_null_j_5 -> (
                            input_j_126 = input);
                        flatten_fun_j_129 = fun expr_b_22 -> (
                            var_j_128 = expr_b_22);
                        record_j_130 = {checker = flatten_fun_j_125, generator = flatten_fun_j_127, wrapper = flatten_fun_j_129};
                        proj_j_131 = record_j_130.wrapper;
                        var_j_132 = expr_b_23;
                        var_j_133 = arg_b_24;
                        m_i_299 = var_j_132 ~ fun;
                        appl_j_134 = m_i_299 ? (
                                c_appl_i_300 = var_j_132 var_j_133
                            ) : (
                                ab_i_301 = abort
                            );
                        m_i_302 = proj_j_131 ~ fun;
                        appl_j_135 = m_i_302 ? (
                                c_appl_i_303 = proj_j_131 appl_j_134
                            ) : (
                                ab_i_304 = abort
                            )
                    ) : (
                        bool_j_136 = false;
                        assert_pred_j_137 = bool_j_136;
                        assert_res_j_138 = assert_pred_j_137 ? (
                                assert_res_true_j_139 = {}
                            ) : (
                                ab_j_140 = abort
                            )
                    )
            ) : (
                ab_i_306 = abort
            )));
record_j_144 = {checker = flatten_fun_j_52, generator = flatten_fun_j_97, wrapper = flatten_fun_j_143};
proj_j_145 = record_j_144.wrapper;
flatten_fun_j_147 = fun x -> (
    var_j_146 = x);
m_i_307 = proj_j_145 ~ fun;
appl_j_148 = m_i_307 ? (
        c_appl_i_308 = proj_j_145 flatten_fun_j_147
    ) : (
        ab_i_309 = abort
    );
id_b_50 = appl_j_148;
id = id_b_50;
flatten_fun_j_189 = fun expr_b_39 -> (
    bool_j_150 = false;
    fail_b_34 = bool_j_150;
    flatten_fun_j_159 = fun expr_b_33 -> (
        var_j_151 = expr_b_33;
        m_match_bool_j_153 = var_j_151 ~ any;
        m_match_bool_j_156 = var_j_151 ~ int;
        m_match_cond_j_157 = m_match_bool_j_156 ? (
                bool_j_158 = true
            ) : (
                m_match_cond_j_154 = m_match_bool_j_153 ? (
                        var_j_155 = fail_b_34
                    ) : (
                        void_j_152 = {}
                    )
            ));
    flatten_fun_j_161 = fun bj_null_j_6 -> (
        input_j_160 = input);
    flatten_fun_j_163 = fun expr_b_35 -> (
        var_j_162 = expr_b_35);
    record_j_164 = {checker = flatten_fun_j_159, generator = flatten_fun_j_161, wrapper = flatten_fun_j_163};
    proj_j_165 = record_j_164.generator;
    int_j_166 = 0;
    appl_j_167 = proj_j_165 int_j_166;
    arg_assert_b_40 = appl_j_167;
    var_j_168 = expr_b_39;
    var_j_169 = arg_assert_b_40;
    appl_j_170 = var_j_168 var_j_169;
    fun_ret_b_41 = appl_j_170;
    bool_j_171 = false;
    fail_b_37 = bool_j_171;
    flatten_fun_j_180 = fun expr_b_36 -> (
        var_j_172 = expr_b_36;
        m_match_bool_j_174 = var_j_172 ~ any;
        m_match_bool_j_177 = var_j_172 ~ int;
        m_match_cond_j_178 = m_match_bool_j_177 ? (
                bool_j_179 = true
            ) : (
                m_match_cond_j_175 = m_match_bool_j_174 ? (
                        var_j_176 = fail_b_37
                    ) : (
                        void_j_173 = {}
                    )
            ));
    flatten_fun_j_182 = fun bj_null_j_7 -> (
        input_j_181 = input);
    flatten_fun_j_184 = fun expr_b_38 -> (
        var_j_183 = expr_b_38);
    record_j_185 = {checker = flatten_fun_j_180, generator = flatten_fun_j_182, wrapper = flatten_fun_j_184};
    proj_j_186 = record_j_185.checker;
    var_j_187 = fun_ret_b_41;
    appl_j_188 = proj_j_186 var_j_187);
flatten_fun_j_234 = fun bj_null_j_10 -> (
    flatten_fun_j_233 = fun arg_assume_b_31 -> (
        bool_j_190 = false;
        fail_b_26 = bool_j_190;
        flatten_fun_j_199 = fun expr_b_25 -> (
            var_j_191 = expr_b_25;
            m_match_bool_j_193 = var_j_191 ~ any;
            m_match_bool_j_196 = var_j_191 ~ int;
            m_match_cond_j_197 = m_match_bool_j_196 ? (
                    bool_j_198 = true
                ) : (
                    m_match_cond_j_194 = m_match_bool_j_193 ? (
                            var_j_195 = fail_b_26
                        ) : (
                            void_j_192 = {}
                        )
                ));
        flatten_fun_j_201 = fun bj_null_j_8 -> (
            input_j_200 = input);
        flatten_fun_j_203 = fun expr_b_27 -> (
            var_j_202 = expr_b_27);
        record_j_204 = {checker = flatten_fun_j_199, generator = flatten_fun_j_201, wrapper = flatten_fun_j_203};
        proj_j_205 = record_j_204.checker;
        var_j_206 = arg_assume_b_31;
        appl_j_207 = proj_j_205 var_j_206;
        if_j_232 = appl_j_207 ? (
                bool_j_208 = false;
                fail_b_29 = bool_j_208;
                flatten_fun_j_217 = fun expr_b_28 -> (
                    var_j_209 = expr_b_28;
                    m_match_bool_j_211 = var_j_209 ~ any;
                    m_match_bool_j_214 = var_j_209 ~ int;
                    m_match_cond_j_215 = m_match_bool_j_214 ? (
                            bool_j_216 = true
                        ) : (
                            m_match_cond_j_212 = m_match_bool_j_211 ? (
                                    var_j_213 = fail_b_29
                                ) : (
                                    void_j_210 = {}
                                )
                        ));
                flatten_fun_j_219 = fun bj_null_j_9 -> (
                    input_j_218 = input);
                flatten_fun_j_221 = fun expr_b_30 -> (
                    var_j_220 = expr_b_30);
                record_j_222 = {checker = flatten_fun_j_217, generator = flatten_fun_j_219, wrapper = flatten_fun_j_221};
                proj_j_223 = record_j_222.generator;
                int_j_224 = 0;
                appl_j_225 = proj_j_223 int_j_224
            ) : (
                bool_j_226 = false;
                fail_b_32 = bool_j_226;
                var_j_227 = fail_b_32;
                assert_pred_j_228 = var_j_227;
                assert_res_j_229 = assert_pred_j_228 ? (
                        assert_res_true_j_230 = {}
                    ) : (
                        ab_j_231 = abort
                    )
            )));
flatten_fun_j_280 = fun expr_b_48 -> (
    flatten_fun_j_279 = fun arg_b_49 -> (
        bool_j_235 = false;
        fail_b_43 = bool_j_235;
        flatten_fun_j_244 = fun expr_b_42 -> (
            var_j_236 = expr_b_42;
            m_match_bool_j_238 = var_j_236 ~ any;
            m_match_bool_j_241 = var_j_236 ~ int;
            m_match_cond_j_242 = m_match_bool_j_241 ? (
                    bool_j_243 = true
                ) : (
                    m_match_cond_j_239 = m_match_bool_j_238 ? (
                            var_j_240 = fail_b_43
                        ) : (
                            void_j_237 = {}
                        )
                ));
        flatten_fun_j_246 = fun bj_null_j_11 -> (
            input_j_245 = input);
        flatten_fun_j_248 = fun expr_b_44 -> (
            var_j_247 = expr_b_44);
        record_j_249 = {checker = flatten_fun_j_244, generator = flatten_fun_j_246, wrapper = flatten_fun_j_248};
        proj_j_250 = record_j_249.checker;
        var_j_251 = arg_b_49;
        m_i_310 = proj_j_250 ~ fun;
        appl_j_252 = m_i_310 ? (
                c_appl_i_311 = proj_j_250 var_j_251
            ) : (
                ab_i_312 = abort
            );
        m_i_313 = appl_j_252 ~ bool;
        if_j_278 = m_i_313 ? (
                c_cond_i_320 = appl_j_252 ? (
                        bool_j_253 = false;
                        fail_b_46 = bool_j_253;
                        flatten_fun_j_262 = fun expr_b_45 -> (
                            var_j_254 = expr_b_45;
                            m_match_bool_j_256 = var_j_254 ~ any;
                            m_match_bool_j_259 = var_j_254 ~ int;
                            m_match_cond_j_260 = m_match_bool_j_259 ? (
                                    bool_j_261 = true
                                ) : (
                                    m_match_cond_j_257 = m_match_bool_j_256 ? (
                                            var_j_258 = fail_b_46
                                        ) : (
                                            void_j_255 = {}
                                        )
                                ));
                        flatten_fun_j_264 = fun bj_null_j_12 -> (
                            input_j_263 = input);
                        flatten_fun_j_266 = fun expr_b_47 -> (
                            var_j_265 = expr_b_47);
                        record_j_267 = {checker = flatten_fun_j_262, generator = flatten_fun_j_264, wrapper = flatten_fun_j_266};
                        proj_j_268 = record_j_267.wrapper;
                        var_j_269 = expr_b_48;
                        var_j_270 = arg_b_49;
                        m_i_314 = var_j_269 ~ fun;
                        appl_j_271 = m_i_314 ? (
                                c_appl_i_315 = var_j_269 var_j_270
                            ) : (
                                ab_i_316 = abort
                            );
                        m_i_317 = proj_j_268 ~ fun;
                        appl_j_272 = m_i_317 ? (
                                c_appl_i_318 = proj_j_268 appl_j_271
                            ) : (
                                ab_i_319 = abort
                            )
                    ) : (
                        bool_j_273 = false;
                        assert_pred_j_274 = bool_j_273;
                        assert_res_j_275 = assert_pred_j_274 ? (
                                assert_res_true_j_276 = {}
                            ) : (
                                ab_j_277 = abort
                            )
                    )
            ) : (
                ab_i_321 = abort
            )));
record_j_281 = {checker = flatten_fun_j_189, generator = flatten_fun_j_234, wrapper = flatten_fun_j_280};
proj_j_282 = record_j_281.checker;
appl_j_284 = proj_j_282 id_b_50;
check_res_b_51 = appl_j_284;
if_j_294 = check_res_b_51 ? (
        var_j_286 = id;
        bool_j_287 = true;
        m_i_322 = var_j_286 ~ fun;
        appl_j_288 = m_i_322 ? (
                c_appl_i_323 = var_j_286 bool_j_287
            ) : (
                ab_i_324 = abort
            )
    ) : (
        error_var_j_289 = check_res_b_51;
        assert_pred_j_290 = error_var_j_289;
        assert_res_j_291 = assert_pred_j_290 ? (
                assert_res_true_j_292 = {}
            ) : (
                ab_j_293 = abort
            )
    );
i_result = if_j_294