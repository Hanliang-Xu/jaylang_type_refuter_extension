i_first = {};
flatten_fun_j_48 = fun all_j_2 -> (
    flatten_fun_j_47 = fun p -> (
        flatten_fun_j_46 = fun xs_j_3 -> (
            var_j_19 = all_j_2;
            var_j_20 = all_j_2;
            appl_j_21 = var_j_19 var_j_20;
            all = appl_j_21;
            bool_j_22 = false;
            fail_b_48 = bool_j_22;
            var_j_23 = xs_j_3;
            m_match_bool_j_25 = var_j_23 ~ {j_head, j_tail, _};
            m_match_bool_j_36 = var_j_23 ~ {j_empty, _};
            m_match_bool_j_39 = var_j_23 ~ {bj_untouched, _};
            m_match_cond_j_40 = m_match_bool_j_39 ? (
                    var_j_41 = fail_b_48;
                    assert_pred_j_42 = var_j_41;
                    assert_res_j_43 = assert_pred_j_42 ? (
                            assert_res_true_j_44 = {}
                        ) : (
                            ab_j_45 = abort
                        )
                ) : (
                    m_match_cond_j_37 = m_match_bool_j_36 ? (
                            bool_j_38 = true
                        ) : (
                            m_match_cond_j_26 = m_match_bool_j_25 ? (
                                    x = var_j_23.j_head;
                                    xs = var_j_23.j_tail;
                                    var_j_27 = p;
                                    var_j_28 = x;
                                    m_i_322 = var_j_27 ~ fun;
                                    appl_j_29 = m_i_322 ? (
                                            c_appl_i_323 = var_j_27 var_j_28
                                        ) : (
                                            ab_i_324 = abort
                                        );
                                    var_j_30 = all;
                                    var_j_31 = p;
                                    m_i_325 = var_j_30 ~ fun;
                                    appl_j_32 = m_i_325 ? (
                                            c_appl_i_326 = var_j_30 var_j_31
                                        ) : (
                                            ab_i_327 = abort
                                        );
                                    var_j_33 = xs;
                                    m_i_328 = appl_j_32 ~ fun;
                                    appl_j_34 = m_i_328 ? (
                                            c_appl_i_329 = appl_j_32 var_j_33
                                        ) : (
                                            ab_i_330 = abort
                                        );
                                    m_bl_i_331 = appl_j_29 ~ bool;
                                    m_br_i_332 = appl_j_34 ~ bool;
                                    m_b_i_333 = m_bl_i_331 and m_br_i_332;
                                    binop_j_35 = m_b_i_333 ? (
                                            c_binop_i_334 = appl_j_29 and appl_j_34
                                        ) : (
                                            ab_i_335 = abort
                                        )
                                ) : (
                                    ab_j_24 = abort
                                )
                        )
                ))));
appl_j_51 = flatten_fun_j_48 flatten_fun_j_48;
flatten_fun_j_105 = fun expr_b_18 -> (
    bool_j_52 = false;
    fail_b_10 = bool_j_52;
    flatten_fun_j_68 = fun expr_b_11 -> (
        var_j_53 = expr_b_11;
        m_match_bool_j_55 = var_j_53 ~ any;
        m_match_bool_j_58 = var_j_53 ~ {bj_untouched, _};
        m_match_cond_j_59 = m_match_bool_j_58 ? (
                bj_poly_var_b_12 = var_j_53.bj_untouched;
                var_j_60 = bj_poly_var_b_12;
                m_match_bool_j_62 = var_j_60 ~ any;
                m_match_bool_j_65 = var_j_60 ~ {bj_ticka, _};
                m_match_cond_j_66 = m_match_bool_j_65 ? (
                        bool_j_67 = true
                    ) : (
                        m_match_cond_j_63 = m_match_bool_j_62 ? (
                                var_j_64 = fail_b_10
                            ) : (
                                void_j_61 = {}
                            )
                    )
            ) : (
                m_match_cond_j_56 = m_match_bool_j_55 ? (
                        var_j_57 = fail_b_10
                    ) : (
                        void_j_54 = {}
                    )
            ));
    flatten_fun_j_72 = fun bj_null -> (
        record_j_69 = {};
        record_j_70 = {bj_ticka = record_j_69};
        record_j_71 = {bj_untouched = record_j_70});
    record_j_73 = {checker = flatten_fun_j_68, generator = flatten_fun_j_72};
    proj_j_74 = record_j_73.generator;
    int_j_75 = 0;
    appl_j_76 = proj_j_74 int_j_75;
    arg_assert_b_19 = appl_j_76;
    var_j_77 = expr_b_18;
    var_j_78 = arg_assert_b_19;
    appl_j_79 = var_j_77 var_j_78;
    fun_ret_b_20 = appl_j_79;
    bool_j_80 = false;
    fail_b_14 = bool_j_80;
    flatten_fun_j_96 = fun expr_b_15 -> (
        var_j_81 = expr_b_15;
        m_match_bool_j_83 = var_j_81 ~ any;
        m_match_bool_j_86 = var_j_81 ~ {bj_untouched, _};
        m_match_cond_j_87 = m_match_bool_j_86 ? (
                bj_poly_var_b_16 = var_j_81.bj_untouched;
                var_j_88 = bj_poly_var_b_16;
                m_match_bool_j_90 = var_j_88 ~ any;
                m_match_bool_j_93 = var_j_88 ~ {bj_ticka, _};
                m_match_cond_j_94 = m_match_bool_j_93 ? (
                        bool_j_95 = true
                    ) : (
                        m_match_cond_j_91 = m_match_bool_j_90 ? (
                                var_j_92 = fail_b_14
                            ) : (
                                void_j_89 = {}
                            )
                    )
            ) : (
                m_match_cond_j_84 = m_match_bool_j_83 ? (
                        var_j_85 = fail_b_14
                    ) : (
                        void_j_82 = {}
                    )
            ));
    flatten_fun_j_100 = fun bj_null_j_4 -> (
        record_j_97 = {};
        record_j_98 = {bj_ticka = record_j_97};
        record_j_99 = {bj_untouched = record_j_98});
    record_j_101 = {checker = flatten_fun_j_96, generator = flatten_fun_j_100};
    proj_j_102 = record_j_101.checker;
    var_j_103 = fun_ret_b_20;
    appl_j_104 = proj_j_102 var_j_103);
flatten_fun_j_164 = fun bj_null_j_7 -> (
    flatten_fun_j_163 = fun arg_assume_b_8 -> (
        bool_j_106 = false;
        fail_b_0 = bool_j_106;
        flatten_fun_j_122 = fun expr_b_1 -> (
            var_j_107 = expr_b_1;
            m_match_bool_j_109 = var_j_107 ~ any;
            m_match_bool_j_112 = var_j_107 ~ {bj_untouched, _};
            m_match_cond_j_113 = m_match_bool_j_112 ? (
                    bj_poly_var_b_2 = var_j_107.bj_untouched;
                    var_j_114 = bj_poly_var_b_2;
                    m_match_bool_j_116 = var_j_114 ~ any;
                    m_match_bool_j_119 = var_j_114 ~ {bj_ticka, _};
                    m_match_cond_j_120 = m_match_bool_j_119 ? (
                            bool_j_121 = true
                        ) : (
                            m_match_cond_j_117 = m_match_bool_j_116 ? (
                                    var_j_118 = fail_b_0
                                ) : (
                                    void_j_115 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_110 = m_match_bool_j_109 ? (
                            var_j_111 = fail_b_0
                        ) : (
                            void_j_108 = {}
                        )
                ));
        flatten_fun_j_126 = fun bj_null_j_5 -> (
            record_j_123 = {};
            record_j_124 = {bj_ticka = record_j_123};
            record_j_125 = {bj_untouched = record_j_124});
        record_j_127 = {checker = flatten_fun_j_122, generator = flatten_fun_j_126};
        proj_j_128 = record_j_127.checker;
        var_j_129 = arg_assume_b_8;
        appl_j_130 = proj_j_128 var_j_129;
        if_j_162 = appl_j_130 ? (
                bool_j_131 = false;
                fail_b_4 = bool_j_131;
                flatten_fun_j_147 = fun expr_b_5 -> (
                    var_j_132 = expr_b_5;
                    m_match_bool_j_134 = var_j_132 ~ any;
                    m_match_bool_j_137 = var_j_132 ~ {bj_untouched, _};
                    m_match_cond_j_138 = m_match_bool_j_137 ? (
                            bj_poly_var_b_6 = var_j_132.bj_untouched;
                            var_j_139 = bj_poly_var_b_6;
                            m_match_bool_j_141 = var_j_139 ~ any;
                            m_match_bool_j_144 = var_j_139 ~ {bj_ticka, _};
                            m_match_cond_j_145 = m_match_bool_j_144 ? (
                                    bool_j_146 = true
                                ) : (
                                    m_match_cond_j_142 = m_match_bool_j_141 ? (
                                            var_j_143 = fail_b_4
                                        ) : (
                                            void_j_140 = {}
                                        )
                                )
                        ) : (
                            m_match_cond_j_135 = m_match_bool_j_134 ? (
                                    var_j_136 = fail_b_4
                                ) : (
                                    void_j_133 = {}
                                )
                        ));
                flatten_fun_j_151 = fun bj_null_j_6 -> (
                    record_j_148 = {};
                    record_j_149 = {bj_ticka = record_j_148};
                    record_j_150 = {bj_untouched = record_j_149});
                record_j_152 = {checker = flatten_fun_j_147, generator = flatten_fun_j_151};
                proj_j_153 = record_j_152.generator;
                int_j_154 = 0;
                appl_j_155 = proj_j_153 int_j_154
            ) : (
                bool_j_156 = false;
                fail_b_9 = bool_j_156;
                var_j_157 = fail_b_9;
                assert_pred_j_158 = var_j_157;
                assert_res_j_159 = assert_pred_j_158 ? (
                        assert_res_true_j_160 = {}
                    ) : (
                        ab_j_161 = abort
                    )
            )));
record_j_165 = {checker = flatten_fun_j_105, generator = flatten_fun_j_164};
proj_j_166 = record_j_165.generator;
int_j_167 = 0;
appl_j_168 = proj_j_166 int_j_167;
p_b_54 = appl_j_168;
flatten_fun_j_229 = fun expr_b_45 -> (
    bool_j_169 = false;
    lst_fail_b_46 = bool_j_169;
    var_j_170 = expr_b_45;
    m_match_bool_j_172 = var_j_170 ~ any;
    m_match_bool_j_175 = var_j_170 ~ {j_head, j_tail, _};
    m_match_bool_j_226 = var_j_170 ~ {j_empty, _};
    m_match_cond_j_227 = m_match_bool_j_226 ? (
            bool_j_228 = true
        ) : (
            m_match_cond_j_176 = m_match_bool_j_175 ? (
                    bj_underscore = var_j_170.j_head;
                    bj_underscore2 = var_j_170.j_tail;
                    flatten_fun_j_219 = fun test_fun_b_42_j_0 -> (
                        flatten_fun_j_218 = fun test_list_b_43 -> (
                            var_j_177 = test_fun_b_42_j_0;
                            var_j_178 = test_fun_b_42_j_0;
                            appl_j_179 = var_j_177 var_j_178;
                            test_fun_b_42 = appl_j_179;
                            var_j_180 = test_list_b_43;
                            m_match_bool_j_182 = var_j_180 ~ {j_head, j_tail, _};
                            m_match_bool_j_215 = var_j_180 ~ {j_empty, _};
                            m_match_cond_j_216 = m_match_bool_j_215 ? (
                                    bool_j_217 = true
                                ) : (
                                    m_match_cond_j_183 = m_match_bool_j_182 ? (
                                            hd = var_j_180.j_head;
                                            tl = var_j_180.j_tail;
                                            bool_j_184 = false;
                                            fail_b_38 = bool_j_184;
                                            flatten_fun_j_200 = fun expr_b_39 -> (
                                                var_j_185 = expr_b_39;
                                                m_match_bool_j_187 = var_j_185 ~ any;
                                                m_match_bool_j_190 = var_j_185 ~ 
                                                    {bj_untouched, _};
                                                m_match_cond_j_191 = m_match_bool_j_190 ? (
                                                        bj_poly_var_b_40 = var_j_185.bj_untouched;
                                                        var_j_192 = bj_poly_var_b_40;
                                                        m_match_bool_j_194 = var_j_192 ~ any;
                                                        m_match_bool_j_197 = var_j_192 ~ 
                                                            {bj_ticka, _};
                                                        m_match_cond_j_198 = m_match_bool_j_197 ? (
                                                                bool_j_199 = true
                                                            ) : (
                                                                m_match_cond_j_195 = m_match_bool_j_194 ? (
                                                                        
                                                                    var_j_196 = fail_b_38
                                                                    ) : (
                                                                        
                                                                    void_j_193 = 
                                                                    {}
                                                                    )
                                                            )
                                                    ) : (
                                                        m_match_cond_j_188 = m_match_bool_j_187 ? (
                                                                var_j_189 = fail_b_38
                                                            ) : (
                                                                void_j_186 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_204 = fun bj_null_j_8 -> (
                                                record_j_201 = {};
                                                record_j_202 = {bj_ticka = record_j_201};
                                                record_j_203 = {bj_untouched = record_j_202});
                                            record_j_205 = {checker = flatten_fun_j_200, generator = flatten_fun_j_204};
                                            proj_j_206 = record_j_205.checker;
                                            var_j_207 = hd;
                                            appl_j_208 = proj_j_206 var_j_207;
                                            elm_check_b_44 = appl_j_208;
                                            var_j_209 = elm_check_b_44;
                                            if_j_214 = var_j_209 ? (
                                                    var_j_210 = test_fun_b_42;
                                                    var_j_211 = tl;
                                                    appl_j_212 = var_j_210 var_j_211
                                                ) : (
                                                    var_j_213 = elm_check_b_44
                                                )
                                        ) : (
                                            void_j_181 = {}
                                        )
                                )));
                    test_fun_b_42_j_0_j_10 = flatten_fun_j_219;
                    var_j_220 = test_fun_b_42_j_0_j_10;
                    var_j_221 = test_fun_b_42_j_0_j_10;
                    appl_j_222 = var_j_220 var_j_221;
                    test_fun_b_42_j_9 = appl_j_222;
                    var_j_223 = test_fun_b_42_j_9;
                    var_j_224 = expr_b_45;
                    appl_j_225 = var_j_223 var_j_224
                ) : (
                    m_match_cond_j_173 = m_match_bool_j_172 ? (
                            var_j_174 = lst_fail_b_46
                        ) : (
                            void_j_171 = {}
                        )
                )
        ));
flatten_fun_j_287 = fun bj_null_j_15 -> (
    flatten_fun_j_273 = fun list_maker_b_36_j_1 -> (
        flatten_fun_j_272 = fun len_b_35 -> (
            var_j_230 = list_maker_b_36_j_1;
            var_j_231 = list_maker_b_36_j_1;
            appl_j_232 = var_j_230 var_j_231;
            list_maker_b_36 = appl_j_232;
            var_j_233 = len_b_35;
            int_j_234 = 0;
            binop_j_235 = var_j_233 == int_j_234;
            if_j_271 = binop_j_235 ? (
                    record_j_236 = {};
                    record_j_237 = {j_empty = record_j_236}
                ) : (
                    bool_j_238 = false;
                    fail_b_31 = bool_j_238;
                    flatten_fun_j_254 = fun expr_b_32 -> (
                        var_j_239 = expr_b_32;
                        m_match_bool_j_241 = var_j_239 ~ any;
                        m_match_bool_j_244 = var_j_239 ~ {bj_untouched, _};
                        m_match_cond_j_245 = m_match_bool_j_244 ? (
                                bj_poly_var_b_33 = var_j_239.bj_untouched;
                                var_j_246 = bj_poly_var_b_33;
                                m_match_bool_j_248 = var_j_246 ~ any;
                                m_match_bool_j_251 = var_j_246 ~ {bj_ticka, _};
                                m_match_cond_j_252 = m_match_bool_j_251 ? (
                                        bool_j_253 = true
                                    ) : (
                                        m_match_cond_j_249 = m_match_bool_j_248 ? (
                                                var_j_250 = fail_b_31
                                            ) : (
                                                void_j_247 = {}
                                            )
                                    )
                            ) : (
                                m_match_cond_j_242 = m_match_bool_j_241 ? (
                                        var_j_243 = fail_b_31
                                    ) : (
                                        void_j_240 = {}
                                    )
                            ));
                    flatten_fun_j_258 = fun bj_null_j_11 -> (
                        record_j_255 = {};
                        record_j_256 = {bj_ticka = record_j_255};
                        record_j_257 = {bj_untouched = record_j_256});
                    record_j_259 = {checker = flatten_fun_j_254, generator = flatten_fun_j_258};
                    proj_j_260 = record_j_259.generator;
                    int_j_261 = 0;
                    appl_j_262 = proj_j_260 int_j_261;
                    elm_b_37 = appl_j_262;
                    record_j_263 = {};
                    var_j_264 = elm_b_37;
                    var_j_265 = list_maker_b_36;
                    var_j_266 = len_b_35;
                    int_j_267 = 1;
                    binop_j_268 = var_j_266 - int_j_267;
                    appl_j_269 = var_j_265 binop_j_268;
                    record_j_270 = {j_cons = record_j_263, j_head = var_j_264, j_tail = appl_j_269}
                )));
    list_maker_b_36_j_1_j_14 = flatten_fun_j_273;
    var_j_274 = list_maker_b_36_j_1_j_14;
    var_j_275 = list_maker_b_36_j_1_j_14;
    appl_j_276 = var_j_274 var_j_275;
    list_maker_b_36_j_13 = appl_j_276;
    input_j_277 = input;
    len_b_35_j_12 = input_j_277;
    int_j_278 = 0;
    var_j_279 = len_b_35_j_12;
    binop_j_280 = int_j_278 <= var_j_279;
    if_j_286 = binop_j_280 ? (
            var_j_281 = list_maker_b_36_j_13;
            var_j_282 = len_b_35_j_12;
            appl_j_283 = var_j_281 var_j_282
        ) : (
            bool_j_284 = false;
            assume_j_285 = assume bool_j_284
        ));
record_j_288 = {checker = flatten_fun_j_229, generator = flatten_fun_j_287};
proj_j_289 = record_j_288.generator;
int_j_290 = 0;
appl_j_291 = proj_j_289 int_j_290;
xs_b_53 = appl_j_291;
bool_j_292 = false;
fail_b_50 = bool_j_292;
flatten_fun_j_301 = fun expr_b_49 -> (
    var_j_293 = expr_b_49;
    m_match_bool_j_295 = var_j_293 ~ any;
    m_match_bool_j_298 = var_j_293 ~ bool;
    m_match_cond_j_299 = m_match_bool_j_298 ? (
            bool_j_300 = true
        ) : (
            m_match_cond_j_296 = m_match_bool_j_295 ? (
                    var_j_297 = fail_b_50
                ) : (
                    void_j_294 = {}
                )
        ));
flatten_fun_j_305 = fun bj_null_j_16 -> (
    int_j_302 = 0;
    input_j_303 = input;
    m_bl_i_336 = int_j_302 ~ int;
    m_br_i_337 = input_j_303 ~ int;
    m_b_i_338 = m_bl_i_336 and m_br_i_337;
    binop_j_304 = m_b_i_338 ? (
            c_binop_i_339 = int_j_302 <= input_j_303
        ) : (
            ab_i_340 = abort
        ));
record_j_306 = {checker = flatten_fun_j_301, generator = flatten_fun_j_305};
proj_j_307 = record_j_306.checker;
appl_j_310 = appl_j_51 p_b_54;
appl_j_312 = appl_j_310 xs_b_53;
appl_j_313 = proj_j_307 appl_j_312;
check_res_b_52 = appl_j_313;
if_j_321 = check_res_b_52 ? (
        var_j_315 = appl_j_51
    ) : (
        error_var_j_316 = check_res_b_52;
        assert_pred_j_317 = error_var_j_316;
        assert_res_j_318 = assert_pred_j_317 ? (
                assert_res_true_j_319 = {}
            ) : (
                ab_j_320 = abort
            )
    );
i_result = if_j_321