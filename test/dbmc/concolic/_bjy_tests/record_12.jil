i_first = {};
flatten_fun_j_131 = fun expr_b_20 -> (
    bool_j_13 = false;
    rec_fail_b_19 = bool_j_13;
    bool_j_14 = false;
    rec_fail_b_18 = bool_j_14;
    bool_j_15 = false;
    rec_fail_b_17 = bool_j_15;
    var_j_16 = expr_b_20;
    m_match_bool_j_18 = var_j_16 ~ any;
    m_match_bool_j_21 = var_j_16 ~ {bj_actual_rec, _};
    m_match_cond_j_22 = m_match_bool_j_21 ? (
            var_j_23 = expr_b_20;
            proj_j_24 = var_j_23.bj_decl_lbls;
            m_match_bool_j_26 = proj_j_24 ~ any;
            m_match_bool_j_29 = proj_j_24 ~ {item, left, _};
            m_match_cond_j_30 = m_match_bool_j_29 ? (
                    item_j_5 = proj_j_24.item;
                    left_j_4 = proj_j_24.left;
                    var_j_31 = expr_b_20;
                    proj_j_32 = var_j_31.bj_actual_rec;
                    m_match_bool_j_34 = proj_j_32 ~ any;
                    m_match_bool_j_37 = proj_j_32 ~ {item, left, _};
                    m_match_cond_j_38 = m_match_bool_j_37 ? (
                            item = proj_j_32.item;
                            left = proj_j_32.left;
                            bool_j_39 = false;
                            fail_b_35 = bool_j_39;
                            flatten_fun_j_48 = fun expr_b_34 -> (
                                var_j_40 = expr_b_34;
                                m_match_bool_j_42 = var_j_40 ~ any;
                                m_match_bool_j_45 = var_j_40 ~ int;
                                m_match_cond_j_46 = m_match_bool_j_45 ? (
                                        bool_j_47 = true
                                    ) : (
                                        m_match_cond_j_43 = m_match_bool_j_42 ? (
                                                var_j_44 = fail_b_35
                                            ) : (
                                                void_j_41 = {}
                                            )
                                    ));
                            flatten_fun_j_50 = fun bj_null -> (
                                input_j_49 = input);
                            record_j_51 = {checker = flatten_fun_j_48, generator = flatten_fun_j_50};
                            proj_j_52 = record_j_51.checker;
                            var_j_53 = item;
                            appl_j_54 = proj_j_52 var_j_53;
                            lbl_check_b_33 = appl_j_54;
                            var_j_55 = lbl_check_b_33;
                            if_j_130 = var_j_55 ? (
                                    flatten_fun_j_100 = fun expr_b_28 -> (
                                        bool_j_56 = false;
                                        rec_fail_b_27 = bool_j_56;
                                        bool_j_57 = false;
                                        rec_fail_b_26 = bool_j_57;
                                        bool_j_58 = false;
                                        rec_fail_b_25 = bool_j_58;
                                        var_j_59 = expr_b_28;
                                        m_match_bool_j_61 = var_j_59 ~ any;
                                        m_match_bool_j_64 = var_j_59 ~ 
                                            {bj_actual_rec, _};
                                        m_match_cond_j_65 = m_match_bool_j_64 ? (
                                                var_j_66 = expr_b_28;
                                                proj_j_67 = var_j_66.bj_decl_lbls;
                                                m_match_bool_j_69 = proj_j_67 ~ any;
                                                m_match_bool_j_72 = proj_j_67 ~ 
                                                    {leaf, _};
                                                m_match_cond_j_73 = m_match_bool_j_72 ? (
                                                        leaf_j_1 = proj_j_67.leaf;
                                                        var_j_74 = expr_b_28;
                                                        proj_j_75 = var_j_74.bj_actual_rec;
                                                        m_match_bool_j_77 = proj_j_75 ~ any;
                                                        m_match_bool_j_80 = proj_j_75 ~ 
                                                            {leaf, _};
                                                        m_match_cond_j_81 = m_match_bool_j_80 ? (
                                                                leaf = proj_j_75.leaf;
                                                                bool_j_82 = false;
                                                                fail_b_30 = bool_j_82;
                                                                flatten_fun_j_91 = fun expr_b_29 -> (
                                                                    var_j_83 = expr_b_29;
                                                                    m_match_bool_j_85 = var_j_83 ~ any;
                                                                    m_match_bool_j_88 = var_j_83 ~ bool;
                                                                    m_match_cond_j_89 = m_match_bool_j_88 ? (
                                                                        bool_j_90 = true
                                                                    ) : (
                                                                        m_match_cond_j_86 = m_match_bool_j_85 ? (
                                                                        var_j_87 = fail_b_30
                                                                    ) : (
                                                                        void_j_84 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_95 = fun bj_null_j_0 -> (
                                                                    int_j_92 = 0;
                                                                    input_j_93 = input;
                                                                    m_bl_i_254 = int_j_92 ~ int;
                                                                    m_br_i_255 = input_j_93 ~ int;
                                                                    m_b_i_256 = m_bl_i_254 and m_br_i_255;
                                                                    binop_j_94 = m_b_i_256 ? (
                                                                        c_binop_i_257 = int_j_92 <= input_j_93
                                                                    ) : (
                                                                        ab_i_258 = abort
                                                                    ));
                                                                record_j_96 = 
                                                                    {checker = flatten_fun_j_91, generator = flatten_fun_j_95};
                                                                proj_j_97 = record_j_96.checker;
                                                                var_j_98 = leaf;
                                                                appl_j_99 = proj_j_97 var_j_98
                                                            ) : (
                                                                m_match_cond_j_78 = m_match_bool_j_77 ? (
                                                                        
                                                                    var_j_79 = rec_fail_b_25
                                                                    ) : (
                                                                        
                                                                    void_j_76 = 
                                                                    {}
                                                                    )
                                                            )
                                                    ) : (
                                                        m_match_cond_j_70 = m_match_bool_j_69 ? (
                                                                var_j_71 = rec_fail_b_26
                                                            ) : (
                                                                void_j_68 = 
                                                                    {}
                                                            )
                                                    )
                                            ) : (
                                                m_match_cond_j_62 = m_match_bool_j_61 ? (
                                                        var_j_63 = rec_fail_b_27
                                                    ) : (
                                                        void_j_60 = {}
                                                    )
                                            ));
                                    flatten_fun_j_124 = fun bj_null_j_3 -> (
                                        bool_j_101 = false;
                                        fail_b_23 = bool_j_101;
                                        flatten_fun_j_110 = fun expr_b_22 -> (
                                            var_j_102 = expr_b_22;
                                            m_match_bool_j_104 = var_j_102 ~ any;
                                            m_match_bool_j_107 = var_j_102 ~ bool;
                                            m_match_cond_j_108 = m_match_bool_j_107 ? (
                                                    bool_j_109 = true
                                                ) : (
                                                    m_match_cond_j_105 = m_match_bool_j_104 ? (
                                                            var_j_106 = fail_b_23
                                                        ) : (
                                                            void_j_103 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_114 = fun bj_null_j_2 -> (
                                            int_j_111 = 0;
                                            input_j_112 = input;
                                            m_bl_i_259 = int_j_111 ~ int;
                                            m_br_i_260 = input_j_112 ~ int;
                                            m_b_i_261 = m_bl_i_259 and m_br_i_260;
                                            binop_j_113 = m_b_i_261 ? (
                                                    c_binop_i_262 = int_j_111 <= input_j_112
                                                ) : (
                                                    ab_i_263 = abort
                                                ));
                                        record_j_115 = {checker = flatten_fun_j_110, generator = flatten_fun_j_114};
                                        proj_j_116 = record_j_115.generator;
                                        int_j_117 = 0;
                                        appl_j_118 = proj_j_116 int_j_117;
                                        leaf_b_21 = appl_j_118;
                                        var_j_119 = leaf_b_21;
                                        record_j_120 = {leaf = var_j_119};
                                        record_j_121 = {};
                                        record_j_122 = {leaf = record_j_121};
                                        record_j_123 = {bj_actual_rec = record_j_120, bj_decl_lbls = record_j_122});
                                    record_j_125 = {checker = flatten_fun_j_100, generator = flatten_fun_j_124};
                                    proj_j_126 = record_j_125.checker;
                                    var_j_127 = left;
                                    appl_j_128 = proj_j_126 var_j_127
                                ) : (
                                    var_j_129 = lbl_check_b_33
                                )
                        ) : (
                            m_match_cond_j_35 = m_match_bool_j_34 ? (
                                    var_j_36 = rec_fail_b_17
                                ) : (
                                    void_j_33 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_27 = m_match_bool_j_26 ? (
                            var_j_28 = rec_fail_b_18
                        ) : (
                            void_j_25 = {}
                        )
                )
        ) : (
            m_match_cond_j_19 = m_match_bool_j_18 ? (
                    var_j_20 = rec_fail_b_19
                ) : (
                    void_j_17 = {}
                )
        ));
flatten_fun_j_228 = fun bj_null_j_12 -> (
    flatten_fun_j_176 = fun expr_b_12 -> (
        bool_j_132 = false;
        rec_fail_b_11 = bool_j_132;
        bool_j_133 = false;
        rec_fail_b_10 = bool_j_133;
        bool_j_134 = false;
        rec_fail_b_9 = bool_j_134;
        var_j_135 = expr_b_12;
        m_match_bool_j_137 = var_j_135 ~ any;
        m_match_bool_j_140 = var_j_135 ~ {bj_actual_rec, _};
        m_match_cond_j_141 = m_match_bool_j_140 ? (
                var_j_142 = expr_b_12;
                proj_j_143 = var_j_142.bj_decl_lbls;
                m_match_bool_j_145 = proj_j_143 ~ any;
                m_match_bool_j_148 = proj_j_143 ~ {leaf, _};
                m_match_cond_j_149 = m_match_bool_j_148 ? (
                        leaf_j_8 = proj_j_143.leaf;
                        var_j_150 = expr_b_12;
                        proj_j_151 = var_j_150.bj_actual_rec;
                        m_match_bool_j_153 = proj_j_151 ~ any;
                        m_match_bool_j_156 = proj_j_151 ~ {leaf, _};
                        m_match_cond_j_157 = m_match_bool_j_156 ? (
                                leaf_j_7 = proj_j_151.leaf;
                                bool_j_158 = false;
                                fail_b_14 = bool_j_158;
                                flatten_fun_j_167 = fun expr_b_13 -> (
                                    var_j_159 = expr_b_13;
                                    m_match_bool_j_161 = var_j_159 ~ any;
                                    m_match_bool_j_164 = var_j_159 ~ bool;
                                    m_match_cond_j_165 = m_match_bool_j_164 ? (
                                            bool_j_166 = true
                                        ) : (
                                            m_match_cond_j_162 = m_match_bool_j_161 ? (
                                                    var_j_163 = fail_b_14
                                                ) : (
                                                    void_j_160 = {}
                                                )
                                        ));
                                flatten_fun_j_171 = fun bj_null_j_6 -> (
                                    int_j_168 = 0;
                                    input_j_169 = input;
                                    m_bl_i_264 = int_j_168 ~ int;
                                    m_br_i_265 = input_j_169 ~ int;
                                    m_b_i_266 = m_bl_i_264 and m_br_i_265;
                                    binop_j_170 = m_b_i_266 ? (
                                            c_binop_i_267 = int_j_168 <= input_j_169
                                        ) : (
                                            ab_i_268 = abort
                                        ));
                                record_j_172 = {checker = flatten_fun_j_167, generator = flatten_fun_j_171};
                                proj_j_173 = record_j_172.checker;
                                var_j_174 = leaf_j_7;
                                appl_j_175 = proj_j_173 var_j_174
                            ) : (
                                m_match_cond_j_154 = m_match_bool_j_153 ? (
                                        var_j_155 = rec_fail_b_9
                                    ) : (
                                        void_j_152 = {}
                                    )
                            )
                    ) : (
                        m_match_cond_j_146 = m_match_bool_j_145 ? (
                                var_j_147 = rec_fail_b_10
                            ) : (
                                void_j_144 = {}
                            )
                    )
            ) : (
                m_match_cond_j_138 = m_match_bool_j_137 ? (
                        var_j_139 = rec_fail_b_11
                    ) : (
                        void_j_136 = {}
                    )
            ));
    flatten_fun_j_200 = fun bj_null_j_10 -> (
        bool_j_177 = false;
        fail_b_7 = bool_j_177;
        flatten_fun_j_186 = fun expr_b_6 -> (
            var_j_178 = expr_b_6;
            m_match_bool_j_180 = var_j_178 ~ any;
            m_match_bool_j_183 = var_j_178 ~ bool;
            m_match_cond_j_184 = m_match_bool_j_183 ? (
                    bool_j_185 = true
                ) : (
                    m_match_cond_j_181 = m_match_bool_j_180 ? (
                            var_j_182 = fail_b_7
                        ) : (
                            void_j_179 = {}
                        )
                ));
        flatten_fun_j_190 = fun bj_null_j_9 -> (
            int_j_187 = 0;
            input_j_188 = input;
            m_bl_i_269 = int_j_187 ~ int;
            m_br_i_270 = input_j_188 ~ int;
            m_b_i_271 = m_bl_i_269 and m_br_i_270;
            binop_j_189 = m_b_i_271 ? (
                    c_binop_i_272 = int_j_187 <= input_j_188
                ) : (
                    ab_i_273 = abort
                ));
        record_j_191 = {checker = flatten_fun_j_186, generator = flatten_fun_j_190};
        proj_j_192 = record_j_191.generator;
        int_j_193 = 0;
        appl_j_194 = proj_j_192 int_j_193;
        leaf_b_5 = appl_j_194;
        var_j_195 = leaf_b_5;
        record_j_196 = {leaf = var_j_195};
        record_j_197 = {};
        record_j_198 = {leaf = record_j_197};
        record_j_199 = {bj_actual_rec = record_j_196, bj_decl_lbls = record_j_198});
    record_j_201 = {checker = flatten_fun_j_176, generator = flatten_fun_j_200};
    proj_j_202 = record_j_201.generator;
    int_j_203 = 0;
    appl_j_204 = proj_j_202 int_j_203;
    left_b_1 = appl_j_204;
    bool_j_205 = false;
    fail_b_3 = bool_j_205;
    flatten_fun_j_214 = fun expr_b_2 -> (
        var_j_206 = expr_b_2;
        m_match_bool_j_208 = var_j_206 ~ any;
        m_match_bool_j_211 = var_j_206 ~ int;
        m_match_cond_j_212 = m_match_bool_j_211 ? (
                bool_j_213 = true
            ) : (
                m_match_cond_j_209 = m_match_bool_j_208 ? (
                        var_j_210 = fail_b_3
                    ) : (
                        void_j_207 = {}
                    )
            ));
    flatten_fun_j_216 = fun bj_null_j_11 -> (
        input_j_215 = input);
    record_j_217 = {checker = flatten_fun_j_214, generator = flatten_fun_j_216};
    proj_j_218 = record_j_217.generator;
    int_j_219 = 0;
    appl_j_220 = proj_j_218 int_j_219;
    item_b_0 = appl_j_220;
    var_j_221 = item_b_0;
    var_j_222 = left_b_1;
    record_j_223 = {item = var_j_221, left = var_j_222};
    record_j_224 = {};
    record_j_225 = {};
    record_j_226 = {item = record_j_224, left = record_j_225};
    record_j_227 = {bj_actual_rec = record_j_223, bj_decl_lbls = record_j_226});
record_j_229 = {checker = flatten_fun_j_131, generator = flatten_fun_j_228};
tree_type = record_j_229;
int_j_230 = 6;
bool_j_231 = true;
record_j_232 = {leaf = bool_j_231};
record_j_233 = {};
record_j_234 = {leaf = record_j_233};
record_j_235 = {bj_actual_rec = record_j_232, bj_decl_lbls = record_j_234};
record_j_236 = {item = int_j_230, left = record_j_235};
record_j_237 = {};
record_j_238 = {};
record_j_239 = {item = record_j_237, left = record_j_238};
record_j_240 = {bj_actual_rec = record_j_236, bj_decl_lbls = record_j_239};
x_b_38 = record_j_240;
x = x_b_38;
proj_j_243 = tree_type.checker;
appl_j_245 = proj_j_243 x_b_38;
check_res_b_39 = appl_j_245;
if_j_253 = check_res_b_39 ? (
        var_j_247 = x
    ) : (
        error_var_j_248 = check_res_b_39;
        assert_pred_j_249 = error_var_j_248;
        assert_res_j_250 = assert_pred_j_249 ? (
                assert_res_true_j_251 = {}
            ) : (
                ab_j_252 = abort
            )
    );
i_result = if_j_253