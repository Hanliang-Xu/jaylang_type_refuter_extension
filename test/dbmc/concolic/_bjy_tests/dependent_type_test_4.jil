i_first = {};
flatten_fun_j_102 = fun notNeg_j_9 -> (
    flatten_fun_j_101 = fun l -> (
        var_j_75 = notNeg_j_9;
        var_j_76 = notNeg_j_9;
        appl_j_77 = var_j_75 var_j_76;
        notNeg = appl_j_77;
        bool_j_78 = false;
        fail_b_2 = bool_j_78;
        var_j_79 = l;
        m_match_bool_j_81 = var_j_79 ~ {j_head, j_tail, _};
        m_match_bool_j_91 = var_j_79 ~ {j_empty, _};
        m_match_bool_j_94 = var_j_79 ~ {bj_untouched, _};
        m_match_cond_j_95 = m_match_bool_j_94 ? (
                var_j_96 = fail_b_2;
                assert_pred_j_97 = var_j_96;
                assert_res_j_98 = assert_pred_j_97 ? (
                        assert_res_true_j_99 = {}
                    ) : (
                        ab_j_100 = abort
                    )
            ) : (
                m_match_cond_j_92 = m_match_bool_j_91 ? (
                        bool_j_93 = true
                    ) : (
                        m_match_cond_j_82 = m_match_bool_j_81 ? (
                                hd = var_j_79.j_head;
                                tl = var_j_79.j_tail;
                                int_j_83 = 0;
                                var_j_84 = hd;
                                m_bl_i_828 = int_j_83 ~ int;
                                m_br_i_829 = var_j_84 ~ int;
                                m_b_i_830 = m_bl_i_828 and m_br_i_829;
                                binop_j_85 = m_b_i_830 ? (
                                        c_binop_i_831 = int_j_83 <= var_j_84
                                    ) : (
                                        ab_i_832 = abort
                                    );
                                m_i_833 = binop_j_85 ~ bool;
                                if_j_90 = m_i_833 ? (
                                        c_cond_i_837 = binop_j_85 ? (
                                                var_j_86 = notNeg;
                                                var_j_87 = tl;
                                                m_i_834 = var_j_86 ~ fun;
                                                appl_j_88 = m_i_834 ? (
                                                        c_appl_i_835 = var_j_86 var_j_87
                                                    ) : (
                                                        ab_i_836 = abort
                                                    )
                                            ) : (
                                                bool_j_89 = false
                                            )
                                    ) : (
                                        ab_i_838 = abort
                                    )
                            ) : (
                                ab_j_80 = abort
                            )
                    )
            )));
appl_j_105 = flatten_fun_j_102 flatten_fun_j_102;
flatten_fun_j_133 = fun sum_j_8 -> (
    flatten_fun_j_132 = fun x -> (
        flatten_fun_j_131 = fun acc -> (
            var_j_106 = sum_j_8;
            var_j_107 = sum_j_8;
            appl_j_108 = var_j_106 var_j_107;
            sum = appl_j_108;
            bool_j_109 = false;
            fail_b_3 = bool_j_109;
            var_j_110 = x;
            m_match_bool_j_112 = var_j_110 ~ {j_head, j_tail, _};
            m_match_bool_j_121 = var_j_110 ~ {j_empty, _};
            m_match_bool_j_124 = var_j_110 ~ {bj_untouched, _};
            m_match_cond_j_125 = m_match_bool_j_124 ? (
                    var_j_126 = fail_b_3;
                    assert_pred_j_127 = var_j_126;
                    assert_res_j_128 = assert_pred_j_127 ? (
                            assert_res_true_j_129 = {}
                        ) : (
                            ab_j_130 = abort
                        )
                ) : (
                    m_match_cond_j_122 = m_match_bool_j_121 ? (
                            var_j_123 = acc
                        ) : (
                            m_match_cond_j_113 = m_match_bool_j_112 ? (
                                    hd_j_11 = var_j_110.j_head;
                                    tl_j_10 = var_j_110.j_tail;
                                    var_j_114 = sum;
                                    var_j_115 = tl_j_10;
                                    m_i_839 = var_j_114 ~ fun;
                                    appl_j_116 = m_i_839 ? (
                                            c_appl_i_840 = var_j_114 var_j_115
                                        ) : (
                                            ab_i_841 = abort
                                        );
                                    var_j_117 = acc;
                                    var_j_118 = hd_j_11;
                                    m_bl_i_842 = var_j_117 ~ int;
                                    m_br_i_843 = var_j_118 ~ int;
                                    m_b_i_844 = m_bl_i_842 and m_br_i_843;
                                    binop_j_119 = m_b_i_844 ? (
                                            c_binop_i_845 = var_j_117 + var_j_118
                                        ) : (
                                            ab_i_846 = abort
                                        );
                                    m_i_847 = appl_j_116 ~ fun;
                                    appl_j_120 = m_i_847 ? (
                                            c_appl_i_848 = appl_j_116 binop_j_119
                                        ) : (
                                            ab_i_849 = abort
                                        )
                                ) : (
                                    ab_j_111 = abort
                                )
                        )
                ))));
appl_j_136 = flatten_fun_j_133 flatten_fun_j_133;
f_j_484 = fun l_j_70 -> (
    flatten_fun_j_481 = fun l_b_0 -> (
        flatten_fun_j_258 = fun expr_b_70 -> (
            flatten_fun_j_190 = fun expr_b_67 -> (
                bool_j_137 = false;
                lst_fail_b_68 = bool_j_137;
                var_j_138 = expr_b_67;
                m_match_bool_j_140 = var_j_138 ~ any;
                m_match_bool_j_143 = var_j_138 ~ {j_head, j_tail, _};
                m_match_bool_j_187 = var_j_138 ~ {j_empty, _};
                m_match_cond_j_188 = m_match_bool_j_187 ? (
                        bool_j_189 = true
                    ) : (
                        m_match_cond_j_144 = m_match_bool_j_143 ? (
                                bj_underscore_j_45 = var_j_138.j_head;
                                bj_underscore2_j_44 = var_j_138.j_tail;
                                flatten_fun_j_180 = fun test_fun_b_64_j_4 -> (
                                    flatten_fun_j_179 = fun test_list_b_65 -> (
                                        var_j_145 = test_fun_b_64_j_4;
                                        var_j_146 = test_fun_b_64_j_4;
                                        appl_j_147 = var_j_145 var_j_146;
                                        test_fun_b_64 = appl_j_147;
                                        var_j_148 = test_list_b_65;
                                        m_match_bool_j_150 = var_j_148 ~ 
                                            {j_head, j_tail, _};
                                        m_match_bool_j_176 = var_j_148 ~ 
                                            {j_empty, _};
                                        m_match_cond_j_177 = m_match_bool_j_176 ? (
                                                bool_j_178 = true
                                            ) : (
                                                m_match_cond_j_151 = m_match_bool_j_150 ? (
                                                        hd_j_41 = var_j_148.j_head;
                                                        tl_j_40 = var_j_148.j_tail;
                                                        bool_j_152 = false;
                                                        fail_b_62 = bool_j_152;
                                                        flatten_fun_j_161 = fun expr_b_61 -> (
                                                            var_j_153 = expr_b_61;
                                                            m_match_bool_j_155 = var_j_153 ~ any;
                                                            m_match_bool_j_158 = var_j_153 ~ int;
                                                            m_match_cond_j_159 = m_match_bool_j_158 ? (
                                                                    bool_j_160 = true
                                                                ) : (
                                                                    m_match_cond_j_156 = m_match_bool_j_155 ? (
                                                                        var_j_157 = fail_b_62
                                                                    ) : (
                                                                        void_j_154 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_163 = fun bj_null_j_39 -> (
                                                            input_j_162 = input);
                                                        flatten_fun_j_165 = fun expr_b_63 -> (
                                                            var_j_164 = expr_b_63);
                                                        record_j_166 = 
                                                            {checker = flatten_fun_j_161, generator = flatten_fun_j_163, wrapper = flatten_fun_j_165};
                                                        proj_j_167 = record_j_166.checker;
                                                        var_j_168 = hd_j_41;
                                                        appl_j_169 = proj_j_167 var_j_168;
                                                        elm_check_b_66 = appl_j_169;
                                                        var_j_170 = elm_check_b_66;
                                                        if_j_175 = var_j_170 ? (
                                                                var_j_171 = test_fun_b_64;
                                                                var_j_172 = tl_j_40;
                                                                appl_j_173 = var_j_171 var_j_172
                                                            ) : (
                                                                var_j_174 = elm_check_b_66
                                                            )
                                                    ) : (
                                                        void_j_149 = 
                                                            {}
                                                    )
                                            )));
                                test_fun_b_64_j_4_j_43 = flatten_fun_j_180;
                                var_j_181 = test_fun_b_64_j_4_j_43;
                                var_j_182 = test_fun_b_64_j_4_j_43;
                                appl_j_183 = var_j_181 var_j_182;
                                test_fun_b_64_j_42 = appl_j_183;
                                var_j_184 = test_fun_b_64_j_42;
                                var_j_185 = expr_b_67;
                                appl_j_186 = var_j_184 var_j_185
                            ) : (
                                m_match_cond_j_141 = m_match_bool_j_140 ? (
                                        var_j_142 = lst_fail_b_68
                                    ) : (
                                        void_j_139 = {}
                                    )
                            )
                    ));
            flatten_fun_j_241 = fun bj_null_j_50 -> (
                flatten_fun_j_227 = fun list_maker_b_59_j_5 -> (
                    flatten_fun_j_226 = fun len_b_58 -> (
                        var_j_191 = list_maker_b_59_j_5;
                        var_j_192 = list_maker_b_59_j_5;
                        appl_j_193 = var_j_191 var_j_192;
                        list_maker_b_59 = appl_j_193;
                        var_j_194 = len_b_58;
                        int_j_195 = 0;
                        binop_j_196 = var_j_194 == int_j_195;
                        if_j_225 = binop_j_196 ? (
                                record_j_197 = {};
                                record_j_198 = {j_empty = record_j_197}
                            ) : (
                                bool_j_199 = false;
                                fail_b_56 = bool_j_199;
                                flatten_fun_j_208 = fun expr_b_55 -> (
                                    var_j_200 = expr_b_55;
                                    m_match_bool_j_202 = var_j_200 ~ any;
                                    m_match_bool_j_205 = var_j_200 ~ int;
                                    m_match_cond_j_206 = m_match_bool_j_205 ? (
                                            bool_j_207 = true
                                        ) : (
                                            m_match_cond_j_203 = m_match_bool_j_202 ? (
                                                    var_j_204 = fail_b_56
                                                ) : (
                                                    void_j_201 = {}
                                                )
                                        ));
                                flatten_fun_j_210 = fun bj_null_j_46 -> (
                                    input_j_209 = input);
                                flatten_fun_j_212 = fun expr_b_57 -> (
                                    var_j_211 = expr_b_57);
                                record_j_213 = {checker = flatten_fun_j_208, generator = flatten_fun_j_210, wrapper = flatten_fun_j_212};
                                proj_j_214 = record_j_213.generator;
                                int_j_215 = 0;
                                appl_j_216 = proj_j_214 int_j_215;
                                elm_b_60 = appl_j_216;
                                record_j_217 = {};
                                var_j_218 = elm_b_60;
                                var_j_219 = list_maker_b_59;
                                var_j_220 = len_b_58;
                                int_j_221 = 1;
                                binop_j_222 = var_j_220 - int_j_221;
                                appl_j_223 = var_j_219 binop_j_222;
                                record_j_224 = {j_cons = record_j_217, j_head = var_j_218, j_tail = appl_j_223}
                            )));
                list_maker_b_59_j_5_j_49 = flatten_fun_j_227;
                var_j_228 = list_maker_b_59_j_5_j_49;
                var_j_229 = list_maker_b_59_j_5_j_49;
                appl_j_230 = var_j_228 var_j_229;
                list_maker_b_59_j_48 = appl_j_230;
                input_j_231 = input;
                len_b_58_j_47 = input_j_231;
                int_j_232 = 0;
                var_j_233 = len_b_58_j_47;
                binop_j_234 = int_j_232 <= var_j_233;
                if_j_240 = binop_j_234 ? (
                        var_j_235 = list_maker_b_59_j_48;
                        var_j_236 = len_b_58_j_47;
                        appl_j_237 = var_j_235 var_j_236
                    ) : (
                        bool_j_238 = false;
                        assume_j_239 = assume bool_j_238
                    ));
            flatten_fun_j_243 = fun expr_b_69 -> (
                var_j_242 = expr_b_69);
            record_j_244 = {checker = flatten_fun_j_190, generator = flatten_fun_j_241, wrapper = flatten_fun_j_243};
            proj_j_245 = record_j_244.checker;
            var_j_246 = expr_b_70;
            appl_j_247 = proj_j_245 var_j_246;
            t_check_b_71 = appl_j_247;
            var_j_248 = t_check_b_71;
            if_j_257 = var_j_248 ? (
                    bool_j_249 = false;
                    pred_check_b_72 = bool_j_249;
                    var_j_250 = appl_j_105;
                    var_j_251 = expr_b_70;
                    appl_j_252 = var_j_250 var_j_251;
                    if_j_255 = appl_j_252 ? (
                            bool_j_253 = true
                        ) : (
                            var_j_254 = pred_check_b_72
                        )
                ) : (
                    var_j_256 = t_check_b_71
                ));
        flatten_fun_j_377 = fun bj_null_j_63 -> (
            flatten_fun_j_312 = fun expr_b_51 -> (
                bool_j_259 = false;
                lst_fail_b_52 = bool_j_259;
                var_j_260 = expr_b_51;
                m_match_bool_j_262 = var_j_260 ~ any;
                m_match_bool_j_265 = var_j_260 ~ {j_head, j_tail, _};
                m_match_bool_j_309 = var_j_260 ~ {j_empty, _};
                m_match_cond_j_310 = m_match_bool_j_309 ? (
                        bool_j_311 = true
                    ) : (
                        m_match_cond_j_266 = m_match_bool_j_265 ? (
                                bj_underscore_j_57 = var_j_260.j_head;
                                bj_underscore2_j_56 = var_j_260.j_tail;
                                flatten_fun_j_302 = fun test_fun_b_48_j_6 -> (
                                    flatten_fun_j_301 = fun test_list_b_49 -> (
                                        var_j_267 = test_fun_b_48_j_6;
                                        var_j_268 = test_fun_b_48_j_6;
                                        appl_j_269 = var_j_267 var_j_268;
                                        test_fun_b_48 = appl_j_269;
                                        var_j_270 = test_list_b_49;
                                        m_match_bool_j_272 = var_j_270 ~ 
                                            {j_head, j_tail, _};
                                        m_match_bool_j_298 = var_j_270 ~ 
                                            {j_empty, _};
                                        m_match_cond_j_299 = m_match_bool_j_298 ? (
                                                bool_j_300 = true
                                            ) : (
                                                m_match_cond_j_273 = m_match_bool_j_272 ? (
                                                        hd_j_53 = var_j_270.j_head;
                                                        tl_j_52 = var_j_270.j_tail;
                                                        bool_j_274 = false;
                                                        fail_b_46 = bool_j_274;
                                                        flatten_fun_j_283 = fun expr_b_45 -> (
                                                            var_j_275 = expr_b_45;
                                                            m_match_bool_j_277 = var_j_275 ~ any;
                                                            m_match_bool_j_280 = var_j_275 ~ int;
                                                            m_match_cond_j_281 = m_match_bool_j_280 ? (
                                                                    bool_j_282 = true
                                                                ) : (
                                                                    m_match_cond_j_278 = m_match_bool_j_277 ? (
                                                                        var_j_279 = fail_b_46
                                                                    ) : (
                                                                        void_j_276 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_285 = fun bj_null_j_51 -> (
                                                            input_j_284 = input);
                                                        flatten_fun_j_287 = fun expr_b_47 -> (
                                                            var_j_286 = expr_b_47);
                                                        record_j_288 = 
                                                            {checker = flatten_fun_j_283, generator = flatten_fun_j_285, wrapper = flatten_fun_j_287};
                                                        proj_j_289 = record_j_288.checker;
                                                        var_j_290 = hd_j_53;
                                                        appl_j_291 = proj_j_289 var_j_290;
                                                        elm_check_b_50 = appl_j_291;
                                                        var_j_292 = elm_check_b_50;
                                                        if_j_297 = var_j_292 ? (
                                                                var_j_293 = test_fun_b_48;
                                                                var_j_294 = tl_j_52;
                                                                appl_j_295 = var_j_293 var_j_294
                                                            ) : (
                                                                var_j_296 = elm_check_b_50
                                                            )
                                                    ) : (
                                                        void_j_271 = 
                                                            {}
                                                    )
                                            )));
                                test_fun_b_48_j_6_j_55 = flatten_fun_j_302;
                                var_j_303 = test_fun_b_48_j_6_j_55;
                                var_j_304 = test_fun_b_48_j_6_j_55;
                                appl_j_305 = var_j_303 var_j_304;
                                test_fun_b_48_j_54 = appl_j_305;
                                var_j_306 = test_fun_b_48_j_54;
                                var_j_307 = expr_b_51;
                                appl_j_308 = var_j_306 var_j_307
                            ) : (
                                m_match_cond_j_263 = m_match_bool_j_262 ? (
                                        var_j_264 = lst_fail_b_52
                                    ) : (
                                        void_j_261 = {}
                                    )
                            )
                    ));
            flatten_fun_j_363 = fun bj_null_j_62 -> (
                flatten_fun_j_349 = fun list_maker_b_43_j_7 -> (
                    flatten_fun_j_348 = fun len_b_42 -> (
                        var_j_313 = list_maker_b_43_j_7;
                        var_j_314 = list_maker_b_43_j_7;
                        appl_j_315 = var_j_313 var_j_314;
                        list_maker_b_43 = appl_j_315;
                        var_j_316 = len_b_42;
                        int_j_317 = 0;
                        binop_j_318 = var_j_316 == int_j_317;
                        if_j_347 = binop_j_318 ? (
                                record_j_319 = {};
                                record_j_320 = {j_empty = record_j_319}
                            ) : (
                                bool_j_321 = false;
                                fail_b_40 = bool_j_321;
                                flatten_fun_j_330 = fun expr_b_39 -> (
                                    var_j_322 = expr_b_39;
                                    m_match_bool_j_324 = var_j_322 ~ any;
                                    m_match_bool_j_327 = var_j_322 ~ int;
                                    m_match_cond_j_328 = m_match_bool_j_327 ? (
                                            bool_j_329 = true
                                        ) : (
                                            m_match_cond_j_325 = m_match_bool_j_324 ? (
                                                    var_j_326 = fail_b_40
                                                ) : (
                                                    void_j_323 = {}
                                                )
                                        ));
                                flatten_fun_j_332 = fun bj_null_j_58 -> (
                                    input_j_331 = input);
                                flatten_fun_j_334 = fun expr_b_41 -> (
                                    var_j_333 = expr_b_41);
                                record_j_335 = {checker = flatten_fun_j_330, generator = flatten_fun_j_332, wrapper = flatten_fun_j_334};
                                proj_j_336 = record_j_335.generator;
                                int_j_337 = 0;
                                appl_j_338 = proj_j_336 int_j_337;
                                elm_b_44 = appl_j_338;
                                record_j_339 = {};
                                var_j_340 = elm_b_44;
                                var_j_341 = list_maker_b_43;
                                var_j_342 = len_b_42;
                                int_j_343 = 1;
                                binop_j_344 = var_j_342 - int_j_343;
                                appl_j_345 = var_j_341 binop_j_344;
                                record_j_346 = {j_cons = record_j_339, j_head = var_j_340, j_tail = appl_j_345}
                            )));
                list_maker_b_43_j_7_j_61 = flatten_fun_j_349;
                var_j_350 = list_maker_b_43_j_7_j_61;
                var_j_351 = list_maker_b_43_j_7_j_61;
                appl_j_352 = var_j_350 var_j_351;
                list_maker_b_43_j_60 = appl_j_352;
                input_j_353 = input;
                len_b_42_j_59 = input_j_353;
                int_j_354 = 0;
                var_j_355 = len_b_42_j_59;
                binop_j_356 = int_j_354 <= var_j_355;
                if_j_362 = binop_j_356 ? (
                        var_j_357 = list_maker_b_43_j_60;
                        var_j_358 = len_b_42_j_59;
                        appl_j_359 = var_j_357 var_j_358
                    ) : (
                        bool_j_360 = false;
                        assume_j_361 = assume bool_j_360
                    ));
            flatten_fun_j_365 = fun expr_b_53 -> (
                var_j_364 = expr_b_53);
            record_j_366 = {checker = flatten_fun_j_312, generator = flatten_fun_j_363, wrapper = flatten_fun_j_365};
            proj_j_367 = record_j_366.generator;
            int_j_368 = 0;
            appl_j_369 = proj_j_367 int_j_368;
            candidate_b_54 = appl_j_369;
            var_j_370 = appl_j_105;
            var_j_371 = candidate_b_54;
            appl_j_372 = var_j_370 var_j_371;
            if_j_376 = appl_j_372 ? (
                    var_j_373 = candidate_b_54
                ) : (
                    bool_j_374 = false;
                    assume_j_375 = assume bool_j_374
                ));
        flatten_fun_j_379 = fun expr_b_73 -> (
            var_j_378 = expr_b_73);
        record_j_380 = {checker = flatten_fun_j_258, generator = flatten_fun_j_377, wrapper = flatten_fun_j_379};
        proj_j_381 = record_j_380.checker;
        var_j_382 = l_b_0;
        appl_j_383 = proj_j_381 var_j_382;
        arg_check_b_1 = appl_j_383;
        var_j_384 = arg_check_b_1;
        if_j_480 = var_j_384 ? (
                flatten_fun_j_465 = fun l_j_69 -> (
                    flatten_fun_j_424 = fun expr_b_81 -> (
                        bool_j_385 = false;
                        fail_b_79 = bool_j_385;
                        flatten_fun_j_394 = fun expr_b_78 -> (
                            var_j_386 = expr_b_78;
                            m_match_bool_j_388 = var_j_386 ~ any;
                            m_match_bool_j_391 = var_j_386 ~ int;
                            m_match_cond_j_392 = m_match_bool_j_391 ? (
                                    bool_j_393 = true
                                ) : (
                                    m_match_cond_j_389 = m_match_bool_j_388 ? (
                                            var_j_390 = fail_b_79
                                        ) : (
                                            void_j_387 = {}
                                        )
                                ));
                        flatten_fun_j_396 = fun bj_null_j_64 -> (
                            input_j_395 = input);
                        flatten_fun_j_398 = fun expr_b_80 -> (
                            var_j_397 = expr_b_80);
                        record_j_399 = {checker = flatten_fun_j_394, generator = flatten_fun_j_396, wrapper = flatten_fun_j_398};
                        proj_j_400 = record_j_399.checker;
                        var_j_401 = expr_b_81;
                        appl_j_402 = proj_j_400 var_j_401;
                        t_check_b_82 = appl_j_402;
                        var_j_403 = t_check_b_82;
                        if_j_423 = var_j_403 ? (
                                bool_j_404 = false;
                                pred_check_b_83 = bool_j_404;
                                flatten_fun_j_416 = fun a_j_65 -> (
                                    int_j_405 = 0;
                                    var_j_406 = a_j_65;
                                    m_bl_i_850 = int_j_405 ~ int;
                                    m_br_i_851 = var_j_406 ~ int;
                                    m_b_i_852 = m_bl_i_850 and m_br_i_851;
                                    binop_j_407 = m_b_i_852 ? (
                                            c_binop_i_853 = int_j_405 < var_j_406
                                        ) : (
                                            ab_i_854 = abort
                                        );
                                    var_j_408 = appl_j_136;
                                    var_j_409 = l_j_69;
                                    m_i_855 = var_j_408 ~ fun;
                                    appl_j_410 = m_i_855 ? (
                                            c_appl_i_856 = var_j_408 var_j_409
                                        ) : (
                                            ab_i_857 = abort
                                        );
                                    int_j_411 = 0;
                                    m_i_858 = appl_j_410 ~ fun;
                                    appl_j_412 = m_i_858 ? (
                                            c_appl_i_859 = appl_j_410 int_j_411
                                        ) : (
                                            ab_i_860 = abort
                                        );
                                    var_j_413 = a_j_65;
                                    m_bl_i_861 = appl_j_412 ~ int;
                                    m_br_i_862 = var_j_413 ~ int;
                                    m_b_i_863 = m_bl_i_861 and m_br_i_862;
                                    binop_j_414 = m_b_i_863 ? (
                                            c_binop_i_864 = appl_j_412 == var_j_413
                                        ) : (
                                            ab_i_865 = abort
                                        );
                                    m_bl_i_866 = binop_j_407 ~ bool;
                                    m_br_i_867 = binop_j_414 ~ bool;
                                    m_b_i_868 = m_bl_i_866 and m_br_i_867;
                                    binop_j_415 = m_b_i_868 ? (
                                            c_binop_i_869 = binop_j_407 and binop_j_414
                                        ) : (
                                            ab_i_870 = abort
                                        ));
                                var_j_417 = expr_b_81;
                                appl_j_418 = flatten_fun_j_416 var_j_417;
                                if_j_421 = appl_j_418 ? (
                                        bool_j_419 = true
                                    ) : (
                                        var_j_420 = pred_check_b_83
                                    )
                            ) : (
                                var_j_422 = t_check_b_82
                            ));
                    flatten_fun_j_461 = fun bj_null_j_68 -> (
                        bool_j_425 = false;
                        fail_b_75 = bool_j_425;
                        flatten_fun_j_434 = fun expr_b_74 -> (
                            var_j_426 = expr_b_74;
                            m_match_bool_j_428 = var_j_426 ~ any;
                            m_match_bool_j_431 = var_j_426 ~ int;
                            m_match_cond_j_432 = m_match_bool_j_431 ? (
                                    bool_j_433 = true
                                ) : (
                                    m_match_cond_j_429 = m_match_bool_j_428 ? (
                                            var_j_430 = fail_b_75
                                        ) : (
                                            void_j_427 = {}
                                        )
                                ));
                        flatten_fun_j_436 = fun bj_null_j_66 -> (
                            input_j_435 = input);
                        flatten_fun_j_438 = fun expr_b_76 -> (
                            var_j_437 = expr_b_76);
                        record_j_439 = {checker = flatten_fun_j_434, generator = flatten_fun_j_436, wrapper = flatten_fun_j_438};
                        proj_j_440 = record_j_439.generator;
                        int_j_441 = 0;
                        appl_j_442 = proj_j_440 int_j_441;
                        candidate_b_77 = appl_j_442;
                        flatten_fun_j_454 = fun a_j_67 -> (
                            int_j_443 = 0;
                            var_j_444 = a_j_67;
                            m_bl_i_871 = int_j_443 ~ int;
                            m_br_i_872 = var_j_444 ~ int;
                            m_b_i_873 = m_bl_i_871 and m_br_i_872;
                            binop_j_445 = m_b_i_873 ? (
                                    c_binop_i_874 = int_j_443 < var_j_444
                                ) : (
                                    ab_i_875 = abort
                                );
                            var_j_446 = appl_j_136;
                            var_j_447 = l_j_69;
                            m_i_876 = var_j_446 ~ fun;
                            appl_j_448 = m_i_876 ? (
                                    c_appl_i_877 = var_j_446 var_j_447
                                ) : (
                                    ab_i_878 = abort
                                );
                            int_j_449 = 0;
                            m_i_879 = appl_j_448 ~ fun;
                            appl_j_450 = m_i_879 ? (
                                    c_appl_i_880 = appl_j_448 int_j_449
                                ) : (
                                    ab_i_881 = abort
                                );
                            var_j_451 = a_j_67;
                            m_bl_i_882 = appl_j_450 ~ int;
                            m_br_i_883 = var_j_451 ~ int;
                            m_b_i_884 = m_bl_i_882 and m_br_i_883;
                            binop_j_452 = m_b_i_884 ? (
                                    c_binop_i_885 = appl_j_450 == var_j_451
                                ) : (
                                    ab_i_886 = abort
                                );
                            m_bl_i_887 = binop_j_445 ~ bool;
                            m_br_i_888 = binop_j_452 ~ bool;
                            m_b_i_889 = m_bl_i_887 and m_br_i_888;
                            binop_j_453 = m_b_i_889 ? (
                                    c_binop_i_890 = binop_j_445 and binop_j_452
                                ) : (
                                    ab_i_891 = abort
                                ));
                        var_j_455 = candidate_b_77;
                        appl_j_456 = flatten_fun_j_454 var_j_455;
                        if_j_460 = appl_j_456 ? (
                                var_j_457 = candidate_b_77
                            ) : (
                                bool_j_458 = false;
                                assume_j_459 = assume bool_j_458
                            ));
                    flatten_fun_j_463 = fun expr_b_84 -> (
                        var_j_462 = expr_b_84);
                    record_j_464 = {checker = flatten_fun_j_424, generator = flatten_fun_j_461, wrapper = flatten_fun_j_463});
                var_j_466 = l_b_0;
                appl_j_467 = flatten_fun_j_465 var_j_466;
                proj_j_468 = appl_j_467.wrapper;
                var_j_469 = appl_j_136;
                var_j_470 = l_j_70;
                m_i_892 = var_j_469 ~ fun;
                appl_j_471 = m_i_892 ? (
                        c_appl_i_893 = var_j_469 var_j_470
                    ) : (
                        ab_i_894 = abort
                    );
                int_j_472 = 0;
                m_i_895 = appl_j_471 ~ fun;
                appl_j_473 = m_i_895 ? (
                        c_appl_i_896 = appl_j_471 int_j_472
                    ) : (
                        ab_i_897 = abort
                    );
                m_i_898 = proj_j_468 ~ fun;
                appl_j_474 = m_i_898 ? (
                        c_appl_i_899 = proj_j_468 appl_j_473
                    ) : (
                        ab_i_900 = abort
                    )
            ) : (
                bool_j_475 = false;
                assert_pred_j_476 = bool_j_475;
                assert_res_j_477 = assert_pred_j_476 ? (
                        assert_res_true_j_478 = {}
                    ) : (
                        ab_j_479 = abort
                    )
            ));
    var_j_482 = l_j_70;
    appl_j_483 = flatten_fun_j_481 var_j_482);
f = f_j_484;
flatten_fun_j_606 = fun expr_b_35 -> (
    flatten_fun_j_538 = fun expr_b_32 -> (
        bool_j_485 = false;
        lst_fail_b_33 = bool_j_485;
        var_j_486 = expr_b_32;
        m_match_bool_j_488 = var_j_486 ~ any;
        m_match_bool_j_491 = var_j_486 ~ {j_head, j_tail, _};
        m_match_bool_j_535 = var_j_486 ~ {j_empty, _};
        m_match_cond_j_536 = m_match_bool_j_535 ? (
                bool_j_537 = true
            ) : (
                m_match_cond_j_492 = m_match_bool_j_491 ? (
                        bj_underscore = var_j_486.j_head;
                        bj_underscore2 = var_j_486.j_tail;
                        flatten_fun_j_528 = fun test_fun_b_29_j_0 -> (
                            flatten_fun_j_527 = fun test_list_b_30 -> (
                                var_j_493 = test_fun_b_29_j_0;
                                var_j_494 = test_fun_b_29_j_0;
                                appl_j_495 = var_j_493 var_j_494;
                                test_fun_b_29 = appl_j_495;
                                var_j_496 = test_list_b_30;
                                m_match_bool_j_498 = var_j_496 ~ {j_head, j_tail, _};
                                m_match_bool_j_524 = var_j_496 ~ {j_empty, _};
                                m_match_cond_j_525 = m_match_bool_j_524 ? (
                                        bool_j_526 = true
                                    ) : (
                                        m_match_cond_j_499 = m_match_bool_j_498 ? (
                                                hd_j_13 = var_j_496.j_head;
                                                tl_j_12 = var_j_496.j_tail;
                                                bool_j_500 = false;
                                                fail_b_27 = bool_j_500;
                                                flatten_fun_j_509 = fun expr_b_26 -> (
                                                    var_j_501 = expr_b_26;
                                                    m_match_bool_j_503 = var_j_501 ~ any;
                                                    m_match_bool_j_506 = var_j_501 ~ int;
                                                    m_match_cond_j_507 = m_match_bool_j_506 ? (
                                                            bool_j_508 = true
                                                        ) : (
                                                            m_match_cond_j_504 = m_match_bool_j_503 ? (
                                                                    var_j_505 = fail_b_27
                                                                ) : (
                                                                    void_j_502 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_511 = fun bj_null -> (
                                                    input_j_510 = input);
                                                flatten_fun_j_513 = fun expr_b_28 -> (
                                                    var_j_512 = expr_b_28);
                                                record_j_514 = {checker = flatten_fun_j_509, generator = flatten_fun_j_511, wrapper = flatten_fun_j_513};
                                                proj_j_515 = record_j_514.checker;
                                                var_j_516 = hd_j_13;
                                                appl_j_517 = proj_j_515 var_j_516;
                                                elm_check_b_31 = appl_j_517;
                                                var_j_518 = elm_check_b_31;
                                                if_j_523 = var_j_518 ? (
                                                        var_j_519 = test_fun_b_29;
                                                        var_j_520 = tl_j_12;
                                                        appl_j_521 = var_j_519 var_j_520
                                                    ) : (
                                                        var_j_522 = elm_check_b_31
                                                    )
                                            ) : (
                                                void_j_497 = {}
                                            )
                                    )));
                        test_fun_b_29_j_0_j_15 = flatten_fun_j_528;
                        var_j_529 = test_fun_b_29_j_0_j_15;
                        var_j_530 = test_fun_b_29_j_0_j_15;
                        appl_j_531 = var_j_529 var_j_530;
                        test_fun_b_29_j_14 = appl_j_531;
                        var_j_532 = test_fun_b_29_j_14;
                        var_j_533 = expr_b_32;
                        appl_j_534 = var_j_532 var_j_533
                    ) : (
                        m_match_cond_j_489 = m_match_bool_j_488 ? (
                                var_j_490 = lst_fail_b_33
                            ) : (
                                void_j_487 = {}
                            )
                    )
            ));
    flatten_fun_j_589 = fun bj_null_j_20 -> (
        flatten_fun_j_575 = fun list_maker_b_24_j_1 -> (
            flatten_fun_j_574 = fun len_b_23 -> (
                var_j_539 = list_maker_b_24_j_1;
                var_j_540 = list_maker_b_24_j_1;
                appl_j_541 = var_j_539 var_j_540;
                list_maker_b_24 = appl_j_541;
                var_j_542 = len_b_23;
                int_j_543 = 0;
                binop_j_544 = var_j_542 == int_j_543;
                if_j_573 = binop_j_544 ? (
                        record_j_545 = {};
                        record_j_546 = {j_empty = record_j_545}
                    ) : (
                        bool_j_547 = false;
                        fail_b_21 = bool_j_547;
                        flatten_fun_j_556 = fun expr_b_20 -> (
                            var_j_548 = expr_b_20;
                            m_match_bool_j_550 = var_j_548 ~ any;
                            m_match_bool_j_553 = var_j_548 ~ int;
                            m_match_cond_j_554 = m_match_bool_j_553 ? (
                                    bool_j_555 = true
                                ) : (
                                    m_match_cond_j_551 = m_match_bool_j_550 ? (
                                            var_j_552 = fail_b_21
                                        ) : (
                                            void_j_549 = {}
                                        )
                                ));
                        flatten_fun_j_558 = fun bj_null_j_16 -> (
                            input_j_557 = input);
                        flatten_fun_j_560 = fun expr_b_22 -> (
                            var_j_559 = expr_b_22);
                        record_j_561 = {checker = flatten_fun_j_556, generator = flatten_fun_j_558, wrapper = flatten_fun_j_560};
                        proj_j_562 = record_j_561.generator;
                        int_j_563 = 0;
                        appl_j_564 = proj_j_562 int_j_563;
                        elm_b_25 = appl_j_564;
                        record_j_565 = {};
                        var_j_566 = elm_b_25;
                        var_j_567 = list_maker_b_24;
                        var_j_568 = len_b_23;
                        int_j_569 = 1;
                        binop_j_570 = var_j_568 - int_j_569;
                        appl_j_571 = var_j_567 binop_j_570;
                        record_j_572 = {j_cons = record_j_565, j_head = var_j_566, j_tail = appl_j_571}
                    )));
        list_maker_b_24_j_1_j_19 = flatten_fun_j_575;
        var_j_576 = list_maker_b_24_j_1_j_19;
        var_j_577 = list_maker_b_24_j_1_j_19;
        appl_j_578 = var_j_576 var_j_577;
        list_maker_b_24_j_18 = appl_j_578;
        input_j_579 = input;
        len_b_23_j_17 = input_j_579;
        int_j_580 = 0;
        var_j_581 = len_b_23_j_17;
        binop_j_582 = int_j_580 <= var_j_581;
        if_j_588 = binop_j_582 ? (
                var_j_583 = list_maker_b_24_j_18;
                var_j_584 = len_b_23_j_17;
                appl_j_585 = var_j_583 var_j_584
            ) : (
                bool_j_586 = false;
                assume_j_587 = assume bool_j_586
            ));
    flatten_fun_j_591 = fun expr_b_34 -> (
        var_j_590 = expr_b_34);
    record_j_592 = {checker = flatten_fun_j_538, generator = flatten_fun_j_589, wrapper = flatten_fun_j_591};
    proj_j_593 = record_j_592.checker;
    var_j_594 = expr_b_35;
    appl_j_595 = proj_j_593 var_j_594;
    t_check_b_36 = appl_j_595;
    var_j_596 = t_check_b_36;
    if_j_605 = var_j_596 ? (
            bool_j_597 = false;
            pred_check_b_37 = bool_j_597;
            var_j_598 = appl_j_105;
            var_j_599 = expr_b_35;
            appl_j_600 = var_j_598 var_j_599;
            if_j_603 = appl_j_600 ? (
                    bool_j_601 = true
                ) : (
                    var_j_602 = pred_check_b_37
                )
        ) : (
            var_j_604 = t_check_b_36
        ));
flatten_fun_j_725 = fun bj_null_j_33 -> (
    flatten_fun_j_660 = fun expr_b_16 -> (
        bool_j_607 = false;
        lst_fail_b_17 = bool_j_607;
        var_j_608 = expr_b_16;
        m_match_bool_j_610 = var_j_608 ~ any;
        m_match_bool_j_613 = var_j_608 ~ {j_head, j_tail, _};
        m_match_bool_j_657 = var_j_608 ~ {j_empty, _};
        m_match_cond_j_658 = m_match_bool_j_657 ? (
                bool_j_659 = true
            ) : (
                m_match_cond_j_614 = m_match_bool_j_613 ? (
                        bj_underscore_j_27 = var_j_608.j_head;
                        bj_underscore2_j_26 = var_j_608.j_tail;
                        flatten_fun_j_650 = fun test_fun_b_13_j_2 -> (
                            flatten_fun_j_649 = fun test_list_b_14 -> (
                                var_j_615 = test_fun_b_13_j_2;
                                var_j_616 = test_fun_b_13_j_2;
                                appl_j_617 = var_j_615 var_j_616;
                                test_fun_b_13 = appl_j_617;
                                var_j_618 = test_list_b_14;
                                m_match_bool_j_620 = var_j_618 ~ {j_head, j_tail, _};
                                m_match_bool_j_646 = var_j_618 ~ {j_empty, _};
                                m_match_cond_j_647 = m_match_bool_j_646 ? (
                                        bool_j_648 = true
                                    ) : (
                                        m_match_cond_j_621 = m_match_bool_j_620 ? (
                                                hd_j_23 = var_j_618.j_head;
                                                tl_j_22 = var_j_618.j_tail;
                                                bool_j_622 = false;
                                                fail_b_11 = bool_j_622;
                                                flatten_fun_j_631 = fun expr_b_10 -> (
                                                    var_j_623 = expr_b_10;
                                                    m_match_bool_j_625 = var_j_623 ~ any;
                                                    m_match_bool_j_628 = var_j_623 ~ int;
                                                    m_match_cond_j_629 = m_match_bool_j_628 ? (
                                                            bool_j_630 = true
                                                        ) : (
                                                            m_match_cond_j_626 = m_match_bool_j_625 ? (
                                                                    var_j_627 = fail_b_11
                                                                ) : (
                                                                    void_j_624 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_633 = fun bj_null_j_21 -> (
                                                    input_j_632 = input);
                                                flatten_fun_j_635 = fun expr_b_12 -> (
                                                    var_j_634 = expr_b_12);
                                                record_j_636 = {checker = flatten_fun_j_631, generator = flatten_fun_j_633, wrapper = flatten_fun_j_635};
                                                proj_j_637 = record_j_636.checker;
                                                var_j_638 = hd_j_23;
                                                appl_j_639 = proj_j_637 var_j_638;
                                                elm_check_b_15 = appl_j_639;
                                                var_j_640 = elm_check_b_15;
                                                if_j_645 = var_j_640 ? (
                                                        var_j_641 = test_fun_b_13;
                                                        var_j_642 = tl_j_22;
                                                        appl_j_643 = var_j_641 var_j_642
                                                    ) : (
                                                        var_j_644 = elm_check_b_15
                                                    )
                                            ) : (
                                                void_j_619 = {}
                                            )
                                    )));
                        test_fun_b_13_j_2_j_25 = flatten_fun_j_650;
                        var_j_651 = test_fun_b_13_j_2_j_25;
                        var_j_652 = test_fun_b_13_j_2_j_25;
                        appl_j_653 = var_j_651 var_j_652;
                        test_fun_b_13_j_24 = appl_j_653;
                        var_j_654 = test_fun_b_13_j_24;
                        var_j_655 = expr_b_16;
                        appl_j_656 = var_j_654 var_j_655
                    ) : (
                        m_match_cond_j_611 = m_match_bool_j_610 ? (
                                var_j_612 = lst_fail_b_17
                            ) : (
                                void_j_609 = {}
                            )
                    )
            ));
    flatten_fun_j_711 = fun bj_null_j_32 -> (
        flatten_fun_j_697 = fun list_maker_b_8_j_3 -> (
            flatten_fun_j_696 = fun len_b_7 -> (
                var_j_661 = list_maker_b_8_j_3;
                var_j_662 = list_maker_b_8_j_3;
                appl_j_663 = var_j_661 var_j_662;
                list_maker_b_8 = appl_j_663;
                var_j_664 = len_b_7;
                int_j_665 = 0;
                binop_j_666 = var_j_664 == int_j_665;
                if_j_695 = binop_j_666 ? (
                        record_j_667 = {};
                        record_j_668 = {j_empty = record_j_667}
                    ) : (
                        bool_j_669 = false;
                        fail_b_5 = bool_j_669;
                        flatten_fun_j_678 = fun expr_b_4 -> (
                            var_j_670 = expr_b_4;
                            m_match_bool_j_672 = var_j_670 ~ any;
                            m_match_bool_j_675 = var_j_670 ~ int;
                            m_match_cond_j_676 = m_match_bool_j_675 ? (
                                    bool_j_677 = true
                                ) : (
                                    m_match_cond_j_673 = m_match_bool_j_672 ? (
                                            var_j_674 = fail_b_5
                                        ) : (
                                            void_j_671 = {}
                                        )
                                ));
                        flatten_fun_j_680 = fun bj_null_j_28 -> (
                            input_j_679 = input);
                        flatten_fun_j_682 = fun expr_b_6 -> (
                            var_j_681 = expr_b_6);
                        record_j_683 = {checker = flatten_fun_j_678, generator = flatten_fun_j_680, wrapper = flatten_fun_j_682};
                        proj_j_684 = record_j_683.generator;
                        int_j_685 = 0;
                        appl_j_686 = proj_j_684 int_j_685;
                        elm_b_9 = appl_j_686;
                        record_j_687 = {};
                        var_j_688 = elm_b_9;
                        var_j_689 = list_maker_b_8;
                        var_j_690 = len_b_7;
                        int_j_691 = 1;
                        binop_j_692 = var_j_690 - int_j_691;
                        appl_j_693 = var_j_689 binop_j_692;
                        record_j_694 = {j_cons = record_j_687, j_head = var_j_688, j_tail = appl_j_693}
                    )));
        list_maker_b_8_j_3_j_31 = flatten_fun_j_697;
        var_j_698 = list_maker_b_8_j_3_j_31;
        var_j_699 = list_maker_b_8_j_3_j_31;
        appl_j_700 = var_j_698 var_j_699;
        list_maker_b_8_j_30 = appl_j_700;
        input_j_701 = input;
        len_b_7_j_29 = input_j_701;
        int_j_702 = 0;
        var_j_703 = len_b_7_j_29;
        binop_j_704 = int_j_702 <= var_j_703;
        if_j_710 = binop_j_704 ? (
                var_j_705 = list_maker_b_8_j_30;
                var_j_706 = len_b_7_j_29;
                appl_j_707 = var_j_705 var_j_706
            ) : (
                bool_j_708 = false;
                assume_j_709 = assume bool_j_708
            ));
    flatten_fun_j_713 = fun expr_b_18 -> (
        var_j_712 = expr_b_18);
    record_j_714 = {checker = flatten_fun_j_660, generator = flatten_fun_j_711, wrapper = flatten_fun_j_713};
    proj_j_715 = record_j_714.generator;
    int_j_716 = 0;
    appl_j_717 = proj_j_715 int_j_716;
    candidate_b_19 = appl_j_717;
    var_j_718 = appl_j_105;
    var_j_719 = candidate_b_19;
    appl_j_720 = var_j_718 var_j_719;
    if_j_724 = appl_j_720 ? (
            var_j_721 = candidate_b_19
        ) : (
            bool_j_722 = false;
            assume_j_723 = assume bool_j_722
        ));
flatten_fun_j_727 = fun expr_b_38 -> (
    var_j_726 = expr_b_38);
record_j_728 = {checker = flatten_fun_j_606, generator = flatten_fun_j_725, wrapper = flatten_fun_j_727};
proj_j_729 = record_j_728.generator;
int_j_730 = 0;
appl_j_731 = proj_j_729 int_j_730;
l_b_96 = appl_j_731;
flatten_fun_j_813 = fun l_j_38 -> (
    flatten_fun_j_771 = fun expr_b_92 -> (
        bool_j_732 = false;
        fail_b_90 = bool_j_732;
        flatten_fun_j_741 = fun expr_b_89 -> (
            var_j_733 = expr_b_89;
            m_match_bool_j_735 = var_j_733 ~ any;
            m_match_bool_j_738 = var_j_733 ~ int;
            m_match_cond_j_739 = m_match_bool_j_738 ? (
                    bool_j_740 = true
                ) : (
                    m_match_cond_j_736 = m_match_bool_j_735 ? (
                            var_j_737 = fail_b_90
                        ) : (
                            void_j_734 = {}
                        )
                ));
        flatten_fun_j_743 = fun bj_null_j_34 -> (
            input_j_742 = input);
        flatten_fun_j_745 = fun expr_b_91 -> (
            var_j_744 = expr_b_91);
        record_j_746 = {checker = flatten_fun_j_741, generator = flatten_fun_j_743, wrapper = flatten_fun_j_745};
        proj_j_747 = record_j_746.checker;
        var_j_748 = expr_b_92;
        appl_j_749 = proj_j_747 var_j_748;
        t_check_b_93 = appl_j_749;
        var_j_750 = t_check_b_93;
        if_j_770 = var_j_750 ? (
                bool_j_751 = false;
                pred_check_b_94 = bool_j_751;
                flatten_fun_j_763 = fun a -> (
                    int_j_752 = 0;
                    var_j_753 = a;
                    m_bl_i_901 = int_j_752 ~ int;
                    m_br_i_902 = var_j_753 ~ int;
                    m_b_i_903 = m_bl_i_901 and m_br_i_902;
                    binop_j_754 = m_b_i_903 ? (
                            c_binop_i_904 = int_j_752 < var_j_753
                        ) : (
                            ab_i_905 = abort
                        );
                    var_j_755 = appl_j_136;
                    var_j_756 = l_j_38;
                    m_i_906 = var_j_755 ~ fun;
                    appl_j_757 = m_i_906 ? (
                            c_appl_i_907 = var_j_755 var_j_756
                        ) : (
                            ab_i_908 = abort
                        );
                    int_j_758 = 0;
                    m_i_909 = appl_j_757 ~ fun;
                    appl_j_759 = m_i_909 ? (
                            c_appl_i_910 = appl_j_757 int_j_758
                        ) : (
                            ab_i_911 = abort
                        );
                    var_j_760 = a;
                    m_bl_i_912 = appl_j_759 ~ int;
                    m_br_i_913 = var_j_760 ~ int;
                    m_b_i_914 = m_bl_i_912 and m_br_i_913;
                    binop_j_761 = m_b_i_914 ? (
                            c_binop_i_915 = appl_j_759 == var_j_760
                        ) : (
                            ab_i_916 = abort
                        );
                    m_bl_i_917 = binop_j_754 ~ bool;
                    m_br_i_918 = binop_j_761 ~ bool;
                    m_b_i_919 = m_bl_i_917 and m_br_i_918;
                    binop_j_762 = m_b_i_919 ? (
                            c_binop_i_920 = binop_j_754 and binop_j_761
                        ) : (
                            ab_i_921 = abort
                        ));
                var_j_764 = expr_b_92;
                appl_j_765 = flatten_fun_j_763 var_j_764;
                if_j_768 = appl_j_765 ? (
                        bool_j_766 = true
                    ) : (
                        var_j_767 = pred_check_b_94
                    )
            ) : (
                var_j_769 = t_check_b_93
            ));
    flatten_fun_j_808 = fun bj_null_j_37 -> (
        bool_j_772 = false;
        fail_b_86 = bool_j_772;
        flatten_fun_j_781 = fun expr_b_85 -> (
            var_j_773 = expr_b_85;
            m_match_bool_j_775 = var_j_773 ~ any;
            m_match_bool_j_778 = var_j_773 ~ int;
            m_match_cond_j_779 = m_match_bool_j_778 ? (
                    bool_j_780 = true
                ) : (
                    m_match_cond_j_776 = m_match_bool_j_775 ? (
                            var_j_777 = fail_b_86
                        ) : (
                            void_j_774 = {}
                        )
                ));
        flatten_fun_j_783 = fun bj_null_j_35 -> (
            input_j_782 = input);
        flatten_fun_j_785 = fun expr_b_87 -> (
            var_j_784 = expr_b_87);
        record_j_786 = {checker = flatten_fun_j_781, generator = flatten_fun_j_783, wrapper = flatten_fun_j_785};
        proj_j_787 = record_j_786.generator;
        int_j_788 = 0;
        appl_j_789 = proj_j_787 int_j_788;
        candidate_b_88 = appl_j_789;
        flatten_fun_j_801 = fun a_j_36 -> (
            int_j_790 = 0;
            var_j_791 = a_j_36;
            m_bl_i_922 = int_j_790 ~ int;
            m_br_i_923 = var_j_791 ~ int;
            m_b_i_924 = m_bl_i_922 and m_br_i_923;
            binop_j_792 = m_b_i_924 ? (
                    c_binop_i_925 = int_j_790 < var_j_791
                ) : (
                    ab_i_926 = abort
                );
            var_j_793 = appl_j_136;
            var_j_794 = l_j_38;
            m_i_927 = var_j_793 ~ fun;
            appl_j_795 = m_i_927 ? (
                    c_appl_i_928 = var_j_793 var_j_794
                ) : (
                    ab_i_929 = abort
                );
            int_j_796 = 0;
            m_i_930 = appl_j_795 ~ fun;
            appl_j_797 = m_i_930 ? (
                    c_appl_i_931 = appl_j_795 int_j_796
                ) : (
                    ab_i_932 = abort
                );
            var_j_798 = a_j_36;
            m_bl_i_933 = appl_j_797 ~ int;
            m_br_i_934 = var_j_798 ~ int;
            m_b_i_935 = m_bl_i_933 and m_br_i_934;
            binop_j_799 = m_b_i_935 ? (
                    c_binop_i_936 = appl_j_797 == var_j_798
                ) : (
                    ab_i_937 = abort
                );
            m_bl_i_938 = binop_j_792 ~ bool;
            m_br_i_939 = binop_j_799 ~ bool;
            m_b_i_940 = m_bl_i_938 and m_br_i_939;
            binop_j_800 = m_b_i_940 ? (
                    c_binop_i_941 = binop_j_792 and binop_j_799
                ) : (
                    ab_i_942 = abort
                ));
        var_j_802 = candidate_b_88;
        appl_j_803 = flatten_fun_j_801 var_j_802;
        if_j_807 = appl_j_803 ? (
                var_j_804 = candidate_b_88
            ) : (
                bool_j_805 = false;
                assume_j_806 = assume bool_j_805
            ));
    flatten_fun_j_810 = fun expr_b_95 -> (
        var_j_809 = expr_b_95);
    record_j_811 = {checker = flatten_fun_j_771, generator = flatten_fun_j_808, wrapper = flatten_fun_j_810};
    proj_j_812 = record_j_811.checker);
appl_j_815 = flatten_fun_j_813 l_b_96;
appl_j_818 = f l_b_96;
appl_j_819 = appl_j_815 appl_j_818;
check_res_b_97 = appl_j_819;
if_j_827 = check_res_b_97 ? (
        var_j_821 = f
    ) : (
        error_var_j_822 = check_res_b_97;
        assert_pred_j_823 = error_var_j_822;
        assert_res_j_824 = assert_pred_j_823 ? (
                assert_res_true_j_825 = {}
            ) : (
                ab_j_826 = abort
            )
    );
i_result = if_j_827