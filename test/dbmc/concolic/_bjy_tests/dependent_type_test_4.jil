i_first = {};
flatten_fun_j_67 = fun notNeg_j_5 -> (
    flatten_fun_j_66 = fun l -> (
        var_j_40 = notNeg_j_5;
        var_j_41 = notNeg_j_5;
        appl_j_42 = var_j_40 var_j_41;
        notNeg = appl_j_42;
        bool_j_43 = false;
        fail_b_0 = bool_j_43;
        var_j_44 = l;
        m_match_bool_j_46 = var_j_44 ~ {j_head, j_tail, _};
        m_match_bool_j_56 = var_j_44 ~ {j_empty, _};
        m_match_bool_j_59 = var_j_44 ~ {bj_untouched, _};
        m_match_cond_j_60 = m_match_bool_j_59 ? (
                var_j_61 = fail_b_0;
                assert_pred_j_62 = var_j_61;
                assert_res_j_63 = assert_pred_j_62 ? (
                        assert_res_true_j_64 = {}
                    ) : (
                        ab_j_65 = abort
                    )
            ) : (
                m_match_cond_j_57 = m_match_bool_j_56 ? (
                        bool_j_58 = true
                    ) : (
                        m_match_cond_j_47 = m_match_bool_j_46 ? (
                                hd = var_j_44.j_head;
                                tl = var_j_44.j_tail;
                                int_j_48 = 0;
                                var_j_49 = hd;
                                m_bl_i_431 = int_j_48 ~ int;
                                m_br_i_432 = var_j_49 ~ int;
                                m_b_i_433 = m_bl_i_431 and m_br_i_432;
                                binop_j_50 = m_b_i_433 ? (
                                        c_binop_i_434 = int_j_48 <= var_j_49
                                    ) : (
                                        ab_i_435 = abort
                                    );
                                m_i_436 = binop_j_50 ~ bool;
                                if_j_55 = m_i_436 ? (
                                        c_cond_i_440 = binop_j_50 ? (
                                                var_j_51 = notNeg;
                                                var_j_52 = tl;
                                                m_i_437 = var_j_51 ~ fun;
                                                appl_j_53 = m_i_437 ? (
                                                        c_appl_i_438 = var_j_51 var_j_52
                                                    ) : (
                                                        ab_i_439 = abort
                                                    )
                                            ) : (
                                                bool_j_54 = false
                                            )
                                    ) : (
                                        ab_i_441 = abort
                                    )
                            ) : (
                                ab_j_45 = abort
                            )
                    )
            )));
appl_j_70 = flatten_fun_j_67 flatten_fun_j_67;
flatten_fun_j_98 = fun sum_j_4 -> (
    flatten_fun_j_97 = fun x -> (
        flatten_fun_j_96 = fun acc -> (
            var_j_71 = sum_j_4;
            var_j_72 = sum_j_4;
            appl_j_73 = var_j_71 var_j_72;
            sum = appl_j_73;
            bool_j_74 = false;
            fail_b_1 = bool_j_74;
            var_j_75 = x;
            m_match_bool_j_77 = var_j_75 ~ {j_head, j_tail, _};
            m_match_bool_j_86 = var_j_75 ~ {j_empty, _};
            m_match_bool_j_89 = var_j_75 ~ {bj_untouched, _};
            m_match_cond_j_90 = m_match_bool_j_89 ? (
                    var_j_91 = fail_b_1;
                    assert_pred_j_92 = var_j_91;
                    assert_res_j_93 = assert_pred_j_92 ? (
                            assert_res_true_j_94 = {}
                        ) : (
                            ab_j_95 = abort
                        )
                ) : (
                    m_match_cond_j_87 = m_match_bool_j_86 ? (
                            var_j_88 = acc
                        ) : (
                            m_match_cond_j_78 = m_match_bool_j_77 ? (
                                    hd_j_7 = var_j_75.j_head;
                                    tl_j_6 = var_j_75.j_tail;
                                    var_j_79 = sum;
                                    var_j_80 = tl_j_6;
                                    m_i_442 = var_j_79 ~ fun;
                                    appl_j_81 = m_i_442 ? (
                                            c_appl_i_443 = var_j_79 var_j_80
                                        ) : (
                                            ab_i_444 = abort
                                        );
                                    var_j_82 = acc;
                                    var_j_83 = hd_j_7;
                                    m_bl_i_445 = var_j_82 ~ int;
                                    m_br_i_446 = var_j_83 ~ int;
                                    m_b_i_447 = m_bl_i_445 and m_br_i_446;
                                    binop_j_84 = m_b_i_447 ? (
                                            c_binop_i_448 = var_j_82 + var_j_83
                                        ) : (
                                            ab_i_449 = abort
                                        );
                                    m_i_450 = appl_j_81 ~ fun;
                                    appl_j_85 = m_i_450 ? (
                                            c_appl_i_451 = appl_j_81 binop_j_84
                                        ) : (
                                            ab_i_452 = abort
                                        )
                                ) : (
                                    ab_j_76 = abort
                                )
                        )
                ))));
appl_j_101 = flatten_fun_j_98 flatten_fun_j_98;
f_j_107 = fun l_j_35 -> (
    var_j_102 = appl_j_101;
    var_j_103 = l_j_35;
    m_i_453 = var_j_102 ~ fun;
    appl_j_104 = m_i_453 ? (
            c_appl_i_454 = var_j_102 var_j_103
        ) : (
            ab_i_455 = abort
        );
    int_j_105 = 0;
    m_i_456 = appl_j_104 ~ fun;
    appl_j_106 = m_i_456 ? (
            c_appl_i_457 = appl_j_104 int_j_105
        ) : (
            ab_i_458 = abort
        ));
f = f_j_107;
flatten_fun_j_223 = fun expr_b_33 -> (
    flatten_fun_j_159 = fun expr_b_30 -> (
        bool_j_108 = false;
        lst_fail_b_31 = bool_j_108;
        var_j_109 = expr_b_30;
        m_match_bool_j_111 = var_j_109 ~ any;
        m_match_bool_j_114 = var_j_109 ~ {j_head, j_tail, _};
        m_match_bool_j_156 = var_j_109 ~ {j_empty, _};
        m_match_cond_j_157 = m_match_bool_j_156 ? (
                bool_j_158 = true
            ) : (
                m_match_cond_j_115 = m_match_bool_j_114 ? (
                        bj_underscore = var_j_109.j_head;
                        bj_underscore2 = var_j_109.j_tail;
                        flatten_fun_j_149 = fun test_fun_b_27_j_0 -> (
                            flatten_fun_j_148 = fun test_list_b_28 -> (
                                var_j_116 = test_fun_b_27_j_0;
                                var_j_117 = test_fun_b_27_j_0;
                                appl_j_118 = var_j_116 var_j_117;
                                test_fun_b_27 = appl_j_118;
                                var_j_119 = test_list_b_28;
                                m_match_bool_j_121 = var_j_119 ~ {j_head, j_tail, _};
                                m_match_bool_j_145 = var_j_119 ~ {j_empty, _};
                                m_match_cond_j_146 = m_match_bool_j_145 ? (
                                        bool_j_147 = true
                                    ) : (
                                        m_match_cond_j_122 = m_match_bool_j_121 ? (
                                                hd_j_9 = var_j_119.j_head;
                                                tl_j_8 = var_j_119.j_tail;
                                                bool_j_123 = false;
                                                fail_b_25 = bool_j_123;
                                                flatten_fun_j_132 = fun expr_b_24 -> (
                                                    var_j_124 = expr_b_24;
                                                    m_match_bool_j_126 = var_j_124 ~ any;
                                                    m_match_bool_j_129 = var_j_124 ~ int;
                                                    m_match_cond_j_130 = m_match_bool_j_129 ? (
                                                            bool_j_131 = true
                                                        ) : (
                                                            m_match_cond_j_127 = m_match_bool_j_126 ? (
                                                                    var_j_128 = fail_b_25
                                                                ) : (
                                                                    void_j_125 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_134 = fun bj_null -> (
                                                    input_j_133 = input);
                                                record_j_135 = {checker = flatten_fun_j_132, generator = flatten_fun_j_134};
                                                proj_j_136 = record_j_135.checker;
                                                var_j_137 = hd_j_9;
                                                appl_j_138 = proj_j_136 var_j_137;
                                                elm_check_b_29 = appl_j_138;
                                                var_j_139 = elm_check_b_29;
                                                if_j_144 = var_j_139 ? (
                                                        var_j_140 = test_fun_b_27;
                                                        var_j_141 = tl_j_8;
                                                        appl_j_142 = var_j_140 var_j_141
                                                    ) : (
                                                        var_j_143 = elm_check_b_29
                                                    )
                                            ) : (
                                                void_j_120 = {}
                                            )
                                    )));
                        test_fun_b_27_j_0_j_11 = flatten_fun_j_149;
                        var_j_150 = test_fun_b_27_j_0_j_11;
                        var_j_151 = test_fun_b_27_j_0_j_11;
                        appl_j_152 = var_j_150 var_j_151;
                        test_fun_b_27_j_10 = appl_j_152;
                        var_j_153 = test_fun_b_27_j_10;
                        var_j_154 = expr_b_30;
                        appl_j_155 = var_j_153 var_j_154
                    ) : (
                        m_match_cond_j_112 = m_match_bool_j_111 ? (
                                var_j_113 = lst_fail_b_31
                            ) : (
                                void_j_110 = {}
                            )
                    )
            ));
    flatten_fun_j_208 = fun bj_null_j_16 -> (
        flatten_fun_j_194 = fun list_maker_b_22_j_1 -> (
            flatten_fun_j_193 = fun len_b_21 -> (
                var_j_160 = list_maker_b_22_j_1;
                var_j_161 = list_maker_b_22_j_1;
                appl_j_162 = var_j_160 var_j_161;
                list_maker_b_22 = appl_j_162;
                var_j_163 = len_b_21;
                int_j_164 = 0;
                binop_j_165 = var_j_163 == int_j_164;
                if_j_192 = binop_j_165 ? (
                        record_j_166 = {};
                        record_j_167 = {j_empty = record_j_166}
                    ) : (
                        bool_j_168 = false;
                        fail_b_19 = bool_j_168;
                        flatten_fun_j_177 = fun expr_b_18 -> (
                            var_j_169 = expr_b_18;
                            m_match_bool_j_171 = var_j_169 ~ any;
                            m_match_bool_j_174 = var_j_169 ~ int;
                            m_match_cond_j_175 = m_match_bool_j_174 ? (
                                    bool_j_176 = true
                                ) : (
                                    m_match_cond_j_172 = m_match_bool_j_171 ? (
                                            var_j_173 = fail_b_19
                                        ) : (
                                            void_j_170 = {}
                                        )
                                ));
                        flatten_fun_j_179 = fun bj_null_j_12 -> (
                            input_j_178 = input);
                        record_j_180 = {checker = flatten_fun_j_177, generator = flatten_fun_j_179};
                        proj_j_181 = record_j_180.generator;
                        int_j_182 = 0;
                        appl_j_183 = proj_j_181 int_j_182;
                        elm_b_23 = appl_j_183;
                        record_j_184 = {};
                        var_j_185 = elm_b_23;
                        var_j_186 = list_maker_b_22;
                        var_j_187 = len_b_21;
                        int_j_188 = 1;
                        binop_j_189 = var_j_187 - int_j_188;
                        appl_j_190 = var_j_186 binop_j_189;
                        record_j_191 = {j_cons = record_j_184, j_head = var_j_185, j_tail = appl_j_190}
                    )));
        list_maker_b_22_j_1_j_15 = flatten_fun_j_194;
        var_j_195 = list_maker_b_22_j_1_j_15;
        var_j_196 = list_maker_b_22_j_1_j_15;
        appl_j_197 = var_j_195 var_j_196;
        list_maker_b_22_j_14 = appl_j_197;
        input_j_198 = input;
        len_b_21_j_13 = input_j_198;
        int_j_199 = 0;
        var_j_200 = len_b_21_j_13;
        binop_j_201 = int_j_199 <= var_j_200;
        if_j_207 = binop_j_201 ? (
                var_j_202 = list_maker_b_22_j_14;
                var_j_203 = len_b_21_j_13;
                appl_j_204 = var_j_202 var_j_203
            ) : (
                bool_j_205 = false;
                assume_j_206 = assume bool_j_205
            ));
    record_j_209 = {checker = flatten_fun_j_159, generator = flatten_fun_j_208};
    proj_j_210 = record_j_209.checker;
    var_j_211 = expr_b_33;
    appl_j_212 = proj_j_210 var_j_211;
    t_check_b_34 = appl_j_212;
    var_j_213 = t_check_b_34;
    if_j_222 = var_j_213 ? (
            bool_j_214 = false;
            pred_check_b_35 = bool_j_214;
            var_j_215 = appl_j_70;
            var_j_216 = expr_b_33;
            appl_j_217 = var_j_215 var_j_216;
            if_j_220 = appl_j_217 ? (
                    bool_j_218 = true
                ) : (
                    var_j_219 = pred_check_b_35
                )
        ) : (
            var_j_221 = t_check_b_34
        ));
flatten_fun_j_336 = fun bj_null_j_29 -> (
    flatten_fun_j_275 = fun expr_b_14 -> (
        bool_j_224 = false;
        lst_fail_b_15 = bool_j_224;
        var_j_225 = expr_b_14;
        m_match_bool_j_227 = var_j_225 ~ any;
        m_match_bool_j_230 = var_j_225 ~ {j_head, j_tail, _};
        m_match_bool_j_272 = var_j_225 ~ {j_empty, _};
        m_match_cond_j_273 = m_match_bool_j_272 ? (
                bool_j_274 = true
            ) : (
                m_match_cond_j_231 = m_match_bool_j_230 ? (
                        bj_underscore_j_23 = var_j_225.j_head;
                        bj_underscore2_j_22 = var_j_225.j_tail;
                        flatten_fun_j_265 = fun test_fun_b_11_j_2 -> (
                            flatten_fun_j_264 = fun test_list_b_12 -> (
                                var_j_232 = test_fun_b_11_j_2;
                                var_j_233 = test_fun_b_11_j_2;
                                appl_j_234 = var_j_232 var_j_233;
                                test_fun_b_11 = appl_j_234;
                                var_j_235 = test_list_b_12;
                                m_match_bool_j_237 = var_j_235 ~ {j_head, j_tail, _};
                                m_match_bool_j_261 = var_j_235 ~ {j_empty, _};
                                m_match_cond_j_262 = m_match_bool_j_261 ? (
                                        bool_j_263 = true
                                    ) : (
                                        m_match_cond_j_238 = m_match_bool_j_237 ? (
                                                hd_j_19 = var_j_235.j_head;
                                                tl_j_18 = var_j_235.j_tail;
                                                bool_j_239 = false;
                                                fail_b_9 = bool_j_239;
                                                flatten_fun_j_248 = fun expr_b_8 -> (
                                                    var_j_240 = expr_b_8;
                                                    m_match_bool_j_242 = var_j_240 ~ any;
                                                    m_match_bool_j_245 = var_j_240 ~ int;
                                                    m_match_cond_j_246 = m_match_bool_j_245 ? (
                                                            bool_j_247 = true
                                                        ) : (
                                                            m_match_cond_j_243 = m_match_bool_j_242 ? (
                                                                    var_j_244 = fail_b_9
                                                                ) : (
                                                                    void_j_241 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_250 = fun bj_null_j_17 -> (
                                                    input_j_249 = input);
                                                record_j_251 = {checker = flatten_fun_j_248, generator = flatten_fun_j_250};
                                                proj_j_252 = record_j_251.checker;
                                                var_j_253 = hd_j_19;
                                                appl_j_254 = proj_j_252 var_j_253;
                                                elm_check_b_13 = appl_j_254;
                                                var_j_255 = elm_check_b_13;
                                                if_j_260 = var_j_255 ? (
                                                        var_j_256 = test_fun_b_11;
                                                        var_j_257 = tl_j_18;
                                                        appl_j_258 = var_j_256 var_j_257
                                                    ) : (
                                                        var_j_259 = elm_check_b_13
                                                    )
                                            ) : (
                                                void_j_236 = {}
                                            )
                                    )));
                        test_fun_b_11_j_2_j_21 = flatten_fun_j_265;
                        var_j_266 = test_fun_b_11_j_2_j_21;
                        var_j_267 = test_fun_b_11_j_2_j_21;
                        appl_j_268 = var_j_266 var_j_267;
                        test_fun_b_11_j_20 = appl_j_268;
                        var_j_269 = test_fun_b_11_j_20;
                        var_j_270 = expr_b_14;
                        appl_j_271 = var_j_269 var_j_270
                    ) : (
                        m_match_cond_j_228 = m_match_bool_j_227 ? (
                                var_j_229 = lst_fail_b_15
                            ) : (
                                void_j_226 = {}
                            )
                    )
            ));
    flatten_fun_j_324 = fun bj_null_j_28 -> (
        flatten_fun_j_310 = fun list_maker_b_6_j_3 -> (
            flatten_fun_j_309 = fun len_b_5 -> (
                var_j_276 = list_maker_b_6_j_3;
                var_j_277 = list_maker_b_6_j_3;
                appl_j_278 = var_j_276 var_j_277;
                list_maker_b_6 = appl_j_278;
                var_j_279 = len_b_5;
                int_j_280 = 0;
                binop_j_281 = var_j_279 == int_j_280;
                if_j_308 = binop_j_281 ? (
                        record_j_282 = {};
                        record_j_283 = {j_empty = record_j_282}
                    ) : (
                        bool_j_284 = false;
                        fail_b_3 = bool_j_284;
                        flatten_fun_j_293 = fun expr_b_2 -> (
                            var_j_285 = expr_b_2;
                            m_match_bool_j_287 = var_j_285 ~ any;
                            m_match_bool_j_290 = var_j_285 ~ int;
                            m_match_cond_j_291 = m_match_bool_j_290 ? (
                                    bool_j_292 = true
                                ) : (
                                    m_match_cond_j_288 = m_match_bool_j_287 ? (
                                            var_j_289 = fail_b_3
                                        ) : (
                                            void_j_286 = {}
                                        )
                                ));
                        flatten_fun_j_295 = fun bj_null_j_24 -> (
                            input_j_294 = input);
                        record_j_296 = {checker = flatten_fun_j_293, generator = flatten_fun_j_295};
                        proj_j_297 = record_j_296.generator;
                        int_j_298 = 0;
                        appl_j_299 = proj_j_297 int_j_298;
                        elm_b_7 = appl_j_299;
                        record_j_300 = {};
                        var_j_301 = elm_b_7;
                        var_j_302 = list_maker_b_6;
                        var_j_303 = len_b_5;
                        int_j_304 = 1;
                        binop_j_305 = var_j_303 - int_j_304;
                        appl_j_306 = var_j_302 binop_j_305;
                        record_j_307 = {j_cons = record_j_300, j_head = var_j_301, j_tail = appl_j_306}
                    )));
        list_maker_b_6_j_3_j_27 = flatten_fun_j_310;
        var_j_311 = list_maker_b_6_j_3_j_27;
        var_j_312 = list_maker_b_6_j_3_j_27;
        appl_j_313 = var_j_311 var_j_312;
        list_maker_b_6_j_26 = appl_j_313;
        input_j_314 = input;
        len_b_5_j_25 = input_j_314;
        int_j_315 = 0;
        var_j_316 = len_b_5_j_25;
        binop_j_317 = int_j_315 <= var_j_316;
        if_j_323 = binop_j_317 ? (
                var_j_318 = list_maker_b_6_j_26;
                var_j_319 = len_b_5_j_25;
                appl_j_320 = var_j_318 var_j_319
            ) : (
                bool_j_321 = false;
                assume_j_322 = assume bool_j_321
            ));
    record_j_325 = {checker = flatten_fun_j_275, generator = flatten_fun_j_324};
    proj_j_326 = record_j_325.generator;
    int_j_327 = 0;
    appl_j_328 = proj_j_326 int_j_327;
    candidate_b_17 = appl_j_328;
    var_j_329 = appl_j_70;
    var_j_330 = candidate_b_17;
    appl_j_331 = var_j_329 var_j_330;
    if_j_335 = appl_j_331 ? (
            var_j_332 = candidate_b_17
        ) : (
            bool_j_333 = false;
            assume_j_334 = assume bool_j_333
        ));
record_j_337 = {checker = flatten_fun_j_223, generator = flatten_fun_j_336};
proj_j_338 = record_j_337.generator;
int_j_339 = 0;
appl_j_340 = proj_j_338 int_j_339;
l_b_48 = appl_j_340;
flatten_fun_j_416 = fun l_j_34 -> (
    flatten_fun_j_378 = fun expr_b_44 -> (
        bool_j_341 = false;
        fail_b_42 = bool_j_341;
        flatten_fun_j_350 = fun expr_b_41 -> (
            var_j_342 = expr_b_41;
            m_match_bool_j_344 = var_j_342 ~ any;
            m_match_bool_j_347 = var_j_342 ~ int;
            m_match_cond_j_348 = m_match_bool_j_347 ? (
                    bool_j_349 = true
                ) : (
                    m_match_cond_j_345 = m_match_bool_j_344 ? (
                            var_j_346 = fail_b_42
                        ) : (
                            void_j_343 = {}
                        )
                ));
        flatten_fun_j_352 = fun bj_null_j_30 -> (
            input_j_351 = input);
        record_j_353 = {checker = flatten_fun_j_350, generator = flatten_fun_j_352};
        proj_j_354 = record_j_353.checker;
        var_j_355 = expr_b_44;
        appl_j_356 = proj_j_354 var_j_355;
        t_check_b_45 = appl_j_356;
        var_j_357 = t_check_b_45;
        if_j_377 = var_j_357 ? (
                bool_j_358 = false;
                pred_check_b_46 = bool_j_358;
                flatten_fun_j_370 = fun a -> (
                    int_j_359 = 0;
                    var_j_360 = a;
                    m_bl_i_459 = int_j_359 ~ int;
                    m_br_i_460 = var_j_360 ~ int;
                    m_b_i_461 = m_bl_i_459 and m_br_i_460;
                    binop_j_361 = m_b_i_461 ? (
                            c_binop_i_462 = int_j_359 < var_j_360
                        ) : (
                            ab_i_463 = abort
                        );
                    var_j_362 = appl_j_101;
                    var_j_363 = l_j_34;
                    m_i_464 = var_j_362 ~ fun;
                    appl_j_364 = m_i_464 ? (
                            c_appl_i_465 = var_j_362 var_j_363
                        ) : (
                            ab_i_466 = abort
                        );
                    int_j_365 = 0;
                    m_i_467 = appl_j_364 ~ fun;
                    appl_j_366 = m_i_467 ? (
                            c_appl_i_468 = appl_j_364 int_j_365
                        ) : (
                            ab_i_469 = abort
                        );
                    var_j_367 = a;
                    m_bl_i_470 = appl_j_366 ~ int;
                    m_br_i_471 = var_j_367 ~ int;
                    m_b_i_472 = m_bl_i_470 and m_br_i_471;
                    binop_j_368 = m_b_i_472 ? (
                            c_binop_i_473 = appl_j_366 == var_j_367
                        ) : (
                            ab_i_474 = abort
                        );
                    m_bl_i_475 = binop_j_361 ~ bool;
                    m_br_i_476 = binop_j_368 ~ bool;
                    m_b_i_477 = m_bl_i_475 and m_br_i_476;
                    binop_j_369 = m_b_i_477 ? (
                            c_binop_i_478 = binop_j_361 and binop_j_368
                        ) : (
                            ab_i_479 = abort
                        ));
                var_j_371 = expr_b_44;
                appl_j_372 = flatten_fun_j_370 var_j_371;
                if_j_375 = appl_j_372 ? (
                        bool_j_373 = true
                    ) : (
                        var_j_374 = pred_check_b_46
                    )
            ) : (
                var_j_376 = t_check_b_45
            ));
    flatten_fun_j_413 = fun bj_null_j_33 -> (
        bool_j_379 = false;
        fail_b_38 = bool_j_379;
        flatten_fun_j_388 = fun expr_b_37 -> (
            var_j_380 = expr_b_37;
            m_match_bool_j_382 = var_j_380 ~ any;
            m_match_bool_j_385 = var_j_380 ~ int;
            m_match_cond_j_386 = m_match_bool_j_385 ? (
                    bool_j_387 = true
                ) : (
                    m_match_cond_j_383 = m_match_bool_j_382 ? (
                            var_j_384 = fail_b_38
                        ) : (
                            void_j_381 = {}
                        )
                ));
        flatten_fun_j_390 = fun bj_null_j_31 -> (
            input_j_389 = input);
        record_j_391 = {checker = flatten_fun_j_388, generator = flatten_fun_j_390};
        proj_j_392 = record_j_391.generator;
        int_j_393 = 0;
        appl_j_394 = proj_j_392 int_j_393;
        candidate_b_40 = appl_j_394;
        flatten_fun_j_406 = fun a_j_32 -> (
            int_j_395 = 0;
            var_j_396 = a_j_32;
            m_bl_i_480 = int_j_395 ~ int;
            m_br_i_481 = var_j_396 ~ int;
            m_b_i_482 = m_bl_i_480 and m_br_i_481;
            binop_j_397 = m_b_i_482 ? (
                    c_binop_i_483 = int_j_395 < var_j_396
                ) : (
                    ab_i_484 = abort
                );
            var_j_398 = appl_j_101;
            var_j_399 = l_j_34;
            m_i_485 = var_j_398 ~ fun;
            appl_j_400 = m_i_485 ? (
                    c_appl_i_486 = var_j_398 var_j_399
                ) : (
                    ab_i_487 = abort
                );
            int_j_401 = 0;
            m_i_488 = appl_j_400 ~ fun;
            appl_j_402 = m_i_488 ? (
                    c_appl_i_489 = appl_j_400 int_j_401
                ) : (
                    ab_i_490 = abort
                );
            var_j_403 = a_j_32;
            m_bl_i_491 = appl_j_402 ~ int;
            m_br_i_492 = var_j_403 ~ int;
            m_b_i_493 = m_bl_i_491 and m_br_i_492;
            binop_j_404 = m_b_i_493 ? (
                    c_binop_i_494 = appl_j_402 == var_j_403
                ) : (
                    ab_i_495 = abort
                );
            m_bl_i_496 = binop_j_397 ~ bool;
            m_br_i_497 = binop_j_404 ~ bool;
            m_b_i_498 = m_bl_i_496 and m_br_i_497;
            binop_j_405 = m_b_i_498 ? (
                    c_binop_i_499 = binop_j_397 and binop_j_404
                ) : (
                    ab_i_500 = abort
                ));
        var_j_407 = candidate_b_40;
        appl_j_408 = flatten_fun_j_406 var_j_407;
        if_j_412 = appl_j_408 ? (
                var_j_409 = candidate_b_40
            ) : (
                bool_j_410 = false;
                assume_j_411 = assume bool_j_410
            ));
    record_j_414 = {checker = flatten_fun_j_378, generator = flatten_fun_j_413};
    proj_j_415 = record_j_414.checker);
appl_j_418 = flatten_fun_j_416 l_b_48;
appl_j_421 = f l_b_48;
appl_j_422 = appl_j_418 appl_j_421;
check_res_b_49 = appl_j_422;
if_j_430 = check_res_b_49 ? (
        var_j_424 = f
    ) : (
        error_var_j_425 = check_res_b_49;
        assert_pred_j_426 = error_var_j_425;
        assert_res_j_427 = assert_pred_j_426 ? (
                assert_res_true_j_428 = {}
            ) : (
                ab_j_429 = abort
            )
    );
i_result = if_j_430