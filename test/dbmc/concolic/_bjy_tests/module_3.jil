i_first = {};
flatten_fun_j_82 = fun expr_b_14 -> (
    bool_j_22 = false;
    lst_fail_b_15 = bool_j_22;
    var_j_23 = expr_b_14;
    m_match_bool_j_25 = var_j_23 ~ any;
    m_match_bool_j_28 = var_j_23 ~ {j_head, j_tail, _};
    m_match_bool_j_79 = var_j_23 ~ {j_empty, _};
    m_match_cond_j_80 = m_match_bool_j_79 ? (
            bool_j_81 = true
        ) : (
            m_match_cond_j_29 = m_match_bool_j_28 ? (
                    bj_underscore = var_j_23.j_head;
                    bj_underscore2 = var_j_23.j_tail;
                    flatten_fun_j_72 = fun test_fun_b_11_j_0 -> (
                        flatten_fun_j_71 = fun test_list_b_12 -> (
                            var_j_30 = test_fun_b_11_j_0;
                            var_j_31 = test_fun_b_11_j_0;
                            appl_j_32 = var_j_30 var_j_31;
                            test_fun_b_11 = appl_j_32;
                            var_j_33 = test_list_b_12;
                            m_match_bool_j_35 = var_j_33 ~ {j_head, j_tail, _};
                            m_match_bool_j_68 = var_j_33 ~ {j_empty, _};
                            m_match_cond_j_69 = m_match_bool_j_68 ? (
                                    bool_j_70 = true
                                ) : (
                                    m_match_cond_j_36 = m_match_bool_j_35 ? (
                                            hd = var_j_33.j_head;
                                            tl = var_j_33.j_tail;
                                            bool_j_37 = false;
                                            fail_b_7 = bool_j_37;
                                            flatten_fun_j_53 = fun expr_b_8 -> (
                                                var_j_38 = expr_b_8;
                                                m_match_bool_j_40 = var_j_38 ~ any;
                                                m_match_bool_j_43 = var_j_38 ~ 
                                                    {bj_untouched, _};
                                                m_match_cond_j_44 = m_match_bool_j_43 ? (
                                                        bj_poly_var_b_9 = var_j_38.bj_untouched;
                                                        var_j_45 = bj_poly_var_b_9;
                                                        m_match_bool_j_47 = var_j_45 ~ any;
                                                        m_match_bool_j_50 = var_j_45 ~ 
                                                            {bj_ticka, _};
                                                        m_match_cond_j_51 = m_match_bool_j_50 ? (
                                                                bool_j_52 = true
                                                            ) : (
                                                                m_match_cond_j_48 = m_match_bool_j_47 ? (
                                                                        
                                                                    var_j_49 = fail_b_7
                                                                    ) : (
                                                                        
                                                                    void_j_46 = 
                                                                    {}
                                                                    )
                                                            )
                                                    ) : (
                                                        m_match_cond_j_41 = m_match_bool_j_40 ? (
                                                                var_j_42 = fail_b_7
                                                            ) : (
                                                                void_j_39 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_57 = fun bj_null -> (
                                                record_j_54 = {};
                                                record_j_55 = {bj_ticka = record_j_54};
                                                record_j_56 = {bj_untouched = record_j_55});
                                            record_j_58 = {checker = flatten_fun_j_53, generator = flatten_fun_j_57};
                                            proj_j_59 = record_j_58.checker;
                                            var_j_60 = hd;
                                            appl_j_61 = proj_j_59 var_j_60;
                                            elm_check_b_13 = appl_j_61;
                                            var_j_62 = elm_check_b_13;
                                            if_j_67 = var_j_62 ? (
                                                    var_j_63 = test_fun_b_11;
                                                    var_j_64 = tl;
                                                    appl_j_65 = var_j_63 var_j_64
                                                ) : (
                                                    var_j_66 = elm_check_b_13
                                                )
                                        ) : (
                                            void_j_34 = {}
                                        )
                                )));
                    test_fun_b_11_j_0_j_3 = flatten_fun_j_72;
                    var_j_73 = test_fun_b_11_j_0_j_3;
                    var_j_74 = test_fun_b_11_j_0_j_3;
                    appl_j_75 = var_j_73 var_j_74;
                    test_fun_b_11_j_2 = appl_j_75;
                    var_j_76 = test_fun_b_11_j_2;
                    var_j_77 = expr_b_14;
                    appl_j_78 = var_j_76 var_j_77
                ) : (
                    m_match_cond_j_26 = m_match_bool_j_25 ? (
                            var_j_27 = lst_fail_b_15
                        ) : (
                            void_j_24 = {}
                        )
                )
        ));
flatten_fun_j_140 = fun bj_null_j_8 -> (
    flatten_fun_j_126 = fun list_maker_b_5_j_1 -> (
        flatten_fun_j_125 = fun len_b_4 -> (
            var_j_83 = list_maker_b_5_j_1;
            var_j_84 = list_maker_b_5_j_1;
            appl_j_85 = var_j_83 var_j_84;
            list_maker_b_5 = appl_j_85;
            var_j_86 = len_b_4;
            int_j_87 = 0;
            binop_j_88 = var_j_86 == int_j_87;
            if_j_124 = binop_j_88 ? (
                    record_j_89 = {};
                    record_j_90 = {j_empty = record_j_89}
                ) : (
                    bool_j_91 = false;
                    fail_b_0 = bool_j_91;
                    flatten_fun_j_107 = fun expr_b_1 -> (
                        var_j_92 = expr_b_1;
                        m_match_bool_j_94 = var_j_92 ~ any;
                        m_match_bool_j_97 = var_j_92 ~ {bj_untouched, _};
                        m_match_cond_j_98 = m_match_bool_j_97 ? (
                                bj_poly_var_b_2 = var_j_92.bj_untouched;
                                var_j_99 = bj_poly_var_b_2;
                                m_match_bool_j_101 = var_j_99 ~ any;
                                m_match_bool_j_104 = var_j_99 ~ {bj_ticka, _};
                                m_match_cond_j_105 = m_match_bool_j_104 ? (
                                        bool_j_106 = true
                                    ) : (
                                        m_match_cond_j_102 = m_match_bool_j_101 ? (
                                                var_j_103 = fail_b_0
                                            ) : (
                                                void_j_100 = {}
                                            )
                                    )
                            ) : (
                                m_match_cond_j_95 = m_match_bool_j_94 ? (
                                        var_j_96 = fail_b_0
                                    ) : (
                                        void_j_93 = {}
                                    )
                            ));
                    flatten_fun_j_111 = fun bj_null_j_4 -> (
                        record_j_108 = {};
                        record_j_109 = {bj_ticka = record_j_108};
                        record_j_110 = {bj_untouched = record_j_109});
                    record_j_112 = {checker = flatten_fun_j_107, generator = flatten_fun_j_111};
                    proj_j_113 = record_j_112.generator;
                    int_j_114 = 0;
                    appl_j_115 = proj_j_113 int_j_114;
                    elm_b_6 = appl_j_115;
                    record_j_116 = {};
                    var_j_117 = elm_b_6;
                    var_j_118 = list_maker_b_5;
                    var_j_119 = len_b_4;
                    int_j_120 = 1;
                    binop_j_121 = var_j_119 - int_j_120;
                    appl_j_122 = var_j_118 binop_j_121;
                    record_j_123 = {j_cons = record_j_116, j_head = var_j_117, j_tail = appl_j_122}
                )));
    list_maker_b_5_j_1_j_7 = flatten_fun_j_126;
    var_j_127 = list_maker_b_5_j_1_j_7;
    var_j_128 = list_maker_b_5_j_1_j_7;
    appl_j_129 = var_j_127 var_j_128;
    list_maker_b_5_j_6 = appl_j_129;
    input_j_130 = input;
    len_b_4_j_5 = input_j_130;
    int_j_131 = 0;
    var_j_132 = len_b_4_j_5;
    binop_j_133 = int_j_131 <= var_j_132;
    if_j_139 = binop_j_133 ? (
            var_j_134 = list_maker_b_5_j_6;
            var_j_135 = len_b_4_j_5;
            appl_j_136 = var_j_134 var_j_135
        ) : (
            bool_j_137 = false;
            assume_j_138 = assume bool_j_137
        ));
record_j_141 = {checker = flatten_fun_j_82, generator = flatten_fun_j_140};
t = record_j_141;
flatten_fun_j_147 = fun x -> (
    flatten_fun_j_146 = fun s -> (
        record_j_142 = {};
        var_j_143 = x;
        var_j_144 = s;
        record_j_145 = {j_cons = record_j_142, j_head = var_j_143, j_tail = var_j_144}));
record_j_148 = {add = flatten_fun_j_147};
record_j_149 = {};
record_j_150 = {add = record_j_149};
record_j_151 = {bj_actual_rec = record_j_148, bj_decl_lbls = record_j_150};
record_j_153 = {t = t};
record_j_154 = {};
record_j_155 = {t = record_j_154};
record_j_156 = {bj_actual_rec = record_j_153, bj_decl_lbls = record_j_155};
record_j_157 = {module = record_j_151, type = record_j_156};
record_j_158 = {};
record_j_159 = {};
record_j_160 = {module = record_j_158, type = record_j_159};
record_j_161 = {bj_actual_rec = record_j_157, bj_decl_lbls = record_j_160};
sample_module = record_j_161;
flatten_fun_j_462 = fun t_j_21 -> (
    flatten_fun_j_321 = fun expr_b_61 -> (
        bool_j_162 = false;
        rec_fail_b_60 = bool_j_162;
        bool_j_163 = false;
        rec_fail_b_59 = bool_j_163;
        bool_j_164 = false;
        rec_fail_b_58 = bool_j_164;
        var_j_165 = expr_b_61;
        m_match_bool_j_167 = var_j_165 ~ any;
        m_match_bool_j_170 = var_j_165 ~ {bj_actual_rec, _};
        m_match_cond_j_171 = m_match_bool_j_170 ? (
                var_j_172 = expr_b_61;
                proj_j_173 = var_j_172.bj_decl_lbls;
                m_match_bool_j_175 = proj_j_173 ~ any;
                m_match_bool_j_178 = proj_j_173 ~ {add, _};
                m_match_cond_j_179 = m_match_bool_j_178 ? (
                        add_j_14 = proj_j_173.add;
                        var_j_180 = expr_b_61;
                        proj_j_181 = var_j_180.bj_actual_rec;
                        m_match_bool_j_183 = proj_j_181 ~ any;
                        m_match_bool_j_186 = proj_j_181 ~ {add, _};
                        m_match_cond_j_187 = m_match_bool_j_186 ? (
                                add = proj_j_181.add;
                                flatten_fun_j_249 = fun expr_b_86 -> (
                                    bool_j_188 = false;
                                    fail_b_75 = bool_j_188;
                                    flatten_fun_j_204 = fun expr_b_76 -> (
                                        var_j_189 = expr_b_76;
                                        m_match_bool_j_191 = var_j_189 ~ any;
                                        m_match_bool_j_194 = var_j_189 ~ 
                                            {bj_untouched, _};
                                        m_match_cond_j_195 = m_match_bool_j_194 ? (
                                                bj_poly_var_b_77 = var_j_189.bj_untouched;
                                                var_j_196 = bj_poly_var_b_77;
                                                m_match_bool_j_198 = var_j_196 ~ any;
                                                m_match_bool_j_201 = var_j_196 ~ 
                                                    {bj_ticka, _};
                                                m_match_cond_j_202 = m_match_bool_j_201 ? (
                                                        bool_j_203 = true
                                                    ) : (
                                                        m_match_cond_j_199 = m_match_bool_j_198 ? (
                                                                var_j_200 = fail_b_75
                                                            ) : (
                                                                void_j_197 = 
                                                                    {}
                                                            )
                                                    )
                                            ) : (
                                                m_match_cond_j_192 = m_match_bool_j_191 ? (
                                                        var_j_193 = fail_b_75
                                                    ) : (
                                                        void_j_190 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_208 = fun bj_null_j_9 -> (
                                        record_j_205 = {};
                                        record_j_206 = {bj_ticka = record_j_205};
                                        record_j_207 = {bj_untouched = record_j_206});
                                    record_j_209 = {checker = flatten_fun_j_204, generator = flatten_fun_j_208};
                                    proj_j_210 = record_j_209.generator;
                                    int_j_211 = 0;
                                    appl_j_212 = proj_j_210 int_j_211;
                                    arg_assert_b_87 = appl_j_212;
                                    var_j_213 = expr_b_86;
                                    var_j_214 = arg_assert_b_87;
                                    appl_j_215 = var_j_213 var_j_214;
                                    fun_ret_b_88 = appl_j_215;
                                    flatten_fun_j_227 = fun expr_b_81 -> (
                                        var_j_216 = t_j_21;
                                        proj_j_217 = var_j_216.generator;
                                        int_j_218 = 0;
                                        appl_j_219 = proj_j_217 int_j_218;
                                        arg_assert_b_82 = appl_j_219;
                                        var_j_220 = expr_b_81;
                                        var_j_221 = arg_assert_b_82;
                                        appl_j_222 = var_j_220 var_j_221;
                                        fun_ret_b_83 = appl_j_222;
                                        var_j_223 = t_j_21;
                                        proj_j_224 = var_j_223.checker;
                                        var_j_225 = fun_ret_b_83;
                                        appl_j_226 = proj_j_224 var_j_225);
                                    flatten_fun_j_244 = fun bj_null_j_10 -> (
                                        flatten_fun_j_243 = fun arg_assume_b_79 -> (
                                            var_j_228 = t_j_21;
                                            proj_j_229 = var_j_228.checker;
                                            var_j_230 = arg_assume_b_79;
                                            appl_j_231 = proj_j_229 var_j_230;
                                            if_j_242 = appl_j_231 ? (
                                                    var_j_232 = t_j_21;
                                                    proj_j_233 = var_j_232.generator;
                                                    int_j_234 = 0;
                                                    appl_j_235 = proj_j_233 int_j_234
                                                ) : (
                                                    bool_j_236 = false;
                                                    fail_b_80 = bool_j_236;
                                                    var_j_237 = fail_b_80;
                                                    assert_pred_j_238 = var_j_237;
                                                    assert_res_j_239 = assert_pred_j_238 ? (
                                                            assert_res_true_j_240 = 
                                                                {}
                                                        ) : (
                                                            ab_j_241 = abort
                                                        )
                                                )));
                                    record_j_245 = {checker = flatten_fun_j_227, generator = flatten_fun_j_244};
                                    proj_j_246 = record_j_245.checker;
                                    var_j_247 = fun_ret_b_88;
                                    appl_j_248 = proj_j_246 var_j_247);
                                flatten_fun_j_316 = fun bj_null_j_13 -> (
                                    flatten_fun_j_315 = fun arg_assume_b_73 -> (
                                        bool_j_250 = false;
                                        fail_b_62 = bool_j_250;
                                        flatten_fun_j_266 = fun expr_b_63 -> (
                                            var_j_251 = expr_b_63;
                                            m_match_bool_j_253 = var_j_251 ~ any;
                                            m_match_bool_j_256 = var_j_251 ~ 
                                                {bj_untouched, _};
                                            m_match_cond_j_257 = m_match_bool_j_256 ? (
                                                    bj_poly_var_b_64 = var_j_251.bj_untouched;
                                                    var_j_258 = bj_poly_var_b_64;
                                                    m_match_bool_j_260 = var_j_258 ~ any;
                                                    m_match_bool_j_263 = var_j_258 ~ 
                                                        {bj_ticka, _};
                                                    m_match_cond_j_264 = m_match_bool_j_263 ? (
                                                            bool_j_265 = true
                                                        ) : (
                                                            m_match_cond_j_261 = m_match_bool_j_260 ? (
                                                                    var_j_262 = fail_b_62
                                                                ) : (
                                                                    void_j_259 = 
                                                                    {}
                                                                )
                                                        )
                                                ) : (
                                                    m_match_cond_j_254 = m_match_bool_j_253 ? (
                                                            var_j_255 = fail_b_62
                                                        ) : (
                                                            void_j_252 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_270 = fun bj_null_j_11 -> (
                                            record_j_267 = {};
                                            record_j_268 = {bj_ticka = record_j_267};
                                            record_j_269 = {bj_untouched = record_j_268});
                                        record_j_271 = {checker = flatten_fun_j_266, generator = flatten_fun_j_270};
                                        proj_j_272 = record_j_271.checker;
                                        var_j_273 = arg_assume_b_73;
                                        appl_j_274 = proj_j_272 var_j_273;
                                        if_j_314 = appl_j_274 ? (
                                                flatten_fun_j_286 = fun expr_b_68 -> (
                                                    var_j_275 = t_j_21;
                                                    proj_j_276 = var_j_275.generator;
                                                    int_j_277 = 0;
                                                    appl_j_278 = proj_j_276 int_j_277;
                                                    arg_assert_b_69 = appl_j_278;
                                                    var_j_279 = expr_b_68;
                                                    var_j_280 = arg_assert_b_69;
                                                    appl_j_281 = var_j_279 var_j_280;
                                                    fun_ret_b_70 = appl_j_281;
                                                    var_j_282 = t_j_21;
                                                    proj_j_283 = var_j_282.checker;
                                                    var_j_284 = fun_ret_b_70;
                                                    appl_j_285 = proj_j_283 var_j_284);
                                                flatten_fun_j_303 = fun bj_null_j_12 -> (
                                                    flatten_fun_j_302 = fun arg_assume_b_66 -> (
                                                        var_j_287 = t_j_21;
                                                        proj_j_288 = var_j_287.checker;
                                                        var_j_289 = arg_assume_b_66;
                                                        appl_j_290 = proj_j_288 var_j_289;
                                                        if_j_301 = appl_j_290 ? (
                                                                var_j_291 = t_j_21;
                                                                proj_j_292 = var_j_291.generator;
                                                                int_j_293 = 0;
                                                                appl_j_294 = proj_j_292 int_j_293
                                                            ) : (
                                                                bool_j_295 = false;
                                                                fail_b_67 = bool_j_295;
                                                                var_j_296 = fail_b_67;
                                                                assert_pred_j_297 = var_j_296;
                                                                assert_res_j_298 = assert_pred_j_297 ? (
                                                                        
                                                                    assert_res_true_j_299 = 
                                                                    {}
                                                                    ) : (
                                                                        
                                                                    ab_j_300 = abort
                                                                    )
                                                            )));
                                                record_j_304 = {checker = flatten_fun_j_286, generator = flatten_fun_j_303};
                                                proj_j_305 = record_j_304.generator;
                                                int_j_306 = 0;
                                                appl_j_307 = proj_j_305 int_j_306
                                            ) : (
                                                bool_j_308 = false;
                                                fail_b_74 = bool_j_308;
                                                var_j_309 = fail_b_74;
                                                assert_pred_j_310 = var_j_309;
                                                assert_res_j_311 = assert_pred_j_310 ? (
                                                        assert_res_true_j_312 = 
                                                            {}
                                                    ) : (
                                                        ab_j_313 = abort
                                                    )
                                            )));
                                record_j_317 = {checker = flatten_fun_j_249, generator = flatten_fun_j_316};
                                proj_j_318 = record_j_317.checker;
                                var_j_319 = add;
                                appl_j_320 = proj_j_318 var_j_319
                            ) : (
                                m_match_cond_j_184 = m_match_bool_j_183 ? (
                                        var_j_185 = rec_fail_b_58
                                    ) : (
                                        void_j_182 = {}
                                    )
                            )
                    ) : (
                        m_match_cond_j_176 = m_match_bool_j_175 ? (
                                var_j_177 = rec_fail_b_59
                            ) : (
                                void_j_174 = {}
                            )
                    )
            ) : (
                m_match_cond_j_168 = m_match_bool_j_167 ? (
                        var_j_169 = rec_fail_b_60
                    ) : (
                        void_j_166 = {}
                    )
            ));
    flatten_fun_j_460 = fun bj_null_j_20 -> (
        flatten_fun_j_383 = fun expr_b_42 -> (
            bool_j_322 = false;
            fail_b_31 = bool_j_322;
            flatten_fun_j_338 = fun expr_b_32 -> (
                var_j_323 = expr_b_32;
                m_match_bool_j_325 = var_j_323 ~ any;
                m_match_bool_j_328 = var_j_323 ~ {bj_untouched, _};
                m_match_cond_j_329 = m_match_bool_j_328 ? (
                        bj_poly_var_b_33 = var_j_323.bj_untouched;
                        var_j_330 = bj_poly_var_b_33;
                        m_match_bool_j_332 = var_j_330 ~ any;
                        m_match_bool_j_335 = var_j_330 ~ {bj_ticka, _};
                        m_match_cond_j_336 = m_match_bool_j_335 ? (
                                bool_j_337 = true
                            ) : (
                                m_match_cond_j_333 = m_match_bool_j_332 ? (
                                        var_j_334 = fail_b_31
                                    ) : (
                                        void_j_331 = {}
                                    )
                            )
                    ) : (
                        m_match_cond_j_326 = m_match_bool_j_325 ? (
                                var_j_327 = fail_b_31
                            ) : (
                                void_j_324 = {}
                            )
                    ));
            flatten_fun_j_342 = fun bj_null_j_15 -> (
                record_j_339 = {};
                record_j_340 = {bj_ticka = record_j_339};
                record_j_341 = {bj_untouched = record_j_340});
            record_j_343 = {checker = flatten_fun_j_338, generator = flatten_fun_j_342};
            proj_j_344 = record_j_343.generator;
            int_j_345 = 0;
            appl_j_346 = proj_j_344 int_j_345;
            arg_assert_b_43 = appl_j_346;
            var_j_347 = expr_b_42;
            var_j_348 = arg_assert_b_43;
            appl_j_349 = var_j_347 var_j_348;
            fun_ret_b_44 = appl_j_349;
            flatten_fun_j_361 = fun expr_b_37 -> (
                var_j_350 = t_j_21;
                proj_j_351 = var_j_350.generator;
                int_j_352 = 0;
                appl_j_353 = proj_j_351 int_j_352;
                arg_assert_b_38 = appl_j_353;
                var_j_354 = expr_b_37;
                var_j_355 = arg_assert_b_38;
                appl_j_356 = var_j_354 var_j_355;
                fun_ret_b_39 = appl_j_356;
                var_j_357 = t_j_21;
                proj_j_358 = var_j_357.checker;
                var_j_359 = fun_ret_b_39;
                appl_j_360 = proj_j_358 var_j_359);
            flatten_fun_j_378 = fun bj_null_j_16 -> (
                flatten_fun_j_377 = fun arg_assume_b_35 -> (
                    var_j_362 = t_j_21;
                    proj_j_363 = var_j_362.checker;
                    var_j_364 = arg_assume_b_35;
                    appl_j_365 = proj_j_363 var_j_364;
                    if_j_376 = appl_j_365 ? (
                            var_j_366 = t_j_21;
                            proj_j_367 = var_j_366.generator;
                            int_j_368 = 0;
                            appl_j_369 = proj_j_367 int_j_368
                        ) : (
                            bool_j_370 = false;
                            fail_b_36 = bool_j_370;
                            var_j_371 = fail_b_36;
                            assert_pred_j_372 = var_j_371;
                            assert_res_j_373 = assert_pred_j_372 ? (
                                    assert_res_true_j_374 = {}
                                ) : (
                                    ab_j_375 = abort
                                )
                        )));
            record_j_379 = {checker = flatten_fun_j_361, generator = flatten_fun_j_378};
            proj_j_380 = record_j_379.checker;
            var_j_381 = fun_ret_b_44;
            appl_j_382 = proj_j_380 var_j_381);
        flatten_fun_j_450 = fun bj_null_j_19 -> (
            flatten_fun_j_449 = fun arg_assume_b_29 -> (
                bool_j_384 = false;
                fail_b_18 = bool_j_384;
                flatten_fun_j_400 = fun expr_b_19 -> (
                    var_j_385 = expr_b_19;
                    m_match_bool_j_387 = var_j_385 ~ any;
                    m_match_bool_j_390 = var_j_385 ~ {bj_untouched, _};
                    m_match_cond_j_391 = m_match_bool_j_390 ? (
                            bj_poly_var_b_20 = var_j_385.bj_untouched;
                            var_j_392 = bj_poly_var_b_20;
                            m_match_bool_j_394 = var_j_392 ~ any;
                            m_match_bool_j_397 = var_j_392 ~ {bj_ticka, _};
                            m_match_cond_j_398 = m_match_bool_j_397 ? (
                                    bool_j_399 = true
                                ) : (
                                    m_match_cond_j_395 = m_match_bool_j_394 ? (
                                            var_j_396 = fail_b_18
                                        ) : (
                                            void_j_393 = {}
                                        )
                                )
                        ) : (
                            m_match_cond_j_388 = m_match_bool_j_387 ? (
                                    var_j_389 = fail_b_18
                                ) : (
                                    void_j_386 = {}
                                )
                        ));
                flatten_fun_j_404 = fun bj_null_j_17 -> (
                    record_j_401 = {};
                    record_j_402 = {bj_ticka = record_j_401};
                    record_j_403 = {bj_untouched = record_j_402});
                record_j_405 = {checker = flatten_fun_j_400, generator = flatten_fun_j_404};
                proj_j_406 = record_j_405.checker;
                var_j_407 = arg_assume_b_29;
                appl_j_408 = proj_j_406 var_j_407;
                if_j_448 = appl_j_408 ? (
                        flatten_fun_j_420 = fun expr_b_24 -> (
                            var_j_409 = t_j_21;
                            proj_j_410 = var_j_409.generator;
                            int_j_411 = 0;
                            appl_j_412 = proj_j_410 int_j_411;
                            arg_assert_b_25 = appl_j_412;
                            var_j_413 = expr_b_24;
                            var_j_414 = arg_assert_b_25;
                            appl_j_415 = var_j_413 var_j_414;
                            fun_ret_b_26 = appl_j_415;
                            var_j_416 = t_j_21;
                            proj_j_417 = var_j_416.checker;
                            var_j_418 = fun_ret_b_26;
                            appl_j_419 = proj_j_417 var_j_418);
                        flatten_fun_j_437 = fun bj_null_j_18 -> (
                            flatten_fun_j_436 = fun arg_assume_b_22 -> (
                                var_j_421 = t_j_21;
                                proj_j_422 = var_j_421.checker;
                                var_j_423 = arg_assume_b_22;
                                appl_j_424 = proj_j_422 var_j_423;
                                if_j_435 = appl_j_424 ? (
                                        var_j_425 = t_j_21;
                                        proj_j_426 = var_j_425.generator;
                                        int_j_427 = 0;
                                        appl_j_428 = proj_j_426 int_j_427
                                    ) : (
                                        bool_j_429 = false;
                                        fail_b_23 = bool_j_429;
                                        var_j_430 = fail_b_23;
                                        assert_pred_j_431 = var_j_430;
                                        assert_res_j_432 = assert_pred_j_431 ? (
                                                assert_res_true_j_433 = 
                                                    {}
                                            ) : (
                                                ab_j_434 = abort
                                            )
                                    )));
                        record_j_438 = {checker = flatten_fun_j_420, generator = flatten_fun_j_437};
                        proj_j_439 = record_j_438.generator;
                        int_j_440 = 0;
                        appl_j_441 = proj_j_439 int_j_440
                    ) : (
                        bool_j_442 = false;
                        fail_b_30 = bool_j_442;
                        var_j_443 = fail_b_30;
                        assert_pred_j_444 = var_j_443;
                        assert_res_j_445 = assert_pred_j_444 ? (
                                assert_res_true_j_446 = {}
                            ) : (
                                ab_j_447 = abort
                            )
                    )));
        record_j_451 = {checker = flatten_fun_j_383, generator = flatten_fun_j_450};
        proj_j_452 = record_j_451.generator;
        int_j_453 = 0;
        appl_j_454 = proj_j_452 int_j_453;
        add_b_17 = appl_j_454;
        var_j_455 = add_b_17;
        record_j_456 = {add = var_j_455};
        record_j_457 = {};
        record_j_458 = {add = record_j_457};
        record_j_459 = {bj_actual_rec = record_j_456, bj_decl_lbls = record_j_458});
    record_j_461 = {checker = flatten_fun_j_321, generator = flatten_fun_j_460});
module_type = flatten_fun_j_462;
proj_j_464 = sample_module.bj_decl_lbls;
m_match_bool_j_466 = proj_j_464 ~ any;
m_match_bool_j_473 = proj_j_464 ~ {type, _};
m_match_cond_j_474 = m_match_bool_j_473 ? (
        var_j_475 = sample_module;
        proj_j_476 = var_j_475.bj_actual_rec;
        proj_j_477 = proj_j_476.type
    ) : (
        m_match_cond_j_467 = m_match_bool_j_466 ? (
                bool_j_468 = false;
                assert_pred_j_469 = bool_j_468;
                assert_res_j_470 = assert_pred_j_469 ? (
                        assert_res_true_j_471 = {}
                    ) : (
                        ab_j_472 = abort
                    )
            ) : (
                void_j_465 = {}
            )
    );
proj_j_478 = m_match_cond_j_474.bj_decl_lbls;
m_match_bool_j_480 = proj_j_478 ~ any;
m_match_bool_j_487 = proj_j_478 ~ {t, _};
m_match_cond_j_488 = m_match_bool_j_487 ? (
        var_j_489 = sample_module;
        proj_j_490 = var_j_489.bj_decl_lbls;
        m_match_bool_j_492 = proj_j_490 ~ any;
        m_match_bool_j_499 = proj_j_490 ~ {type, _};
        m_match_cond_j_500 = m_match_bool_j_499 ? (
                var_j_501 = sample_module;
                proj_j_502 = var_j_501.bj_actual_rec;
                proj_j_503 = proj_j_502.type
            ) : (
                m_match_cond_j_493 = m_match_bool_j_492 ? (
                        bool_j_494 = false;
                        assert_pred_j_495 = bool_j_494;
                        assert_res_j_496 = assert_pred_j_495 ? (
                                assert_res_true_j_497 = {}
                            ) : (
                                ab_j_498 = abort
                            )
                    ) : (
                        void_j_491 = {}
                    )
            );
        proj_j_504 = m_match_cond_j_500.bj_actual_rec;
        proj_j_505 = proj_j_504.t
    ) : (
        m_match_cond_j_481 = m_match_bool_j_480 ? (
                bool_j_482 = false;
                assert_pred_j_483 = bool_j_482;
                assert_res_j_484 = assert_pred_j_483 ? (
                        assert_res_true_j_485 = {}
                    ) : (
                        ab_j_486 = abort
                    )
            ) : (
                void_j_479 = {}
            )
    );
inner_t = m_match_cond_j_488;
m_i_537 = module_type ~ fun;
appl_j_508 = m_i_537 ? (
        c_appl_i_538 = module_type inner_t
    ) : (
        ab_i_539 = abort
    );
module_type_check = appl_j_508;
proj_j_510 = sample_module.bj_decl_lbls;
m_match_bool_j_512 = proj_j_510 ~ any;
m_match_bool_j_519 = proj_j_510 ~ {module, _};
m_match_cond_j_520 = m_match_bool_j_519 ? (
        var_j_521 = sample_module;
        proj_j_522 = var_j_521.bj_actual_rec;
        proj_j_523 = proj_j_522.module
    ) : (
        m_match_cond_j_513 = m_match_bool_j_512 ? (
                bool_j_514 = false;
                assert_pred_j_515 = bool_j_514;
                assert_res_j_516 = assert_pred_j_515 ? (
                        assert_res_true_j_517 = {}
                    ) : (
                        ab_j_518 = abort
                    )
            ) : (
                void_j_511 = {}
            )
    );
check_type_b_103 = m_match_cond_j_520;
check_type = check_type_b_103;
proj_j_526 = module_type_check.checker;
appl_j_528 = proj_j_526 check_type_b_103;
check_res_b_104 = appl_j_528;
if_j_536 = check_res_b_104 ? (
        var_j_530 = sample_module
    ) : (
        error_var_j_531 = check_res_b_104;
        assert_pred_j_532 = error_var_j_531;
        assert_res_j_533 = assert_pred_j_532 ? (
                assert_res_true_j_534 = {}
            ) : (
                ab_j_535 = abort
            )
    );
i_result = if_j_536