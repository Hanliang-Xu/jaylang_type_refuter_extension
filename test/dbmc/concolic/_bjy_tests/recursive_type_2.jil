int_j_4 = 1;
x_b_7 = int_j_4;
x = x_b_7;
flatten_fun_j_25 = fun f_b_2 -> (
    flatten_fun_j_14 = fun x_b_1 -> (
        flatten_fun_j_13 = fun freeze_b_3 -> (
            var_j_6 = f_b_2;
            var_j_7 = x_b_1;
            var_j_8 = x_b_1;
            appl_j_9 = var_j_7 var_j_8;
            appl_j_10 = var_j_6 appl_j_9;
            var_j_11 = freeze_b_3;
            appl_j_12 = appl_j_10 var_j_11));
    flatten_fun_j_23 = fun x_b_1_j_1 -> (
        flatten_fun_j_22 = fun freeze_b_3_j_0 -> (
            var_j_15 = f_b_2;
            var_j_16 = x_b_1_j_1;
            var_j_17 = x_b_1_j_1;
            appl_j_18 = var_j_16 var_j_17;
            appl_j_19 = var_j_15 appl_j_18;
            var_j_20 = freeze_b_3_j_0;
            appl_j_21 = appl_j_19 var_j_20));
    appl_j_24 = flatten_fun_j_14 flatten_fun_j_23);
ycomb_b_4 = flatten_fun_j_25;
flatten_fun_j_49 = fun self_b_0 -> (
    flatten_fun_j_48 = fun bj_null_j_3 -> (
        flatten_fun_j_36 = fun expr_b_5 -> (
            flatten_fun_j_31 = fun tt -> (
                var_j_27 = tt;
                proj_j_28 = var_j_27.checker;
                var_j_29 = expr_b_5;
                appl_j_30 = proj_j_28 var_j_29);
            var_j_32 = self_b_0;
            int_j_33 = 0;
            appl_j_34 = var_j_32 int_j_33;
            appl_j_35 = flatten_fun_j_31 appl_j_34);
        flatten_fun_j_46 = fun bj_null -> (
            flatten_fun_j_41 = fun tt_j_2 -> (
                var_j_37 = tt_j_2;
                proj_j_38 = var_j_37.generator;
                int_j_39 = 0;
                appl_j_40 = proj_j_38 int_j_39);
            var_j_42 = self_b_0;
            int_j_43 = 0;
            appl_j_44 = var_j_42 int_j_43;
            appl_j_45 = flatten_fun_j_41 appl_j_44);
        record_j_47 = {checker = flatten_fun_j_36, generator = flatten_fun_j_46}));
appl_j_50 = ycomb_b_4 flatten_fun_j_49;
int_j_51 = 0;
appl_j_52 = appl_j_50 int_j_51;
proj_j_53 = appl_j_52.checker;
appl_j_55 = proj_j_53 x_b_7;
check_res_b_8 = appl_j_55;
if_j_63 = check_res_b_8 ? (
        var_j_57 = x
    ) : (
        error_var_j_58 = check_res_b_8;
        assert_pred_j_59 = error_var_j_58;
        assert_res_j_60 = assert_pred_j_59 ? (
                assert_res_true_j_61 = {}
            ) : (
                ab_j_62 = abort
            )
    );
i_result = if_j_63