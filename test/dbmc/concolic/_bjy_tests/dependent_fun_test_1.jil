_i_first = {};
flatten_fun_j_47 = fun sum_j_2 -> (
    flatten_fun_j_46 = fun x -> (
        flatten_fun_j_45 = fun acc -> (
            var_j_20 = sum_j_2;
            var_j_21 = sum_j_2;
            appl_j_22 = var_j_20 var_j_21;
            sum = appl_j_22;
            bool_j_23 = false;
            fail_b_0 = bool_j_23;
            var_j_24 = x;
            m_match_bool_j_26 = var_j_24 ~ {_j_head, _j_tail, _};
            m_match_bool_j_35 = var_j_24 ~ {_j_empty, _};
            m_match_bool_j_38 = var_j_24 ~ {~untouched, _};
            m_match_cond_j_39 = m_match_bool_j_38 ? (
                    var_j_40 = fail_b_0;
                    assert_pred_j_41 = var_j_40;
                    assert_res_j_42 = assert_pred_j_41 ? (
                            assert_res_true_j_43 = {}
                        ) : (
                            ab_j_44 = abort
                        )
                ) : (
                    m_match_cond_j_36 = m_match_bool_j_35 ? (
                            var_j_37 = acc
                        ) : (
                            m_match_cond_j_27 = m_match_bool_j_26 ? (
                                    hd = var_j_24._j_head;
                                    tl = var_j_24._j_tail;
                                    var_j_28 = sum;
                                    var_j_29 = tl;
                                    appl_j_30 = var_j_28 var_j_29;
                                    var_j_31 = acc;
                                    var_j_32 = hd;
                                    binop_j_33 = var_j_31 + var_j_32;
                                    appl_j_34 = appl_j_30 binop_j_33
                                ) : (
                                    ab_j_25 = abort
                                )
                        )
                ))));
appl_j_50 = flatten_fun_j_47 flatten_fun_j_47;
f_j_56 = fun x_j_17 -> (
    var_j_51 = appl_j_50;
    var_j_52 = x_j_17;
    appl_j_53 = var_j_51 var_j_52;
    int_j_54 = 1;
    appl_j_55 = appl_j_53 int_j_54);
f = f_j_56;
flatten_fun_j_108 = fun expr_b_13 -> (
    bool_j_57 = false;
    lst_fail_b_14 = bool_j_57;
    var_j_58 = expr_b_13;
    m_match_bool_j_60 = var_j_58 ~ any;
    m_match_bool_j_63 = var_j_58 ~ {_j_head, _j_tail, _};
    m_match_bool_j_105 = var_j_58 ~ {_j_empty, _};
    m_match_cond_j_106 = m_match_bool_j_105 ? (
            bool_j_107 = true
        ) : (
            m_match_cond_j_64 = m_match_bool_j_63 ? (
                    ~underscore = var_j_58._j_head;
                    ~underscore2 = var_j_58._j_tail;
                    flatten_fun_j_98 = fun test_fun_b_10_j_0 -> (
                        flatten_fun_j_97 = fun test_list_b_11 -> (
                            var_j_65 = test_fun_b_10_j_0;
                            var_j_66 = test_fun_b_10_j_0;
                            appl_j_67 = var_j_65 var_j_66;
                            test_fun_b_10 = appl_j_67;
                            var_j_68 = test_list_b_11;
                            m_match_bool_j_70 = var_j_68 ~ {_j_head, _j_tail, _};
                            m_match_bool_j_94 = var_j_68 ~ {_j_empty, _};
                            m_match_cond_j_95 = m_match_bool_j_94 ? (
                                    bool_j_96 = true
                                ) : (
                                    m_match_cond_j_71 = m_match_bool_j_70 ? (
                                            hd_j_4 = var_j_68._j_head;
                                            tl_j_3 = var_j_68._j_tail;
                                            bool_j_72 = false;
                                            fail_b_8 = bool_j_72;
                                            flatten_fun_j_81 = fun expr_b_7 -> (
                                                var_j_73 = expr_b_7;
                                                m_match_bool_j_75 = var_j_73 ~ any;
                                                m_match_bool_j_78 = var_j_73 ~ int;
                                                m_match_cond_j_79 = m_match_bool_j_78 ? (
                                                        bool_j_80 = true
                                                    ) : (
                                                        m_match_cond_j_76 = m_match_bool_j_75 ? (
                                                                var_j_77 = fail_b_8
                                                            ) : (
                                                                void_j_74 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_83 = fun ~null -> (
                                                input_j_82 = input);
                                            record_j_84 = {checker = flatten_fun_j_81, generator = flatten_fun_j_83};
                                            proj_j_85 = record_j_84.checker;
                                            var_j_86 = hd_j_4;
                                            appl_j_87 = proj_j_85 var_j_86;
                                            elm_check_b_12 = appl_j_87;
                                            var_j_88 = elm_check_b_12;
                                            if_j_93 = var_j_88 ? (
                                                    var_j_89 = test_fun_b_10;
                                                    var_j_90 = tl_j_3;
                                                    appl_j_91 = var_j_89 var_j_90
                                                ) : (
                                                    var_j_92 = elm_check_b_12
                                                )
                                        ) : (
                                            void_j_69 = {}
                                        )
                                )));
                    test_fun_b_10_j_0_j_6 = flatten_fun_j_98;
                    var_j_99 = test_fun_b_10_j_0_j_6;
                    var_j_100 = test_fun_b_10_j_0_j_6;
                    appl_j_101 = var_j_99 var_j_100;
                    test_fun_b_10_j_5 = appl_j_101;
                    var_j_102 = test_fun_b_10_j_5;
                    var_j_103 = expr_b_13;
                    appl_j_104 = var_j_102 var_j_103
                ) : (
                    m_match_cond_j_61 = m_match_bool_j_60 ? (
                            var_j_62 = lst_fail_b_14
                        ) : (
                            void_j_59 = {}
                        )
                )
        ));
flatten_fun_j_157 = fun ~null_j_11 -> (
    flatten_fun_j_143 = fun list_maker_b_5_j_1 -> (
        flatten_fun_j_142 = fun len_b_4 -> (
            var_j_109 = list_maker_b_5_j_1;
            var_j_110 = list_maker_b_5_j_1;
            appl_j_111 = var_j_109 var_j_110;
            list_maker_b_5 = appl_j_111;
            var_j_112 = len_b_4;
            int_j_113 = 0;
            binop_j_114 = var_j_112 == int_j_113;
            if_j_141 = binop_j_114 ? (
                    record_j_115 = {};
                    record_j_116 = {_j_empty = record_j_115}
                ) : (
                    bool_j_117 = false;
                    fail_b_2 = bool_j_117;
                    flatten_fun_j_126 = fun expr_b_1 -> (
                        var_j_118 = expr_b_1;
                        m_match_bool_j_120 = var_j_118 ~ any;
                        m_match_bool_j_123 = var_j_118 ~ int;
                        m_match_cond_j_124 = m_match_bool_j_123 ? (
                                bool_j_125 = true
                            ) : (
                                m_match_cond_j_121 = m_match_bool_j_120 ? (
                                        var_j_122 = fail_b_2
                                    ) : (
                                        void_j_119 = {}
                                    )
                            ));
                    flatten_fun_j_128 = fun ~null_j_7 -> (
                        input_j_127 = input);
                    record_j_129 = {checker = flatten_fun_j_126, generator = flatten_fun_j_128};
                    proj_j_130 = record_j_129.generator;
                    int_j_131 = 0;
                    appl_j_132 = proj_j_130 int_j_131;
                    elm_b_6 = appl_j_132;
                    record_j_133 = {};
                    var_j_134 = elm_b_6;
                    var_j_135 = list_maker_b_5;
                    var_j_136 = len_b_4;
                    int_j_137 = 1;
                    binop_j_138 = var_j_136 - int_j_137;
                    appl_j_139 = var_j_135 binop_j_138;
                    record_j_140 = {_j_cons = record_j_133, _j_head = var_j_134, _j_tail = appl_j_139}
                )));
    list_maker_b_5_j_1_j_10 = flatten_fun_j_143;
    var_j_144 = list_maker_b_5_j_1_j_10;
    var_j_145 = list_maker_b_5_j_1_j_10;
    appl_j_146 = var_j_144 var_j_145;
    list_maker_b_5_j_9 = appl_j_146;
    input_j_147 = input;
    len_b_4_j_8 = input_j_147;
    int_j_148 = 0;
    var_j_149 = len_b_4_j_8;
    binop_j_150 = int_j_148 <= var_j_149;
    if_j_156 = binop_j_150 ? (
            var_j_151 = list_maker_b_5_j_9;
            var_j_152 = len_b_4_j_8;
            appl_j_153 = var_j_151 var_j_152
        ) : (
            bool_j_154 = false;
            assume_j_155 = assume bool_j_154
        ));
record_j_158 = {checker = flatten_fun_j_108, generator = flatten_fun_j_157};
proj_j_159 = record_j_158.generator;
int_j_160 = 0;
appl_j_161 = proj_j_159 int_j_160;
x_b_27 = appl_j_161;
flatten_fun_j_229 = fun x_j_16 -> (
    flatten_fun_j_195 = fun expr_b_23 -> (
        bool_j_162 = false;
        fail_b_21 = bool_j_162;
        flatten_fun_j_171 = fun expr_b_20 -> (
            var_j_163 = expr_b_20;
            m_match_bool_j_165 = var_j_163 ~ any;
            m_match_bool_j_168 = var_j_163 ~ int;
            m_match_cond_j_169 = m_match_bool_j_168 ? (
                    bool_j_170 = true
                ) : (
                    m_match_cond_j_166 = m_match_bool_j_165 ? (
                            var_j_167 = fail_b_21
                        ) : (
                            void_j_164 = {}
                        )
                ));
        flatten_fun_j_173 = fun ~null_j_12 -> (
            input_j_172 = input);
        record_j_174 = {checker = flatten_fun_j_171, generator = flatten_fun_j_173};
        proj_j_175 = record_j_174.checker;
        var_j_176 = expr_b_23;
        appl_j_177 = proj_j_175 var_j_176;
        t_check_b_24 = appl_j_177;
        var_j_178 = t_check_b_24;
        if_j_194 = var_j_178 ? (
                bool_j_179 = false;
                pred_check_b_25 = bool_j_179;
                flatten_fun_j_187 = fun a -> (
                    var_j_180 = a;
                    var_j_181 = appl_j_50;
                    var_j_182 = x_j_16;
                    appl_j_183 = var_j_181 var_j_182;
                    int_j_184 = 0;
                    appl_j_185 = appl_j_183 int_j_184;
                    binop_j_186 = var_j_180 == appl_j_185);
                var_j_188 = expr_b_23;
                appl_j_189 = flatten_fun_j_187 var_j_188;
                if_j_192 = appl_j_189 ? (
                        bool_j_190 = true
                    ) : (
                        var_j_191 = pred_check_b_25
                    )
            ) : (
                var_j_193 = t_check_b_24
            ));
    flatten_fun_j_226 = fun ~null_j_15 -> (
        bool_j_196 = false;
        fail_b_17 = bool_j_196;
        flatten_fun_j_205 = fun expr_b_16 -> (
            var_j_197 = expr_b_16;
            m_match_bool_j_199 = var_j_197 ~ any;
            m_match_bool_j_202 = var_j_197 ~ int;
            m_match_cond_j_203 = m_match_bool_j_202 ? (
                    bool_j_204 = true
                ) : (
                    m_match_cond_j_200 = m_match_bool_j_199 ? (
                            var_j_201 = fail_b_17
                        ) : (
                            void_j_198 = {}
                        )
                ));
        flatten_fun_j_207 = fun ~null_j_13 -> (
            input_j_206 = input);
        record_j_208 = {checker = flatten_fun_j_205, generator = flatten_fun_j_207};
        proj_j_209 = record_j_208.generator;
        int_j_210 = 0;
        appl_j_211 = proj_j_209 int_j_210;
        candidate_b_19 = appl_j_211;
        flatten_fun_j_219 = fun a_j_14 -> (
            var_j_212 = a_j_14;
            var_j_213 = appl_j_50;
            var_j_214 = x_j_16;
            appl_j_215 = var_j_213 var_j_214;
            int_j_216 = 0;
            appl_j_217 = appl_j_215 int_j_216;
            binop_j_218 = var_j_212 == appl_j_217);
        var_j_220 = candidate_b_19;
        appl_j_221 = flatten_fun_j_219 var_j_220;
        if_j_225 = appl_j_221 ? (
                var_j_222 = candidate_b_19
            ) : (
                bool_j_223 = false;
                assume_j_224 = assume bool_j_223
            ));
    record_j_227 = {checker = flatten_fun_j_195, generator = flatten_fun_j_226};
    proj_j_228 = record_j_227.checker);
appl_j_231 = flatten_fun_j_229 x_b_27;
appl_j_234 = f x_b_27;
appl_j_235 = appl_j_231 appl_j_234;
check_res_b_28 = appl_j_235;
if_j_243 = check_res_b_28 ? (
        var_j_237 = f
    ) : (
        error_var_j_238 = check_res_b_28;
        assert_pred_j_239 = error_var_j_238;
        assert_res_j_240 = assert_pred_j_239 ? (
                assert_res_true_j_241 = {}
            ) : (
                ab_j_242 = abort
            )
    );
_i_result = if_j_243