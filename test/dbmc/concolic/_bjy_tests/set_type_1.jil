i_first = {};
isPos_j_14 = fun n_j_10 -> (
    int_j_11 = 0;
    var_j_12 = n_j_10;
    m_bl_i_236 = int_j_11 ~ int;
    m_br_i_237 = var_j_12 ~ int;
    m_b_i_238 = m_bl_i_236 and m_br_i_237;
    binop_j_13 = m_b_i_238 ? (
            c_binop_i_239 = int_j_11 < var_j_12
        ) : (
            ab_i_240 = abort
        ));
isPos = isPos_j_14;
isNeg_j_18 = fun n -> (
    var_j_15 = n;
    int_j_16 = 0;
    m_bl_i_241 = var_j_15 ~ int;
    m_br_i_242 = int_j_16 ~ int;
    m_b_i_243 = m_bl_i_241 and m_br_i_242;
    binop_j_17 = m_b_i_243 ? (
            c_binop_i_244 = var_j_15 < int_j_16
        ) : (
            ab_i_245 = abort
        ));
isNeg = isNeg_j_18;
f_j_24 = fun x_j_9 -> (
    int_j_19 = 0;
    int_j_20 = 1;
    m_bl_i_246 = int_j_19 ~ int;
    m_br_i_247 = int_j_20 ~ int;
    m_b_i_248 = m_bl_i_246 and m_br_i_247;
    binop_j_21 = m_b_i_248 ? (
            c_binop_i_249 = int_j_19 - int_j_20
        ) : (
            ab_i_250 = abort
        );
    var_j_22 = x_j_9;
    m_bl_i_251 = binop_j_21 ~ int;
    m_br_i_252 = var_j_22 ~ int;
    m_b_i_253 = m_bl_i_251 and m_br_i_252;
    binop_j_23 = m_b_i_253 ? (
            c_binop_i_254 = binop_j_21 * var_j_22
        ) : (
            ab_i_255 = abort
        ));
f = f_j_24;
flatten_fun_j_51 = fun expr_b_7 -> (
    bool_j_25 = false;
    fail_b_5 = bool_j_25;
    flatten_fun_j_34 = fun expr_b_4 -> (
        var_j_26 = expr_b_4;
        m_match_bool_j_28 = var_j_26 ~ any;
        m_match_bool_j_31 = var_j_26 ~ int;
        m_match_cond_j_32 = m_match_bool_j_31 ? (
                bool_j_33 = true
            ) : (
                m_match_cond_j_29 = m_match_bool_j_28 ? (
                        var_j_30 = fail_b_5
                    ) : (
                        void_j_27 = {}
                    )
            ));
    flatten_fun_j_36 = fun bj_null -> (
        input_j_35 = input);
    record_j_37 = {checker = flatten_fun_j_34, generator = flatten_fun_j_36};
    proj_j_38 = record_j_37.checker;
    var_j_39 = expr_b_7;
    appl_j_40 = proj_j_38 var_j_39;
    t_check_b_8 = appl_j_40;
    var_j_41 = t_check_b_8;
    if_j_50 = var_j_41 ? (
            bool_j_42 = false;
            pred_check_b_9 = bool_j_42;
            var_j_43 = isPos;
            var_j_44 = expr_b_7;
            appl_j_45 = var_j_43 var_j_44;
            if_j_48 = appl_j_45 ? (
                    bool_j_46 = true
                ) : (
                    var_j_47 = pred_check_b_9
                )
        ) : (
            var_j_49 = t_check_b_8
        ));
flatten_fun_j_75 = fun bj_null_j_1 -> (
    bool_j_52 = false;
    fail_b_1 = bool_j_52;
    flatten_fun_j_61 = fun expr_b_0 -> (
        var_j_53 = expr_b_0;
        m_match_bool_j_55 = var_j_53 ~ any;
        m_match_bool_j_58 = var_j_53 ~ int;
        m_match_cond_j_59 = m_match_bool_j_58 ? (
                bool_j_60 = true
            ) : (
                m_match_cond_j_56 = m_match_bool_j_55 ? (
                        var_j_57 = fail_b_1
                    ) : (
                        void_j_54 = {}
                    )
            ));
    flatten_fun_j_63 = fun bj_null_j_0 -> (
        input_j_62 = input);
    record_j_64 = {checker = flatten_fun_j_61, generator = flatten_fun_j_63};
    proj_j_65 = record_j_64.generator;
    int_j_66 = 0;
    appl_j_67 = proj_j_65 int_j_66;
    candidate_b_3 = appl_j_67;
    var_j_68 = isPos;
    var_j_69 = candidate_b_3;
    appl_j_70 = var_j_68 var_j_69;
    if_j_74 = appl_j_70 ? (
            var_j_71 = candidate_b_3
        ) : (
            bool_j_72 = false;
            assume_j_73 = assume bool_j_72
        ));
record_j_76 = {checker = flatten_fun_j_51, generator = flatten_fun_j_75};
proj_j_77 = record_j_76.generator;
int_j_78 = 0;
appl_j_79 = proj_j_77 int_j_78;
x_b_36 = appl_j_79;
flatten_fun_j_106 = fun expr_b_18 -> (
    bool_j_80 = false;
    fail_b_16 = bool_j_80;
    flatten_fun_j_89 = fun expr_b_15 -> (
        var_j_81 = expr_b_15;
        m_match_bool_j_83 = var_j_81 ~ any;
        m_match_bool_j_86 = var_j_81 ~ int;
        m_match_cond_j_87 = m_match_bool_j_86 ? (
                bool_j_88 = true
            ) : (
                m_match_cond_j_84 = m_match_bool_j_83 ? (
                        var_j_85 = fail_b_16
                    ) : (
                        void_j_82 = {}
                    )
            ));
    flatten_fun_j_91 = fun bj_null_j_2 -> (
        input_j_90 = input);
    record_j_92 = {checker = flatten_fun_j_89, generator = flatten_fun_j_91};
    proj_j_93 = record_j_92.checker;
    var_j_94 = expr_b_18;
    appl_j_95 = proj_j_93 var_j_94;
    t_check_b_19 = appl_j_95;
    var_j_96 = t_check_b_19;
    if_j_105 = var_j_96 ? (
            bool_j_97 = false;
            pred_check_b_20 = bool_j_97;
            var_j_98 = isNeg;
            var_j_99 = expr_b_18;
            appl_j_100 = var_j_98 var_j_99;
            if_j_103 = appl_j_100 ? (
                    bool_j_101 = true
                ) : (
                    var_j_102 = pred_check_b_20
                )
        ) : (
            var_j_104 = t_check_b_19
        ));
flatten_fun_j_130 = fun bj_null_j_4 -> (
    bool_j_107 = false;
    fail_b_12 = bool_j_107;
    flatten_fun_j_116 = fun expr_b_11 -> (
        var_j_108 = expr_b_11;
        m_match_bool_j_110 = var_j_108 ~ any;
        m_match_bool_j_113 = var_j_108 ~ int;
        m_match_cond_j_114 = m_match_bool_j_113 ? (
                bool_j_115 = true
            ) : (
                m_match_cond_j_111 = m_match_bool_j_110 ? (
                        var_j_112 = fail_b_12
                    ) : (
                        void_j_109 = {}
                    )
            ));
    flatten_fun_j_118 = fun bj_null_j_3 -> (
        input_j_117 = input);
    record_j_119 = {checker = flatten_fun_j_116, generator = flatten_fun_j_118};
    proj_j_120 = record_j_119.generator;
    int_j_121 = 0;
    appl_j_122 = proj_j_120 int_j_121;
    candidate_b_14 = appl_j_122;
    var_j_123 = isNeg;
    var_j_124 = candidate_b_14;
    appl_j_125 = var_j_123 var_j_124;
    if_j_129 = appl_j_125 ? (
            var_j_126 = candidate_b_14
        ) : (
            bool_j_127 = false;
            assume_j_128 = assume bool_j_127
        ));
record_j_131 = {checker = flatten_fun_j_106, generator = flatten_fun_j_130};
proj_j_132 = record_j_131.checker;
appl_j_135 = f x_b_36;
appl_j_136 = proj_j_132 appl_j_135;
check_res_b_39 = appl_j_136;
if_j_235 = check_res_b_39 ? (
        g_j_148 = fun x -> (
            int_j_138 = 0;
            var_j_139 = x;
            m_bl_i_256 = int_j_138 ~ int;
            m_br_i_257 = var_j_139 ~ int;
            m_b_i_258 = m_bl_i_256 and m_br_i_257;
            binop_j_140 = m_b_i_258 ? (
                    c_binop_i_259 = int_j_138 < var_j_139
                ) : (
                    ab_i_260 = abort
                );
            m_i_261 = binop_j_140 ~ bool;
            if_j_147 = m_i_261 ? (
                    c_cond_i_268 = binop_j_140 ? (
                            var_j_141 = f;
                            var_j_142 = x;
                            m_i_262 = var_j_141 ~ fun;
                            appl_j_143 = m_i_262 ? (
                                    c_appl_i_263 = var_j_141 var_j_142
                                ) : (
                                    ab_i_264 = abort
                                )
                        ) : (
                            var_j_144 = f;
                            int_j_145 = 8;
                            m_i_265 = var_j_144 ~ fun;
                            appl_j_146 = m_i_265 ? (
                                    c_appl_i_266 = var_j_144 int_j_145
                                ) : (
                                    ab_i_267 = abort
                                )
                        )
                ) : (
                    ab_i_269 = abort
                ));
        g = g_j_148;
        bool_j_149 = false;
        fail_b_23 = bool_j_149;
        flatten_fun_j_158 = fun expr_b_22 -> (
            var_j_150 = expr_b_22;
            m_match_bool_j_152 = var_j_150 ~ any;
            m_match_bool_j_155 = var_j_150 ~ int;
            m_match_cond_j_156 = m_match_bool_j_155 ? (
                    bool_j_157 = true
                ) : (
                    m_match_cond_j_153 = m_match_bool_j_152 ? (
                            var_j_154 = fail_b_23
                        ) : (
                            void_j_151 = {}
                        )
                ));
        flatten_fun_j_160 = fun bj_null_j_5 -> (
            input_j_159 = input);
        record_j_161 = {checker = flatten_fun_j_158, generator = flatten_fun_j_160};
        proj_j_162 = record_j_161.generator;
        int_j_163 = 0;
        appl_j_164 = proj_j_162 int_j_163;
        x_b_37 = appl_j_164;
        flatten_fun_j_191 = fun expr_b_32 -> (
            bool_j_165 = false;
            fail_b_30 = bool_j_165;
            flatten_fun_j_174 = fun expr_b_29 -> (
                var_j_166 = expr_b_29;
                m_match_bool_j_168 = var_j_166 ~ any;
                m_match_bool_j_171 = var_j_166 ~ int;
                m_match_cond_j_172 = m_match_bool_j_171 ? (
                        bool_j_173 = true
                    ) : (
                        m_match_cond_j_169 = m_match_bool_j_168 ? (
                                var_j_170 = fail_b_30
                            ) : (
                                void_j_167 = {}
                            )
                    ));
            flatten_fun_j_176 = fun bj_null_j_6 -> (
                input_j_175 = input);
            record_j_177 = {checker = flatten_fun_j_174, generator = flatten_fun_j_176};
            proj_j_178 = record_j_177.checker;
            var_j_179 = expr_b_32;
            appl_j_180 = proj_j_178 var_j_179;
            t_check_b_33 = appl_j_180;
            var_j_181 = t_check_b_33;
            if_j_190 = var_j_181 ? (
                    bool_j_182 = false;
                    pred_check_b_34 = bool_j_182;
                    var_j_183 = isNeg;
                    var_j_184 = expr_b_32;
                    appl_j_185 = var_j_183 var_j_184;
                    if_j_188 = appl_j_185 ? (
                            bool_j_186 = true
                        ) : (
                            var_j_187 = pred_check_b_34
                        )
                ) : (
                    var_j_189 = t_check_b_33
                ));
        flatten_fun_j_215 = fun bj_null_j_8 -> (
            bool_j_192 = false;
            fail_b_26 = bool_j_192;
            flatten_fun_j_201 = fun expr_b_25 -> (
                var_j_193 = expr_b_25;
                m_match_bool_j_195 = var_j_193 ~ any;
                m_match_bool_j_198 = var_j_193 ~ int;
                m_match_cond_j_199 = m_match_bool_j_198 ? (
                        bool_j_200 = true
                    ) : (
                        m_match_cond_j_196 = m_match_bool_j_195 ? (
                                var_j_197 = fail_b_26
                            ) : (
                                void_j_194 = {}
                            )
                    ));
            flatten_fun_j_203 = fun bj_null_j_7 -> (
                input_j_202 = input);
            record_j_204 = {checker = flatten_fun_j_201, generator = flatten_fun_j_203};
            proj_j_205 = record_j_204.generator;
            int_j_206 = 0;
            appl_j_207 = proj_j_205 int_j_206;
            candidate_b_28 = appl_j_207;
            var_j_208 = isNeg;
            var_j_209 = candidate_b_28;
            appl_j_210 = var_j_208 var_j_209;
            if_j_214 = appl_j_210 ? (
                    var_j_211 = candidate_b_28
                ) : (
                    bool_j_212 = false;
                    assume_j_213 = assume bool_j_212
                ));
        record_j_216 = {checker = flatten_fun_j_191, generator = flatten_fun_j_215};
        proj_j_217 = record_j_216.checker;
        var_j_218 = g;
        var_j_219 = x_b_37;
        appl_j_220 = var_j_218 var_j_219;
        appl_j_221 = proj_j_217 appl_j_220;
        check_res_b_38 = appl_j_221;
        var_j_222 = check_res_b_38;
        if_j_229 = var_j_222 ? (
                var_j_223 = g
            ) : (
                error_var_j_224 = check_res_b_38;
                assert_pred_j_225 = error_var_j_224;
                assert_res_j_226 = assert_pred_j_225 ? (
                        assert_res_true_j_227 = {}
                    ) : (
                        ab_j_228 = abort
                    )
            )
    ) : (
        error_var_j_230 = check_res_b_39;
        assert_pred_j_231 = error_var_j_230;
        assert_res_j_232 = assert_pred_j_231 ? (
                assert_res_true_j_233 = {}
            ) : (
                ab_j_234 = abort
            )
    );
i_result = if_j_235