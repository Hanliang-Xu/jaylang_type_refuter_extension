i_first = {};
flatten_fun_j_93 = fun f_j_0 -> (
    flatten_fun_j_92 = fun g_j_1 -> (
        flatten_fun_j_91 = fun x -> (
            var_j_17 = f_j_0;
            var_j_18 = f_j_0;
            appl_j_19 = var_j_17 var_j_18;
            var_j_20 = g_j_1;
            appl_j_21 = appl_j_19 var_j_20;
            f = appl_j_21;
            var_j_22 = g_j_1;
            var_j_23 = f_j_0;
            appl_j_24 = var_j_22 var_j_23;
            var_j_25 = g_j_1;
            appl_j_26 = appl_j_24 var_j_25;
            g = appl_j_26;
            flatten_fun_j_88 = fun x_b_0 -> (
                int_j_27 = 0;
                input_j_28 = input;
                m_bl_i_270 = int_j_27 ~ int;
                m_br_i_271 = input_j_28 ~ int;
                m_b_i_272 = m_bl_i_270 and m_br_i_271;
                binop_j_29 = m_b_i_272 ? (
                        c_binop_i_273 = int_j_27 < input_j_28
                    ) : (
                        ab_i_274 = abort
                    );
                if_j_49 = binop_j_29 ? (
                        bool_j_30 = false;
                        fail_b_8 = bool_j_30;
                        flatten_fun_j_39 = fun expr_b_7 -> (
                            var_j_31 = expr_b_7;
                            m_match_bool_j_33 = var_j_31 ~ any;
                            m_match_bool_j_36 = var_j_31 ~ int;
                            m_match_cond_j_37 = m_match_bool_j_36 ? (
                                    bool_j_38 = true
                                ) : (
                                    m_match_cond_j_34 = m_match_bool_j_33 ? (
                                            var_j_35 = fail_b_8
                                        ) : (
                                            void_j_32 = {}
                                        )
                                ));
                        flatten_fun_j_41 = fun bj_null -> (
                            input_j_40 = input);
                        flatten_fun_j_43 = fun expr_b_9 -> (
                            var_j_42 = expr_b_9);
                        record_j_44 = {checker = flatten_fun_j_39, generator = flatten_fun_j_41, wrapper = flatten_fun_j_43};
                        proj_j_45 = record_j_44.checker;
                        var_j_46 = x_b_0;
                        m_i_275 = proj_j_45 ~ fun;
                        appl_j_47 = m_i_275 ? (
                                c_appl_i_276 = proj_j_45 var_j_46
                            ) : (
                                ab_i_277 = abort
                            )
                    ) : (
                        bool_j_48 = true
                    );
                arg_check_b_1 = if_j_49;
                var_j_50 = arg_check_b_1;
                if_j_87 = var_j_50 ? (
                        bool_j_51 = false;
                        fail_b_11 = bool_j_51;
                        flatten_fun_j_60 = fun expr_b_10 -> (
                            var_j_52 = expr_b_10;
                            m_match_bool_j_54 = var_j_52 ~ any;
                            m_match_bool_j_57 = var_j_52 ~ bool;
                            m_match_cond_j_58 = m_match_bool_j_57 ? (
                                    bool_j_59 = true
                                ) : (
                                    m_match_cond_j_55 = m_match_bool_j_54 ? (
                                            var_j_56 = fail_b_11
                                        ) : (
                                            void_j_53 = {}
                                        )
                                ));
                        flatten_fun_j_64 = fun bj_null_j_2 -> (
                            int_j_61 = 0;
                            input_j_62 = input;
                            m_bl_i_278 = int_j_61 ~ int;
                            m_br_i_279 = input_j_62 ~ int;
                            m_b_i_280 = m_bl_i_278 and m_br_i_279;
                            binop_j_63 = m_b_i_280 ? (
                                    c_binop_i_281 = int_j_61 <= input_j_62
                                ) : (
                                    ab_i_282 = abort
                                ));
                        flatten_fun_j_66 = fun expr_b_12 -> (
                            var_j_65 = expr_b_12);
                        record_j_67 = {checker = flatten_fun_j_60, generator = flatten_fun_j_64, wrapper = flatten_fun_j_66};
                        proj_j_68 = record_j_67.wrapper;
                        var_j_69 = x;
                        int_j_70 = 0;
                        m_bl_i_283 = var_j_69 ~ int;
                        m_br_i_284 = int_j_70 ~ int;
                        m_b_i_285 = m_bl_i_283 and m_br_i_284;
                        binop_j_71 = m_b_i_285 ? (
                                c_binop_i_286 = var_j_69 == int_j_70
                            ) : (
                                ab_i_287 = abort
                            );
                        m_i_288 = binop_j_71 ~ bool;
                        if_j_80 = m_i_288 ? (
                                c_cond_i_302 = binop_j_71 ? (
                                        bool_j_72 = true
                                    ) : (
                                        var_j_73 = g;
                                        var_j_74 = x;
                                        int_j_75 = 1;
                                        m_bl_i_289 = var_j_74 ~ int;
                                        m_br_i_290 = int_j_75 ~ int;
                                        m_b_i_291 = m_bl_i_289 and m_br_i_290;
                                        binop_j_76 = m_b_i_291 ? (
                                                c_binop_i_292 = var_j_74 - int_j_75
                                            ) : (
                                                ab_i_293 = abort
                                            );
                                        m_i_294 = var_j_73 ~ fun;
                                        appl_j_77 = m_i_294 ? (
                                                c_appl_i_295 = var_j_73 binop_j_76
                                            ) : (
                                                ab_i_296 = abort
                                            );
                                        int_j_78 = 0;
                                        m_bl_i_297 = appl_j_77 ~ int;
                                        m_br_i_298 = int_j_78 ~ int;
                                        m_b_i_299 = m_bl_i_297 and m_br_i_298;
                                        binop_j_79 = m_b_i_299 ? (
                                                c_binop_i_300 = appl_j_77 == int_j_78
                                            ) : (
                                                ab_i_301 = abort
                                            )
                                    )
                            ) : (
                                ab_i_303 = abort
                            );
                        m_i_304 = proj_j_68 ~ fun;
                        appl_j_81 = m_i_304 ? (
                                c_appl_i_305 = proj_j_68 if_j_80
                            ) : (
                                ab_i_306 = abort
                            )
                    ) : (
                        var_j_82 = arg_check_b_1;
                        assert_pred_j_83 = var_j_82;
                        assert_res_j_84 = assert_pred_j_83 ? (
                                assert_res_true_j_85 = {}
                            ) : (
                                ab_j_86 = abort
                            )
                    ));
            var_j_89 = x;
            appl_j_90 = flatten_fun_j_88 var_j_89)));
flatten_fun_j_166 = fun f_j_0_j_8 -> (
    flatten_fun_j_165 = fun g_j_1_j_7 -> (
        flatten_fun_j_164 = fun y -> (
            var_j_94 = f_j_0_j_8;
            var_j_95 = f_j_0_j_8;
            appl_j_96 = var_j_94 var_j_95;
            var_j_97 = g_j_1_j_7;
            appl_j_98 = appl_j_96 var_j_97;
            f_j_6 = appl_j_98;
            var_j_99 = g_j_1_j_7;
            var_j_100 = f_j_0_j_8;
            appl_j_101 = var_j_99 var_j_100;
            var_j_102 = g_j_1_j_7;
            appl_j_103 = appl_j_101 var_j_102;
            g_j_5 = appl_j_103;
            flatten_fun_j_161 = fun y_b_2 -> (
                int_j_104 = 0;
                input_j_105 = input;
                m_bl_i_307 = int_j_104 ~ int;
                m_br_i_308 = input_j_105 ~ int;
                m_b_i_309 = m_bl_i_307 and m_br_i_308;
                binop_j_106 = m_b_i_309 ? (
                        c_binop_i_310 = int_j_104 < input_j_105
                    ) : (
                        ab_i_311 = abort
                    );
                if_j_126 = binop_j_106 ? (
                        bool_j_107 = false;
                        fail_b_20 = bool_j_107;
                        flatten_fun_j_116 = fun expr_b_19 -> (
                            var_j_108 = expr_b_19;
                            m_match_bool_j_110 = var_j_108 ~ any;
                            m_match_bool_j_113 = var_j_108 ~ int;
                            m_match_cond_j_114 = m_match_bool_j_113 ? (
                                    bool_j_115 = true
                                ) : (
                                    m_match_cond_j_111 = m_match_bool_j_110 ? (
                                            var_j_112 = fail_b_20
                                        ) : (
                                            void_j_109 = {}
                                        )
                                ));
                        flatten_fun_j_118 = fun bj_null_j_3 -> (
                            input_j_117 = input);
                        flatten_fun_j_120 = fun expr_b_21 -> (
                            var_j_119 = expr_b_21);
                        record_j_121 = {checker = flatten_fun_j_116, generator = flatten_fun_j_118, wrapper = flatten_fun_j_120};
                        proj_j_122 = record_j_121.checker;
                        var_j_123 = y_b_2;
                        m_i_312 = proj_j_122 ~ fun;
                        appl_j_124 = m_i_312 ? (
                                c_appl_i_313 = proj_j_122 var_j_123
                            ) : (
                                ab_i_314 = abort
                            )
                    ) : (
                        bool_j_125 = true
                    );
                arg_check_b_3 = if_j_126;
                var_j_127 = arg_check_b_3;
                if_j_160 = var_j_127 ? (
                        bool_j_128 = false;
                        fail_b_23 = bool_j_128;
                        flatten_fun_j_137 = fun expr_b_22 -> (
                            var_j_129 = expr_b_22;
                            m_match_bool_j_131 = var_j_129 ~ any;
                            m_match_bool_j_134 = var_j_129 ~ int;
                            m_match_cond_j_135 = m_match_bool_j_134 ? (
                                    bool_j_136 = true
                                ) : (
                                    m_match_cond_j_132 = m_match_bool_j_131 ? (
                                            var_j_133 = fail_b_23
                                        ) : (
                                            void_j_130 = {}
                                        )
                                ));
                        flatten_fun_j_139 = fun bj_null_j_4 -> (
                            input_j_138 = input);
                        flatten_fun_j_141 = fun expr_b_24 -> (
                            var_j_140 = expr_b_24);
                        record_j_142 = {checker = flatten_fun_j_137, generator = flatten_fun_j_139, wrapper = flatten_fun_j_141};
                        proj_j_143 = record_j_142.wrapper;
                        var_j_144 = y;
                        int_j_145 = 0;
                        m_bl_i_315 = var_j_144 ~ int;
                        m_br_i_316 = int_j_145 ~ int;
                        m_b_i_317 = m_bl_i_315 and m_br_i_316;
                        binop_j_146 = m_b_i_317 ? (
                                c_binop_i_318 = var_j_144 < int_j_145
                            ) : (
                                ab_i_319 = abort
                            );
                        m_i_320 = binop_j_146 ~ bool;
                        if_j_153 = m_i_320 ? (
                                c_cond_i_329 = binop_j_146 ? (
                                        int_j_147 = 0
                                    ) : (
                                        var_j_148 = f_j_6;
                                        var_j_149 = y;
                                        int_j_150 = 1;
                                        m_bl_i_321 = var_j_149 ~ int;
                                        m_br_i_322 = int_j_150 ~ int;
                                        m_b_i_323 = m_bl_i_321 and m_br_i_322;
                                        binop_j_151 = m_b_i_323 ? (
                                                c_binop_i_324 = var_j_149 - int_j_150
                                            ) : (
                                                ab_i_325 = abort
                                            );
                                        m_i_326 = var_j_148 ~ fun;
                                        appl_j_152 = m_i_326 ? (
                                                c_appl_i_327 = var_j_148 binop_j_151
                                            ) : (
                                                ab_i_328 = abort
                                            )
                                    )
                            ) : (
                                ab_i_330 = abort
                            );
                        m_i_331 = proj_j_143 ~ fun;
                        appl_j_154 = m_i_331 ? (
                                c_appl_i_332 = proj_j_143 if_j_153
                            ) : (
                                ab_i_333 = abort
                            )
                    ) : (
                        var_j_155 = arg_check_b_3;
                        assert_pred_j_156 = var_j_155;
                        assert_res_j_157 = assert_pred_j_156 ? (
                                assert_res_true_j_158 = {}
                            ) : (
                                ab_j_159 = abort
                            )
                    ));
            var_j_162 = y;
            appl_j_163 = flatten_fun_j_161 var_j_162)));
appl_j_169 = flatten_fun_j_93 flatten_fun_j_93;
appl_j_171 = appl_j_169 flatten_fun_j_166;
appl_j_174 = flatten_fun_j_166 flatten_fun_j_93;
appl_j_176 = appl_j_174 flatten_fun_j_166;
bool_j_177 = false;
fail_b_5 = bool_j_177;
flatten_fun_j_186 = fun expr_b_4 -> (
    var_j_178 = expr_b_4;
    m_match_bool_j_180 = var_j_178 ~ any;
    m_match_bool_j_183 = var_j_178 ~ int;
    m_match_cond_j_184 = m_match_bool_j_183 ? (
            bool_j_185 = true
        ) : (
            m_match_cond_j_181 = m_match_bool_j_180 ? (
                    var_j_182 = fail_b_5
                ) : (
                    void_j_179 = {}
                )
        ));
flatten_fun_j_188 = fun bj_null_j_9 -> (
    input_j_187 = input);
flatten_fun_j_190 = fun expr_b_6 -> (
    var_j_189 = expr_b_6);
record_j_191 = {checker = flatten_fun_j_186, generator = flatten_fun_j_188, wrapper = flatten_fun_j_190};
proj_j_192 = record_j_191.generator;
int_j_193 = 0;
appl_j_194 = proj_j_192 int_j_193;
x_b_31 = appl_j_194;
bool_j_195 = false;
fail_b_14 = bool_j_195;
flatten_fun_j_204 = fun expr_b_13 -> (
    var_j_196 = expr_b_13;
    m_match_bool_j_198 = var_j_196 ~ any;
    m_match_bool_j_201 = var_j_196 ~ bool;
    m_match_cond_j_202 = m_match_bool_j_201 ? (
            bool_j_203 = true
        ) : (
            m_match_cond_j_199 = m_match_bool_j_198 ? (
                    var_j_200 = fail_b_14
                ) : (
                    void_j_197 = {}
                )
        ));
flatten_fun_j_208 = fun bj_null_j_10 -> (
    int_j_205 = 0;
    input_j_206 = input;
    m_bl_i_334 = int_j_205 ~ int;
    m_br_i_335 = input_j_206 ~ int;
    m_b_i_336 = m_bl_i_334 and m_br_i_335;
    binop_j_207 = m_b_i_336 ? (
            c_binop_i_337 = int_j_205 <= input_j_206
        ) : (
            ab_i_338 = abort
        ));
flatten_fun_j_210 = fun expr_b_15 -> (
    var_j_209 = expr_b_15);
record_j_211 = {checker = flatten_fun_j_204, generator = flatten_fun_j_208, wrapper = flatten_fun_j_210};
proj_j_212 = record_j_211.checker;
appl_j_215 = appl_j_171 x_b_31;
appl_j_216 = proj_j_212 appl_j_215;
check_res_b_30 = appl_j_216;
if_j_269 = check_res_b_30 ? (
        bool_j_218 = false;
        fail_b_17 = bool_j_218;
        flatten_fun_j_227 = fun expr_b_16 -> (
            var_j_219 = expr_b_16;
            m_match_bool_j_221 = var_j_219 ~ any;
            m_match_bool_j_224 = var_j_219 ~ int;
            m_match_cond_j_225 = m_match_bool_j_224 ? (
                    bool_j_226 = true
                ) : (
                    m_match_cond_j_222 = m_match_bool_j_221 ? (
                            var_j_223 = fail_b_17
                        ) : (
                            void_j_220 = {}
                        )
                ));
        flatten_fun_j_229 = fun bj_null_j_11 -> (
            input_j_228 = input);
        flatten_fun_j_231 = fun expr_b_18 -> (
            var_j_230 = expr_b_18);
        record_j_232 = {checker = flatten_fun_j_227, generator = flatten_fun_j_229, wrapper = flatten_fun_j_231};
        proj_j_233 = record_j_232.generator;
        int_j_234 = 0;
        appl_j_235 = proj_j_233 int_j_234;
        y_b_29 = appl_j_235;
        bool_j_236 = false;
        fail_b_26 = bool_j_236;
        flatten_fun_j_245 = fun expr_b_25 -> (
            var_j_237 = expr_b_25;
            m_match_bool_j_239 = var_j_237 ~ any;
            m_match_bool_j_242 = var_j_237 ~ int;
            m_match_cond_j_243 = m_match_bool_j_242 ? (
                    bool_j_244 = true
                ) : (
                    m_match_cond_j_240 = m_match_bool_j_239 ? (
                            var_j_241 = fail_b_26
                        ) : (
                            void_j_238 = {}
                        )
                ));
        flatten_fun_j_247 = fun bj_null_j_12 -> (
            input_j_246 = input);
        flatten_fun_j_249 = fun expr_b_27 -> (
            var_j_248 = expr_b_27);
        record_j_250 = {checker = flatten_fun_j_245, generator = flatten_fun_j_247, wrapper = flatten_fun_j_249};
        proj_j_251 = record_j_250.checker;
        var_j_252 = appl_j_176;
        var_j_253 = y_b_29;
        appl_j_254 = var_j_252 var_j_253;
        appl_j_255 = proj_j_251 appl_j_254;
        check_res_b_28 = appl_j_255;
        var_j_256 = check_res_b_28;
        if_j_263 = var_j_256 ? (
                var_j_257 = appl_j_171
            ) : (
                error_var_j_258 = check_res_b_28;
                assert_pred_j_259 = error_var_j_258;
                assert_res_j_260 = assert_pred_j_259 ? (
                        assert_res_true_j_261 = {}
                    ) : (
                        ab_j_262 = abort
                    )
            )
    ) : (
        error_var_j_264 = check_res_b_30;
        assert_pred_j_265 = error_var_j_264;
        assert_res_j_266 = assert_pred_j_265 ? (
                assert_res_true_j_267 = {}
            ) : (
                ab_j_268 = abort
            )
    );
i_result = if_j_269