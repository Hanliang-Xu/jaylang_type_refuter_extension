i_first = {};
create_record_j_470 = fun x_j_43 -> (
    create_record_j_469 = fun y -> (
        flatten_fun_j_466 = fun x_b_2 -> (
            bool_j_44 = false;
            fail_b_11 = bool_j_44;
            flatten_fun_j_53 = fun expr_b_10 -> (
                var_j_45 = expr_b_10;
                m_match_bool_j_47 = var_j_45 ~ any;
                m_match_bool_j_50 = var_j_45 ~ int;
                m_match_cond_j_51 = m_match_bool_j_50 ? (
                        bool_j_52 = true
                    ) : (
                        m_match_cond_j_48 = m_match_bool_j_47 ? (
                                var_j_49 = fail_b_11
                            ) : (
                                void_j_46 = {}
                            )
                    ));
            flatten_fun_j_55 = fun bj_null_j_20 -> (
                input_j_54 = input);
            flatten_fun_j_57 = fun expr_b_12 -> (
                var_j_56 = expr_b_12);
            record_j_58 = {checker = flatten_fun_j_53, generator = flatten_fun_j_55, wrapper = flatten_fun_j_57};
            proj_j_59 = record_j_58.checker;
            var_j_60 = x_b_2;
            appl_j_61 = proj_j_59 var_j_60;
            arg_check_b_3 = appl_j_61;
            var_j_62 = arg_check_b_3;
            if_j_465 = var_j_62 ? (
                    flatten_fun_j_457 = fun y_b_0 -> (
                        bool_j_63 = false;
                        fail_b_14 = bool_j_63;
                        flatten_fun_j_72 = fun expr_b_13 -> (
                            var_j_64 = expr_b_13;
                            m_match_bool_j_66 = var_j_64 ~ any;
                            m_match_bool_j_69 = var_j_64 ~ bool;
                            m_match_cond_j_70 = m_match_bool_j_69 ? (
                                    bool_j_71 = true
                                ) : (
                                    m_match_cond_j_67 = m_match_bool_j_66 ? (
                                            var_j_68 = fail_b_14
                                        ) : (
                                            void_j_65 = {}
                                        )
                                ));
                        flatten_fun_j_76 = fun bj_null_j_21 -> (
                            int_j_73 = 0;
                            input_j_74 = input;
                            m_bl_i_899 = int_j_73 ~ int;
                            m_br_i_900 = input_j_74 ~ int;
                            m_b_i_901 = m_bl_i_899 and m_br_i_900;
                            binop_j_75 = m_b_i_901 ? (
                                    c_binop_i_902 = int_j_73 <= input_j_74
                                ) : (
                                    ab_i_903 = abort
                                ));
                        flatten_fun_j_78 = fun expr_b_15 -> (
                            var_j_77 = expr_b_15);
                        record_j_79 = {checker = flatten_fun_j_72, generator = flatten_fun_j_76, wrapper = flatten_fun_j_78};
                        proj_j_80 = record_j_79.checker;
                        var_j_81 = y_b_0;
                        appl_j_82 = proj_j_80 var_j_81;
                        arg_check_b_1 = appl_j_82;
                        var_j_83 = arg_check_b_1;
                        if_j_456 = var_j_83 ? (
                                flatten_fun_j_268 = fun expr_b_49 -> (
                                    bool_j_84 = false;
                                    rec_fail_b_48 = bool_j_84;
                                    bool_j_85 = false;
                                    rec_fail_b_47 = bool_j_85;
                                    bool_j_86 = false;
                                    rec_fail_b_46 = bool_j_86;
                                    var_j_87 = expr_b_49;
                                    m_match_bool_j_89 = var_j_87 ~ any;
                                    m_match_bool_j_92 = var_j_87 ~ {bj_actual_rec, _};
                                    m_match_cond_j_93 = m_match_bool_j_92 ? (
                                            var_j_94 = expr_b_49;
                                            proj_j_95 = var_j_94.bj_decl_lbls;
                                            m_match_bool_j_97 = proj_j_95 ~ any;
                                            m_match_bool_j_100 = proj_j_95 ~ 
                                                {a, b, _};
                                            m_match_cond_j_101 = m_match_bool_j_100 ? (
                                                    a_j_33 = proj_j_95.a;
                                                    b_j_32 = proj_j_95.b;
                                                    var_j_102 = expr_b_49;
                                                    proj_j_103 = var_j_102.bj_actual_rec;
                                                    m_match_bool_j_105 = proj_j_103 ~ any;
                                                    m_match_bool_j_108 = proj_j_103 ~ 
                                                        {a, b, _};
                                                    m_match_cond_j_109 = m_match_bool_j_108 ? (
                                                            a_j_31 = proj_j_103.a;
                                                            b_j_30 = proj_j_103.b;
                                                            flatten_fun_j_149 = fun expr_b_68 -> (
                                                                bool_j_110 = false;
                                                                fail_b_63 = bool_j_110;
                                                                flatten_fun_j_119 = fun expr_b_62 -> (
                                                                    var_j_111 = expr_b_62;
                                                                    m_match_bool_j_113 = var_j_111 ~ any;
                                                                    m_match_bool_j_116 = var_j_111 ~ int;
                                                                    m_match_cond_j_117 = m_match_bool_j_116 ? (
                                                                        bool_j_118 = true
                                                                    ) : (
                                                                        m_match_cond_j_114 = m_match_bool_j_113 ? (
                                                                        var_j_115 = fail_b_63
                                                                    ) : (
                                                                        void_j_112 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_121 = fun bj_null_j_22 -> (
                                                                    input_j_120 = input);
                                                                flatten_fun_j_123 = fun expr_b_64 -> (
                                                                    var_j_122 = expr_b_64);
                                                                record_j_124 = 
                                                                    {checker = flatten_fun_j_119, generator = flatten_fun_j_121, wrapper = flatten_fun_j_123};
                                                                proj_j_125 = record_j_124.generator;
                                                                int_j_126 = 0;
                                                                appl_j_127 = proj_j_125 int_j_126;
                                                                arg_assert_b_69 = appl_j_127;
                                                                var_j_128 = expr_b_68;
                                                                var_j_129 = arg_assert_b_69;
                                                                appl_j_130 = var_j_128 var_j_129;
                                                                fun_ret_b_70 = appl_j_130;
                                                                bool_j_131 = false;
                                                                fail_b_66 = bool_j_131;
                                                                flatten_fun_j_140 = fun expr_b_65 -> (
                                                                    var_j_132 = expr_b_65;
                                                                    m_match_bool_j_134 = var_j_132 ~ any;
                                                                    m_match_bool_j_137 = var_j_132 ~ int;
                                                                    m_match_cond_j_138 = m_match_bool_j_137 ? (
                                                                        bool_j_139 = true
                                                                    ) : (
                                                                        m_match_cond_j_135 = m_match_bool_j_134 ? (
                                                                        var_j_136 = fail_b_66
                                                                    ) : (
                                                                        void_j_133 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                flatten_fun_j_142 = fun bj_null_j_23 -> (
                                                                    input_j_141 = input);
                                                                flatten_fun_j_144 = fun expr_b_67 -> (
                                                                    var_j_143 = expr_b_67);
                                                                record_j_145 = 
                                                                    {checker = flatten_fun_j_140, generator = flatten_fun_j_142, wrapper = flatten_fun_j_144};
                                                                proj_j_146 = record_j_145.checker;
                                                                var_j_147 = fun_ret_b_70;
                                                                appl_j_148 = proj_j_146 var_j_147);
                                                            flatten_fun_j_194 = fun bj_null_j_26 -> (
                                                                flatten_fun_j_193 = fun arg_assume_b_60 -> (
                                                                    bool_j_150 = false;
                                                                    fail_b_55 = bool_j_150;
                                                                    flatten_fun_j_159 = fun expr_b_54 -> (
                                                                    var_j_151 = expr_b_54;
                                                                    m_match_bool_j_153 = var_j_151 ~ any;
                                                                    m_match_bool_j_156 = var_j_151 ~ int;
                                                                    m_match_cond_j_157 = m_match_bool_j_156 ? (
                                                                        bool_j_158 = true
                                                                    ) : (
                                                                        m_match_cond_j_154 = m_match_bool_j_153 ? (
                                                                        var_j_155 = fail_b_55
                                                                    ) : (
                                                                        void_j_152 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_161 = fun bj_null_j_24 -> (
                                                                    input_j_160 = input);
                                                                    flatten_fun_j_163 = fun expr_b_56 -> (
                                                                    var_j_162 = expr_b_56);
                                                                    record_j_164 = 
                                                                    {checker = flatten_fun_j_159, generator = flatten_fun_j_161, wrapper = flatten_fun_j_163};
                                                                    proj_j_165 = record_j_164.checker;
                                                                    var_j_166 = arg_assume_b_60;
                                                                    appl_j_167 = proj_j_165 var_j_166;
                                                                    if_j_192 = appl_j_167 ? (
                                                                        bool_j_168 = false;
                                                                    fail_b_58 = bool_j_168;
                                                                    flatten_fun_j_177 = fun expr_b_57 -> (
                                                                    var_j_169 = expr_b_57;
                                                                    m_match_bool_j_171 = var_j_169 ~ any;
                                                                    m_match_bool_j_174 = var_j_169 ~ int;
                                                                    m_match_cond_j_175 = m_match_bool_j_174 ? (
                                                                        bool_j_176 = true
                                                                    ) : (
                                                                        m_match_cond_j_172 = m_match_bool_j_171 ? (
                                                                        var_j_173 = fail_b_58
                                                                    ) : (
                                                                        void_j_170 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_179 = fun bj_null_j_25 -> (
                                                                    input_j_178 = input);
                                                                    flatten_fun_j_181 = fun expr_b_59 -> (
                                                                    var_j_180 = expr_b_59);
                                                                    record_j_182 = 
                                                                    {checker = flatten_fun_j_177, generator = flatten_fun_j_179, wrapper = flatten_fun_j_181};
                                                                    proj_j_183 = record_j_182.generator;
                                                                    int_j_184 = 0;
                                                                    appl_j_185 = proj_j_183 int_j_184
                                                                    ) : (
                                                                        bool_j_186 = false;
                                                                    fail_b_61 = bool_j_186;
                                                                    var_j_187 = fail_b_61;
                                                                    assert_pred_j_188 = var_j_187;
                                                                    assert_res_j_189 = assert_pred_j_188 ? (
                                                                        assert_res_true_j_190 = 
                                                                    {}
                                                                    ) : (
                                                                        ab_j_191 = abort
                                                                    )
                                                                    )));
                                                            flatten_fun_j_240 = fun expr_b_77 -> (
                                                                flatten_fun_j_239 = fun arg_b_78 -> (
                                                                    bool_j_195 = false;
                                                                    fail_b_72 = bool_j_195;
                                                                    flatten_fun_j_204 = fun expr_b_71 -> (
                                                                    var_j_196 = expr_b_71;
                                                                    m_match_bool_j_198 = var_j_196 ~ any;
                                                                    m_match_bool_j_201 = var_j_196 ~ int;
                                                                    m_match_cond_j_202 = m_match_bool_j_201 ? (
                                                                        bool_j_203 = true
                                                                    ) : (
                                                                        m_match_cond_j_199 = m_match_bool_j_198 ? (
                                                                        var_j_200 = fail_b_72
                                                                    ) : (
                                                                        void_j_197 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_206 = fun bj_null_j_27 -> (
                                                                    input_j_205 = input);
                                                                    flatten_fun_j_208 = fun expr_b_73 -> (
                                                                    var_j_207 = expr_b_73);
                                                                    record_j_209 = 
                                                                    {checker = flatten_fun_j_204, generator = flatten_fun_j_206, wrapper = flatten_fun_j_208};
                                                                    proj_j_210 = record_j_209.checker;
                                                                    var_j_211 = arg_b_78;
                                                                    m_i_904 = proj_j_210 ~ fun;
                                                                    appl_j_212 = m_i_904 ? (
                                                                        c_appl_i_905 = proj_j_210 var_j_211
                                                                    ) : (
                                                                        ab_i_906 = abort
                                                                    );
                                                                    m_i_907 = appl_j_212 ~ bool;
                                                                    if_j_238 = m_i_907 ? (
                                                                        c_cond_i_914 = appl_j_212 ? (
                                                                        bool_j_213 = false;
                                                                    fail_b_75 = bool_j_213;
                                                                    flatten_fun_j_222 = fun expr_b_74 -> (
                                                                    var_j_214 = expr_b_74;
                                                                    m_match_bool_j_216 = var_j_214 ~ any;
                                                                    m_match_bool_j_219 = var_j_214 ~ int;
                                                                    m_match_cond_j_220 = m_match_bool_j_219 ? (
                                                                        bool_j_221 = true
                                                                    ) : (
                                                                        m_match_cond_j_217 = m_match_bool_j_216 ? (
                                                                        var_j_218 = fail_b_75
                                                                    ) : (
                                                                        void_j_215 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_224 = fun bj_null_j_28 -> (
                                                                    input_j_223 = input);
                                                                    flatten_fun_j_226 = fun expr_b_76 -> (
                                                                    var_j_225 = expr_b_76);
                                                                    record_j_227 = 
                                                                    {checker = flatten_fun_j_222, generator = flatten_fun_j_224, wrapper = flatten_fun_j_226};
                                                                    proj_j_228 = record_j_227.wrapper;
                                                                    var_j_229 = expr_b_77;
                                                                    var_j_230 = arg_b_78;
                                                                    m_i_908 = var_j_229 ~ fun;
                                                                    appl_j_231 = m_i_908 ? (
                                                                        c_appl_i_909 = var_j_229 var_j_230
                                                                    ) : (
                                                                        ab_i_910 = abort
                                                                    );
                                                                    m_i_911 = proj_j_228 ~ fun;
                                                                    appl_j_232 = m_i_911 ? (
                                                                        c_appl_i_912 = proj_j_228 appl_j_231
                                                                    ) : (
                                                                        ab_i_913 = abort
                                                                    )
                                                                    ) : (
                                                                        bool_j_233 = false;
                                                                    assert_pred_j_234 = bool_j_233;
                                                                    assert_res_j_235 = assert_pred_j_234 ? (
                                                                        assert_res_true_j_236 = 
                                                                    {}
                                                                    ) : (
                                                                        ab_j_237 = abort
                                                                    )
                                                                    )
                                                                    ) : (
                                                                        ab_i_915 = abort
                                                                    )));
                                                            record_j_241 = 
                                                                {checker = flatten_fun_j_149, generator = flatten_fun_j_194, wrapper = flatten_fun_j_240};
                                                            proj_j_242 = record_j_241.checker;
                                                            var_j_243 = a_j_31;
                                                            appl_j_244 = proj_j_242 var_j_243;
                                                            lbl_check_b_53 = appl_j_244;
                                                            var_j_245 = lbl_check_b_53;
                                                            if_j_267 = var_j_245 ? (
                                                                    bool_j_246 = false;
                                                                    fail_b_51 = bool_j_246;
                                                                    flatten_fun_j_255 = fun expr_b_50 -> (
                                                                    var_j_247 = expr_b_50;
                                                                    m_match_bool_j_249 = var_j_247 ~ any;
                                                                    m_match_bool_j_252 = var_j_247 ~ bool;
                                                                    m_match_cond_j_253 = m_match_bool_j_252 ? (
                                                                        bool_j_254 = true
                                                                    ) : (
                                                                        m_match_cond_j_250 = m_match_bool_j_249 ? (
                                                                        var_j_251 = fail_b_51
                                                                    ) : (
                                                                        void_j_248 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_259 = fun bj_null_j_29 -> (
                                                                    int_j_256 = 0;
                                                                    input_j_257 = input;
                                                                    m_bl_i_916 = int_j_256 ~ int;
                                                                    m_br_i_917 = input_j_257 ~ int;
                                                                    m_b_i_918 = m_bl_i_916 and m_br_i_917;
                                                                    binop_j_258 = m_b_i_918 ? (
                                                                        c_binop_i_919 = int_j_256 <= input_j_257
                                                                    ) : (
                                                                        ab_i_920 = abort
                                                                    ));
                                                                    flatten_fun_j_261 = fun expr_b_52 -> (
                                                                    var_j_260 = expr_b_52);
                                                                    record_j_262 = 
                                                                    {checker = flatten_fun_j_255, generator = flatten_fun_j_259, wrapper = flatten_fun_j_261};
                                                                    proj_j_263 = record_j_262.checker;
                                                                    var_j_264 = b_j_30;
                                                                    appl_j_265 = proj_j_263 var_j_264
                                                                ) : (
                                                                    var_j_266 = lbl_check_b_53
                                                                )
                                                        ) : (
                                                            m_match_cond_j_106 = m_match_bool_j_105 ? (
                                                                    var_j_107 = rec_fail_b_46
                                                                ) : (
                                                                    void_j_104 = 
                                                                    {}
                                                                )
                                                        )
                                                ) : (
                                                    m_match_cond_j_98 = m_match_bool_j_97 ? (
                                                            var_j_99 = rec_fail_b_47
                                                        ) : (
                                                            void_j_96 = 
                                                                {}
                                                        )
                                                )
                                        ) : (
                                            m_match_cond_j_90 = m_match_bool_j_89 ? (
                                                    var_j_91 = rec_fail_b_48
                                                ) : (
                                                    void_j_88 = {}
                                                )
                                        ));
                                flatten_fun_j_431 = fun bj_null_j_42 -> (
                                    bool_j_269 = false;
                                    fail_b_44 = bool_j_269;
                                    flatten_fun_j_278 = fun expr_b_43 -> (
                                        var_j_270 = expr_b_43;
                                        m_match_bool_j_272 = var_j_270 ~ any;
                                        m_match_bool_j_275 = var_j_270 ~ bool;
                                        m_match_cond_j_276 = m_match_bool_j_275 ? (
                                                bool_j_277 = true
                                            ) : (
                                                m_match_cond_j_273 = m_match_bool_j_272 ? (
                                                        var_j_274 = fail_b_44
                                                    ) : (
                                                        void_j_271 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_282 = fun bj_null_j_34 -> (
                                        int_j_279 = 0;
                                        input_j_280 = input;
                                        m_bl_i_921 = int_j_279 ~ int;
                                        m_br_i_922 = input_j_280 ~ int;
                                        m_b_i_923 = m_bl_i_921 and m_br_i_922;
                                        binop_j_281 = m_b_i_923 ? (
                                                c_binop_i_924 = int_j_279 <= input_j_280
                                            ) : (
                                                ab_i_925 = abort
                                            ));
                                    flatten_fun_j_284 = fun expr_b_45 -> (
                                        var_j_283 = expr_b_45);
                                    record_j_285 = {checker = flatten_fun_j_278, generator = flatten_fun_j_282, wrapper = flatten_fun_j_284};
                                    proj_j_286 = record_j_285.generator;
                                    int_j_287 = 0;
                                    appl_j_288 = proj_j_286 int_j_287;
                                    b_b_17 = appl_j_288;
                                    flatten_fun_j_328 = fun expr_b_32 -> (
                                        bool_j_289 = false;
                                        fail_b_27 = bool_j_289;
                                        flatten_fun_j_298 = fun expr_b_26 -> (
                                            var_j_290 = expr_b_26;
                                            m_match_bool_j_292 = var_j_290 ~ any;
                                            m_match_bool_j_295 = var_j_290 ~ int;
                                            m_match_cond_j_296 = m_match_bool_j_295 ? (
                                                    bool_j_297 = true
                                                ) : (
                                                    m_match_cond_j_293 = m_match_bool_j_292 ? (
                                                            var_j_294 = fail_b_27
                                                        ) : (
                                                            void_j_291 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_300 = fun bj_null_j_35 -> (
                                            input_j_299 = input);
                                        flatten_fun_j_302 = fun expr_b_28 -> (
                                            var_j_301 = expr_b_28);
                                        record_j_303 = {checker = flatten_fun_j_298, generator = flatten_fun_j_300, wrapper = flatten_fun_j_302};
                                        proj_j_304 = record_j_303.generator;
                                        int_j_305 = 0;
                                        appl_j_306 = proj_j_304 int_j_305;
                                        arg_assert_b_33 = appl_j_306;
                                        var_j_307 = expr_b_32;
                                        var_j_308 = arg_assert_b_33;
                                        appl_j_309 = var_j_307 var_j_308;
                                        fun_ret_b_34 = appl_j_309;
                                        bool_j_310 = false;
                                        fail_b_30 = bool_j_310;
                                        flatten_fun_j_319 = fun expr_b_29 -> (
                                            var_j_311 = expr_b_29;
                                            m_match_bool_j_313 = var_j_311 ~ any;
                                            m_match_bool_j_316 = var_j_311 ~ int;
                                            m_match_cond_j_317 = m_match_bool_j_316 ? (
                                                    bool_j_318 = true
                                                ) : (
                                                    m_match_cond_j_314 = m_match_bool_j_313 ? (
                                                            var_j_315 = fail_b_30
                                                        ) : (
                                                            void_j_312 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_321 = fun bj_null_j_36 -> (
                                            input_j_320 = input);
                                        flatten_fun_j_323 = fun expr_b_31 -> (
                                            var_j_322 = expr_b_31);
                                        record_j_324 = {checker = flatten_fun_j_319, generator = flatten_fun_j_321, wrapper = flatten_fun_j_323};
                                        proj_j_325 = record_j_324.checker;
                                        var_j_326 = fun_ret_b_34;
                                        appl_j_327 = proj_j_325 var_j_326);
                                    flatten_fun_j_373 = fun bj_null_j_39 -> (
                                        flatten_fun_j_372 = fun arg_assume_b_24 -> (
                                            bool_j_329 = false;
                                            fail_b_19 = bool_j_329;
                                            flatten_fun_j_338 = fun expr_b_18 -> (
                                                var_j_330 = expr_b_18;
                                                m_match_bool_j_332 = var_j_330 ~ any;
                                                m_match_bool_j_335 = var_j_330 ~ int;
                                                m_match_cond_j_336 = m_match_bool_j_335 ? (
                                                        bool_j_337 = true
                                                    ) : (
                                                        m_match_cond_j_333 = m_match_bool_j_332 ? (
                                                                var_j_334 = fail_b_19
                                                            ) : (
                                                                void_j_331 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_340 = fun bj_null_j_37 -> (
                                                input_j_339 = input);
                                            flatten_fun_j_342 = fun expr_b_20 -> (
                                                var_j_341 = expr_b_20);
                                            record_j_343 = {checker = flatten_fun_j_338, generator = flatten_fun_j_340, wrapper = flatten_fun_j_342};
                                            proj_j_344 = record_j_343.checker;
                                            var_j_345 = arg_assume_b_24;
                                            appl_j_346 = proj_j_344 var_j_345;
                                            if_j_371 = appl_j_346 ? (
                                                    bool_j_347 = false;
                                                    fail_b_22 = bool_j_347;
                                                    flatten_fun_j_356 = fun expr_b_21 -> (
                                                        var_j_348 = expr_b_21;
                                                        m_match_bool_j_350 = var_j_348 ~ any;
                                                        m_match_bool_j_353 = var_j_348 ~ int;
                                                        m_match_cond_j_354 = m_match_bool_j_353 ? (
                                                                bool_j_355 = true
                                                            ) : (
                                                                m_match_cond_j_351 = m_match_bool_j_350 ? (
                                                                        
                                                                    var_j_352 = fail_b_22
                                                                    ) : (
                                                                        
                                                                    void_j_349 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_358 = fun bj_null_j_38 -> (
                                                        input_j_357 = input);
                                                    flatten_fun_j_360 = fun expr_b_23 -> (
                                                        var_j_359 = expr_b_23);
                                                    record_j_361 = {checker = flatten_fun_j_356, generator = flatten_fun_j_358, wrapper = flatten_fun_j_360};
                                                    proj_j_362 = record_j_361.generator;
                                                    int_j_363 = 0;
                                                    appl_j_364 = proj_j_362 int_j_363
                                                ) : (
                                                    bool_j_365 = false;
                                                    fail_b_25 = bool_j_365;
                                                    var_j_366 = fail_b_25;
                                                    assert_pred_j_367 = var_j_366;
                                                    assert_res_j_368 = assert_pred_j_367 ? (
                                                            assert_res_true_j_369 = 
                                                                {}
                                                        ) : (
                                                            ab_j_370 = abort
                                                        )
                                                )));
                                    flatten_fun_j_419 = fun expr_b_41 -> (
                                        flatten_fun_j_418 = fun arg_b_42 -> (
                                            bool_j_374 = false;
                                            fail_b_36 = bool_j_374;
                                            flatten_fun_j_383 = fun expr_b_35 -> (
                                                var_j_375 = expr_b_35;
                                                m_match_bool_j_377 = var_j_375 ~ any;
                                                m_match_bool_j_380 = var_j_375 ~ int;
                                                m_match_cond_j_381 = m_match_bool_j_380 ? (
                                                        bool_j_382 = true
                                                    ) : (
                                                        m_match_cond_j_378 = m_match_bool_j_377 ? (
                                                                var_j_379 = fail_b_36
                                                            ) : (
                                                                void_j_376 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_385 = fun bj_null_j_40 -> (
                                                input_j_384 = input);
                                            flatten_fun_j_387 = fun expr_b_37 -> (
                                                var_j_386 = expr_b_37);
                                            record_j_388 = {checker = flatten_fun_j_383, generator = flatten_fun_j_385, wrapper = flatten_fun_j_387};
                                            proj_j_389 = record_j_388.checker;
                                            var_j_390 = arg_b_42;
                                            m_i_926 = proj_j_389 ~ fun;
                                            appl_j_391 = m_i_926 ? (
                                                    c_appl_i_927 = proj_j_389 var_j_390
                                                ) : (
                                                    ab_i_928 = abort
                                                );
                                            m_i_929 = appl_j_391 ~ bool;
                                            if_j_417 = m_i_929 ? (
                                                    c_cond_i_936 = appl_j_391 ? (
                                                            bool_j_392 = false;
                                                            fail_b_39 = bool_j_392;
                                                            flatten_fun_j_401 = fun expr_b_38 -> (
                                                                var_j_393 = expr_b_38;
                                                                m_match_bool_j_395 = var_j_393 ~ any;
                                                                m_match_bool_j_398 = var_j_393 ~ int;
                                                                m_match_cond_j_399 = m_match_bool_j_398 ? (
                                                                        
                                                                    bool_j_400 = true
                                                                    ) : (
                                                                        
                                                                    m_match_cond_j_396 = m_match_bool_j_395 ? (
                                                                        var_j_397 = fail_b_39
                                                                    ) : (
                                                                        void_j_394 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                            flatten_fun_j_403 = fun bj_null_j_41 -> (
                                                                input_j_402 = input);
                                                            flatten_fun_j_405 = fun expr_b_40 -> (
                                                                var_j_404 = expr_b_40);
                                                            record_j_406 = 
                                                                {checker = flatten_fun_j_401, generator = flatten_fun_j_403, wrapper = flatten_fun_j_405};
                                                            proj_j_407 = record_j_406.wrapper;
                                                            var_j_408 = expr_b_41;
                                                            var_j_409 = arg_b_42;
                                                            m_i_930 = var_j_408 ~ fun;
                                                            appl_j_410 = m_i_930 ? (
                                                                    c_appl_i_931 = var_j_408 var_j_409
                                                                ) : (
                                                                    ab_i_932 = abort
                                                                );
                                                            m_i_933 = proj_j_407 ~ fun;
                                                            appl_j_411 = m_i_933 ? (
                                                                    c_appl_i_934 = proj_j_407 appl_j_410
                                                                ) : (
                                                                    ab_i_935 = abort
                                                                )
                                                        ) : (
                                                            bool_j_412 = false;
                                                            assert_pred_j_413 = bool_j_412;
                                                            assert_res_j_414 = assert_pred_j_413 ? (
                                                                    assert_res_true_j_415 = 
                                                                    {}
                                                                ) : (
                                                                    ab_j_416 = abort
                                                                )
                                                        )
                                                ) : (
                                                    ab_i_937 = abort
                                                )));
                                    record_j_420 = {checker = flatten_fun_j_328, generator = flatten_fun_j_373, wrapper = flatten_fun_j_419};
                                    proj_j_421 = record_j_420.generator;
                                    int_j_422 = 0;
                                    appl_j_423 = proj_j_421 int_j_422;
                                    a_b_16 = appl_j_423;
                                    var_j_424 = a_b_16;
                                    var_j_425 = b_b_17;
                                    record_j_426 = {a = var_j_424, b = var_j_425};
                                    record_j_427 = {};
                                    record_j_428 = {};
                                    record_j_429 = {a = record_j_427, b = record_j_428};
                                    record_j_430 = {bj_actual_rec = record_j_426, bj_decl_lbls = record_j_429});
                                flatten_fun_j_433 = fun expr_b_79 -> (
                                    var_j_432 = expr_b_79);
                                record_j_434 = {checker = flatten_fun_j_268, generator = flatten_fun_j_431, wrapper = flatten_fun_j_433};
                                proj_j_435 = record_j_434.wrapper;
                                var_j_436 = x_j_43;
                                int_j_437 = 0;
                                m_bl_i_938 = var_j_436 ~ int;
                                m_br_i_939 = int_j_437 ~ int;
                                m_b_i_940 = m_bl_i_938 and m_br_i_939;
                                binop_j_438 = m_b_i_940 ? (
                                        c_binop_i_941 = var_j_436 == int_j_437
                                    ) : (
                                        ab_i_942 = abort
                                    );
                                boo = binop_j_438;
                                flatten_fun_j_442 = fun x -> (
                                    var_j_439 = x;
                                    int_j_440 = 1;
                                    m_bl_i_943 = var_j_439 ~ int;
                                    m_br_i_944 = int_j_440 ~ int;
                                    m_b_i_945 = m_bl_i_943 and m_br_i_944;
                                    binop_j_441 = m_b_i_945 ? (
                                            c_binop_i_946 = var_j_439 + int_j_440
                                        ) : (
                                            ab_i_947 = abort
                                        ));
                                var_j_443 = boo;
                                m_i_948 = var_j_443 ~ bool;
                                notop_j_444 = m_i_948 ? (
                                        c_not_i_949 = not var_j_443
                                    ) : (
                                        ab_i_950 = abort
                                    );
                                record_j_445 = {a = flatten_fun_j_442, b = notop_j_444};
                                record_j_446 = {};
                                record_j_447 = {};
                                record_j_448 = {a = record_j_446, b = record_j_447};
                                record_j_449 = {bj_actual_rec = record_j_445, bj_decl_lbls = record_j_448};
                                m_i_951 = proj_j_435 ~ fun;
                                appl_j_450 = m_i_951 ? (
                                        c_appl_i_952 = proj_j_435 record_j_449
                                    ) : (
                                        ab_i_953 = abort
                                    )
                            ) : (
                                var_j_451 = arg_check_b_1;
                                assert_pred_j_452 = var_j_451;
                                assert_res_j_453 = assert_pred_j_452 ? (
                                        assert_res_true_j_454 = {}
                                    ) : (
                                        ab_j_455 = abort
                                    )
                            ));
                    var_j_458 = y;
                    appl_j_459 = flatten_fun_j_457 var_j_458
                ) : (
                    var_j_460 = arg_check_b_3;
                    assert_pred_j_461 = var_j_460;
                    assert_res_j_462 = assert_pred_j_461 ? (
                            assert_res_true_j_463 = {}
                        ) : (
                            ab_j_464 = abort
                        )
                ));
        var_j_467 = x_j_43;
        appl_j_468 = flatten_fun_j_466 var_j_467));
create_record = create_record_j_470;
bool_j_471 = false;
fail_b_5 = bool_j_471;
flatten_fun_j_480 = fun expr_b_4 -> (
    var_j_472 = expr_b_4;
    m_match_bool_j_474 = var_j_472 ~ any;
    m_match_bool_j_477 = var_j_472 ~ int;
    m_match_cond_j_478 = m_match_bool_j_477 ? (
            bool_j_479 = true
        ) : (
            m_match_cond_j_475 = m_match_bool_j_474 ? (
                    var_j_476 = fail_b_5
                ) : (
                    void_j_473 = {}
                )
        ));
flatten_fun_j_482 = fun bj_null -> (
    input_j_481 = input);
flatten_fun_j_484 = fun expr_b_6 -> (
    var_j_483 = expr_b_6);
record_j_485 = {checker = flatten_fun_j_480, generator = flatten_fun_j_482, wrapper = flatten_fun_j_484};
proj_j_486 = record_j_485.generator;
int_j_487 = 0;
appl_j_488 = proj_j_486 int_j_487;
x_b_145 = appl_j_488;
bool_j_489 = false;
fail_b_8 = bool_j_489;
flatten_fun_j_498 = fun expr_b_7 -> (
    var_j_490 = expr_b_7;
    m_match_bool_j_492 = var_j_490 ~ any;
    m_match_bool_j_495 = var_j_490 ~ bool;
    m_match_cond_j_496 = m_match_bool_j_495 ? (
            bool_j_497 = true
        ) : (
            m_match_cond_j_493 = m_match_bool_j_492 ? (
                    var_j_494 = fail_b_8
                ) : (
                    void_j_491 = {}
                )
        ));
flatten_fun_j_502 = fun bj_null_j_0 -> (
    int_j_499 = 0;
    input_j_500 = input;
    m_bl_i_954 = int_j_499 ~ int;
    m_br_i_955 = input_j_500 ~ int;
    m_b_i_956 = m_bl_i_954 and m_br_i_955;
    binop_j_501 = m_b_i_956 ? (
            c_binop_i_957 = int_j_499 <= input_j_500
        ) : (
            ab_i_958 = abort
        ));
flatten_fun_j_504 = fun expr_b_9 -> (
    var_j_503 = expr_b_9);
record_j_505 = {checker = flatten_fun_j_498, generator = flatten_fun_j_502, wrapper = flatten_fun_j_504};
proj_j_506 = record_j_505.generator;
int_j_507 = 0;
appl_j_508 = proj_j_506 int_j_507;
y_b_144 = appl_j_508;
flatten_fun_j_693 = fun expr_b_113 -> (
    bool_j_509 = false;
    rec_fail_b_112 = bool_j_509;
    bool_j_510 = false;
    rec_fail_b_111 = bool_j_510;
    bool_j_511 = false;
    rec_fail_b_110 = bool_j_511;
    var_j_512 = expr_b_113;
    m_match_bool_j_514 = var_j_512 ~ any;
    m_match_bool_j_517 = var_j_512 ~ {bj_actual_rec, _};
    m_match_cond_j_518 = m_match_bool_j_517 ? (
            var_j_519 = expr_b_113;
            proj_j_520 = var_j_519.bj_decl_lbls;
            m_match_bool_j_522 = proj_j_520 ~ any;
            m_match_bool_j_525 = proj_j_520 ~ {a, b, _};
            m_match_cond_j_526 = m_match_bool_j_525 ? (
                    a_j_10 = proj_j_520.a;
                    b_j_9 = proj_j_520.b;
                    var_j_527 = expr_b_113;
                    proj_j_528 = var_j_527.bj_actual_rec;
                    m_match_bool_j_530 = proj_j_528 ~ any;
                    m_match_bool_j_533 = proj_j_528 ~ {a, b, _};
                    m_match_cond_j_534 = m_match_bool_j_533 ? (
                            a = proj_j_528.a;
                            b = proj_j_528.b;
                            flatten_fun_j_574 = fun expr_b_132 -> (
                                bool_j_535 = false;
                                fail_b_127 = bool_j_535;
                                flatten_fun_j_544 = fun expr_b_126 -> (
                                    var_j_536 = expr_b_126;
                                    m_match_bool_j_538 = var_j_536 ~ any;
                                    m_match_bool_j_541 = var_j_536 ~ int;
                                    m_match_cond_j_542 = m_match_bool_j_541 ? (
                                            bool_j_543 = true
                                        ) : (
                                            m_match_cond_j_539 = m_match_bool_j_538 ? (
                                                    var_j_540 = fail_b_127
                                                ) : (
                                                    void_j_537 = {}
                                                )
                                        ));
                                flatten_fun_j_546 = fun bj_null_j_1 -> (
                                    input_j_545 = input);
                                flatten_fun_j_548 = fun expr_b_128 -> (
                                    var_j_547 = expr_b_128);
                                record_j_549 = {checker = flatten_fun_j_544, generator = flatten_fun_j_546, wrapper = flatten_fun_j_548};
                                proj_j_550 = record_j_549.generator;
                                int_j_551 = 0;
                                appl_j_552 = proj_j_550 int_j_551;
                                arg_assert_b_133 = appl_j_552;
                                var_j_553 = expr_b_132;
                                var_j_554 = arg_assert_b_133;
                                appl_j_555 = var_j_553 var_j_554;
                                fun_ret_b_134 = appl_j_555;
                                bool_j_556 = false;
                                fail_b_130 = bool_j_556;
                                flatten_fun_j_565 = fun expr_b_129 -> (
                                    var_j_557 = expr_b_129;
                                    m_match_bool_j_559 = var_j_557 ~ any;
                                    m_match_bool_j_562 = var_j_557 ~ int;
                                    m_match_cond_j_563 = m_match_bool_j_562 ? (
                                            bool_j_564 = true
                                        ) : (
                                            m_match_cond_j_560 = m_match_bool_j_559 ? (
                                                    var_j_561 = fail_b_130
                                                ) : (
                                                    void_j_558 = {}
                                                )
                                        ));
                                flatten_fun_j_567 = fun bj_null_j_2 -> (
                                    input_j_566 = input);
                                flatten_fun_j_569 = fun expr_b_131 -> (
                                    var_j_568 = expr_b_131);
                                record_j_570 = {checker = flatten_fun_j_565, generator = flatten_fun_j_567, wrapper = flatten_fun_j_569};
                                proj_j_571 = record_j_570.checker;
                                var_j_572 = fun_ret_b_134;
                                appl_j_573 = proj_j_571 var_j_572);
                            flatten_fun_j_619 = fun bj_null_j_5 -> (
                                flatten_fun_j_618 = fun arg_assume_b_124 -> (
                                    bool_j_575 = false;
                                    fail_b_119 = bool_j_575;
                                    flatten_fun_j_584 = fun expr_b_118 -> (
                                        var_j_576 = expr_b_118;
                                        m_match_bool_j_578 = var_j_576 ~ any;
                                        m_match_bool_j_581 = var_j_576 ~ int;
                                        m_match_cond_j_582 = m_match_bool_j_581 ? (
                                                bool_j_583 = true
                                            ) : (
                                                m_match_cond_j_579 = m_match_bool_j_578 ? (
                                                        var_j_580 = fail_b_119
                                                    ) : (
                                                        void_j_577 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_586 = fun bj_null_j_3 -> (
                                        input_j_585 = input);
                                    flatten_fun_j_588 = fun expr_b_120 -> (
                                        var_j_587 = expr_b_120);
                                    record_j_589 = {checker = flatten_fun_j_584, generator = flatten_fun_j_586, wrapper = flatten_fun_j_588};
                                    proj_j_590 = record_j_589.checker;
                                    var_j_591 = arg_assume_b_124;
                                    appl_j_592 = proj_j_590 var_j_591;
                                    if_j_617 = appl_j_592 ? (
                                            bool_j_593 = false;
                                            fail_b_122 = bool_j_593;
                                            flatten_fun_j_602 = fun expr_b_121 -> (
                                                var_j_594 = expr_b_121;
                                                m_match_bool_j_596 = var_j_594 ~ any;
                                                m_match_bool_j_599 = var_j_594 ~ int;
                                                m_match_cond_j_600 = m_match_bool_j_599 ? (
                                                        bool_j_601 = true
                                                    ) : (
                                                        m_match_cond_j_597 = m_match_bool_j_596 ? (
                                                                var_j_598 = fail_b_122
                                                            ) : (
                                                                void_j_595 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_604 = fun bj_null_j_4 -> (
                                                input_j_603 = input);
                                            flatten_fun_j_606 = fun expr_b_123 -> (
                                                var_j_605 = expr_b_123);
                                            record_j_607 = {checker = flatten_fun_j_602, generator = flatten_fun_j_604, wrapper = flatten_fun_j_606};
                                            proj_j_608 = record_j_607.generator;
                                            int_j_609 = 0;
                                            appl_j_610 = proj_j_608 int_j_609
                                        ) : (
                                            bool_j_611 = false;
                                            fail_b_125 = bool_j_611;
                                            var_j_612 = fail_b_125;
                                            assert_pred_j_613 = var_j_612;
                                            assert_res_j_614 = assert_pred_j_613 ? (
                                                    assert_res_true_j_615 = 
                                                        {}
                                                ) : (
                                                    ab_j_616 = abort
                                                )
                                        )));
                            flatten_fun_j_665 = fun expr_b_141 -> (
                                flatten_fun_j_664 = fun arg_b_142 -> (
                                    bool_j_620 = false;
                                    fail_b_136 = bool_j_620;
                                    flatten_fun_j_629 = fun expr_b_135 -> (
                                        var_j_621 = expr_b_135;
                                        m_match_bool_j_623 = var_j_621 ~ any;
                                        m_match_bool_j_626 = var_j_621 ~ int;
                                        m_match_cond_j_627 = m_match_bool_j_626 ? (
                                                bool_j_628 = true
                                            ) : (
                                                m_match_cond_j_624 = m_match_bool_j_623 ? (
                                                        var_j_625 = fail_b_136
                                                    ) : (
                                                        void_j_622 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_631 = fun bj_null_j_6 -> (
                                        input_j_630 = input);
                                    flatten_fun_j_633 = fun expr_b_137 -> (
                                        var_j_632 = expr_b_137);
                                    record_j_634 = {checker = flatten_fun_j_629, generator = flatten_fun_j_631, wrapper = flatten_fun_j_633};
                                    proj_j_635 = record_j_634.checker;
                                    var_j_636 = arg_b_142;
                                    m_i_959 = proj_j_635 ~ fun;
                                    appl_j_637 = m_i_959 ? (
                                            c_appl_i_960 = proj_j_635 var_j_636
                                        ) : (
                                            ab_i_961 = abort
                                        );
                                    m_i_962 = appl_j_637 ~ bool;
                                    if_j_663 = m_i_962 ? (
                                            c_cond_i_969 = appl_j_637 ? (
                                                    bool_j_638 = false;
                                                    fail_b_139 = bool_j_638;
                                                    flatten_fun_j_647 = fun expr_b_138 -> (
                                                        var_j_639 = expr_b_138;
                                                        m_match_bool_j_641 = var_j_639 ~ any;
                                                        m_match_bool_j_644 = var_j_639 ~ int;
                                                        m_match_cond_j_645 = m_match_bool_j_644 ? (
                                                                bool_j_646 = true
                                                            ) : (
                                                                m_match_cond_j_642 = m_match_bool_j_641 ? (
                                                                        
                                                                    var_j_643 = fail_b_139
                                                                    ) : (
                                                                        
                                                                    void_j_640 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_649 = fun bj_null_j_7 -> (
                                                        input_j_648 = input);
                                                    flatten_fun_j_651 = fun expr_b_140 -> (
                                                        var_j_650 = expr_b_140);
                                                    record_j_652 = {checker = flatten_fun_j_647, generator = flatten_fun_j_649, wrapper = flatten_fun_j_651};
                                                    proj_j_653 = record_j_652.wrapper;
                                                    var_j_654 = expr_b_141;
                                                    var_j_655 = arg_b_142;
                                                    m_i_963 = var_j_654 ~ fun;
                                                    appl_j_656 = m_i_963 ? (
                                                            c_appl_i_964 = var_j_654 var_j_655
                                                        ) : (
                                                            ab_i_965 = abort
                                                        );
                                                    m_i_966 = proj_j_653 ~ fun;
                                                    appl_j_657 = m_i_966 ? (
                                                            c_appl_i_967 = proj_j_653 appl_j_656
                                                        ) : (
                                                            ab_i_968 = abort
                                                        )
                                                ) : (
                                                    bool_j_658 = false;
                                                    assert_pred_j_659 = bool_j_658;
                                                    assert_res_j_660 = assert_pred_j_659 ? (
                                                            assert_res_true_j_661 = 
                                                                {}
                                                        ) : (
                                                            ab_j_662 = abort
                                                        )
                                                )
                                        ) : (
                                            ab_i_970 = abort
                                        )));
                            record_j_666 = {checker = flatten_fun_j_574, generator = flatten_fun_j_619, wrapper = flatten_fun_j_665};
                            proj_j_667 = record_j_666.checker;
                            var_j_668 = a;
                            appl_j_669 = proj_j_667 var_j_668;
                            lbl_check_b_117 = appl_j_669;
                            var_j_670 = lbl_check_b_117;
                            if_j_692 = var_j_670 ? (
                                    bool_j_671 = false;
                                    fail_b_115 = bool_j_671;
                                    flatten_fun_j_680 = fun expr_b_114 -> (
                                        var_j_672 = expr_b_114;
                                        m_match_bool_j_674 = var_j_672 ~ any;
                                        m_match_bool_j_677 = var_j_672 ~ bool;
                                        m_match_cond_j_678 = m_match_bool_j_677 ? (
                                                bool_j_679 = true
                                            ) : (
                                                m_match_cond_j_675 = m_match_bool_j_674 ? (
                                                        var_j_676 = fail_b_115
                                                    ) : (
                                                        void_j_673 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_684 = fun bj_null_j_8 -> (
                                        int_j_681 = 0;
                                        input_j_682 = input;
                                        m_bl_i_971 = int_j_681 ~ int;
                                        m_br_i_972 = input_j_682 ~ int;
                                        m_b_i_973 = m_bl_i_971 and m_br_i_972;
                                        binop_j_683 = m_b_i_973 ? (
                                                c_binop_i_974 = int_j_681 <= input_j_682
                                            ) : (
                                                ab_i_975 = abort
                                            ));
                                    flatten_fun_j_686 = fun expr_b_116 -> (
                                        var_j_685 = expr_b_116);
                                    record_j_687 = {checker = flatten_fun_j_680, generator = flatten_fun_j_684, wrapper = flatten_fun_j_686};
                                    proj_j_688 = record_j_687.checker;
                                    var_j_689 = b;
                                    appl_j_690 = proj_j_688 var_j_689
                                ) : (
                                    var_j_691 = lbl_check_b_117
                                )
                        ) : (
                            m_match_cond_j_531 = m_match_bool_j_530 ? (
                                    var_j_532 = rec_fail_b_110
                                ) : (
                                    void_j_529 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_523 = m_match_bool_j_522 ? (
                            var_j_524 = rec_fail_b_111
                        ) : (
                            void_j_521 = {}
                        )
                )
        ) : (
            m_match_cond_j_515 = m_match_bool_j_514 ? (
                    var_j_516 = rec_fail_b_112
                ) : (
                    void_j_513 = {}
                )
        ));
flatten_fun_j_856 = fun bj_null_j_19 -> (
    bool_j_694 = false;
    fail_b_108 = bool_j_694;
    flatten_fun_j_703 = fun expr_b_107 -> (
        var_j_695 = expr_b_107;
        m_match_bool_j_697 = var_j_695 ~ any;
        m_match_bool_j_700 = var_j_695 ~ bool;
        m_match_cond_j_701 = m_match_bool_j_700 ? (
                bool_j_702 = true
            ) : (
                m_match_cond_j_698 = m_match_bool_j_697 ? (
                        var_j_699 = fail_b_108
                    ) : (
                        void_j_696 = {}
                    )
            ));
    flatten_fun_j_707 = fun bj_null_j_11 -> (
        int_j_704 = 0;
        input_j_705 = input;
        m_bl_i_976 = int_j_704 ~ int;
        m_br_i_977 = input_j_705 ~ int;
        m_b_i_978 = m_bl_i_976 and m_br_i_977;
        binop_j_706 = m_b_i_978 ? (
                c_binop_i_979 = int_j_704 <= input_j_705
            ) : (
                ab_i_980 = abort
            ));
    flatten_fun_j_709 = fun expr_b_109 -> (
        var_j_708 = expr_b_109);
    record_j_710 = {checker = flatten_fun_j_703, generator = flatten_fun_j_707, wrapper = flatten_fun_j_709};
    proj_j_711 = record_j_710.generator;
    int_j_712 = 0;
    appl_j_713 = proj_j_711 int_j_712;
    b_b_81 = appl_j_713;
    flatten_fun_j_753 = fun expr_b_96 -> (
        bool_j_714 = false;
        fail_b_91 = bool_j_714;
        flatten_fun_j_723 = fun expr_b_90 -> (
            var_j_715 = expr_b_90;
            m_match_bool_j_717 = var_j_715 ~ any;
            m_match_bool_j_720 = var_j_715 ~ int;
            m_match_cond_j_721 = m_match_bool_j_720 ? (
                    bool_j_722 = true
                ) : (
                    m_match_cond_j_718 = m_match_bool_j_717 ? (
                            var_j_719 = fail_b_91
                        ) : (
                            void_j_716 = {}
                        )
                ));
        flatten_fun_j_725 = fun bj_null_j_12 -> (
            input_j_724 = input);
        flatten_fun_j_727 = fun expr_b_92 -> (
            var_j_726 = expr_b_92);
        record_j_728 = {checker = flatten_fun_j_723, generator = flatten_fun_j_725, wrapper = flatten_fun_j_727};
        proj_j_729 = record_j_728.generator;
        int_j_730 = 0;
        appl_j_731 = proj_j_729 int_j_730;
        arg_assert_b_97 = appl_j_731;
        var_j_732 = expr_b_96;
        var_j_733 = arg_assert_b_97;
        appl_j_734 = var_j_732 var_j_733;
        fun_ret_b_98 = appl_j_734;
        bool_j_735 = false;
        fail_b_94 = bool_j_735;
        flatten_fun_j_744 = fun expr_b_93 -> (
            var_j_736 = expr_b_93;
            m_match_bool_j_738 = var_j_736 ~ any;
            m_match_bool_j_741 = var_j_736 ~ int;
            m_match_cond_j_742 = m_match_bool_j_741 ? (
                    bool_j_743 = true
                ) : (
                    m_match_cond_j_739 = m_match_bool_j_738 ? (
                            var_j_740 = fail_b_94
                        ) : (
                            void_j_737 = {}
                        )
                ));
        flatten_fun_j_746 = fun bj_null_j_13 -> (
            input_j_745 = input);
        flatten_fun_j_748 = fun expr_b_95 -> (
            var_j_747 = expr_b_95);
        record_j_749 = {checker = flatten_fun_j_744, generator = flatten_fun_j_746, wrapper = flatten_fun_j_748};
        proj_j_750 = record_j_749.checker;
        var_j_751 = fun_ret_b_98;
        appl_j_752 = proj_j_750 var_j_751);
    flatten_fun_j_798 = fun bj_null_j_16 -> (
        flatten_fun_j_797 = fun arg_assume_b_88 -> (
            bool_j_754 = false;
            fail_b_83 = bool_j_754;
            flatten_fun_j_763 = fun expr_b_82 -> (
                var_j_755 = expr_b_82;
                m_match_bool_j_757 = var_j_755 ~ any;
                m_match_bool_j_760 = var_j_755 ~ int;
                m_match_cond_j_761 = m_match_bool_j_760 ? (
                        bool_j_762 = true
                    ) : (
                        m_match_cond_j_758 = m_match_bool_j_757 ? (
                                var_j_759 = fail_b_83
                            ) : (
                                void_j_756 = {}
                            )
                    ));
            flatten_fun_j_765 = fun bj_null_j_14 -> (
                input_j_764 = input);
            flatten_fun_j_767 = fun expr_b_84 -> (
                var_j_766 = expr_b_84);
            record_j_768 = {checker = flatten_fun_j_763, generator = flatten_fun_j_765, wrapper = flatten_fun_j_767};
            proj_j_769 = record_j_768.checker;
            var_j_770 = arg_assume_b_88;
            appl_j_771 = proj_j_769 var_j_770;
            if_j_796 = appl_j_771 ? (
                    bool_j_772 = false;
                    fail_b_86 = bool_j_772;
                    flatten_fun_j_781 = fun expr_b_85 -> (
                        var_j_773 = expr_b_85;
                        m_match_bool_j_775 = var_j_773 ~ any;
                        m_match_bool_j_778 = var_j_773 ~ int;
                        m_match_cond_j_779 = m_match_bool_j_778 ? (
                                bool_j_780 = true
                            ) : (
                                m_match_cond_j_776 = m_match_bool_j_775 ? (
                                        var_j_777 = fail_b_86
                                    ) : (
                                        void_j_774 = {}
                                    )
                            ));
                    flatten_fun_j_783 = fun bj_null_j_15 -> (
                        input_j_782 = input);
                    flatten_fun_j_785 = fun expr_b_87 -> (
                        var_j_784 = expr_b_87);
                    record_j_786 = {checker = flatten_fun_j_781, generator = flatten_fun_j_783, wrapper = flatten_fun_j_785};
                    proj_j_787 = record_j_786.generator;
                    int_j_788 = 0;
                    appl_j_789 = proj_j_787 int_j_788
                ) : (
                    bool_j_790 = false;
                    fail_b_89 = bool_j_790;
                    var_j_791 = fail_b_89;
                    assert_pred_j_792 = var_j_791;
                    assert_res_j_793 = assert_pred_j_792 ? (
                            assert_res_true_j_794 = {}
                        ) : (
                            ab_j_795 = abort
                        )
                )));
    flatten_fun_j_844 = fun expr_b_105 -> (
        flatten_fun_j_843 = fun arg_b_106 -> (
            bool_j_799 = false;
            fail_b_100 = bool_j_799;
            flatten_fun_j_808 = fun expr_b_99 -> (
                var_j_800 = expr_b_99;
                m_match_bool_j_802 = var_j_800 ~ any;
                m_match_bool_j_805 = var_j_800 ~ int;
                m_match_cond_j_806 = m_match_bool_j_805 ? (
                        bool_j_807 = true
                    ) : (
                        m_match_cond_j_803 = m_match_bool_j_802 ? (
                                var_j_804 = fail_b_100
                            ) : (
                                void_j_801 = {}
                            )
                    ));
            flatten_fun_j_810 = fun bj_null_j_17 -> (
                input_j_809 = input);
            flatten_fun_j_812 = fun expr_b_101 -> (
                var_j_811 = expr_b_101);
            record_j_813 = {checker = flatten_fun_j_808, generator = flatten_fun_j_810, wrapper = flatten_fun_j_812};
            proj_j_814 = record_j_813.checker;
            var_j_815 = arg_b_106;
            m_i_981 = proj_j_814 ~ fun;
            appl_j_816 = m_i_981 ? (
                    c_appl_i_982 = proj_j_814 var_j_815
                ) : (
                    ab_i_983 = abort
                );
            m_i_984 = appl_j_816 ~ bool;
            if_j_842 = m_i_984 ? (
                    c_cond_i_991 = appl_j_816 ? (
                            bool_j_817 = false;
                            fail_b_103 = bool_j_817;
                            flatten_fun_j_826 = fun expr_b_102 -> (
                                var_j_818 = expr_b_102;
                                m_match_bool_j_820 = var_j_818 ~ any;
                                m_match_bool_j_823 = var_j_818 ~ int;
                                m_match_cond_j_824 = m_match_bool_j_823 ? (
                                        bool_j_825 = true
                                    ) : (
                                        m_match_cond_j_821 = m_match_bool_j_820 ? (
                                                var_j_822 = fail_b_103
                                            ) : (
                                                void_j_819 = {}
                                            )
                                    ));
                            flatten_fun_j_828 = fun bj_null_j_18 -> (
                                input_j_827 = input);
                            flatten_fun_j_830 = fun expr_b_104 -> (
                                var_j_829 = expr_b_104);
                            record_j_831 = {checker = flatten_fun_j_826, generator = flatten_fun_j_828, wrapper = flatten_fun_j_830};
                            proj_j_832 = record_j_831.wrapper;
                            var_j_833 = expr_b_105;
                            var_j_834 = arg_b_106;
                            m_i_985 = var_j_833 ~ fun;
                            appl_j_835 = m_i_985 ? (
                                    c_appl_i_986 = var_j_833 var_j_834
                                ) : (
                                    ab_i_987 = abort
                                );
                            m_i_988 = proj_j_832 ~ fun;
                            appl_j_836 = m_i_988 ? (
                                    c_appl_i_989 = proj_j_832 appl_j_835
                                ) : (
                                    ab_i_990 = abort
                                )
                        ) : (
                            bool_j_837 = false;
                            assert_pred_j_838 = bool_j_837;
                            assert_res_j_839 = assert_pred_j_838 ? (
                                    assert_res_true_j_840 = {}
                                ) : (
                                    ab_j_841 = abort
                                )
                        )
                ) : (
                    ab_i_992 = abort
                )));
    record_j_845 = {checker = flatten_fun_j_753, generator = flatten_fun_j_798, wrapper = flatten_fun_j_844};
    proj_j_846 = record_j_845.generator;
    int_j_847 = 0;
    appl_j_848 = proj_j_846 int_j_847;
    a_b_80 = appl_j_848;
    var_j_849 = a_b_80;
    var_j_850 = b_b_81;
    record_j_851 = {a = var_j_849, b = var_j_850};
    record_j_852 = {};
    record_j_853 = {};
    record_j_854 = {a = record_j_852, b = record_j_853};
    record_j_855 = {bj_actual_rec = record_j_851, bj_decl_lbls = record_j_854});
flatten_fun_j_858 = fun expr_b_143 -> (
    var_j_857 = expr_b_143);
record_j_859 = {checker = flatten_fun_j_693, generator = flatten_fun_j_856, wrapper = flatten_fun_j_858};
proj_j_860 = record_j_859.checker;
appl_j_863 = create_record x_b_145;
appl_j_865 = appl_j_863 y_b_144;
appl_j_866 = proj_j_860 appl_j_865;
check_res_b_146 = appl_j_866;
if_j_898 = check_res_b_146 ? (
        var_j_868 = create_record;
        int_j_869 = 1;
        m_i_993 = var_j_868 ~ fun;
        appl_j_870 = m_i_993 ? (
                c_appl_i_994 = var_j_868 int_j_869
            ) : (
                ab_i_995 = abort
            );
        bool_j_871 = true;
        m_i_996 = appl_j_870 ~ fun;
        appl_j_872 = m_i_996 ? (
                c_appl_i_997 = appl_j_870 bool_j_871
            ) : (
                ab_i_998 = abort
            );
        proj_j_873 = appl_j_872.bj_decl_lbls;
        m_match_bool_j_875 = proj_j_873 ~ any;
        m_match_bool_j_882 = proj_j_873 ~ {b, _};
        m_match_cond_j_883 = m_match_bool_j_882 ? (
                var_j_884 = create_record;
                int_j_885 = 1;
                m_i_999 = var_j_884 ~ fun;
                appl_j_886 = m_i_999 ? (
                        c_appl_i_1000 = var_j_884 int_j_885
                    ) : (
                        ab_i_1001 = abort
                    );
                bool_j_887 = true;
                m_i_1002 = appl_j_886 ~ fun;
                appl_j_888 = m_i_1002 ? (
                        c_appl_i_1003 = appl_j_886 bool_j_887
                    ) : (
                        ab_i_1004 = abort
                    );
                proj_j_889 = appl_j_888.bj_actual_rec;
                proj_j_890 = proj_j_889.b
            ) : (
                m_match_cond_j_876 = m_match_bool_j_875 ? (
                        bool_j_877 = false;
                        assert_pred_j_878 = bool_j_877;
                        assert_res_j_879 = assert_pred_j_878 ? (
                                assert_res_true_j_880 = {}
                            ) : (
                                ab_j_881 = abort
                            )
                    ) : (
                        void_j_874 = {}
                    )
            );
        int_j_891 = 1;
        m_i_1005 = m_match_cond_j_883 ~ fun;
        appl_j_892 = m_i_1005 ? (
                c_appl_i_1006 = m_match_cond_j_883 int_j_891
            ) : (
                ab_i_1007 = abort
            )
    ) : (
        error_var_j_893 = check_res_b_146;
        assert_pred_j_894 = error_var_j_893;
        assert_res_j_895 = assert_pred_j_894 ? (
                assert_res_true_j_896 = {}
            ) : (
                ab_j_897 = abort
            )
    );
i_result = if_j_898