i_first = {};
isPos_j_23 = fun n_j_19 -> (
    int_j_20 = 0;
    var_j_21 = n_j_19;
    binop_j_22 = int_j_20 < var_j_21);
isPos = isPos_j_23;
aIsPos_j_41 = fun re -> (
    var_j_24 = isPos;
    var_j_25 = re;
    proj_j_26 = var_j_25.bj_decl_lbls;
    m_match_bool_j_28 = proj_j_26 ~ any;
    m_match_bool_j_35 = proj_j_26 ~ {a, _};
    m_match_cond_j_36 = m_match_bool_j_35 ? (
            var_j_37 = re;
            proj_j_38 = var_j_37.bj_actual_rec;
            proj_j_39 = proj_j_38.a
        ) : (
            m_match_cond_j_29 = m_match_bool_j_28 ? (
                    bool_j_30 = false;
                    assert_pred_j_31 = bool_j_30;
                    assert_res_j_32 = assert_pred_j_31 ? (
                            assert_res_true_j_33 = {}
                        ) : (
                            ab_j_34 = abort
                        )
                ) : (
                    void_j_27 = {}
                )
        );
    appl_j_40 = var_j_24 m_match_cond_j_36);
aIsPos = aIsPos_j_41;
isNeg_j_45 = fun n -> (
    var_j_42 = n;
    int_j_43 = 0;
    binop_j_44 = var_j_42 < int_j_43);
isNeg = isNeg_j_45;
access_record_j_48 = fun r -> (
    var_j_46 = r;
    proj_j_47 = var_j_46.a);
access_record = access_record_j_48;
flatten_fun_j_169 = fun expr_b_41 -> (
    flatten_fun_j_112 = fun expr_b_32 -> (
        bool_j_49 = false;
        rec_fail_b_31 = bool_j_49;
        bool_j_50 = false;
        rec_fail_b_30 = bool_j_50;
        bool_j_51 = false;
        rec_fail_b_29 = bool_j_51;
        var_j_52 = expr_b_32;
        m_match_bool_j_54 = var_j_52 ~ any;
        m_match_bool_j_57 = var_j_52 ~ {bj_actual_rec, _};
        m_match_cond_j_58 = m_match_bool_j_57 ? (
                var_j_59 = expr_b_32;
                proj_j_60 = var_j_59.bj_decl_lbls;
                m_match_bool_j_62 = proj_j_60 ~ any;
                m_match_bool_j_65 = proj_j_60 ~ {a, b, _};
                m_match_cond_j_66 = m_match_bool_j_65 ? (
                        a_j_2 = proj_j_60.a;
                        b_j_1 = proj_j_60.b;
                        var_j_67 = expr_b_32;
                        proj_j_68 = var_j_67.bj_actual_rec;
                        m_match_bool_j_70 = proj_j_68 ~ any;
                        m_match_bool_j_73 = proj_j_68 ~ {a, b, _};
                        m_match_cond_j_74 = m_match_bool_j_73 ? (
                                a = proj_j_68.a;
                                b = proj_j_68.b;
                                bool_j_75 = false;
                                fail_b_38 = bool_j_75;
                                flatten_fun_j_84 = fun expr_b_37 -> (
                                    var_j_76 = expr_b_37;
                                    m_match_bool_j_78 = var_j_76 ~ any;
                                    m_match_bool_j_81 = var_j_76 ~ int;
                                    m_match_cond_j_82 = m_match_bool_j_81 ? (
                                            bool_j_83 = true
                                        ) : (
                                            m_match_cond_j_79 = m_match_bool_j_78 ? (
                                                    var_j_80 = fail_b_38
                                                ) : (
                                                    void_j_77 = {}
                                                )
                                        ));
                                flatten_fun_j_86 = fun bj_null -> (
                                    input_j_85 = input);
                                record_j_87 = {checker = flatten_fun_j_84, generator = flatten_fun_j_86};
                                proj_j_88 = record_j_87.checker;
                                var_j_89 = a;
                                appl_j_90 = proj_j_88 var_j_89;
                                lbl_check_b_36 = appl_j_90;
                                var_j_91 = lbl_check_b_36;
                                if_j_111 = var_j_91 ? (
                                        bool_j_92 = false;
                                        fail_b_34 = bool_j_92;
                                        flatten_fun_j_101 = fun expr_b_33 -> (
                                            var_j_93 = expr_b_33;
                                            m_match_bool_j_95 = var_j_93 ~ any;
                                            m_match_bool_j_98 = var_j_93 ~ bool;
                                            m_match_cond_j_99 = m_match_bool_j_98 ? (
                                                    bool_j_100 = true
                                                ) : (
                                                    m_match_cond_j_96 = m_match_bool_j_95 ? (
                                                            var_j_97 = fail_b_34
                                                        ) : (
                                                            void_j_94 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_105 = fun bj_null_j_0 -> (
                                            int_j_102 = 0;
                                            input_j_103 = input;
                                            binop_j_104 = int_j_102 <= input_j_103);
                                        record_j_106 = {checker = flatten_fun_j_101, generator = flatten_fun_j_105};
                                        proj_j_107 = record_j_106.checker;
                                        var_j_108 = b;
                                        appl_j_109 = proj_j_107 var_j_108
                                    ) : (
                                        var_j_110 = lbl_check_b_36
                                    )
                            ) : (
                                m_match_cond_j_71 = m_match_bool_j_70 ? (
                                        var_j_72 = rec_fail_b_29
                                    ) : (
                                        void_j_69 = {}
                                    )
                            )
                    ) : (
                        m_match_cond_j_63 = m_match_bool_j_62 ? (
                                var_j_64 = rec_fail_b_30
                            ) : (
                                void_j_61 = {}
                            )
                    )
            ) : (
                m_match_cond_j_55 = m_match_bool_j_54 ? (
                        var_j_56 = rec_fail_b_31
                    ) : (
                        void_j_53 = {}
                    )
            ));
    flatten_fun_j_154 = fun bj_null_j_5 -> (
        bool_j_113 = false;
        fail_b_27 = bool_j_113;
        flatten_fun_j_122 = fun expr_b_26 -> (
            var_j_114 = expr_b_26;
            m_match_bool_j_116 = var_j_114 ~ any;
            m_match_bool_j_119 = var_j_114 ~ bool;
            m_match_cond_j_120 = m_match_bool_j_119 ? (
                    bool_j_121 = true
                ) : (
                    m_match_cond_j_117 = m_match_bool_j_116 ? (
                            var_j_118 = fail_b_27
                        ) : (
                            void_j_115 = {}
                        )
                ));
        flatten_fun_j_126 = fun bj_null_j_3 -> (
            int_j_123 = 0;
            input_j_124 = input;
            binop_j_125 = int_j_123 <= input_j_124);
        record_j_127 = {checker = flatten_fun_j_122, generator = flatten_fun_j_126};
        proj_j_128 = record_j_127.generator;
        int_j_129 = 0;
        appl_j_130 = proj_j_128 int_j_129;
        b_b_22 = appl_j_130;
        bool_j_131 = false;
        fail_b_24 = bool_j_131;
        flatten_fun_j_140 = fun expr_b_23 -> (
            var_j_132 = expr_b_23;
            m_match_bool_j_134 = var_j_132 ~ any;
            m_match_bool_j_137 = var_j_132 ~ int;
            m_match_cond_j_138 = m_match_bool_j_137 ? (
                    bool_j_139 = true
                ) : (
                    m_match_cond_j_135 = m_match_bool_j_134 ? (
                            var_j_136 = fail_b_24
                        ) : (
                            void_j_133 = {}
                        )
                ));
        flatten_fun_j_142 = fun bj_null_j_4 -> (
            input_j_141 = input);
        record_j_143 = {checker = flatten_fun_j_140, generator = flatten_fun_j_142};
        proj_j_144 = record_j_143.generator;
        int_j_145 = 0;
        appl_j_146 = proj_j_144 int_j_145;
        a_b_21 = appl_j_146;
        var_j_147 = a_b_21;
        var_j_148 = b_b_22;
        record_j_149 = {a = var_j_147, b = var_j_148};
        record_j_150 = {};
        record_j_151 = {};
        record_j_152 = {a = record_j_150, b = record_j_151};
        record_j_153 = {bj_actual_rec = record_j_149, bj_decl_lbls = record_j_152});
    record_j_155 = {checker = flatten_fun_j_112, generator = flatten_fun_j_154};
    proj_j_156 = record_j_155.checker;
    var_j_157 = expr_b_41;
    appl_j_158 = proj_j_156 var_j_157;
    t_check_b_42 = appl_j_158;
    var_j_159 = t_check_b_42;
    if_j_168 = var_j_159 ? (
            bool_j_160 = false;
            pred_check_b_43 = bool_j_160;
            var_j_161 = aIsPos;
            var_j_162 = expr_b_41;
            appl_j_163 = var_j_161 var_j_162;
            if_j_166 = appl_j_163 ? (
                    bool_j_164 = true
                ) : (
                    var_j_165 = pred_check_b_43
                )
        ) : (
            var_j_167 = t_check_b_42
        ));
flatten_fun_j_287 = fun bj_null_j_15 -> (
    flatten_fun_j_233 = fun expr_b_11 -> (
        bool_j_170 = false;
        rec_fail_b_10 = bool_j_170;
        bool_j_171 = false;
        rec_fail_b_9 = bool_j_171;
        bool_j_172 = false;
        rec_fail_b_8 = bool_j_172;
        var_j_173 = expr_b_11;
        m_match_bool_j_175 = var_j_173 ~ any;
        m_match_bool_j_178 = var_j_173 ~ {bj_actual_rec, _};
        m_match_cond_j_179 = m_match_bool_j_178 ? (
                var_j_180 = expr_b_11;
                proj_j_181 = var_j_180.bj_decl_lbls;
                m_match_bool_j_183 = proj_j_181 ~ any;
                m_match_bool_j_186 = proj_j_181 ~ {a, b, _};
                m_match_cond_j_187 = m_match_bool_j_186 ? (
                        a_j_11 = proj_j_181.a;
                        b_j_10 = proj_j_181.b;
                        var_j_188 = expr_b_11;
                        proj_j_189 = var_j_188.bj_actual_rec;
                        m_match_bool_j_191 = proj_j_189 ~ any;
                        m_match_bool_j_194 = proj_j_189 ~ {a, b, _};
                        m_match_cond_j_195 = m_match_bool_j_194 ? (
                                a_j_9 = proj_j_189.a;
                                b_j_8 = proj_j_189.b;
                                bool_j_196 = false;
                                fail_b_17 = bool_j_196;
                                flatten_fun_j_205 = fun expr_b_16 -> (
                                    var_j_197 = expr_b_16;
                                    m_match_bool_j_199 = var_j_197 ~ any;
                                    m_match_bool_j_202 = var_j_197 ~ int;
                                    m_match_cond_j_203 = m_match_bool_j_202 ? (
                                            bool_j_204 = true
                                        ) : (
                                            m_match_cond_j_200 = m_match_bool_j_199 ? (
                                                    var_j_201 = fail_b_17
                                                ) : (
                                                    void_j_198 = {}
                                                )
                                        ));
                                flatten_fun_j_207 = fun bj_null_j_6 -> (
                                    input_j_206 = input);
                                record_j_208 = {checker = flatten_fun_j_205, generator = flatten_fun_j_207};
                                proj_j_209 = record_j_208.checker;
                                var_j_210 = a_j_9;
                                appl_j_211 = proj_j_209 var_j_210;
                                lbl_check_b_15 = appl_j_211;
                                var_j_212 = lbl_check_b_15;
                                if_j_232 = var_j_212 ? (
                                        bool_j_213 = false;
                                        fail_b_13 = bool_j_213;
                                        flatten_fun_j_222 = fun expr_b_12 -> (
                                            var_j_214 = expr_b_12;
                                            m_match_bool_j_216 = var_j_214 ~ any;
                                            m_match_bool_j_219 = var_j_214 ~ bool;
                                            m_match_cond_j_220 = m_match_bool_j_219 ? (
                                                    bool_j_221 = true
                                                ) : (
                                                    m_match_cond_j_217 = m_match_bool_j_216 ? (
                                                            var_j_218 = fail_b_13
                                                        ) : (
                                                            void_j_215 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_226 = fun bj_null_j_7 -> (
                                            int_j_223 = 0;
                                            input_j_224 = input;
                                            binop_j_225 = int_j_223 <= input_j_224);
                                        record_j_227 = {checker = flatten_fun_j_222, generator = flatten_fun_j_226};
                                        proj_j_228 = record_j_227.checker;
                                        var_j_229 = b_j_8;
                                        appl_j_230 = proj_j_228 var_j_229
                                    ) : (
                                        var_j_231 = lbl_check_b_15
                                    )
                            ) : (
                                m_match_cond_j_192 = m_match_bool_j_191 ? (
                                        var_j_193 = rec_fail_b_8
                                    ) : (
                                        void_j_190 = {}
                                    )
                            )
                    ) : (
                        m_match_cond_j_184 = m_match_bool_j_183 ? (
                                var_j_185 = rec_fail_b_9
                            ) : (
                                void_j_182 = {}
                            )
                    )
            ) : (
                m_match_cond_j_176 = m_match_bool_j_175 ? (
                        var_j_177 = rec_fail_b_10
                    ) : (
                        void_j_174 = {}
                    )
            ));
    flatten_fun_j_275 = fun bj_null_j_14 -> (
        bool_j_234 = false;
        fail_b_6 = bool_j_234;
        flatten_fun_j_243 = fun expr_b_5 -> (
            var_j_235 = expr_b_5;
            m_match_bool_j_237 = var_j_235 ~ any;
            m_match_bool_j_240 = var_j_235 ~ bool;
            m_match_cond_j_241 = m_match_bool_j_240 ? (
                    bool_j_242 = true
                ) : (
                    m_match_cond_j_238 = m_match_bool_j_237 ? (
                            var_j_239 = fail_b_6
                        ) : (
                            void_j_236 = {}
                        )
                ));
        flatten_fun_j_247 = fun bj_null_j_12 -> (
            int_j_244 = 0;
            input_j_245 = input;
            binop_j_246 = int_j_244 <= input_j_245);
        record_j_248 = {checker = flatten_fun_j_243, generator = flatten_fun_j_247};
        proj_j_249 = record_j_248.generator;
        int_j_250 = 0;
        appl_j_251 = proj_j_249 int_j_250;
        b_b_1 = appl_j_251;
        bool_j_252 = false;
        fail_b_3 = bool_j_252;
        flatten_fun_j_261 = fun expr_b_2 -> (
            var_j_253 = expr_b_2;
            m_match_bool_j_255 = var_j_253 ~ any;
            m_match_bool_j_258 = var_j_253 ~ int;
            m_match_cond_j_259 = m_match_bool_j_258 ? (
                    bool_j_260 = true
                ) : (
                    m_match_cond_j_256 = m_match_bool_j_255 ? (
                            var_j_257 = fail_b_3
                        ) : (
                            void_j_254 = {}
                        )
                ));
        flatten_fun_j_263 = fun bj_null_j_13 -> (
            input_j_262 = input);
        record_j_264 = {checker = flatten_fun_j_261, generator = flatten_fun_j_263};
        proj_j_265 = record_j_264.generator;
        int_j_266 = 0;
        appl_j_267 = proj_j_265 int_j_266;
        a_b_0 = appl_j_267;
        var_j_268 = a_b_0;
        var_j_269 = b_b_1;
        record_j_270 = {a = var_j_268, b = var_j_269};
        record_j_271 = {};
        record_j_272 = {};
        record_j_273 = {a = record_j_271, b = record_j_272};
        record_j_274 = {bj_actual_rec = record_j_270, bj_decl_lbls = record_j_273});
    record_j_276 = {checker = flatten_fun_j_233, generator = flatten_fun_j_275};
    proj_j_277 = record_j_276.generator;
    int_j_278 = 0;
    appl_j_279 = proj_j_277 int_j_278;
    candidate_b_20 = appl_j_279;
    var_j_280 = aIsPos;
    var_j_281 = candidate_b_20;
    appl_j_282 = var_j_280 var_j_281;
    if_j_286 = appl_j_282 ? (
            var_j_283 = candidate_b_20
        ) : (
            bool_j_284 = false;
            assume_j_285 = assume bool_j_284
        ));
record_j_288 = {checker = flatten_fun_j_169, generator = flatten_fun_j_287};
proj_j_289 = record_j_288.generator;
int_j_290 = 0;
appl_j_291 = proj_j_289 int_j_290;
r_b_56 = appl_j_291;
flatten_fun_j_318 = fun expr_b_52 -> (
    bool_j_292 = false;
    fail_b_50 = bool_j_292;
    flatten_fun_j_301 = fun expr_b_49 -> (
        var_j_293 = expr_b_49;
        m_match_bool_j_295 = var_j_293 ~ any;
        m_match_bool_j_298 = var_j_293 ~ int;
        m_match_cond_j_299 = m_match_bool_j_298 ? (
                bool_j_300 = true
            ) : (
                m_match_cond_j_296 = m_match_bool_j_295 ? (
                        var_j_297 = fail_b_50
                    ) : (
                        void_j_294 = {}
                    )
            ));
    flatten_fun_j_303 = fun bj_null_j_16 -> (
        input_j_302 = input);
    record_j_304 = {checker = flatten_fun_j_301, generator = flatten_fun_j_303};
    proj_j_305 = record_j_304.checker;
    var_j_306 = expr_b_52;
    appl_j_307 = proj_j_305 var_j_306;
    t_check_b_53 = appl_j_307;
    var_j_308 = t_check_b_53;
    if_j_317 = var_j_308 ? (
            bool_j_309 = false;
            pred_check_b_54 = bool_j_309;
            var_j_310 = isNeg;
            var_j_311 = expr_b_52;
            appl_j_312 = var_j_310 var_j_311;
            if_j_315 = appl_j_312 ? (
                    bool_j_313 = true
                ) : (
                    var_j_314 = pred_check_b_54
                )
        ) : (
            var_j_316 = t_check_b_53
        ));
flatten_fun_j_342 = fun bj_null_j_18 -> (
    bool_j_319 = false;
    fail_b_46 = bool_j_319;
    flatten_fun_j_328 = fun expr_b_45 -> (
        var_j_320 = expr_b_45;
        m_match_bool_j_322 = var_j_320 ~ any;
        m_match_bool_j_325 = var_j_320 ~ int;
        m_match_cond_j_326 = m_match_bool_j_325 ? (
                bool_j_327 = true
            ) : (
                m_match_cond_j_323 = m_match_bool_j_322 ? (
                        var_j_324 = fail_b_46
                    ) : (
                        void_j_321 = {}
                    )
            ));
    flatten_fun_j_330 = fun bj_null_j_17 -> (
        input_j_329 = input);
    record_j_331 = {checker = flatten_fun_j_328, generator = flatten_fun_j_330};
    proj_j_332 = record_j_331.generator;
    int_j_333 = 0;
    appl_j_334 = proj_j_332 int_j_333;
    candidate_b_48 = appl_j_334;
    var_j_335 = isNeg;
    var_j_336 = candidate_b_48;
    appl_j_337 = var_j_335 var_j_336;
    if_j_341 = appl_j_337 ? (
            var_j_338 = candidate_b_48
        ) : (
            bool_j_339 = false;
            assume_j_340 = assume bool_j_339
        ));
record_j_343 = {checker = flatten_fun_j_318, generator = flatten_fun_j_342};
proj_j_344 = record_j_343.checker;
appl_j_347 = access_record r_b_56;
appl_j_348 = proj_j_344 appl_j_347;
check_res_b_57 = appl_j_348;
if_j_356 = check_res_b_57 ? (
        var_j_350 = access_record
    ) : (
        error_var_j_351 = check_res_b_57;
        assert_pred_j_352 = error_var_j_351;
        assert_res_j_353 = assert_pred_j_352 ? (
                assert_res_true_j_354 = {}
            ) : (
                ab_j_355 = abort
            )
    );
i_result = if_j_356