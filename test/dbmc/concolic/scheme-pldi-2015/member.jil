i_first = {};
flatten_fun_j_241 = fun member_j_4 -> (
    flatten_fun_j_240 = fun x -> (
        flatten_fun_j_239 = fun l -> (
            var_j_32 = member_j_4;
            var_j_33 = member_j_4;
            appl_j_34 = var_j_32 var_j_33;
            member = appl_j_34;
            flatten_fun_j_236 = fun x_b_2 -> (
                int_j_35 = 0;
                input_j_36 = input;
                binop_j_37 = int_j_35 < input_j_36;
                if_j_57 = binop_j_37 ? (
                        bool_j_38 = false;
                        fail_b_23 = bool_j_38;
                        flatten_fun_j_47 = fun expr_b_22 -> (
                            var_j_39 = expr_b_22;
                            m_match_bool_j_41 = var_j_39 ~ any;
                            m_match_bool_j_44 = var_j_39 ~ int;
                            m_match_cond_j_45 = m_match_bool_j_44 ? (
                                    bool_j_46 = true
                                ) : (
                                    m_match_cond_j_42 = m_match_bool_j_41 ? (
                                            var_j_43 = fail_b_23
                                        ) : (
                                            void_j_40 = {}
                                        )
                                ));
                        flatten_fun_j_49 = fun bj_null -> (
                            input_j_48 = input);
                        flatten_fun_j_51 = fun expr_b_24 -> (
                            var_j_50 = expr_b_24);
                        record_j_52 = {checker = flatten_fun_j_47, generator = flatten_fun_j_49, wrapper = flatten_fun_j_51};
                        proj_j_53 = record_j_52.checker;
                        var_j_54 = x_b_2;
                        appl_j_55 = proj_j_53 var_j_54
                    ) : (
                        bool_j_56 = true
                    );
                arg_check_b_3 = if_j_57;
                var_j_58 = arg_check_b_3;
                if_j_235 = var_j_58 ? (
                        flatten_fun_j_227 = fun l_b_0 -> (
                            int_j_59 = 0;
                            input_j_60 = input;
                            binop_j_61 = int_j_59 < input_j_60;
                            if_j_174 = binop_j_61 ? (
                                    flatten_fun_j_115 = fun expr_b_37 -> (
                                        bool_j_62 = false;
                                        lst_fail_b_38 = bool_j_62;
                                        var_j_63 = expr_b_37;
                                        m_match_bool_j_65 = var_j_63 ~ any;
                                        m_match_bool_j_68 = var_j_63 ~ 
                                            {j_head, j_tail, _};
                                        m_match_bool_j_112 = var_j_63 ~ 
                                            {j_empty, _};
                                        m_match_cond_j_113 = m_match_bool_j_112 ? (
                                                bool_j_114 = true
                                            ) : (
                                                m_match_cond_j_69 = m_match_bool_j_68 ? (
                                                        bj_underscore = var_j_63.j_head;
                                                        bj_underscore2 = var_j_63.j_tail;
                                                        flatten_fun_j_105 = fun test_fun_b_34_j_2 -> (
                                                            flatten_fun_j_104 = fun test_list_b_35 -> (
                                                                var_j_70 = test_fun_b_34_j_2;
                                                                var_j_71 = test_fun_b_34_j_2;
                                                                appl_j_72 = var_j_70 var_j_71;
                                                                test_fun_b_34 = appl_j_72;
                                                                var_j_73 = test_list_b_35;
                                                                m_match_bool_j_75 = var_j_73 ~ 
                                                                    {j_head, j_tail, _};
                                                                m_match_bool_j_101 = var_j_73 ~ 
                                                                    {j_empty, _};
                                                                m_match_cond_j_102 = m_match_bool_j_101 ? (
                                                                        
                                                                    bool_j_103 = true
                                                                    ) : (
                                                                        
                                                                    m_match_cond_j_76 = m_match_bool_j_75 ? (
                                                                        hd = var_j_73.j_head;
                                                                    tl = var_j_73.j_tail;
                                                                    bool_j_77 = false;
                                                                    fail_b_32 = bool_j_77;
                                                                    flatten_fun_j_86 = fun expr_b_31 -> (
                                                                    var_j_78 = expr_b_31;
                                                                    m_match_bool_j_80 = var_j_78 ~ any;
                                                                    m_match_bool_j_83 = var_j_78 ~ int;
                                                                    m_match_cond_j_84 = m_match_bool_j_83 ? (
                                                                        bool_j_85 = true
                                                                    ) : (
                                                                        m_match_cond_j_81 = m_match_bool_j_80 ? (
                                                                        var_j_82 = fail_b_32
                                                                    ) : (
                                                                        void_j_79 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_88 = fun bj_null_j_5 -> (
                                                                    input_j_87 = input);
                                                                    flatten_fun_j_90 = fun expr_b_33 -> (
                                                                    var_j_89 = expr_b_33);
                                                                    record_j_91 = 
                                                                    {checker = flatten_fun_j_86, generator = flatten_fun_j_88, wrapper = flatten_fun_j_90};
                                                                    proj_j_92 = record_j_91.checker;
                                                                    var_j_93 = hd;
                                                                    appl_j_94 = proj_j_92 var_j_93;
                                                                    elm_check_b_36 = appl_j_94;
                                                                    var_j_95 = elm_check_b_36;
                                                                    if_j_100 = var_j_95 ? (
                                                                        var_j_96 = test_fun_b_34;
                                                                    var_j_97 = tl;
                                                                    appl_j_98 = var_j_96 var_j_97
                                                                    ) : (
                                                                        var_j_99 = elm_check_b_36
                                                                    )
                                                                    ) : (
                                                                        void_j_74 = 
                                                                    {}
                                                                    )
                                                                    )));
                                                        test_fun_b_34_j_2_j_7 = flatten_fun_j_105;
                                                        var_j_106 = test_fun_b_34_j_2_j_7;
                                                        var_j_107 = test_fun_b_34_j_2_j_7;
                                                        appl_j_108 = var_j_106 var_j_107;
                                                        test_fun_b_34_j_6 = appl_j_108;
                                                        var_j_109 = test_fun_b_34_j_6;
                                                        var_j_110 = expr_b_37;
                                                        appl_j_111 = var_j_109 var_j_110
                                                    ) : (
                                                        m_match_cond_j_66 = m_match_bool_j_65 ? (
                                                                var_j_67 = lst_fail_b_38
                                                            ) : (
                                                                void_j_64 = 
                                                                    {}
                                                            )
                                                    )
                                            ));
                                    flatten_fun_j_166 = fun bj_null_j_12 -> (
                                        flatten_fun_j_152 = fun list_maker_b_29_j_3 -> (
                                            flatten_fun_j_151 = fun len_b_28 -> (
                                                var_j_116 = list_maker_b_29_j_3;
                                                var_j_117 = list_maker_b_29_j_3;
                                                appl_j_118 = var_j_116 var_j_117;
                                                list_maker_b_29 = appl_j_118;
                                                var_j_119 = len_b_28;
                                                int_j_120 = 0;
                                                binop_j_121 = var_j_119 == int_j_120;
                                                if_j_150 = binop_j_121 ? (
                                                        record_j_122 = 
                                                            {};
                                                        record_j_123 = 
                                                            {j_empty = record_j_122}
                                                    ) : (
                                                        bool_j_124 = false;
                                                        fail_b_26 = bool_j_124;
                                                        flatten_fun_j_133 = fun expr_b_25 -> (
                                                            var_j_125 = expr_b_25;
                                                            m_match_bool_j_127 = var_j_125 ~ any;
                                                            m_match_bool_j_130 = var_j_125 ~ int;
                                                            m_match_cond_j_131 = m_match_bool_j_130 ? (
                                                                    bool_j_132 = true
                                                                ) : (
                                                                    m_match_cond_j_128 = m_match_bool_j_127 ? (
                                                                        var_j_129 = fail_b_26
                                                                    ) : (
                                                                        void_j_126 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_135 = fun bj_null_j_8 -> (
                                                            input_j_134 = input);
                                                        flatten_fun_j_137 = fun expr_b_27 -> (
                                                            var_j_136 = expr_b_27);
                                                        record_j_138 = 
                                                            {checker = flatten_fun_j_133, generator = flatten_fun_j_135, wrapper = flatten_fun_j_137};
                                                        proj_j_139 = record_j_138.generator;
                                                        int_j_140 = 0;
                                                        appl_j_141 = proj_j_139 int_j_140;
                                                        elm_b_30 = appl_j_141;
                                                        record_j_142 = 
                                                            {};
                                                        var_j_143 = elm_b_30;
                                                        var_j_144 = list_maker_b_29;
                                                        var_j_145 = len_b_28;
                                                        int_j_146 = 1;
                                                        binop_j_147 = var_j_145 - int_j_146;
                                                        appl_j_148 = var_j_144 binop_j_147;
                                                        record_j_149 = 
                                                            {j_cons = record_j_142, j_head = var_j_143, j_tail = appl_j_148}
                                                    )));
                                        list_maker_b_29_j_3_j_11 = flatten_fun_j_152;
                                        var_j_153 = list_maker_b_29_j_3_j_11;
                                        var_j_154 = list_maker_b_29_j_3_j_11;
                                        appl_j_155 = var_j_153 var_j_154;
                                        list_maker_b_29_j_10 = appl_j_155;
                                        input_j_156 = input;
                                        len_b_28_j_9 = input_j_156;
                                        int_j_157 = 0;
                                        var_j_158 = len_b_28_j_9;
                                        binop_j_159 = int_j_157 <= var_j_158;
                                        if_j_165 = binop_j_159 ? (
                                                var_j_160 = list_maker_b_29_j_10;
                                                var_j_161 = len_b_28_j_9;
                                                appl_j_162 = var_j_160 var_j_161
                                            ) : (
                                                bool_j_163 = false;
                                                assume_j_164 = assume bool_j_163
                                            ));
                                    flatten_fun_j_168 = fun expr_b_39 -> (
                                        var_j_167 = expr_b_39);
                                    record_j_169 = {checker = flatten_fun_j_115, generator = flatten_fun_j_166, wrapper = flatten_fun_j_168};
                                    proj_j_170 = record_j_169.checker;
                                    var_j_171 = l_b_0;
                                    appl_j_172 = proj_j_170 var_j_171
                                ) : (
                                    bool_j_173 = true
                                );
                            arg_check_b_1 = if_j_174;
                            var_j_175 = arg_check_b_1;
                            if_j_226 = var_j_175 ? (
                                    bool_j_176 = false;
                                    fail_b_41 = bool_j_176;
                                    flatten_fun_j_185 = fun expr_b_40 -> (
                                        var_j_177 = expr_b_40;
                                        m_match_bool_j_179 = var_j_177 ~ any;
                                        m_match_bool_j_182 = var_j_177 ~ bool;
                                        m_match_cond_j_183 = m_match_bool_j_182 ? (
                                                bool_j_184 = true
                                            ) : (
                                                m_match_cond_j_180 = m_match_bool_j_179 ? (
                                                        var_j_181 = fail_b_41
                                                    ) : (
                                                        void_j_178 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_189 = fun bj_null_j_13 -> (
                                        int_j_186 = 0;
                                        input_j_187 = input;
                                        binop_j_188 = int_j_186 <= input_j_187);
                                    flatten_fun_j_191 = fun expr_b_42 -> (
                                        var_j_190 = expr_b_42);
                                    record_j_192 = {checker = flatten_fun_j_185, generator = flatten_fun_j_189, wrapper = flatten_fun_j_191};
                                    proj_j_193 = record_j_192.wrapper;
                                    bool_j_194 = false;
                                    fail_b_43 = bool_j_194;
                                    var_j_195 = l;
                                    m_match_bool_j_197 = var_j_195 ~ 
                                        {j_head, j_tail, _};
                                    m_match_bool_j_209 = var_j_195 ~ 
                                        {j_empty, _};
                                    m_match_bool_j_213 = var_j_195 ~ 
                                        {bj_untouched, _};
                                    m_match_cond_j_214 = m_match_bool_j_213 ? (
                                            var_j_215 = fail_b_43;
                                            assert_pred_j_216 = var_j_215;
                                            assert_res_j_217 = assert_pred_j_216 ? (
                                                    assert_res_true_j_218 = 
                                                        {}
                                                ) : (
                                                    ab_j_219 = abort
                                                )
                                        ) : (
                                            m_match_cond_j_210 = m_match_bool_j_209 ? (
                                                    record_j_211 = {};
                                                    record_j_212 = {j_empty = record_j_211}
                                                ) : (
                                                    m_match_cond_j_198 = m_match_bool_j_197 ? (
                                                            hd_j_15 = var_j_195.j_head;
                                                            tl_j_14 = var_j_195.j_tail;
                                                            var_j_199 = x;
                                                            var_j_200 = hd_j_15;
                                                            binop_j_201 = var_j_199 == var_j_200;
                                                            if_j_208 = binop_j_201 ? (
                                                                    bool_j_202 = true
                                                                ) : (
                                                                    var_j_203 = member;
                                                                    var_j_204 = x;
                                                                    appl_j_205 = var_j_203 var_j_204;
                                                                    var_j_206 = tl_j_14;
                                                                    appl_j_207 = appl_j_205 var_j_206
                                                                )
                                                        ) : (
                                                            ab_j_196 = abort
                                                        )
                                                )
                                        );
                                    appl_j_220 = proj_j_193 m_match_cond_j_214
                                ) : (
                                    var_j_221 = arg_check_b_1;
                                    assert_pred_j_222 = var_j_221;
                                    assert_res_j_223 = assert_pred_j_222 ? (
                                            assert_res_true_j_224 = {}
                                        ) : (
                                            ab_j_225 = abort
                                        )
                                ));
                        var_j_228 = l;
                        appl_j_229 = flatten_fun_j_227 var_j_228
                    ) : (
                        var_j_230 = arg_check_b_3;
                        assert_pred_j_231 = var_j_230;
                        assert_res_j_232 = assert_pred_j_231 ? (
                                assert_res_true_j_233 = {}
                            ) : (
                                ab_j_234 = abort
                            )
                    ));
            var_j_237 = x;
            appl_j_238 = flatten_fun_j_236 var_j_237)));
appl_j_244 = flatten_fun_j_241 flatten_fun_j_241;
bool_j_245 = false;
fail_b_5 = bool_j_245;
flatten_fun_j_254 = fun expr_b_4 -> (
    var_j_246 = expr_b_4;
    m_match_bool_j_248 = var_j_246 ~ any;
    m_match_bool_j_251 = var_j_246 ~ int;
    m_match_cond_j_252 = m_match_bool_j_251 ? (
            bool_j_253 = true
        ) : (
            m_match_cond_j_249 = m_match_bool_j_248 ? (
                    var_j_250 = fail_b_5
                ) : (
                    void_j_247 = {}
                )
        ));
flatten_fun_j_256 = fun bj_null_j_16 -> (
    input_j_255 = input);
flatten_fun_j_258 = fun expr_b_6 -> (
    var_j_257 = expr_b_6);
record_j_259 = {checker = flatten_fun_j_254, generator = flatten_fun_j_256, wrapper = flatten_fun_j_258};
proj_j_260 = record_j_259.generator;
int_j_261 = 0;
appl_j_262 = proj_j_260 int_j_261;
x_b_49 = appl_j_262;
flatten_fun_j_316 = fun expr_b_19 -> (
    bool_j_263 = false;
    lst_fail_b_20 = bool_j_263;
    var_j_264 = expr_b_19;
    m_match_bool_j_266 = var_j_264 ~ any;
    m_match_bool_j_269 = var_j_264 ~ {j_head, j_tail, _};
    m_match_bool_j_313 = var_j_264 ~ {j_empty, _};
    m_match_cond_j_314 = m_match_bool_j_313 ? (
            bool_j_315 = true
        ) : (
            m_match_cond_j_270 = m_match_bool_j_269 ? (
                    bj_underscore_j_23 = var_j_264.j_head;
                    bj_underscore2_j_22 = var_j_264.j_tail;
                    flatten_fun_j_306 = fun test_fun_b_16_j_0 -> (
                        flatten_fun_j_305 = fun test_list_b_17 -> (
                            var_j_271 = test_fun_b_16_j_0;
                            var_j_272 = test_fun_b_16_j_0;
                            appl_j_273 = var_j_271 var_j_272;
                            test_fun_b_16 = appl_j_273;
                            var_j_274 = test_list_b_17;
                            m_match_bool_j_276 = var_j_274 ~ {j_head, j_tail, _};
                            m_match_bool_j_302 = var_j_274 ~ {j_empty, _};
                            m_match_cond_j_303 = m_match_bool_j_302 ? (
                                    bool_j_304 = true
                                ) : (
                                    m_match_cond_j_277 = m_match_bool_j_276 ? (
                                            hd_j_19 = var_j_274.j_head;
                                            tl_j_18 = var_j_274.j_tail;
                                            bool_j_278 = false;
                                            fail_b_14 = bool_j_278;
                                            flatten_fun_j_287 = fun expr_b_13 -> (
                                                var_j_279 = expr_b_13;
                                                m_match_bool_j_281 = var_j_279 ~ any;
                                                m_match_bool_j_284 = var_j_279 ~ int;
                                                m_match_cond_j_285 = m_match_bool_j_284 ? (
                                                        bool_j_286 = true
                                                    ) : (
                                                        m_match_cond_j_282 = m_match_bool_j_281 ? (
                                                                var_j_283 = fail_b_14
                                                            ) : (
                                                                void_j_280 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_289 = fun bj_null_j_17 -> (
                                                input_j_288 = input);
                                            flatten_fun_j_291 = fun expr_b_15 -> (
                                                var_j_290 = expr_b_15);
                                            record_j_292 = {checker = flatten_fun_j_287, generator = flatten_fun_j_289, wrapper = flatten_fun_j_291};
                                            proj_j_293 = record_j_292.checker;
                                            var_j_294 = hd_j_19;
                                            appl_j_295 = proj_j_293 var_j_294;
                                            elm_check_b_18 = appl_j_295;
                                            var_j_296 = elm_check_b_18;
                                            if_j_301 = var_j_296 ? (
                                                    var_j_297 = test_fun_b_16;
                                                    var_j_298 = tl_j_18;
                                                    appl_j_299 = var_j_297 var_j_298
                                                ) : (
                                                    var_j_300 = elm_check_b_18
                                                )
                                        ) : (
                                            void_j_275 = {}
                                        )
                                )));
                    test_fun_b_16_j_0_j_21 = flatten_fun_j_306;
                    var_j_307 = test_fun_b_16_j_0_j_21;
                    var_j_308 = test_fun_b_16_j_0_j_21;
                    appl_j_309 = var_j_307 var_j_308;
                    test_fun_b_16_j_20 = appl_j_309;
                    var_j_310 = test_fun_b_16_j_20;
                    var_j_311 = expr_b_19;
                    appl_j_312 = var_j_310 var_j_311
                ) : (
                    m_match_cond_j_267 = m_match_bool_j_266 ? (
                            var_j_268 = lst_fail_b_20
                        ) : (
                            void_j_265 = {}
                        )
                )
        ));
flatten_fun_j_367 = fun bj_null_j_28 -> (
    flatten_fun_j_353 = fun list_maker_b_11_j_1 -> (
        flatten_fun_j_352 = fun len_b_10 -> (
            var_j_317 = list_maker_b_11_j_1;
            var_j_318 = list_maker_b_11_j_1;
            appl_j_319 = var_j_317 var_j_318;
            list_maker_b_11 = appl_j_319;
            var_j_320 = len_b_10;
            int_j_321 = 0;
            binop_j_322 = var_j_320 == int_j_321;
            if_j_351 = binop_j_322 ? (
                    record_j_323 = {};
                    record_j_324 = {j_empty = record_j_323}
                ) : (
                    bool_j_325 = false;
                    fail_b_8 = bool_j_325;
                    flatten_fun_j_334 = fun expr_b_7 -> (
                        var_j_326 = expr_b_7;
                        m_match_bool_j_328 = var_j_326 ~ any;
                        m_match_bool_j_331 = var_j_326 ~ int;
                        m_match_cond_j_332 = m_match_bool_j_331 ? (
                                bool_j_333 = true
                            ) : (
                                m_match_cond_j_329 = m_match_bool_j_328 ? (
                                        var_j_330 = fail_b_8
                                    ) : (
                                        void_j_327 = {}
                                    )
                            ));
                    flatten_fun_j_336 = fun bj_null_j_24 -> (
                        input_j_335 = input);
                    flatten_fun_j_338 = fun expr_b_9 -> (
                        var_j_337 = expr_b_9);
                    record_j_339 = {checker = flatten_fun_j_334, generator = flatten_fun_j_336, wrapper = flatten_fun_j_338};
                    proj_j_340 = record_j_339.generator;
                    int_j_341 = 0;
                    appl_j_342 = proj_j_340 int_j_341;
                    elm_b_12 = appl_j_342;
                    record_j_343 = {};
                    var_j_344 = elm_b_12;
                    var_j_345 = list_maker_b_11;
                    var_j_346 = len_b_10;
                    int_j_347 = 1;
                    binop_j_348 = var_j_346 - int_j_347;
                    appl_j_349 = var_j_345 binop_j_348;
                    record_j_350 = {j_cons = record_j_343, j_head = var_j_344, j_tail = appl_j_349}
                )));
    list_maker_b_11_j_1_j_27 = flatten_fun_j_353;
    var_j_354 = list_maker_b_11_j_1_j_27;
    var_j_355 = list_maker_b_11_j_1_j_27;
    appl_j_356 = var_j_354 var_j_355;
    list_maker_b_11_j_26 = appl_j_356;
    input_j_357 = input;
    len_b_10_j_25 = input_j_357;
    int_j_358 = 0;
    var_j_359 = len_b_10_j_25;
    binop_j_360 = int_j_358 <= var_j_359;
    if_j_366 = binop_j_360 ? (
            var_j_361 = list_maker_b_11_j_26;
            var_j_362 = len_b_10_j_25;
            appl_j_363 = var_j_361 var_j_362
        ) : (
            bool_j_364 = false;
            assume_j_365 = assume bool_j_364
        ));
flatten_fun_j_369 = fun expr_b_21 -> (
    var_j_368 = expr_b_21);
record_j_370 = {checker = flatten_fun_j_316, generator = flatten_fun_j_367, wrapper = flatten_fun_j_369};
proj_j_371 = record_j_370.generator;
int_j_372 = 0;
appl_j_373 = proj_j_371 int_j_372;
l_b_48 = appl_j_373;
bool_j_374 = false;
fail_b_45 = bool_j_374;
flatten_fun_j_383 = fun expr_b_44 -> (
    var_j_375 = expr_b_44;
    m_match_bool_j_377 = var_j_375 ~ any;
    m_match_bool_j_380 = var_j_375 ~ bool;
    m_match_cond_j_381 = m_match_bool_j_380 ? (
            bool_j_382 = true
        ) : (
            m_match_cond_j_378 = m_match_bool_j_377 ? (
                    var_j_379 = fail_b_45
                ) : (
                    void_j_376 = {}
                )
        ));
flatten_fun_j_387 = fun bj_null_j_29 -> (
    int_j_384 = 0;
    input_j_385 = input;
    binop_j_386 = int_j_384 <= input_j_385);
flatten_fun_j_389 = fun expr_b_46 -> (
    var_j_388 = expr_b_46);
record_j_390 = {checker = flatten_fun_j_383, generator = flatten_fun_j_387, wrapper = flatten_fun_j_389};
proj_j_391 = record_j_390.checker;
appl_j_394 = appl_j_244 x_b_49;
appl_j_396 = appl_j_394 l_b_48;
appl_j_397 = proj_j_391 appl_j_396;
check_res_b_47 = appl_j_397;
if_j_405 = check_res_b_47 ? (
        var_j_399 = appl_j_244
    ) : (
        error_var_j_400 = check_res_b_47;
        assert_pred_j_401 = error_var_j_400;
        assert_res_j_402 = assert_pred_j_401 ? (
                assert_res_true_j_403 = {}
            ) : (
                ab_j_404 = abort
            )
    );
i_result = if_j_405