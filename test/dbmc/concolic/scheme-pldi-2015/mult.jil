i_first = {};
flatten_fun_j_334 = fun mult_j_0 -> (
    flatten_fun_j_333 = fun x -> (
        var_j_41 = mult_j_0;
        var_j_42 = mult_j_0;
        appl_j_43 = var_j_41 var_j_42;
        mult = appl_j_43;
        flatten_fun_j_330 = fun x_b_0 -> (
            int_j_44 = 0;
            input_j_45 = input;
            binop_j_46 = int_j_44 < input_j_45;
            if_j_164 = binop_j_46 ? (
                    flatten_fun_j_112 = fun expr_b_35 -> (
                        bool_j_47 = false;
                        rec_fail_b_34 = bool_j_47;
                        bool_j_48 = false;
                        rec_fail_b_33 = bool_j_48;
                        bool_j_49 = false;
                        rec_fail_b_32 = bool_j_49;
                        var_j_50 = expr_b_35;
                        m_match_bool_j_52 = var_j_50 ~ any;
                        m_match_bool_j_55 = var_j_50 ~ {bj_actual_rec, _};
                        m_match_cond_j_56 = m_match_bool_j_55 ? (
                                var_j_57 = expr_b_35;
                                proj_j_58 = var_j_57.bj_decl_lbls;
                                m_match_bool_j_60 = proj_j_58 ~ any;
                                m_match_bool_j_63 = proj_j_58 ~ {m, n, _};
                                m_match_cond_j_64 = m_match_bool_j_63 ? (
                                        m_j_3 = proj_j_58.m;
                                        n_j_2 = proj_j_58.n;
                                        var_j_65 = expr_b_35;
                                        proj_j_66 = var_j_65.bj_actual_rec;
                                        m_match_bool_j_68 = proj_j_66 ~ any;
                                        m_match_bool_j_71 = proj_j_66 ~ 
                                            {m, n, _};
                                        m_match_cond_j_72 = m_match_bool_j_71 ? (
                                                m = proj_j_66.m;
                                                n = proj_j_66.n;
                                                bool_j_73 = false;
                                                fail_b_41 = bool_j_73;
                                                flatten_fun_j_82 = fun expr_b_40 -> (
                                                    var_j_74 = expr_b_40;
                                                    m_match_bool_j_76 = var_j_74 ~ any;
                                                    m_match_bool_j_79 = var_j_74 ~ int;
                                                    m_match_cond_j_80 = m_match_bool_j_79 ? (
                                                            bool_j_81 = true
                                                        ) : (
                                                            m_match_cond_j_77 = m_match_bool_j_76 ? (
                                                                    var_j_78 = fail_b_41
                                                                ) : (
                                                                    void_j_75 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_84 = fun bj_null -> (
                                                    input_j_83 = input);
                                                flatten_fun_j_86 = fun expr_b_42 -> (
                                                    var_j_85 = expr_b_42);
                                                record_j_87 = {checker = flatten_fun_j_82, generator = flatten_fun_j_84, wrapper = flatten_fun_j_86};
                                                proj_j_88 = record_j_87.checker;
                                                var_j_89 = m;
                                                appl_j_90 = proj_j_88 var_j_89;
                                                lbl_check_b_39 = appl_j_90;
                                                var_j_91 = lbl_check_b_39;
                                                if_j_111 = var_j_91 ? (
                                                        bool_j_92 = false;
                                                        fail_b_37 = bool_j_92;
                                                        flatten_fun_j_101 = fun expr_b_36 -> (
                                                            var_j_93 = expr_b_36;
                                                            m_match_bool_j_95 = var_j_93 ~ any;
                                                            m_match_bool_j_98 = var_j_93 ~ int;
                                                            m_match_cond_j_99 = m_match_bool_j_98 ? (
                                                                    bool_j_100 = true
                                                                ) : (
                                                                    m_match_cond_j_96 = m_match_bool_j_95 ? (
                                                                        var_j_97 = fail_b_37
                                                                    ) : (
                                                                        void_j_94 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_103 = fun bj_null_j_1 -> (
                                                            input_j_102 = input);
                                                        flatten_fun_j_105 = fun expr_b_38 -> (
                                                            var_j_104 = expr_b_38);
                                                        record_j_106 = 
                                                            {checker = flatten_fun_j_101, generator = flatten_fun_j_103, wrapper = flatten_fun_j_105};
                                                        proj_j_107 = record_j_106.checker;
                                                        var_j_108 = n;
                                                        appl_j_109 = proj_j_107 var_j_108
                                                    ) : (
                                                        var_j_110 = lbl_check_b_39
                                                    )
                                            ) : (
                                                m_match_cond_j_69 = m_match_bool_j_68 ? (
                                                        var_j_70 = rec_fail_b_32
                                                    ) : (
                                                        void_j_67 = {}
                                                    )
                                            )
                                    ) : (
                                        m_match_cond_j_61 = m_match_bool_j_60 ? (
                                                var_j_62 = rec_fail_b_33
                                            ) : (
                                                void_j_59 = {}
                                            )
                                    )
                            ) : (
                                m_match_cond_j_53 = m_match_bool_j_52 ? (
                                        var_j_54 = rec_fail_b_34
                                    ) : (
                                        void_j_51 = {}
                                    )
                            ));
                    flatten_fun_j_156 = fun bj_null_j_6 -> (
                        bool_j_113 = false;
                        fail_b_30 = bool_j_113;
                        flatten_fun_j_122 = fun expr_b_29 -> (
                            var_j_114 = expr_b_29;
                            m_match_bool_j_116 = var_j_114 ~ any;
                            m_match_bool_j_119 = var_j_114 ~ int;
                            m_match_cond_j_120 = m_match_bool_j_119 ? (
                                    bool_j_121 = true
                                ) : (
                                    m_match_cond_j_117 = m_match_bool_j_116 ? (
                                            var_j_118 = fail_b_30
                                        ) : (
                                            void_j_115 = {}
                                        )
                                ));
                        flatten_fun_j_124 = fun bj_null_j_4 -> (
                            input_j_123 = input);
                        flatten_fun_j_126 = fun expr_b_31 -> (
                            var_j_125 = expr_b_31);
                        record_j_127 = {checker = flatten_fun_j_122, generator = flatten_fun_j_124, wrapper = flatten_fun_j_126};
                        proj_j_128 = record_j_127.generator;
                        int_j_129 = 0;
                        appl_j_130 = proj_j_128 int_j_129;
                        n_b_25 = appl_j_130;
                        bool_j_131 = false;
                        fail_b_27 = bool_j_131;
                        flatten_fun_j_140 = fun expr_b_26 -> (
                            var_j_132 = expr_b_26;
                            m_match_bool_j_134 = var_j_132 ~ any;
                            m_match_bool_j_137 = var_j_132 ~ int;
                            m_match_cond_j_138 = m_match_bool_j_137 ? (
                                    bool_j_139 = true
                                ) : (
                                    m_match_cond_j_135 = m_match_bool_j_134 ? (
                                            var_j_136 = fail_b_27
                                        ) : (
                                            void_j_133 = {}
                                        )
                                ));
                        flatten_fun_j_142 = fun bj_null_j_5 -> (
                            input_j_141 = input);
                        flatten_fun_j_144 = fun expr_b_28 -> (
                            var_j_143 = expr_b_28);
                        record_j_145 = {checker = flatten_fun_j_140, generator = flatten_fun_j_142, wrapper = flatten_fun_j_144};
                        proj_j_146 = record_j_145.generator;
                        int_j_147 = 0;
                        appl_j_148 = proj_j_146 int_j_147;
                        m_b_24 = appl_j_148;
                        var_j_149 = m_b_24;
                        var_j_150 = n_b_25;
                        record_j_151 = {m = var_j_149, n = var_j_150};
                        record_j_152 = {};
                        record_j_153 = {};
                        record_j_154 = {m = record_j_152, n = record_j_153};
                        record_j_155 = {bj_actual_rec = record_j_151, bj_decl_lbls = record_j_154});
                    flatten_fun_j_158 = fun expr_b_43 -> (
                        var_j_157 = expr_b_43);
                    record_j_159 = {checker = flatten_fun_j_112, generator = flatten_fun_j_156, wrapper = flatten_fun_j_158};
                    proj_j_160 = record_j_159.checker;
                    var_j_161 = x_b_0;
                    appl_j_162 = proj_j_160 var_j_161
                ) : (
                    bool_j_163 = true
                );
            arg_check_b_1 = if_j_164;
            var_j_165 = arg_check_b_1;
            if_j_329 = var_j_165 ? (
                    flatten_fun_j_197 = fun expr_b_51 -> (
                        bool_j_166 = false;
                        fail_b_49 = bool_j_166;
                        flatten_fun_j_175 = fun expr_b_48 -> (
                            var_j_167 = expr_b_48;
                            m_match_bool_j_169 = var_j_167 ~ any;
                            m_match_bool_j_172 = var_j_167 ~ int;
                            m_match_cond_j_173 = m_match_bool_j_172 ? (
                                    bool_j_174 = true
                                ) : (
                                    m_match_cond_j_170 = m_match_bool_j_169 ? (
                                            var_j_171 = fail_b_49
                                        ) : (
                                            void_j_168 = {}
                                        )
                                ));
                        flatten_fun_j_177 = fun bj_null_j_7 -> (
                            input_j_176 = input);
                        flatten_fun_j_179 = fun expr_b_50 -> (
                            var_j_178 = expr_b_50);
                        record_j_180 = {checker = flatten_fun_j_175, generator = flatten_fun_j_177, wrapper = flatten_fun_j_179};
                        proj_j_181 = record_j_180.checker;
                        var_j_182 = expr_b_51;
                        appl_j_183 = proj_j_181 var_j_182;
                        t_check_b_52 = appl_j_183;
                        var_j_184 = t_check_b_52;
                        if_j_196 = var_j_184 ? (
                                bool_j_185 = false;
                                pred_check_b_53 = bool_j_185;
                                flatten_fun_j_189 = fun i -> (
                                    int_j_186 = 0;
                                    var_j_187 = i;
                                    binop_j_188 = int_j_186 <= var_j_187);
                                var_j_190 = expr_b_51;
                                appl_j_191 = flatten_fun_j_189 var_j_190;
                                if_j_194 = appl_j_191 ? (
                                        bool_j_192 = true
                                    ) : (
                                        var_j_193 = pred_check_b_53
                                    )
                            ) : (
                                var_j_195 = t_check_b_52
                            ));
                    flatten_fun_j_226 = fun bj_null_j_10 -> (
                        bool_j_198 = false;
                        fail_b_45 = bool_j_198;
                        flatten_fun_j_207 = fun expr_b_44 -> (
                            var_j_199 = expr_b_44;
                            m_match_bool_j_201 = var_j_199 ~ any;
                            m_match_bool_j_204 = var_j_199 ~ int;
                            m_match_cond_j_205 = m_match_bool_j_204 ? (
                                    bool_j_206 = true
                                ) : (
                                    m_match_cond_j_202 = m_match_bool_j_201 ? (
                                            var_j_203 = fail_b_45
                                        ) : (
                                            void_j_200 = {}
                                        )
                                ));
                        flatten_fun_j_209 = fun bj_null_j_8 -> (
                            input_j_208 = input);
                        flatten_fun_j_211 = fun expr_b_46 -> (
                            var_j_210 = expr_b_46);
                        record_j_212 = {checker = flatten_fun_j_207, generator = flatten_fun_j_209, wrapper = flatten_fun_j_211};
                        proj_j_213 = record_j_212.generator;
                        int_j_214 = 0;
                        appl_j_215 = proj_j_213 int_j_214;
                        candidate_b_47 = appl_j_215;
                        flatten_fun_j_219 = fun i_j_9 -> (
                            int_j_216 = 0;
                            var_j_217 = i_j_9;
                            binop_j_218 = int_j_216 <= var_j_217);
                        var_j_220 = candidate_b_47;
                        appl_j_221 = flatten_fun_j_219 var_j_220;
                        if_j_225 = appl_j_221 ? (
                                var_j_222 = candidate_b_47
                            ) : (
                                bool_j_223 = false;
                                assume_j_224 = assume bool_j_223
                            ));
                    flatten_fun_j_228 = fun expr_b_54 -> (
                        var_j_227 = expr_b_54);
                    record_j_229 = {checker = flatten_fun_j_197, generator = flatten_fun_j_226, wrapper = flatten_fun_j_228};
                    proj_j_230 = record_j_229.wrapper;
                    var_j_231 = x;
                    proj_j_232 = var_j_231.bj_decl_lbls;
                    m_match_bool_j_234 = proj_j_232 ~ any;
                    m_match_bool_j_241 = proj_j_232 ~ {n, _};
                    m_match_cond_j_242 = m_match_bool_j_241 ? (
                            var_j_243 = x;
                            proj_j_244 = var_j_243.bj_actual_rec;
                            proj_j_245 = proj_j_244.n
                        ) : (
                            m_match_cond_j_235 = m_match_bool_j_234 ? (
                                    bool_j_236 = false;
                                    assert_pred_j_237 = bool_j_236;
                                    assert_res_j_238 = assert_pred_j_237 ? (
                                            assert_res_true_j_239 = {}
                                        ) : (
                                            ab_j_240 = abort
                                        )
                                ) : (
                                    void_j_233 = {}
                                )
                        );
                    int_j_246 = 0;
                    binop_j_247 = m_match_cond_j_242 <= int_j_246;
                    var_j_248 = x;
                    proj_j_249 = var_j_248.bj_decl_lbls;
                    m_match_bool_j_251 = proj_j_249 ~ any;
                    m_match_bool_j_258 = proj_j_249 ~ {m, _};
                    m_match_cond_j_259 = m_match_bool_j_258 ? (
                            var_j_260 = x;
                            proj_j_261 = var_j_260.bj_actual_rec;
                            proj_j_262 = proj_j_261.m
                        ) : (
                            m_match_cond_j_252 = m_match_bool_j_251 ? (
                                    bool_j_253 = false;
                                    assert_pred_j_254 = bool_j_253;
                                    assert_res_j_255 = assert_pred_j_254 ? (
                                            assert_res_true_j_256 = {}
                                        ) : (
                                            ab_j_257 = abort
                                        )
                                ) : (
                                    void_j_250 = {}
                                )
                        );
                    int_j_263 = 0;
                    binop_j_264 = m_match_cond_j_259 <= int_j_263;
                    binop_j_265 = binop_j_247 or binop_j_264;
                    if_j_322 = binop_j_265 ? (
                            int_j_266 = 0
                        ) : (
                            var_j_267 = x;
                            proj_j_268 = var_j_267.bj_decl_lbls;
                            m_match_bool_j_270 = proj_j_268 ~ any;
                            m_match_bool_j_277 = proj_j_268 ~ {n, _};
                            m_match_cond_j_278 = m_match_bool_j_277 ? (
                                    var_j_279 = x;
                                    proj_j_280 = var_j_279.bj_actual_rec;
                                    proj_j_281 = proj_j_280.n
                                ) : (
                                    m_match_cond_j_271 = m_match_bool_j_270 ? (
                                            bool_j_272 = false;
                                            assert_pred_j_273 = bool_j_272;
                                            assert_res_j_274 = assert_pred_j_273 ? (
                                                    assert_res_true_j_275 = 
                                                        {}
                                                ) : (
                                                    ab_j_276 = abort
                                                )
                                        ) : (
                                            void_j_269 = {}
                                        )
                                );
                            var_j_282 = mult;
                            var_j_283 = x;
                            proj_j_284 = var_j_283.bj_decl_lbls;
                            m_match_bool_j_286 = proj_j_284 ~ any;
                            m_match_bool_j_293 = proj_j_284 ~ {m, _};
                            m_match_cond_j_294 = m_match_bool_j_293 ? (
                                    var_j_295 = x;
                                    proj_j_296 = var_j_295.bj_actual_rec;
                                    proj_j_297 = proj_j_296.m
                                ) : (
                                    m_match_cond_j_287 = m_match_bool_j_286 ? (
                                            bool_j_288 = false;
                                            assert_pred_j_289 = bool_j_288;
                                            assert_res_j_290 = assert_pred_j_289 ? (
                                                    assert_res_true_j_291 = 
                                                        {}
                                                ) : (
                                                    ab_j_292 = abort
                                                )
                                        ) : (
                                            void_j_285 = {}
                                        )
                                );
                            int_j_298 = 1;
                            binop_j_299 = m_match_cond_j_294 - int_j_298;
                            var_j_300 = x;
                            proj_j_301 = var_j_300.bj_decl_lbls;
                            m_match_bool_j_303 = proj_j_301 ~ any;
                            m_match_bool_j_310 = proj_j_301 ~ {n, _};
                            m_match_cond_j_311 = m_match_bool_j_310 ? (
                                    var_j_312 = x;
                                    proj_j_313 = var_j_312.bj_actual_rec;
                                    proj_j_314 = proj_j_313.n
                                ) : (
                                    m_match_cond_j_304 = m_match_bool_j_303 ? (
                                            bool_j_305 = false;
                                            assert_pred_j_306 = bool_j_305;
                                            assert_res_j_307 = assert_pred_j_306 ? (
                                                    assert_res_true_j_308 = 
                                                        {}
                                                ) : (
                                                    ab_j_309 = abort
                                                )
                                        ) : (
                                            void_j_302 = {}
                                        )
                                );
                            record_j_315 = {m = binop_j_299, n = m_match_cond_j_311};
                            record_j_316 = {};
                            record_j_317 = {};
                            record_j_318 = {m = record_j_316, n = record_j_317};
                            record_j_319 = {bj_actual_rec = record_j_315, bj_decl_lbls = record_j_318};
                            appl_j_320 = var_j_282 record_j_319;
                            binop_j_321 = m_match_cond_j_278 + appl_j_320
                        );
                    appl_j_323 = proj_j_230 if_j_322
                ) : (
                    var_j_324 = arg_check_b_1;
                    assert_pred_j_325 = var_j_324;
                    assert_res_j_326 = assert_pred_j_325 ? (
                            assert_res_true_j_327 = {}
                        ) : (
                            ab_j_328 = abort
                        )
                ));
        var_j_331 = x;
        appl_j_332 = flatten_fun_j_330 var_j_331));
appl_j_337 = flatten_fun_j_334 flatten_fun_j_334;
flatten_fun_j_403 = fun expr_b_15 -> (
    bool_j_338 = false;
    rec_fail_b_14 = bool_j_338;
    bool_j_339 = false;
    rec_fail_b_13 = bool_j_339;
    bool_j_340 = false;
    rec_fail_b_12 = bool_j_340;
    var_j_341 = expr_b_15;
    m_match_bool_j_343 = var_j_341 ~ any;
    m_match_bool_j_346 = var_j_341 ~ {bj_actual_rec, _};
    m_match_cond_j_347 = m_match_bool_j_346 ? (
            var_j_348 = expr_b_15;
            proj_j_349 = var_j_348.bj_decl_lbls;
            m_match_bool_j_351 = proj_j_349 ~ any;
            m_match_bool_j_354 = proj_j_349 ~ {m, n, _};
            m_match_cond_j_355 = m_match_bool_j_354 ? (
                    m_j_16 = proj_j_349.m;
                    n_j_15 = proj_j_349.n;
                    var_j_356 = expr_b_15;
                    proj_j_357 = var_j_356.bj_actual_rec;
                    m_match_bool_j_359 = proj_j_357 ~ any;
                    m_match_bool_j_362 = proj_j_357 ~ {m, n, _};
                    m_match_cond_j_363 = m_match_bool_j_362 ? (
                            m_j_14 = proj_j_357.m;
                            n_j_13 = proj_j_357.n;
                            bool_j_364 = false;
                            fail_b_21 = bool_j_364;
                            flatten_fun_j_373 = fun expr_b_20 -> (
                                var_j_365 = expr_b_20;
                                m_match_bool_j_367 = var_j_365 ~ any;
                                m_match_bool_j_370 = var_j_365 ~ int;
                                m_match_cond_j_371 = m_match_bool_j_370 ? (
                                        bool_j_372 = true
                                    ) : (
                                        m_match_cond_j_368 = m_match_bool_j_367 ? (
                                                var_j_369 = fail_b_21
                                            ) : (
                                                void_j_366 = {}
                                            )
                                    ));
                            flatten_fun_j_375 = fun bj_null_j_11 -> (
                                input_j_374 = input);
                            flatten_fun_j_377 = fun expr_b_22 -> (
                                var_j_376 = expr_b_22);
                            record_j_378 = {checker = flatten_fun_j_373, generator = flatten_fun_j_375, wrapper = flatten_fun_j_377};
                            proj_j_379 = record_j_378.checker;
                            var_j_380 = m_j_14;
                            appl_j_381 = proj_j_379 var_j_380;
                            lbl_check_b_19 = appl_j_381;
                            var_j_382 = lbl_check_b_19;
                            if_j_402 = var_j_382 ? (
                                    bool_j_383 = false;
                                    fail_b_17 = bool_j_383;
                                    flatten_fun_j_392 = fun expr_b_16 -> (
                                        var_j_384 = expr_b_16;
                                        m_match_bool_j_386 = var_j_384 ~ any;
                                        m_match_bool_j_389 = var_j_384 ~ int;
                                        m_match_cond_j_390 = m_match_bool_j_389 ? (
                                                bool_j_391 = true
                                            ) : (
                                                m_match_cond_j_387 = m_match_bool_j_386 ? (
                                                        var_j_388 = fail_b_17
                                                    ) : (
                                                        void_j_385 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_394 = fun bj_null_j_12 -> (
                                        input_j_393 = input);
                                    flatten_fun_j_396 = fun expr_b_18 -> (
                                        var_j_395 = expr_b_18);
                                    record_j_397 = {checker = flatten_fun_j_392, generator = flatten_fun_j_394, wrapper = flatten_fun_j_396};
                                    proj_j_398 = record_j_397.checker;
                                    var_j_399 = n_j_13;
                                    appl_j_400 = proj_j_398 var_j_399
                                ) : (
                                    var_j_401 = lbl_check_b_19
                                )
                        ) : (
                            m_match_cond_j_360 = m_match_bool_j_359 ? (
                                    var_j_361 = rec_fail_b_12
                                ) : (
                                    void_j_358 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_352 = m_match_bool_j_351 ? (
                            var_j_353 = rec_fail_b_13
                        ) : (
                            void_j_350 = {}
                        )
                )
        ) : (
            m_match_cond_j_344 = m_match_bool_j_343 ? (
                    var_j_345 = rec_fail_b_14
                ) : (
                    void_j_342 = {}
                )
        ));
flatten_fun_j_447 = fun bj_null_j_19 -> (
    bool_j_404 = false;
    fail_b_10 = bool_j_404;
    flatten_fun_j_413 = fun expr_b_9 -> (
        var_j_405 = expr_b_9;
        m_match_bool_j_407 = var_j_405 ~ any;
        m_match_bool_j_410 = var_j_405 ~ int;
        m_match_cond_j_411 = m_match_bool_j_410 ? (
                bool_j_412 = true
            ) : (
                m_match_cond_j_408 = m_match_bool_j_407 ? (
                        var_j_409 = fail_b_10
                    ) : (
                        void_j_406 = {}
                    )
            ));
    flatten_fun_j_415 = fun bj_null_j_17 -> (
        input_j_414 = input);
    flatten_fun_j_417 = fun expr_b_11 -> (
        var_j_416 = expr_b_11);
    record_j_418 = {checker = flatten_fun_j_413, generator = flatten_fun_j_415, wrapper = flatten_fun_j_417};
    proj_j_419 = record_j_418.generator;
    int_j_420 = 0;
    appl_j_421 = proj_j_419 int_j_420;
    n_b_5 = appl_j_421;
    bool_j_422 = false;
    fail_b_7 = bool_j_422;
    flatten_fun_j_431 = fun expr_b_6 -> (
        var_j_423 = expr_b_6;
        m_match_bool_j_425 = var_j_423 ~ any;
        m_match_bool_j_428 = var_j_423 ~ int;
        m_match_cond_j_429 = m_match_bool_j_428 ? (
                bool_j_430 = true
            ) : (
                m_match_cond_j_426 = m_match_bool_j_425 ? (
                        var_j_427 = fail_b_7
                    ) : (
                        void_j_424 = {}
                    )
            ));
    flatten_fun_j_433 = fun bj_null_j_18 -> (
        input_j_432 = input);
    flatten_fun_j_435 = fun expr_b_8 -> (
        var_j_434 = expr_b_8);
    record_j_436 = {checker = flatten_fun_j_431, generator = flatten_fun_j_433, wrapper = flatten_fun_j_435};
    proj_j_437 = record_j_436.generator;
    int_j_438 = 0;
    appl_j_439 = proj_j_437 int_j_438;
    m_b_4 = appl_j_439;
    var_j_440 = m_b_4;
    var_j_441 = n_b_5;
    record_j_442 = {m = var_j_440, n = var_j_441};
    record_j_443 = {};
    record_j_444 = {};
    record_j_445 = {m = record_j_443, n = record_j_444};
    record_j_446 = {bj_actual_rec = record_j_442, bj_decl_lbls = record_j_445});
flatten_fun_j_449 = fun expr_b_23 -> (
    var_j_448 = expr_b_23);
record_j_450 = {checker = flatten_fun_j_403, generator = flatten_fun_j_447, wrapper = flatten_fun_j_449};
proj_j_451 = record_j_450.generator;
int_j_452 = 0;
appl_j_453 = proj_j_451 int_j_452;
x_b_97 = appl_j_453;
flatten_fun_j_485 = fun expr_b_62 -> (
    bool_j_454 = false;
    fail_b_60 = bool_j_454;
    flatten_fun_j_463 = fun expr_b_59 -> (
        var_j_455 = expr_b_59;
        m_match_bool_j_457 = var_j_455 ~ any;
        m_match_bool_j_460 = var_j_455 ~ int;
        m_match_cond_j_461 = m_match_bool_j_460 ? (
                bool_j_462 = true
            ) : (
                m_match_cond_j_458 = m_match_bool_j_457 ? (
                        var_j_459 = fail_b_60
                    ) : (
                        void_j_456 = {}
                    )
            ));
    flatten_fun_j_465 = fun bj_null_j_20 -> (
        input_j_464 = input);
    flatten_fun_j_467 = fun expr_b_61 -> (
        var_j_466 = expr_b_61);
    record_j_468 = {checker = flatten_fun_j_463, generator = flatten_fun_j_465, wrapper = flatten_fun_j_467};
    proj_j_469 = record_j_468.checker;
    var_j_470 = expr_b_62;
    appl_j_471 = proj_j_469 var_j_470;
    t_check_b_63 = appl_j_471;
    var_j_472 = t_check_b_63;
    if_j_484 = var_j_472 ? (
            bool_j_473 = false;
            pred_check_b_64 = bool_j_473;
            flatten_fun_j_477 = fun i_j_21 -> (
                int_j_474 = 0;
                var_j_475 = i_j_21;
                binop_j_476 = int_j_474 <= var_j_475);
            var_j_478 = expr_b_62;
            appl_j_479 = flatten_fun_j_477 var_j_478;
            if_j_482 = appl_j_479 ? (
                    bool_j_480 = true
                ) : (
                    var_j_481 = pred_check_b_64
                )
        ) : (
            var_j_483 = t_check_b_63
        ));
flatten_fun_j_514 = fun bj_null_j_24 -> (
    bool_j_486 = false;
    fail_b_56 = bool_j_486;
    flatten_fun_j_495 = fun expr_b_55 -> (
        var_j_487 = expr_b_55;
        m_match_bool_j_489 = var_j_487 ~ any;
        m_match_bool_j_492 = var_j_487 ~ int;
        m_match_cond_j_493 = m_match_bool_j_492 ? (
                bool_j_494 = true
            ) : (
                m_match_cond_j_490 = m_match_bool_j_489 ? (
                        var_j_491 = fail_b_56
                    ) : (
                        void_j_488 = {}
                    )
            ));
    flatten_fun_j_497 = fun bj_null_j_22 -> (
        input_j_496 = input);
    flatten_fun_j_499 = fun expr_b_57 -> (
        var_j_498 = expr_b_57);
    record_j_500 = {checker = flatten_fun_j_495, generator = flatten_fun_j_497, wrapper = flatten_fun_j_499};
    proj_j_501 = record_j_500.generator;
    int_j_502 = 0;
    appl_j_503 = proj_j_501 int_j_502;
    candidate_b_58 = appl_j_503;
    flatten_fun_j_507 = fun i_j_23 -> (
        int_j_504 = 0;
        var_j_505 = i_j_23;
        binop_j_506 = int_j_504 <= var_j_505);
    var_j_508 = candidate_b_58;
    appl_j_509 = flatten_fun_j_507 var_j_508;
    if_j_513 = appl_j_509 ? (
            var_j_510 = candidate_b_58
        ) : (
            bool_j_511 = false;
            assume_j_512 = assume bool_j_511
        ));
flatten_fun_j_516 = fun expr_b_65 -> (
    var_j_515 = expr_b_65);
record_j_517 = {checker = flatten_fun_j_485, generator = flatten_fun_j_514, wrapper = flatten_fun_j_516};
proj_j_518 = record_j_517.checker;
appl_j_521 = appl_j_337 x_b_97;
appl_j_522 = proj_j_518 appl_j_521;
check_res_b_96 = appl_j_522;
if_j_742 = check_res_b_96 ? (
        sqr_j_634 = fun n_j_38 -> (
            flatten_fun_j_631 = fun n_b_2 -> (
                bool_j_524 = false;
                fail_b_70 = bool_j_524;
                flatten_fun_j_533 = fun expr_b_69 -> (
                    var_j_525 = expr_b_69;
                    m_match_bool_j_527 = var_j_525 ~ any;
                    m_match_bool_j_530 = var_j_525 ~ int;
                    m_match_cond_j_531 = m_match_bool_j_530 ? (
                            bool_j_532 = true
                        ) : (
                            m_match_cond_j_528 = m_match_bool_j_527 ? (
                                    var_j_529 = fail_b_70
                                ) : (
                                    void_j_526 = {}
                                )
                        ));
                flatten_fun_j_535 = fun bj_null_j_31 -> (
                    input_j_534 = input);
                flatten_fun_j_537 = fun expr_b_71 -> (
                    var_j_536 = expr_b_71);
                record_j_538 = {checker = flatten_fun_j_533, generator = flatten_fun_j_535, wrapper = flatten_fun_j_537};
                proj_j_539 = record_j_538.checker;
                var_j_540 = n_b_2;
                appl_j_541 = proj_j_539 var_j_540;
                arg_check_b_3 = appl_j_541;
                var_j_542 = arg_check_b_3;
                if_j_630 = var_j_542 ? (
                        flatten_fun_j_611 = fun n_j_37 -> (
                            flatten_fun_j_576 = fun expr_b_79 -> (
                                bool_j_543 = false;
                                fail_b_77 = bool_j_543;
                                flatten_fun_j_552 = fun expr_b_76 -> (
                                    var_j_544 = expr_b_76;
                                    m_match_bool_j_546 = var_j_544 ~ any;
                                    m_match_bool_j_549 = var_j_544 ~ int;
                                    m_match_cond_j_550 = m_match_bool_j_549 ? (
                                            bool_j_551 = true
                                        ) : (
                                            m_match_cond_j_547 = m_match_bool_j_546 ? (
                                                    var_j_548 = fail_b_77
                                                ) : (
                                                    void_j_545 = {}
                                                )
                                        ));
                                flatten_fun_j_554 = fun bj_null_j_32 -> (
                                    input_j_553 = input);
                                flatten_fun_j_556 = fun expr_b_78 -> (
                                    var_j_555 = expr_b_78);
                                record_j_557 = {checker = flatten_fun_j_552, generator = flatten_fun_j_554, wrapper = flatten_fun_j_556};
                                proj_j_558 = record_j_557.checker;
                                var_j_559 = expr_b_79;
                                appl_j_560 = proj_j_558 var_j_559;
                                t_check_b_80 = appl_j_560;
                                var_j_561 = t_check_b_80;
                                if_j_575 = var_j_561 ? (
                                        bool_j_562 = false;
                                        pred_check_b_81 = bool_j_562;
                                        flatten_fun_j_568 = fun c_j_33 -> (
                                            var_j_563 = n_j_37;
                                            int_j_564 = 1;
                                            binop_j_565 = var_j_563 + int_j_564;
                                            var_j_566 = c_j_33;
                                            binop_j_567 = binop_j_565 <= var_j_566);
                                        var_j_569 = expr_b_79;
                                        appl_j_570 = flatten_fun_j_568 var_j_569;
                                        if_j_573 = appl_j_570 ? (
                                                bool_j_571 = true
                                            ) : (
                                                var_j_572 = pred_check_b_81
                                            )
                                    ) : (
                                        var_j_574 = t_check_b_80
                                    ));
                            flatten_fun_j_607 = fun bj_null_j_36 -> (
                                bool_j_577 = false;
                                fail_b_73 = bool_j_577;
                                flatten_fun_j_586 = fun expr_b_72 -> (
                                    var_j_578 = expr_b_72;
                                    m_match_bool_j_580 = var_j_578 ~ any;
                                    m_match_bool_j_583 = var_j_578 ~ int;
                                    m_match_cond_j_584 = m_match_bool_j_583 ? (
                                            bool_j_585 = true
                                        ) : (
                                            m_match_cond_j_581 = m_match_bool_j_580 ? (
                                                    var_j_582 = fail_b_73
                                                ) : (
                                                    void_j_579 = {}
                                                )
                                        ));
                                flatten_fun_j_588 = fun bj_null_j_34 -> (
                                    input_j_587 = input);
                                flatten_fun_j_590 = fun expr_b_74 -> (
                                    var_j_589 = expr_b_74);
                                record_j_591 = {checker = flatten_fun_j_586, generator = flatten_fun_j_588, wrapper = flatten_fun_j_590};
                                proj_j_592 = record_j_591.generator;
                                int_j_593 = 0;
                                appl_j_594 = proj_j_592 int_j_593;
                                candidate_b_75 = appl_j_594;
                                flatten_fun_j_600 = fun c_j_35 -> (
                                    var_j_595 = n_j_37;
                                    int_j_596 = 1;
                                    binop_j_597 = var_j_595 + int_j_596;
                                    var_j_598 = c_j_35;
                                    binop_j_599 = binop_j_597 <= var_j_598);
                                var_j_601 = candidate_b_75;
                                appl_j_602 = flatten_fun_j_600 var_j_601;
                                if_j_606 = appl_j_602 ? (
                                        var_j_603 = candidate_b_75
                                    ) : (
                                        bool_j_604 = false;
                                        assume_j_605 = assume bool_j_604
                                    ));
                            flatten_fun_j_609 = fun expr_b_82 -> (
                                var_j_608 = expr_b_82);
                            record_j_610 = {checker = flatten_fun_j_576, generator = flatten_fun_j_607, wrapper = flatten_fun_j_609});
                        var_j_612 = n_b_2;
                        appl_j_613 = flatten_fun_j_611 var_j_612;
                        proj_j_614 = appl_j_613.wrapper;
                        var_j_615 = appl_j_337;
                        var_j_616 = n_j_38;
                        var_j_617 = n_j_38;
                        record_j_618 = {m = var_j_616, n = var_j_617};
                        record_j_619 = {};
                        record_j_620 = {};
                        record_j_621 = {m = record_j_619, n = record_j_620};
                        record_j_622 = {bj_actual_rec = record_j_618, bj_decl_lbls = record_j_621};
                        appl_j_623 = var_j_615 record_j_622;
                        appl_j_624 = proj_j_614 appl_j_623
                    ) : (
                        bool_j_625 = false;
                        assert_pred_j_626 = bool_j_625;
                        assert_res_j_627 = assert_pred_j_626 ? (
                                assert_res_true_j_628 = {}
                            ) : (
                                ab_j_629 = abort
                            )
                    ));
            var_j_632 = n_j_38;
            appl_j_633 = flatten_fun_j_631 var_j_632);
        sqr = sqr_j_634;
        bool_j_635 = false;
        fail_b_67 = bool_j_635;
        flatten_fun_j_644 = fun expr_b_66 -> (
            var_j_636 = expr_b_66;
            m_match_bool_j_638 = var_j_636 ~ any;
            m_match_bool_j_641 = var_j_636 ~ int;
            m_match_cond_j_642 = m_match_bool_j_641 ? (
                    bool_j_643 = true
                ) : (
                    m_match_cond_j_639 = m_match_bool_j_638 ? (
                            var_j_640 = fail_b_67
                        ) : (
                            void_j_637 = {}
                        )
                ));
        flatten_fun_j_646 = fun bj_null_j_25 -> (
            input_j_645 = input);
        flatten_fun_j_648 = fun expr_b_68 -> (
            var_j_647 = expr_b_68);
        record_j_649 = {checker = flatten_fun_j_644, generator = flatten_fun_j_646, wrapper = flatten_fun_j_648};
        proj_j_650 = record_j_649.generator;
        int_j_651 = 0;
        appl_j_652 = proj_j_650 int_j_651;
        n_b_94 = appl_j_652;
        flatten_fun_j_722 = fun n_j_30 -> (
            flatten_fun_j_686 = fun expr_b_90 -> (
                bool_j_653 = false;
                fail_b_88 = bool_j_653;
                flatten_fun_j_662 = fun expr_b_87 -> (
                    var_j_654 = expr_b_87;
                    m_match_bool_j_656 = var_j_654 ~ any;
                    m_match_bool_j_659 = var_j_654 ~ int;
                    m_match_cond_j_660 = m_match_bool_j_659 ? (
                            bool_j_661 = true
                        ) : (
                            m_match_cond_j_657 = m_match_bool_j_656 ? (
                                    var_j_658 = fail_b_88
                                ) : (
                                    void_j_655 = {}
                                )
                        ));
                flatten_fun_j_664 = fun bj_null_j_26 -> (
                    input_j_663 = input);
                flatten_fun_j_666 = fun expr_b_89 -> (
                    var_j_665 = expr_b_89);
                record_j_667 = {checker = flatten_fun_j_662, generator = flatten_fun_j_664, wrapper = flatten_fun_j_666};
                proj_j_668 = record_j_667.checker;
                var_j_669 = expr_b_90;
                appl_j_670 = proj_j_668 var_j_669;
                t_check_b_91 = appl_j_670;
                var_j_671 = t_check_b_91;
                if_j_685 = var_j_671 ? (
                        bool_j_672 = false;
                        pred_check_b_92 = bool_j_672;
                        flatten_fun_j_678 = fun c -> (
                            var_j_673 = n_j_30;
                            int_j_674 = 1;
                            binop_j_675 = var_j_673 + int_j_674;
                            var_j_676 = c;
                            binop_j_677 = binop_j_675 <= var_j_676);
                        var_j_679 = expr_b_90;
                        appl_j_680 = flatten_fun_j_678 var_j_679;
                        if_j_683 = appl_j_680 ? (
                                bool_j_681 = true
                            ) : (
                                var_j_682 = pred_check_b_92
                            )
                    ) : (
                        var_j_684 = t_check_b_91
                    ));
            flatten_fun_j_717 = fun bj_null_j_29 -> (
                bool_j_687 = false;
                fail_b_84 = bool_j_687;
                flatten_fun_j_696 = fun expr_b_83 -> (
                    var_j_688 = expr_b_83;
                    m_match_bool_j_690 = var_j_688 ~ any;
                    m_match_bool_j_693 = var_j_688 ~ int;
                    m_match_cond_j_694 = m_match_bool_j_693 ? (
                            bool_j_695 = true
                        ) : (
                            m_match_cond_j_691 = m_match_bool_j_690 ? (
                                    var_j_692 = fail_b_84
                                ) : (
                                    void_j_689 = {}
                                )
                        ));
                flatten_fun_j_698 = fun bj_null_j_27 -> (
                    input_j_697 = input);
                flatten_fun_j_700 = fun expr_b_85 -> (
                    var_j_699 = expr_b_85);
                record_j_701 = {checker = flatten_fun_j_696, generator = flatten_fun_j_698, wrapper = flatten_fun_j_700};
                proj_j_702 = record_j_701.generator;
                int_j_703 = 0;
                appl_j_704 = proj_j_702 int_j_703;
                candidate_b_86 = appl_j_704;
                flatten_fun_j_710 = fun c_j_28 -> (
                    var_j_705 = n_j_30;
                    int_j_706 = 1;
                    binop_j_707 = var_j_705 + int_j_706;
                    var_j_708 = c_j_28;
                    binop_j_709 = binop_j_707 <= var_j_708);
                var_j_711 = candidate_b_86;
                appl_j_712 = flatten_fun_j_710 var_j_711;
                if_j_716 = appl_j_712 ? (
                        var_j_713 = candidate_b_86
                    ) : (
                        bool_j_714 = false;
                        assume_j_715 = assume bool_j_714
                    ));
            flatten_fun_j_719 = fun expr_b_93 -> (
                var_j_718 = expr_b_93);
            record_j_720 = {checker = flatten_fun_j_686, generator = flatten_fun_j_717, wrapper = flatten_fun_j_719};
            proj_j_721 = record_j_720.checker);
        var_j_723 = n_b_94;
        appl_j_724 = flatten_fun_j_722 var_j_723;
        var_j_725 = sqr;
        var_j_726 = n_b_94;
        appl_j_727 = var_j_725 var_j_726;
        appl_j_728 = appl_j_724 appl_j_727;
        check_res_b_95 = appl_j_728;
        var_j_729 = check_res_b_95;
        if_j_736 = var_j_729 ? (
                var_j_730 = sqr
            ) : (
                error_var_j_731 = check_res_b_95;
                assert_pred_j_732 = error_var_j_731;
                assert_res_j_733 = assert_pred_j_732 ? (
                        assert_res_true_j_734 = {}
                    ) : (
                        ab_j_735 = abort
                    )
            )
    ) : (
        error_var_j_737 = check_res_b_96;
        assert_pred_j_738 = error_var_j_737;
        assert_res_j_739 = assert_pred_j_738 ? (
                assert_res_true_j_740 = {}
            ) : (
                ab_j_741 = abort
            )
    );
i_result = if_j_742