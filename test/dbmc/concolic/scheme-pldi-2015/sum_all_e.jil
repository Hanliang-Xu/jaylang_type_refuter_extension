i_first = {};
flatten_fun_j_30 = fun sum_j_0 -> (
    flatten_fun_j_29 = fun x -> (
        var_j_14 = sum_j_0;
        var_j_15 = sum_j_0;
        appl_j_16 = var_j_14 var_j_15;
        sum = appl_j_16;
        var_j_17 = x;
        int_j_18 = 0;
        binop_j_19 = var_j_17 <= int_j_18;
        if_j_28 = binop_j_19 ? (
                int_j_20 = 0
            ) : (
                var_j_21 = x;
                var_j_22 = sum;
                var_j_23 = x;
                int_j_24 = 1;
                binop_j_25 = var_j_23 - int_j_24;
                appl_j_26 = var_j_22 binop_j_25;
                binop_j_27 = var_j_21 + appl_j_26
            )));
appl_j_33 = flatten_fun_j_30 flatten_fun_j_30;
h_j_42 = fun y -> (
    var_j_34 = y;
    var_j_35 = y;
    binop_j_36 = var_j_34 + var_j_35;
    var_j_37 = appl_j_33;
    var_j_38 = y;
    appl_j_39 = var_j_37 var_j_38;
    binop_j_40 = binop_j_36 <= appl_j_39;
    b_j_11 = binop_j_40;
    var_j_41 = b_j_11);
h = h_j_42;
main_j_145 = fun n -> (
    flatten_fun_j_142 = fun n_b_0 -> (
        int_j_43 = 0;
        input_j_44 = input;
        binop_j_45 = int_j_43 < input_j_44;
        if_j_65 = binop_j_45 ? (
                bool_j_46 = false;
                fail_b_6 = bool_j_46;
                flatten_fun_j_55 = fun expr_b_5 -> (
                    var_j_47 = expr_b_5;
                    m_match_bool_j_49 = var_j_47 ~ any;
                    m_match_bool_j_52 = var_j_47 ~ int;
                    m_match_cond_j_53 = m_match_bool_j_52 ? (
                            bool_j_54 = true
                        ) : (
                            m_match_cond_j_50 = m_match_bool_j_49 ? (
                                    var_j_51 = fail_b_6
                                ) : (
                                    void_j_48 = {}
                                )
                        ));
                flatten_fun_j_57 = fun bj_null_j_5 -> (
                    input_j_56 = input);
                flatten_fun_j_59 = fun expr_b_7 -> (
                    var_j_58 = expr_b_7);
                record_j_60 = {checker = flatten_fun_j_55, generator = flatten_fun_j_57, wrapper = flatten_fun_j_59};
                proj_j_61 = record_j_60.checker;
                var_j_62 = n_b_0;
                appl_j_63 = proj_j_61 var_j_62
            ) : (
                bool_j_64 = true
            );
        arg_check_b_1 = if_j_65;
        var_j_66 = arg_check_b_1;
        if_j_141 = var_j_66 ? (
                flatten_fun_j_98 = fun expr_b_15 -> (
                    bool_j_67 = false;
                    fail_b_13 = bool_j_67;
                    flatten_fun_j_76 = fun expr_b_12 -> (
                        var_j_68 = expr_b_12;
                        m_match_bool_j_70 = var_j_68 ~ any;
                        m_match_bool_j_73 = var_j_68 ~ bool;
                        m_match_cond_j_74 = m_match_bool_j_73 ? (
                                bool_j_75 = true
                            ) : (
                                m_match_cond_j_71 = m_match_bool_j_70 ? (
                                        var_j_72 = fail_b_13
                                    ) : (
                                        void_j_69 = {}
                                    )
                            ));
                    flatten_fun_j_80 = fun bj_null_j_6 -> (
                        int_j_77 = 0;
                        input_j_78 = input;
                        binop_j_79 = int_j_77 <= input_j_78);
                    flatten_fun_j_82 = fun expr_b_14 -> (
                        var_j_81 = expr_b_14);
                    record_j_83 = {checker = flatten_fun_j_76, generator = flatten_fun_j_80, wrapper = flatten_fun_j_82};
                    proj_j_84 = record_j_83.checker;
                    var_j_85 = expr_b_15;
                    appl_j_86 = proj_j_84 var_j_85;
                    t_check_b_16 = appl_j_86;
                    var_j_87 = t_check_b_16;
                    if_j_97 = var_j_87 ? (
                            bool_j_88 = false;
                            pred_check_b_17 = bool_j_88;
                            flatten_fun_j_90 = fun b_j_7 -> (
                                var_j_89 = b_j_7);
                            var_j_91 = expr_b_15;
                            appl_j_92 = flatten_fun_j_90 var_j_91;
                            if_j_95 = appl_j_92 ? (
                                    bool_j_93 = true
                                ) : (
                                    var_j_94 = pred_check_b_17
                                )
                        ) : (
                            var_j_96 = t_check_b_16
                        ));
                flatten_fun_j_127 = fun bj_null_j_10 -> (
                    bool_j_99 = false;
                    fail_b_9 = bool_j_99;
                    flatten_fun_j_108 = fun expr_b_8 -> (
                        var_j_100 = expr_b_8;
                        m_match_bool_j_102 = var_j_100 ~ any;
                        m_match_bool_j_105 = var_j_100 ~ bool;
                        m_match_cond_j_106 = m_match_bool_j_105 ? (
                                bool_j_107 = true
                            ) : (
                                m_match_cond_j_103 = m_match_bool_j_102 ? (
                                        var_j_104 = fail_b_9
                                    ) : (
                                        void_j_101 = {}
                                    )
                            ));
                    flatten_fun_j_112 = fun bj_null_j_8 -> (
                        int_j_109 = 0;
                        input_j_110 = input;
                        binop_j_111 = int_j_109 <= input_j_110);
                    flatten_fun_j_114 = fun expr_b_10 -> (
                        var_j_113 = expr_b_10);
                    record_j_115 = {checker = flatten_fun_j_108, generator = flatten_fun_j_112, wrapper = flatten_fun_j_114};
                    proj_j_116 = record_j_115.generator;
                    int_j_117 = 0;
                    appl_j_118 = proj_j_116 int_j_117;
                    candidate_b_11 = appl_j_118;
                    flatten_fun_j_120 = fun b_j_9 -> (
                        var_j_119 = b_j_9);
                    var_j_121 = candidate_b_11;
                    appl_j_122 = flatten_fun_j_120 var_j_121;
                    if_j_126 = appl_j_122 ? (
                            var_j_123 = candidate_b_11
                        ) : (
                            bool_j_124 = false;
                            assume_j_125 = assume bool_j_124
                        ));
                flatten_fun_j_129 = fun expr_b_18 -> (
                    var_j_128 = expr_b_18);
                record_j_130 = {checker = flatten_fun_j_98, generator = flatten_fun_j_127, wrapper = flatten_fun_j_129};
                proj_j_131 = record_j_130.wrapper;
                var_j_132 = h;
                var_j_133 = n;
                appl_j_134 = var_j_132 var_j_133;
                appl_j_135 = proj_j_131 appl_j_134
            ) : (
                var_j_136 = arg_check_b_1;
                assert_pred_j_137 = var_j_136;
                assert_res_j_138 = assert_pred_j_137 ? (
                        assert_res_true_j_139 = {}
                    ) : (
                        ab_j_140 = abort
                    )
            ));
    var_j_143 = n;
    appl_j_144 = flatten_fun_j_142 var_j_143);
main = main_j_145;
bool_j_146 = false;
fail_b_3 = bool_j_146;
flatten_fun_j_155 = fun expr_b_2 -> (
    var_j_147 = expr_b_2;
    m_match_bool_j_149 = var_j_147 ~ any;
    m_match_bool_j_152 = var_j_147 ~ int;
    m_match_cond_j_153 = m_match_bool_j_152 ? (
            bool_j_154 = true
        ) : (
            m_match_cond_j_150 = m_match_bool_j_149 ? (
                    var_j_151 = fail_b_3
                ) : (
                    void_j_148 = {}
                )
        ));
flatten_fun_j_157 = fun bj_null -> (
    input_j_156 = input);
flatten_fun_j_159 = fun expr_b_4 -> (
    var_j_158 = expr_b_4);
record_j_160 = {checker = flatten_fun_j_155, generator = flatten_fun_j_157, wrapper = flatten_fun_j_159};
proj_j_161 = record_j_160.generator;
int_j_162 = 0;
appl_j_163 = proj_j_161 int_j_162;
n_b_30 = appl_j_163;
flatten_fun_j_195 = fun expr_b_26 -> (
    bool_j_164 = false;
    fail_b_24 = bool_j_164;
    flatten_fun_j_173 = fun expr_b_23 -> (
        var_j_165 = expr_b_23;
        m_match_bool_j_167 = var_j_165 ~ any;
        m_match_bool_j_170 = var_j_165 ~ bool;
        m_match_cond_j_171 = m_match_bool_j_170 ? (
                bool_j_172 = true
            ) : (
                m_match_cond_j_168 = m_match_bool_j_167 ? (
                        var_j_169 = fail_b_24
                    ) : (
                        void_j_166 = {}
                    )
            ));
    flatten_fun_j_177 = fun bj_null_j_1 -> (
        int_j_174 = 0;
        input_j_175 = input;
        binop_j_176 = int_j_174 <= input_j_175);
    flatten_fun_j_179 = fun expr_b_25 -> (
        var_j_178 = expr_b_25);
    record_j_180 = {checker = flatten_fun_j_173, generator = flatten_fun_j_177, wrapper = flatten_fun_j_179};
    proj_j_181 = record_j_180.checker;
    var_j_182 = expr_b_26;
    appl_j_183 = proj_j_181 var_j_182;
    t_check_b_27 = appl_j_183;
    var_j_184 = t_check_b_27;
    if_j_194 = var_j_184 ? (
            bool_j_185 = false;
            pred_check_b_28 = bool_j_185;
            flatten_fun_j_187 = fun b -> (
                var_j_186 = b);
            var_j_188 = expr_b_26;
            appl_j_189 = flatten_fun_j_187 var_j_188;
            if_j_192 = appl_j_189 ? (
                    bool_j_190 = true
                ) : (
                    var_j_191 = pred_check_b_28
                )
        ) : (
            var_j_193 = t_check_b_27
        ));
flatten_fun_j_224 = fun bj_null_j_4 -> (
    bool_j_196 = false;
    fail_b_20 = bool_j_196;
    flatten_fun_j_205 = fun expr_b_19 -> (
        var_j_197 = expr_b_19;
        m_match_bool_j_199 = var_j_197 ~ any;
        m_match_bool_j_202 = var_j_197 ~ bool;
        m_match_cond_j_203 = m_match_bool_j_202 ? (
                bool_j_204 = true
            ) : (
                m_match_cond_j_200 = m_match_bool_j_199 ? (
                        var_j_201 = fail_b_20
                    ) : (
                        void_j_198 = {}
                    )
            ));
    flatten_fun_j_209 = fun bj_null_j_2 -> (
        int_j_206 = 0;
        input_j_207 = input;
        binop_j_208 = int_j_206 <= input_j_207);
    flatten_fun_j_211 = fun expr_b_21 -> (
        var_j_210 = expr_b_21);
    record_j_212 = {checker = flatten_fun_j_205, generator = flatten_fun_j_209, wrapper = flatten_fun_j_211};
    proj_j_213 = record_j_212.generator;
    int_j_214 = 0;
    appl_j_215 = proj_j_213 int_j_214;
    candidate_b_22 = appl_j_215;
    flatten_fun_j_217 = fun b_j_3 -> (
        var_j_216 = b_j_3);
    var_j_218 = candidate_b_22;
    appl_j_219 = flatten_fun_j_217 var_j_218;
    if_j_223 = appl_j_219 ? (
            var_j_220 = candidate_b_22
        ) : (
            bool_j_221 = false;
            assume_j_222 = assume bool_j_221
        ));
flatten_fun_j_226 = fun expr_b_29 -> (
    var_j_225 = expr_b_29);
record_j_227 = {checker = flatten_fun_j_195, generator = flatten_fun_j_224, wrapper = flatten_fun_j_226};
proj_j_228 = record_j_227.checker;
appl_j_231 = main n_b_30;
appl_j_232 = proj_j_228 appl_j_231;
check_res_b_31 = appl_j_232;
if_j_240 = check_res_b_31 ? (
        var_j_234 = main
    ) : (
        error_var_j_235 = check_res_b_31;
        assert_pred_j_236 = error_var_j_235;
        assert_res_j_237 = assert_pred_j_236 ? (
                assert_res_true_j_238 = {}
            ) : (
                ab_j_239 = abort
            )
    );
i_result = if_j_240