i_first = {};
h_j_11 = fun x_j_5 -> (
    var_j_6 = x_j_5;
    assert_pred_j_7 = var_j_6;
    assert_res_j_8 = assert_pred_j_7 ? (
            assert_res_true_j_9 = {}
        ) : (
            ab_j_10 = abort
        ));
h = h_j_11;
g_j_18 = fun x_j_4 -> (
    g_j_17 = fun y_j_3 -> (
        var_j_12 = y_j_3;
        assert_pred_j_13 = var_j_12;
        assert_res_j_14 = assert_pred_j_13 ? (
                assert_res_true_j_15 = {}
            ) : (
                ab_j_16 = abort
            )));
g = g_j_18;
flatten_fun_j_36 = fun f_j_0 -> (
    flatten_fun_j_35 = fun x -> (
        flatten_fun_j_34 = fun y -> (
            var_j_19 = f_j_0;
            var_j_20 = f_j_0;
            appl_j_21 = var_j_19 var_j_20;
            f = appl_j_21;
            var_j_22 = x;
            if_j_33 = var_j_22 ? (
                    var_j_23 = f;
                    var_j_24 = y;
                    appl_j_25 = var_j_23 var_j_24;
                    var_j_26 = y;
                    appl_j_27 = appl_j_25 var_j_26
                ) : (
                    var_j_28 = g;
                    var_j_29 = x;
                    appl_j_30 = var_j_28 var_j_29;
                    var_j_31 = y;
                    appl_j_32 = appl_j_30 var_j_31
                ))));
appl_j_39 = flatten_fun_j_36 flatten_fun_j_36;
int_j_40 = 0;
int_j_41 = 1;
binop_j_42 = int_j_40 < int_j_41;
if_j_57 = binop_j_42 ? (
        var_j_43 = appl_j_39;
        int_j_44 = 0;
        int_j_45 = 1;
        binop_j_46 = int_j_44 < int_j_45;
        appl_j_47 = var_j_43 binop_j_46;
        int_j_48 = 1;
        int_j_49 = 0;
        binop_j_50 = int_j_48 < int_j_49;
        appl_j_51 = appl_j_47 binop_j_50
    ) : (
        var_j_52 = h;
        int_j_53 = 1;
        int_j_54 = 0;
        binop_j_55 = int_j_53 < int_j_54;
        appl_j_56 = var_j_52 binop_j_55
    );
main = if_j_57;
var_j_58 = main;
i_result = var_j_58