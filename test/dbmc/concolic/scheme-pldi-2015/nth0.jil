i_first = {};
flatten_fun_j_71 = fun nth_j_1 -> (
    flatten_fun_j_70 = fun n -> (
        flatten_fun_j_69 = fun xs -> (
            var_j_15 = nth_j_1;
            var_j_16 = nth_j_1;
            appl_j_17 = var_j_15 var_j_16;
            nth = appl_j_17;
            var_j_18 = n;
            int_j_19 = 1;
            binop_j_20 = var_j_18 == int_j_19;
            if_j_68 = binop_j_20 ? (
                    bool_j_21 = false;
                    fail_b_2 = bool_j_21;
                    var_j_22 = xs;
                    m_match_bool_j_24 = var_j_22 ~ {j_empty, _};
                    m_match_bool_j_31 = var_j_22 ~ {j_head, j_tail, _};
                    m_match_bool_j_34 = var_j_22 ~ {bj_untouched, _};
                    m_match_cond_j_35 = m_match_bool_j_34 ? (
                            var_j_36 = fail_b_2;
                            assert_pred_j_37 = var_j_36;
                            assert_res_j_38 = assert_pred_j_37 ? (
                                    assert_res_true_j_39 = {}
                                ) : (
                                    ab_j_40 = abort
                                )
                        ) : (
                            m_match_cond_j_32 = m_match_bool_j_31 ? (
                                    hd = var_j_22.j_head;
                                    tl = var_j_22.j_tail;
                                    var_j_33 = hd
                                ) : (
                                    m_match_cond_j_25 = m_match_bool_j_24 ? (
                                            bool_j_26 = false;
                                            assert_pred_j_27 = bool_j_26;
                                            assert_res_j_28 = assert_pred_j_27 ? (
                                                    assert_res_true_j_29 = 
                                                        {}
                                                ) : (
                                                    ab_j_30 = abort
                                                )
                                        ) : (
                                            ab_j_23 = abort
                                        )
                                )
                        )
                ) : (
                    bool_j_41 = false;
                    fail_b_3 = bool_j_41;
                    var_j_42 = xs;
                    m_match_bool_j_44 = var_j_42 ~ {j_empty, _};
                    m_match_bool_j_51 = var_j_42 ~ {j_head, j_tail, _};
                    m_match_bool_j_54 = var_j_42 ~ {bj_untouched, _};
                    m_match_cond_j_55 = m_match_bool_j_54 ? (
                            var_j_56 = fail_b_3;
                            assert_pred_j_57 = var_j_56;
                            assert_res_j_58 = assert_pred_j_57 ? (
                                    assert_res_true_j_59 = {}
                                ) : (
                                    ab_j_60 = abort
                                )
                        ) : (
                            m_match_cond_j_52 = m_match_bool_j_51 ? (
                                    hd_j_3 = var_j_42.j_head;
                                    tl_j_2 = var_j_42.j_tail;
                                    var_j_53 = tl_j_2
                                ) : (
                                    m_match_cond_j_45 = m_match_bool_j_44 ? (
                                            bool_j_46 = false;
                                            assert_pred_j_47 = bool_j_46;
                                            assert_res_j_48 = assert_pred_j_47 ? (
                                                    assert_res_true_j_49 = 
                                                        {}
                                                ) : (
                                                    ab_j_50 = abort
                                                )
                                        ) : (
                                            ab_j_43 = abort
                                        )
                                )
                        );
                    tl_j_4 = m_match_cond_j_55;
                    var_j_61 = nth;
                    var_j_62 = n;
                    int_j_63 = 1;
                    binop_j_64 = var_j_62 - int_j_63;
                    appl_j_65 = var_j_61 binop_j_64;
                    var_j_66 = tl_j_4;
                    appl_j_67 = appl_j_65 var_j_66
                ))));
appl_j_74 = flatten_fun_j_71 flatten_fun_j_71;
flatten_fun_j_93 = fun mk_list_j_0 -> (
    flatten_fun_j_92 = fun n_j_5 -> (
        var_j_75 = mk_list_j_0;
        var_j_76 = mk_list_j_0;
        appl_j_77 = var_j_75 var_j_76;
        mk_list = appl_j_77;
        var_j_78 = n_j_5;
        int_j_79 = 0;
        binop_j_80 = var_j_78 < int_j_79;
        if_j_91 = binop_j_80 ? (
                record_j_81 = {};
                record_j_82 = {j_empty = record_j_81}
            ) : (
                record_j_83 = {};
                var_j_84 = n_j_5;
                var_j_85 = mk_list;
                var_j_86 = n_j_5;
                int_j_87 = 1;
                binop_j_88 = var_j_86 - int_j_87;
                appl_j_89 = var_j_85 binop_j_88;
                record_j_90 = {j_cons = record_j_83, j_head = var_j_84, j_tail = appl_j_89}
            )));
appl_j_96 = flatten_fun_j_93 flatten_fun_j_93;
main_j_170 = fun n_j_10 -> (
    flatten_fun_j_167 = fun n_b_0 -> (
        int_j_97 = 0;
        input_j_98 = input;
        binop_j_99 = int_j_97 < input_j_98;
        if_j_119 = binop_j_99 ? (
                bool_j_100 = false;
                fail_b_8 = bool_j_100;
                flatten_fun_j_109 = fun expr_b_7 -> (
                    var_j_101 = expr_b_7;
                    m_match_bool_j_103 = var_j_101 ~ any;
                    m_match_bool_j_106 = var_j_101 ~ int;
                    m_match_cond_j_107 = m_match_bool_j_106 ? (
                            bool_j_108 = true
                        ) : (
                            m_match_cond_j_104 = m_match_bool_j_103 ? (
                                    var_j_105 = fail_b_8
                                ) : (
                                    void_j_102 = {}
                                )
                        ));
                flatten_fun_j_111 = fun bj_null_j_7 -> (
                    input_j_110 = input);
                flatten_fun_j_113 = fun expr_b_9 -> (
                    var_j_112 = expr_b_9);
                record_j_114 = {checker = flatten_fun_j_109, generator = flatten_fun_j_111, wrapper = flatten_fun_j_113};
                proj_j_115 = record_j_114.checker;
                var_j_116 = n_b_0;
                appl_j_117 = proj_j_115 var_j_116
            ) : (
                bool_j_118 = true
            );
        arg_check_b_1 = if_j_119;
        var_j_120 = arg_check_b_1;
        if_j_166 = var_j_120 ? (
                bool_j_121 = false;
                fail_b_11 = bool_j_121;
                flatten_fun_j_130 = fun expr_b_10 -> (
                    var_j_122 = expr_b_10;
                    m_match_bool_j_124 = var_j_122 ~ any;
                    m_match_bool_j_127 = var_j_122 ~ int;
                    m_match_cond_j_128 = m_match_bool_j_127 ? (
                            bool_j_129 = true
                        ) : (
                            m_match_cond_j_125 = m_match_bool_j_124 ? (
                                    var_j_126 = fail_b_11
                                ) : (
                                    void_j_123 = {}
                                )
                        ));
                flatten_fun_j_132 = fun bj_null_j_8 -> (
                    input_j_131 = input);
                flatten_fun_j_134 = fun expr_b_12 -> (
                    var_j_133 = expr_b_12);
                record_j_135 = {checker = flatten_fun_j_130, generator = flatten_fun_j_132, wrapper = flatten_fun_j_134};
                proj_j_136 = record_j_135.wrapper;
                var_j_137 = appl_j_96;
                var_j_138 = n_j_10;
                appl_j_139 = var_j_137 var_j_138;
                xs_j_9 = appl_j_139;
                bool_j_140 = false;
                fail_b_13 = bool_j_140;
                var_j_141 = xs_j_9;
                m_match_bool_j_143 = var_j_141 ~ any;
                m_match_bool_j_150 = var_j_141 ~ {j_empty, _};
                m_match_bool_j_153 = var_j_141 ~ {bj_untouched, _};
                m_match_cond_j_154 = m_match_bool_j_153 ? (
                        var_j_155 = fail_b_13;
                        assert_pred_j_156 = var_j_155;
                        assert_res_j_157 = assert_pred_j_156 ? (
                                assert_res_true_j_158 = {}
                            ) : (
                                ab_j_159 = abort
                            )
                    ) : (
                        m_match_cond_j_151 = m_match_bool_j_150 ? (
                                int_j_152 = 0
                            ) : (
                                m_match_cond_j_144 = m_match_bool_j_143 ? (
                                        var_j_145 = appl_j_74;
                                        int_j_146 = 0;
                                        appl_j_147 = var_j_145 int_j_146;
                                        var_j_148 = xs_j_9;
                                        appl_j_149 = appl_j_147 var_j_148
                                    ) : (
                                        ab_j_142 = abort
                                    )
                            )
                    );
                appl_j_160 = proj_j_136 m_match_cond_j_154
            ) : (
                var_j_161 = arg_check_b_1;
                assert_pred_j_162 = var_j_161;
                assert_res_j_163 = assert_pred_j_162 ? (
                        assert_res_true_j_164 = {}
                    ) : (
                        ab_j_165 = abort
                    )
            ));
    var_j_168 = n_j_10;
    appl_j_169 = flatten_fun_j_167 var_j_168);
main = main_j_170;
bool_j_171 = false;
fail_b_5 = bool_j_171;
flatten_fun_j_180 = fun expr_b_4 -> (
    var_j_172 = expr_b_4;
    m_match_bool_j_174 = var_j_172 ~ any;
    m_match_bool_j_177 = var_j_172 ~ int;
    m_match_cond_j_178 = m_match_bool_j_177 ? (
            bool_j_179 = true
        ) : (
            m_match_cond_j_175 = m_match_bool_j_174 ? (
                    var_j_176 = fail_b_5
                ) : (
                    void_j_173 = {}
                )
        ));
flatten_fun_j_182 = fun bj_null -> (
    input_j_181 = input);
flatten_fun_j_184 = fun expr_b_6 -> (
    var_j_183 = expr_b_6);
record_j_185 = {checker = flatten_fun_j_180, generator = flatten_fun_j_182, wrapper = flatten_fun_j_184};
proj_j_186 = record_j_185.generator;
int_j_187 = 0;
appl_j_188 = proj_j_186 int_j_187;
n_b_17 = appl_j_188;
bool_j_189 = false;
fail_b_15 = bool_j_189;
flatten_fun_j_198 = fun expr_b_14 -> (
    var_j_190 = expr_b_14;
    m_match_bool_j_192 = var_j_190 ~ any;
    m_match_bool_j_195 = var_j_190 ~ int;
    m_match_cond_j_196 = m_match_bool_j_195 ? (
            bool_j_197 = true
        ) : (
            m_match_cond_j_193 = m_match_bool_j_192 ? (
                    var_j_194 = fail_b_15
                ) : (
                    void_j_191 = {}
                )
        ));
flatten_fun_j_200 = fun bj_null_j_6 -> (
    input_j_199 = input);
flatten_fun_j_202 = fun expr_b_16 -> (
    var_j_201 = expr_b_16);
record_j_203 = {checker = flatten_fun_j_198, generator = flatten_fun_j_200, wrapper = flatten_fun_j_202};
proj_j_204 = record_j_203.checker;
appl_j_207 = main n_b_17;
appl_j_208 = proj_j_204 appl_j_207;
check_res_b_18 = appl_j_208;
if_j_216 = check_res_b_18 ? (
        var_j_210 = main
    ) : (
        error_var_j_211 = check_res_b_18;
        assert_pred_j_212 = error_var_j_211;
        assert_res_j_213 = assert_pred_j_212 ? (
                assert_res_true_j_214 = {}
            ) : (
                ab_j_215 = abort
            )
    );
i_result = if_j_216