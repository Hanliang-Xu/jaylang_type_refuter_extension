i_first = {};
isPos_j_45 = fun n_j_41 -> (
    int_j_42 = 0;
    var_j_43 = n_j_41;
    m_bl_i_760 = int_j_42 ~ int;
    m_br_i_761 = var_j_43 ~ int;
    m_b_i_762 = m_bl_i_760 and m_br_i_761;
    binop_j_44 = m_b_i_762 ? (
            c_binop_i_763 = int_j_42 < var_j_43
        ) : (
            ab_i_764 = abort
        ));
isPos = isPos_j_45;
aIsPos_j_63 = fun re -> (
    var_j_46 = isPos;
    var_j_47 = re;
    proj_j_48 = var_j_47.bj_decl_lbls;
    m_match_bool_j_50 = proj_j_48 ~ any;
    m_match_bool_j_57 = proj_j_48 ~ {a, _};
    m_match_cond_j_58 = m_match_bool_j_57 ? (
            var_j_59 = re;
            proj_j_60 = var_j_59.bj_actual_rec;
            proj_j_61 = proj_j_60.a
        ) : (
            m_match_cond_j_51 = m_match_bool_j_50 ? (
                    bool_j_52 = false;
                    assert_pred_j_53 = bool_j_52;
                    assert_res_j_54 = assert_pred_j_53 ? (
                            assert_res_true_j_55 = {}
                        ) : (
                            ab_j_56 = abort
                        )
                ) : (
                    void_j_49 = {}
                )
        );
    m_i_765 = var_j_46 ~ fun;
    appl_j_62 = m_i_765 ? (
            c_appl_i_766 = var_j_46 m_match_cond_j_58
        ) : (
            ab_i_767 = abort
        ));
aIsPos = aIsPos_j_63;
isNeg_j_67 = fun n -> (
    var_j_64 = n;
    int_j_65 = 0;
    m_bl_i_768 = var_j_64 ~ int;
    m_br_i_769 = int_j_65 ~ int;
    m_b_i_770 = m_bl_i_768 and m_br_i_769;
    binop_j_66 = m_b_i_770 ? (
            c_binop_i_771 = var_j_64 < int_j_65
        ) : (
            ab_i_772 = abort
        ));
isNeg = isNeg_j_67;
access_record_j_423 = fun r -> (
    flatten_fun_j_420 = fun r_b_0 -> (
        int_j_68 = 0;
        input_j_69 = input;
        m_bl_i_773 = int_j_68 ~ int;
        m_br_i_774 = input_j_69 ~ int;
        m_b_i_775 = m_bl_i_773 and m_br_i_774;
        binop_j_70 = m_b_i_775 ? (
                c_binop_i_776 = int_j_68 < input_j_69
            ) : (
                ab_i_777 = abort
            );
        if_j_337 = binop_j_70 ? (
                flatten_fun_j_201 = fun expr_b_88 -> (
                    flatten_fun_j_138 = fun expr_b_79 -> (
                        bool_j_71 = false;
                        rec_fail_b_78 = bool_j_71;
                        bool_j_72 = false;
                        rec_fail_b_77 = bool_j_72;
                        bool_j_73 = false;
                        rec_fail_b_76 = bool_j_73;
                        var_j_74 = expr_b_79;
                        m_match_bool_j_76 = var_j_74 ~ any;
                        m_match_bool_j_79 = var_j_74 ~ {bj_actual_rec, _};
                        m_match_cond_j_80 = m_match_bool_j_79 ? (
                                var_j_81 = expr_b_79;
                                proj_j_82 = var_j_81.bj_decl_lbls;
                                m_match_bool_j_84 = proj_j_82 ~ any;
                                m_match_bool_j_87 = proj_j_82 ~ {a, b, _};
                                m_match_cond_j_88 = m_match_bool_j_87 ? (
                                        a_j_24 = proj_j_82.a;
                                        b_j_23 = proj_j_82.b;
                                        var_j_89 = expr_b_79;
                                        proj_j_90 = var_j_89.bj_actual_rec;
                                        m_match_bool_j_92 = proj_j_90 ~ any;
                                        m_match_bool_j_95 = proj_j_90 ~ 
                                            {a, b, _};
                                        m_match_cond_j_96 = m_match_bool_j_95 ? (
                                                a_j_22 = proj_j_90.a;
                                                b_j_21 = proj_j_90.b;
                                                bool_j_97 = false;
                                                fail_b_85 = bool_j_97;
                                                flatten_fun_j_106 = fun expr_b_84 -> (
                                                    var_j_98 = expr_b_84;
                                                    m_match_bool_j_100 = var_j_98 ~ any;
                                                    m_match_bool_j_103 = var_j_98 ~ int;
                                                    m_match_cond_j_104 = m_match_bool_j_103 ? (
                                                            bool_j_105 = true
                                                        ) : (
                                                            m_match_cond_j_101 = m_match_bool_j_100 ? (
                                                                    var_j_102 = fail_b_85
                                                                ) : (
                                                                    void_j_99 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_108 = fun bj_null_j_19 -> (
                                                    input_j_107 = input);
                                                flatten_fun_j_110 = fun expr_b_86 -> (
                                                    var_j_109 = expr_b_86);
                                                record_j_111 = {checker = flatten_fun_j_106, generator = flatten_fun_j_108, wrapper = flatten_fun_j_110};
                                                proj_j_112 = record_j_111.checker;
                                                var_j_113 = a_j_22;
                                                appl_j_114 = proj_j_112 var_j_113;
                                                lbl_check_b_83 = appl_j_114;
                                                var_j_115 = lbl_check_b_83;
                                                if_j_137 = var_j_115 ? (
                                                        bool_j_116 = false;
                                                        fail_b_81 = bool_j_116;
                                                        flatten_fun_j_125 = fun expr_b_80 -> (
                                                            var_j_117 = expr_b_80;
                                                            m_match_bool_j_119 = var_j_117 ~ any;
                                                            m_match_bool_j_122 = var_j_117 ~ bool;
                                                            m_match_cond_j_123 = m_match_bool_j_122 ? (
                                                                    bool_j_124 = true
                                                                ) : (
                                                                    m_match_cond_j_120 = m_match_bool_j_119 ? (
                                                                        var_j_121 = fail_b_81
                                                                    ) : (
                                                                        void_j_118 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_129 = fun bj_null_j_20 -> (
                                                            int_j_126 = 0;
                                                            input_j_127 = input;
                                                            m_bl_i_778 = int_j_126 ~ int;
                                                            m_br_i_779 = input_j_127 ~ int;
                                                            m_b_i_780 = m_bl_i_778 and m_br_i_779;
                                                            binop_j_128 = m_b_i_780 ? (
                                                                    c_binop_i_781 = int_j_126 <= input_j_127
                                                                ) : (
                                                                    ab_i_782 = abort
                                                                ));
                                                        flatten_fun_j_131 = fun expr_b_82 -> (
                                                            var_j_130 = expr_b_82);
                                                        record_j_132 = 
                                                            {checker = flatten_fun_j_125, generator = flatten_fun_j_129, wrapper = flatten_fun_j_131};
                                                        proj_j_133 = record_j_132.checker;
                                                        var_j_134 = b_j_21;
                                                        appl_j_135 = proj_j_133 var_j_134
                                                    ) : (
                                                        var_j_136 = lbl_check_b_83
                                                    )
                                            ) : (
                                                m_match_cond_j_93 = m_match_bool_j_92 ? (
                                                        var_j_94 = rec_fail_b_76
                                                    ) : (
                                                        void_j_91 = {}
                                                    )
                                            )
                                    ) : (
                                        m_match_cond_j_85 = m_match_bool_j_84 ? (
                                                var_j_86 = rec_fail_b_77
                                            ) : (
                                                void_j_83 = {}
                                            )
                                    )
                            ) : (
                                m_match_cond_j_77 = m_match_bool_j_76 ? (
                                        var_j_78 = rec_fail_b_78
                                    ) : (
                                        void_j_75 = {}
                                    )
                            ));
                    flatten_fun_j_184 = fun bj_null_j_27 -> (
                        bool_j_139 = false;
                        fail_b_74 = bool_j_139;
                        flatten_fun_j_148 = fun expr_b_73 -> (
                            var_j_140 = expr_b_73;
                            m_match_bool_j_142 = var_j_140 ~ any;
                            m_match_bool_j_145 = var_j_140 ~ bool;
                            m_match_cond_j_146 = m_match_bool_j_145 ? (
                                    bool_j_147 = true
                                ) : (
                                    m_match_cond_j_143 = m_match_bool_j_142 ? (
                                            var_j_144 = fail_b_74
                                        ) : (
                                            void_j_141 = {}
                                        )
                                ));
                        flatten_fun_j_152 = fun bj_null_j_25 -> (
                            int_j_149 = 0;
                            input_j_150 = input;
                            m_bl_i_783 = int_j_149 ~ int;
                            m_br_i_784 = input_j_150 ~ int;
                            m_b_i_785 = m_bl_i_783 and m_br_i_784;
                            binop_j_151 = m_b_i_785 ? (
                                    c_binop_i_786 = int_j_149 <= input_j_150
                                ) : (
                                    ab_i_787 = abort
                                ));
                        flatten_fun_j_154 = fun expr_b_75 -> (
                            var_j_153 = expr_b_75);
                        record_j_155 = {checker = flatten_fun_j_148, generator = flatten_fun_j_152, wrapper = flatten_fun_j_154};
                        proj_j_156 = record_j_155.generator;
                        int_j_157 = 0;
                        appl_j_158 = proj_j_156 int_j_157;
                        b_b_69 = appl_j_158;
                        bool_j_159 = false;
                        fail_b_71 = bool_j_159;
                        flatten_fun_j_168 = fun expr_b_70 -> (
                            var_j_160 = expr_b_70;
                            m_match_bool_j_162 = var_j_160 ~ any;
                            m_match_bool_j_165 = var_j_160 ~ int;
                            m_match_cond_j_166 = m_match_bool_j_165 ? (
                                    bool_j_167 = true
                                ) : (
                                    m_match_cond_j_163 = m_match_bool_j_162 ? (
                                            var_j_164 = fail_b_71
                                        ) : (
                                            void_j_161 = {}
                                        )
                                ));
                        flatten_fun_j_170 = fun bj_null_j_26 -> (
                            input_j_169 = input);
                        flatten_fun_j_172 = fun expr_b_72 -> (
                            var_j_171 = expr_b_72);
                        record_j_173 = {checker = flatten_fun_j_168, generator = flatten_fun_j_170, wrapper = flatten_fun_j_172};
                        proj_j_174 = record_j_173.generator;
                        int_j_175 = 0;
                        appl_j_176 = proj_j_174 int_j_175;
                        a_b_68 = appl_j_176;
                        var_j_177 = a_b_68;
                        var_j_178 = b_b_69;
                        record_j_179 = {a = var_j_177, b = var_j_178};
                        record_j_180 = {};
                        record_j_181 = {};
                        record_j_182 = {a = record_j_180, b = record_j_181};
                        record_j_183 = {bj_actual_rec = record_j_179, bj_decl_lbls = record_j_182});
                    flatten_fun_j_186 = fun expr_b_87 -> (
                        var_j_185 = expr_b_87);
                    record_j_187 = {checker = flatten_fun_j_138, generator = flatten_fun_j_184, wrapper = flatten_fun_j_186};
                    proj_j_188 = record_j_187.checker;
                    var_j_189 = expr_b_88;
                    appl_j_190 = proj_j_188 var_j_189;
                    t_check_b_89 = appl_j_190;
                    var_j_191 = t_check_b_89;
                    if_j_200 = var_j_191 ? (
                            bool_j_192 = false;
                            pred_check_b_90 = bool_j_192;
                            var_j_193 = aIsPos;
                            var_j_194 = expr_b_88;
                            appl_j_195 = var_j_193 var_j_194;
                            if_j_198 = appl_j_195 ? (
                                    bool_j_196 = true
                                ) : (
                                    var_j_197 = pred_check_b_90
                                )
                        ) : (
                            var_j_199 = t_check_b_89
                        ));
                flatten_fun_j_329 = fun bj_null_j_37 -> (
                    flatten_fun_j_269 = fun expr_b_58 -> (
                        bool_j_202 = false;
                        rec_fail_b_57 = bool_j_202;
                        bool_j_203 = false;
                        rec_fail_b_56 = bool_j_203;
                        bool_j_204 = false;
                        rec_fail_b_55 = bool_j_204;
                        var_j_205 = expr_b_58;
                        m_match_bool_j_207 = var_j_205 ~ any;
                        m_match_bool_j_210 = var_j_205 ~ {bj_actual_rec, _};
                        m_match_cond_j_211 = m_match_bool_j_210 ? (
                                var_j_212 = expr_b_58;
                                proj_j_213 = var_j_212.bj_decl_lbls;
                                m_match_bool_j_215 = proj_j_213 ~ any;
                                m_match_bool_j_218 = proj_j_213 ~ {a, b, _};
                                m_match_cond_j_219 = m_match_bool_j_218 ? (
                                        a_j_33 = proj_j_213.a;
                                        b_j_32 = proj_j_213.b;
                                        var_j_220 = expr_b_58;
                                        proj_j_221 = var_j_220.bj_actual_rec;
                                        m_match_bool_j_223 = proj_j_221 ~ any;
                                        m_match_bool_j_226 = proj_j_221 ~ 
                                            {a, b, _};
                                        m_match_cond_j_227 = m_match_bool_j_226 ? (
                                                a_j_31 = proj_j_221.a;
                                                b_j_30 = proj_j_221.b;
                                                bool_j_228 = false;
                                                fail_b_64 = bool_j_228;
                                                flatten_fun_j_237 = fun expr_b_63 -> (
                                                    var_j_229 = expr_b_63;
                                                    m_match_bool_j_231 = var_j_229 ~ any;
                                                    m_match_bool_j_234 = var_j_229 ~ int;
                                                    m_match_cond_j_235 = m_match_bool_j_234 ? (
                                                            bool_j_236 = true
                                                        ) : (
                                                            m_match_cond_j_232 = m_match_bool_j_231 ? (
                                                                    var_j_233 = fail_b_64
                                                                ) : (
                                                                    void_j_230 = 
                                                                    {}
                                                                )
                                                        ));
                                                flatten_fun_j_239 = fun bj_null_j_28 -> (
                                                    input_j_238 = input);
                                                flatten_fun_j_241 = fun expr_b_65 -> (
                                                    var_j_240 = expr_b_65);
                                                record_j_242 = {checker = flatten_fun_j_237, generator = flatten_fun_j_239, wrapper = flatten_fun_j_241};
                                                proj_j_243 = record_j_242.checker;
                                                var_j_244 = a_j_31;
                                                appl_j_245 = proj_j_243 var_j_244;
                                                lbl_check_b_62 = appl_j_245;
                                                var_j_246 = lbl_check_b_62;
                                                if_j_268 = var_j_246 ? (
                                                        bool_j_247 = false;
                                                        fail_b_60 = bool_j_247;
                                                        flatten_fun_j_256 = fun expr_b_59 -> (
                                                            var_j_248 = expr_b_59;
                                                            m_match_bool_j_250 = var_j_248 ~ any;
                                                            m_match_bool_j_253 = var_j_248 ~ bool;
                                                            m_match_cond_j_254 = m_match_bool_j_253 ? (
                                                                    bool_j_255 = true
                                                                ) : (
                                                                    m_match_cond_j_251 = m_match_bool_j_250 ? (
                                                                        var_j_252 = fail_b_60
                                                                    ) : (
                                                                        void_j_249 = 
                                                                    {}
                                                                    )
                                                                ));
                                                        flatten_fun_j_260 = fun bj_null_j_29 -> (
                                                            int_j_257 = 0;
                                                            input_j_258 = input;
                                                            m_bl_i_788 = int_j_257 ~ int;
                                                            m_br_i_789 = input_j_258 ~ int;
                                                            m_b_i_790 = m_bl_i_788 and m_br_i_789;
                                                            binop_j_259 = m_b_i_790 ? (
                                                                    c_binop_i_791 = int_j_257 <= input_j_258
                                                                ) : (
                                                                    ab_i_792 = abort
                                                                ));
                                                        flatten_fun_j_262 = fun expr_b_61 -> (
                                                            var_j_261 = expr_b_61);
                                                        record_j_263 = 
                                                            {checker = flatten_fun_j_256, generator = flatten_fun_j_260, wrapper = flatten_fun_j_262};
                                                        proj_j_264 = record_j_263.checker;
                                                        var_j_265 = b_j_30;
                                                        appl_j_266 = proj_j_264 var_j_265
                                                    ) : (
                                                        var_j_267 = lbl_check_b_62
                                                    )
                                            ) : (
                                                m_match_cond_j_224 = m_match_bool_j_223 ? (
                                                        var_j_225 = rec_fail_b_55
                                                    ) : (
                                                        void_j_222 = 
                                                            {}
                                                    )
                                            )
                                    ) : (
                                        m_match_cond_j_216 = m_match_bool_j_215 ? (
                                                var_j_217 = rec_fail_b_56
                                            ) : (
                                                void_j_214 = {}
                                            )
                                    )
                            ) : (
                                m_match_cond_j_208 = m_match_bool_j_207 ? (
                                        var_j_209 = rec_fail_b_57
                                    ) : (
                                        void_j_206 = {}
                                    )
                            ));
                    flatten_fun_j_315 = fun bj_null_j_36 -> (
                        bool_j_270 = false;
                        fail_b_53 = bool_j_270;
                        flatten_fun_j_279 = fun expr_b_52 -> (
                            var_j_271 = expr_b_52;
                            m_match_bool_j_273 = var_j_271 ~ any;
                            m_match_bool_j_276 = var_j_271 ~ bool;
                            m_match_cond_j_277 = m_match_bool_j_276 ? (
                                    bool_j_278 = true
                                ) : (
                                    m_match_cond_j_274 = m_match_bool_j_273 ? (
                                            var_j_275 = fail_b_53
                                        ) : (
                                            void_j_272 = {}
                                        )
                                ));
                        flatten_fun_j_283 = fun bj_null_j_34 -> (
                            int_j_280 = 0;
                            input_j_281 = input;
                            m_bl_i_793 = int_j_280 ~ int;
                            m_br_i_794 = input_j_281 ~ int;
                            m_b_i_795 = m_bl_i_793 and m_br_i_794;
                            binop_j_282 = m_b_i_795 ? (
                                    c_binop_i_796 = int_j_280 <= input_j_281
                                ) : (
                                    ab_i_797 = abort
                                ));
                        flatten_fun_j_285 = fun expr_b_54 -> (
                            var_j_284 = expr_b_54);
                        record_j_286 = {checker = flatten_fun_j_279, generator = flatten_fun_j_283, wrapper = flatten_fun_j_285};
                        proj_j_287 = record_j_286.generator;
                        int_j_288 = 0;
                        appl_j_289 = proj_j_287 int_j_288;
                        b_b_48 = appl_j_289;
                        bool_j_290 = false;
                        fail_b_50 = bool_j_290;
                        flatten_fun_j_299 = fun expr_b_49 -> (
                            var_j_291 = expr_b_49;
                            m_match_bool_j_293 = var_j_291 ~ any;
                            m_match_bool_j_296 = var_j_291 ~ int;
                            m_match_cond_j_297 = m_match_bool_j_296 ? (
                                    bool_j_298 = true
                                ) : (
                                    m_match_cond_j_294 = m_match_bool_j_293 ? (
                                            var_j_295 = fail_b_50
                                        ) : (
                                            void_j_292 = {}
                                        )
                                ));
                        flatten_fun_j_301 = fun bj_null_j_35 -> (
                            input_j_300 = input);
                        flatten_fun_j_303 = fun expr_b_51 -> (
                            var_j_302 = expr_b_51);
                        record_j_304 = {checker = flatten_fun_j_299, generator = flatten_fun_j_301, wrapper = flatten_fun_j_303};
                        proj_j_305 = record_j_304.generator;
                        int_j_306 = 0;
                        appl_j_307 = proj_j_305 int_j_306;
                        a_b_47 = appl_j_307;
                        var_j_308 = a_b_47;
                        var_j_309 = b_b_48;
                        record_j_310 = {a = var_j_308, b = var_j_309};
                        record_j_311 = {};
                        record_j_312 = {};
                        record_j_313 = {a = record_j_311, b = record_j_312};
                        record_j_314 = {bj_actual_rec = record_j_310, bj_decl_lbls = record_j_313});
                    flatten_fun_j_317 = fun expr_b_66 -> (
                        var_j_316 = expr_b_66);
                    record_j_318 = {checker = flatten_fun_j_269, generator = flatten_fun_j_315, wrapper = flatten_fun_j_317};
                    proj_j_319 = record_j_318.generator;
                    int_j_320 = 0;
                    appl_j_321 = proj_j_319 int_j_320;
                    candidate_b_67 = appl_j_321;
                    var_j_322 = aIsPos;
                    var_j_323 = candidate_b_67;
                    appl_j_324 = var_j_322 var_j_323;
                    if_j_328 = appl_j_324 ? (
                            var_j_325 = candidate_b_67
                        ) : (
                            bool_j_326 = false;
                            assume_j_327 = assume bool_j_326
                        ));
                flatten_fun_j_331 = fun expr_b_91 -> (
                    var_j_330 = expr_b_91);
                record_j_332 = {checker = flatten_fun_j_201, generator = flatten_fun_j_329, wrapper = flatten_fun_j_331};
                proj_j_333 = record_j_332.checker;
                var_j_334 = r_b_0;
                m_i_798 = proj_j_333 ~ fun;
                appl_j_335 = m_i_798 ? (
                        c_appl_i_799 = proj_j_333 var_j_334
                    ) : (
                        ab_i_800 = abort
                    )
            ) : (
                bool_j_336 = true
            );
        arg_check_b_1 = if_j_337;
        var_j_338 = arg_check_b_1;
        if_j_419 = var_j_338 ? (
                flatten_fun_j_367 = fun expr_b_99 -> (
                    bool_j_339 = false;
                    fail_b_97 = bool_j_339;
                    flatten_fun_j_348 = fun expr_b_96 -> (
                        var_j_340 = expr_b_96;
                        m_match_bool_j_342 = var_j_340 ~ any;
                        m_match_bool_j_345 = var_j_340 ~ int;
                        m_match_cond_j_346 = m_match_bool_j_345 ? (
                                bool_j_347 = true
                            ) : (
                                m_match_cond_j_343 = m_match_bool_j_342 ? (
                                        var_j_344 = fail_b_97
                                    ) : (
                                        void_j_341 = {}
                                    )
                            ));
                    flatten_fun_j_350 = fun bj_null_j_38 -> (
                        input_j_349 = input);
                    flatten_fun_j_352 = fun expr_b_98 -> (
                        var_j_351 = expr_b_98);
                    record_j_353 = {checker = flatten_fun_j_348, generator = flatten_fun_j_350, wrapper = flatten_fun_j_352};
                    proj_j_354 = record_j_353.checker;
                    var_j_355 = expr_b_99;
                    appl_j_356 = proj_j_354 var_j_355;
                    t_check_b_100 = appl_j_356;
                    var_j_357 = t_check_b_100;
                    if_j_366 = var_j_357 ? (
                            bool_j_358 = false;
                            pred_check_b_101 = bool_j_358;
                            var_j_359 = isNeg;
                            var_j_360 = expr_b_99;
                            appl_j_361 = var_j_359 var_j_360;
                            if_j_364 = appl_j_361 ? (
                                    bool_j_362 = true
                                ) : (
                                    var_j_363 = pred_check_b_101
                                )
                        ) : (
                            var_j_365 = t_check_b_100
                        ));
                flatten_fun_j_393 = fun bj_null_j_40 -> (
                    bool_j_368 = false;
                    fail_b_93 = bool_j_368;
                    flatten_fun_j_377 = fun expr_b_92 -> (
                        var_j_369 = expr_b_92;
                        m_match_bool_j_371 = var_j_369 ~ any;
                        m_match_bool_j_374 = var_j_369 ~ int;
                        m_match_cond_j_375 = m_match_bool_j_374 ? (
                                bool_j_376 = true
                            ) : (
                                m_match_cond_j_372 = m_match_bool_j_371 ? (
                                        var_j_373 = fail_b_93
                                    ) : (
                                        void_j_370 = {}
                                    )
                            ));
                    flatten_fun_j_379 = fun bj_null_j_39 -> (
                        input_j_378 = input);
                    flatten_fun_j_381 = fun expr_b_94 -> (
                        var_j_380 = expr_b_94);
                    record_j_382 = {checker = flatten_fun_j_377, generator = flatten_fun_j_379, wrapper = flatten_fun_j_381};
                    proj_j_383 = record_j_382.generator;
                    int_j_384 = 0;
                    appl_j_385 = proj_j_383 int_j_384;
                    candidate_b_95 = appl_j_385;
                    var_j_386 = isNeg;
                    var_j_387 = candidate_b_95;
                    appl_j_388 = var_j_386 var_j_387;
                    if_j_392 = appl_j_388 ? (
                            var_j_389 = candidate_b_95
                        ) : (
                            bool_j_390 = false;
                            assume_j_391 = assume bool_j_390
                        ));
                flatten_fun_j_395 = fun expr_b_102 -> (
                    var_j_394 = expr_b_102);
                record_j_396 = {checker = flatten_fun_j_367, generator = flatten_fun_j_393, wrapper = flatten_fun_j_395};
                proj_j_397 = record_j_396.wrapper;
                var_j_398 = r;
                proj_j_399 = var_j_398.bj_decl_lbls;
                m_match_bool_j_401 = proj_j_399 ~ any;
                m_match_bool_j_408 = proj_j_399 ~ {a, _};
                m_match_cond_j_409 = m_match_bool_j_408 ? (
                        var_j_410 = r;
                        proj_j_411 = var_j_410.bj_actual_rec;
                        proj_j_412 = proj_j_411.a
                    ) : (
                        m_match_cond_j_402 = m_match_bool_j_401 ? (
                                bool_j_403 = false;
                                assert_pred_j_404 = bool_j_403;
                                assert_res_j_405 = assert_pred_j_404 ? (
                                        assert_res_true_j_406 = {}
                                    ) : (
                                        ab_j_407 = abort
                                    )
                            ) : (
                                void_j_400 = {}
                            )
                    );
                m_i_801 = proj_j_397 ~ fun;
                appl_j_413 = m_i_801 ? (
                        c_appl_i_802 = proj_j_397 m_match_cond_j_409
                    ) : (
                        ab_i_803 = abort
                    )
            ) : (
                var_j_414 = arg_check_b_1;
                assert_pred_j_415 = var_j_414;
                assert_res_j_416 = assert_pred_j_415 ? (
                        assert_res_true_j_417 = {}
                    ) : (
                        ab_j_418 = abort
                    )
            ));
    var_j_421 = r;
    appl_j_422 = flatten_fun_j_420 var_j_421);
access_record = access_record_j_423;
flatten_fun_j_554 = fun expr_b_43 -> (
    flatten_fun_j_491 = fun expr_b_34 -> (
        bool_j_424 = false;
        rec_fail_b_33 = bool_j_424;
        bool_j_425 = false;
        rec_fail_b_32 = bool_j_425;
        bool_j_426 = false;
        rec_fail_b_31 = bool_j_426;
        var_j_427 = expr_b_34;
        m_match_bool_j_429 = var_j_427 ~ any;
        m_match_bool_j_432 = var_j_427 ~ {bj_actual_rec, _};
        m_match_cond_j_433 = m_match_bool_j_432 ? (
                var_j_434 = expr_b_34;
                proj_j_435 = var_j_434.bj_decl_lbls;
                m_match_bool_j_437 = proj_j_435 ~ any;
                m_match_bool_j_440 = proj_j_435 ~ {a, b, _};
                m_match_cond_j_441 = m_match_bool_j_440 ? (
                        a_j_2 = proj_j_435.a;
                        b_j_1 = proj_j_435.b;
                        var_j_442 = expr_b_34;
                        proj_j_443 = var_j_442.bj_actual_rec;
                        m_match_bool_j_445 = proj_j_443 ~ any;
                        m_match_bool_j_448 = proj_j_443 ~ {a, b, _};
                        m_match_cond_j_449 = m_match_bool_j_448 ? (
                                a = proj_j_443.a;
                                b = proj_j_443.b;
                                bool_j_450 = false;
                                fail_b_40 = bool_j_450;
                                flatten_fun_j_459 = fun expr_b_39 -> (
                                    var_j_451 = expr_b_39;
                                    m_match_bool_j_453 = var_j_451 ~ any;
                                    m_match_bool_j_456 = var_j_451 ~ int;
                                    m_match_cond_j_457 = m_match_bool_j_456 ? (
                                            bool_j_458 = true
                                        ) : (
                                            m_match_cond_j_454 = m_match_bool_j_453 ? (
                                                    var_j_455 = fail_b_40
                                                ) : (
                                                    void_j_452 = {}
                                                )
                                        ));
                                flatten_fun_j_461 = fun bj_null -> (
                                    input_j_460 = input);
                                flatten_fun_j_463 = fun expr_b_41 -> (
                                    var_j_462 = expr_b_41);
                                record_j_464 = {checker = flatten_fun_j_459, generator = flatten_fun_j_461, wrapper = flatten_fun_j_463};
                                proj_j_465 = record_j_464.checker;
                                var_j_466 = a;
                                appl_j_467 = proj_j_465 var_j_466;
                                lbl_check_b_38 = appl_j_467;
                                var_j_468 = lbl_check_b_38;
                                if_j_490 = var_j_468 ? (
                                        bool_j_469 = false;
                                        fail_b_36 = bool_j_469;
                                        flatten_fun_j_478 = fun expr_b_35 -> (
                                            var_j_470 = expr_b_35;
                                            m_match_bool_j_472 = var_j_470 ~ any;
                                            m_match_bool_j_475 = var_j_470 ~ bool;
                                            m_match_cond_j_476 = m_match_bool_j_475 ? (
                                                    bool_j_477 = true
                                                ) : (
                                                    m_match_cond_j_473 = m_match_bool_j_472 ? (
                                                            var_j_474 = fail_b_36
                                                        ) : (
                                                            void_j_471 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_482 = fun bj_null_j_0 -> (
                                            int_j_479 = 0;
                                            input_j_480 = input;
                                            m_bl_i_804 = int_j_479 ~ int;
                                            m_br_i_805 = input_j_480 ~ int;
                                            m_b_i_806 = m_bl_i_804 and m_br_i_805;
                                            binop_j_481 = m_b_i_806 ? (
                                                    c_binop_i_807 = int_j_479 <= input_j_480
                                                ) : (
                                                    ab_i_808 = abort
                                                ));
                                        flatten_fun_j_484 = fun expr_b_37 -> (
                                            var_j_483 = expr_b_37);
                                        record_j_485 = {checker = flatten_fun_j_478, generator = flatten_fun_j_482, wrapper = flatten_fun_j_484};
                                        proj_j_486 = record_j_485.checker;
                                        var_j_487 = b;
                                        appl_j_488 = proj_j_486 var_j_487
                                    ) : (
                                        var_j_489 = lbl_check_b_38
                                    )
                            ) : (
                                m_match_cond_j_446 = m_match_bool_j_445 ? (
                                        var_j_447 = rec_fail_b_31
                                    ) : (
                                        void_j_444 = {}
                                    )
                            )
                    ) : (
                        m_match_cond_j_438 = m_match_bool_j_437 ? (
                                var_j_439 = rec_fail_b_32
                            ) : (
                                void_j_436 = {}
                            )
                    )
            ) : (
                m_match_cond_j_430 = m_match_bool_j_429 ? (
                        var_j_431 = rec_fail_b_33
                    ) : (
                        void_j_428 = {}
                    )
            ));
    flatten_fun_j_537 = fun bj_null_j_5 -> (
        bool_j_492 = false;
        fail_b_29 = bool_j_492;
        flatten_fun_j_501 = fun expr_b_28 -> (
            var_j_493 = expr_b_28;
            m_match_bool_j_495 = var_j_493 ~ any;
            m_match_bool_j_498 = var_j_493 ~ bool;
            m_match_cond_j_499 = m_match_bool_j_498 ? (
                    bool_j_500 = true
                ) : (
                    m_match_cond_j_496 = m_match_bool_j_495 ? (
                            var_j_497 = fail_b_29
                        ) : (
                            void_j_494 = {}
                        )
                ));
        flatten_fun_j_505 = fun bj_null_j_3 -> (
            int_j_502 = 0;
            input_j_503 = input;
            m_bl_i_809 = int_j_502 ~ int;
            m_br_i_810 = input_j_503 ~ int;
            m_b_i_811 = m_bl_i_809 and m_br_i_810;
            binop_j_504 = m_b_i_811 ? (
                    c_binop_i_812 = int_j_502 <= input_j_503
                ) : (
                    ab_i_813 = abort
                ));
        flatten_fun_j_507 = fun expr_b_30 -> (
            var_j_506 = expr_b_30);
        record_j_508 = {checker = flatten_fun_j_501, generator = flatten_fun_j_505, wrapper = flatten_fun_j_507};
        proj_j_509 = record_j_508.generator;
        int_j_510 = 0;
        appl_j_511 = proj_j_509 int_j_510;
        b_b_24 = appl_j_511;
        bool_j_512 = false;
        fail_b_26 = bool_j_512;
        flatten_fun_j_521 = fun expr_b_25 -> (
            var_j_513 = expr_b_25;
            m_match_bool_j_515 = var_j_513 ~ any;
            m_match_bool_j_518 = var_j_513 ~ int;
            m_match_cond_j_519 = m_match_bool_j_518 ? (
                    bool_j_520 = true
                ) : (
                    m_match_cond_j_516 = m_match_bool_j_515 ? (
                            var_j_517 = fail_b_26
                        ) : (
                            void_j_514 = {}
                        )
                ));
        flatten_fun_j_523 = fun bj_null_j_4 -> (
            input_j_522 = input);
        flatten_fun_j_525 = fun expr_b_27 -> (
            var_j_524 = expr_b_27);
        record_j_526 = {checker = flatten_fun_j_521, generator = flatten_fun_j_523, wrapper = flatten_fun_j_525};
        proj_j_527 = record_j_526.generator;
        int_j_528 = 0;
        appl_j_529 = proj_j_527 int_j_528;
        a_b_23 = appl_j_529;
        var_j_530 = a_b_23;
        var_j_531 = b_b_24;
        record_j_532 = {a = var_j_530, b = var_j_531};
        record_j_533 = {};
        record_j_534 = {};
        record_j_535 = {a = record_j_533, b = record_j_534};
        record_j_536 = {bj_actual_rec = record_j_532, bj_decl_lbls = record_j_535});
    flatten_fun_j_539 = fun expr_b_42 -> (
        var_j_538 = expr_b_42);
    record_j_540 = {checker = flatten_fun_j_491, generator = flatten_fun_j_537, wrapper = flatten_fun_j_539};
    proj_j_541 = record_j_540.checker;
    var_j_542 = expr_b_43;
    appl_j_543 = proj_j_541 var_j_542;
    t_check_b_44 = appl_j_543;
    var_j_544 = t_check_b_44;
    if_j_553 = var_j_544 ? (
            bool_j_545 = false;
            pred_check_b_45 = bool_j_545;
            var_j_546 = aIsPos;
            var_j_547 = expr_b_43;
            appl_j_548 = var_j_546 var_j_547;
            if_j_551 = appl_j_548 ? (
                    bool_j_549 = true
                ) : (
                    var_j_550 = pred_check_b_45
                )
        ) : (
            var_j_552 = t_check_b_44
        ));
flatten_fun_j_682 = fun bj_null_j_15 -> (
    flatten_fun_j_622 = fun expr_b_13 -> (
        bool_j_555 = false;
        rec_fail_b_12 = bool_j_555;
        bool_j_556 = false;
        rec_fail_b_11 = bool_j_556;
        bool_j_557 = false;
        rec_fail_b_10 = bool_j_557;
        var_j_558 = expr_b_13;
        m_match_bool_j_560 = var_j_558 ~ any;
        m_match_bool_j_563 = var_j_558 ~ {bj_actual_rec, _};
        m_match_cond_j_564 = m_match_bool_j_563 ? (
                var_j_565 = expr_b_13;
                proj_j_566 = var_j_565.bj_decl_lbls;
                m_match_bool_j_568 = proj_j_566 ~ any;
                m_match_bool_j_571 = proj_j_566 ~ {a, b, _};
                m_match_cond_j_572 = m_match_bool_j_571 ? (
                        a_j_11 = proj_j_566.a;
                        b_j_10 = proj_j_566.b;
                        var_j_573 = expr_b_13;
                        proj_j_574 = var_j_573.bj_actual_rec;
                        m_match_bool_j_576 = proj_j_574 ~ any;
                        m_match_bool_j_579 = proj_j_574 ~ {a, b, _};
                        m_match_cond_j_580 = m_match_bool_j_579 ? (
                                a_j_9 = proj_j_574.a;
                                b_j_8 = proj_j_574.b;
                                bool_j_581 = false;
                                fail_b_19 = bool_j_581;
                                flatten_fun_j_590 = fun expr_b_18 -> (
                                    var_j_582 = expr_b_18;
                                    m_match_bool_j_584 = var_j_582 ~ any;
                                    m_match_bool_j_587 = var_j_582 ~ int;
                                    m_match_cond_j_588 = m_match_bool_j_587 ? (
                                            bool_j_589 = true
                                        ) : (
                                            m_match_cond_j_585 = m_match_bool_j_584 ? (
                                                    var_j_586 = fail_b_19
                                                ) : (
                                                    void_j_583 = {}
                                                )
                                        ));
                                flatten_fun_j_592 = fun bj_null_j_6 -> (
                                    input_j_591 = input);
                                flatten_fun_j_594 = fun expr_b_20 -> (
                                    var_j_593 = expr_b_20);
                                record_j_595 = {checker = flatten_fun_j_590, generator = flatten_fun_j_592, wrapper = flatten_fun_j_594};
                                proj_j_596 = record_j_595.checker;
                                var_j_597 = a_j_9;
                                appl_j_598 = proj_j_596 var_j_597;
                                lbl_check_b_17 = appl_j_598;
                                var_j_599 = lbl_check_b_17;
                                if_j_621 = var_j_599 ? (
                                        bool_j_600 = false;
                                        fail_b_15 = bool_j_600;
                                        flatten_fun_j_609 = fun expr_b_14 -> (
                                            var_j_601 = expr_b_14;
                                            m_match_bool_j_603 = var_j_601 ~ any;
                                            m_match_bool_j_606 = var_j_601 ~ bool;
                                            m_match_cond_j_607 = m_match_bool_j_606 ? (
                                                    bool_j_608 = true
                                                ) : (
                                                    m_match_cond_j_604 = m_match_bool_j_603 ? (
                                                            var_j_605 = fail_b_15
                                                        ) : (
                                                            void_j_602 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_613 = fun bj_null_j_7 -> (
                                            int_j_610 = 0;
                                            input_j_611 = input;
                                            m_bl_i_814 = int_j_610 ~ int;
                                            m_br_i_815 = input_j_611 ~ int;
                                            m_b_i_816 = m_bl_i_814 and m_br_i_815;
                                            binop_j_612 = m_b_i_816 ? (
                                                    c_binop_i_817 = int_j_610 <= input_j_611
                                                ) : (
                                                    ab_i_818 = abort
                                                ));
                                        flatten_fun_j_615 = fun expr_b_16 -> (
                                            var_j_614 = expr_b_16);
                                        record_j_616 = {checker = flatten_fun_j_609, generator = flatten_fun_j_613, wrapper = flatten_fun_j_615};
                                        proj_j_617 = record_j_616.checker;
                                        var_j_618 = b_j_8;
                                        appl_j_619 = proj_j_617 var_j_618
                                    ) : (
                                        var_j_620 = lbl_check_b_17
                                    )
                            ) : (
                                m_match_cond_j_577 = m_match_bool_j_576 ? (
                                        var_j_578 = rec_fail_b_10
                                    ) : (
                                        void_j_575 = {}
                                    )
                            )
                    ) : (
                        m_match_cond_j_569 = m_match_bool_j_568 ? (
                                var_j_570 = rec_fail_b_11
                            ) : (
                                void_j_567 = {}
                            )
                    )
            ) : (
                m_match_cond_j_561 = m_match_bool_j_560 ? (
                        var_j_562 = rec_fail_b_12
                    ) : (
                        void_j_559 = {}
                    )
            ));
    flatten_fun_j_668 = fun bj_null_j_14 -> (
        bool_j_623 = false;
        fail_b_8 = bool_j_623;
        flatten_fun_j_632 = fun expr_b_7 -> (
            var_j_624 = expr_b_7;
            m_match_bool_j_626 = var_j_624 ~ any;
            m_match_bool_j_629 = var_j_624 ~ bool;
            m_match_cond_j_630 = m_match_bool_j_629 ? (
                    bool_j_631 = true
                ) : (
                    m_match_cond_j_627 = m_match_bool_j_626 ? (
                            var_j_628 = fail_b_8
                        ) : (
                            void_j_625 = {}
                        )
                ));
        flatten_fun_j_636 = fun bj_null_j_12 -> (
            int_j_633 = 0;
            input_j_634 = input;
            m_bl_i_819 = int_j_633 ~ int;
            m_br_i_820 = input_j_634 ~ int;
            m_b_i_821 = m_bl_i_819 and m_br_i_820;
            binop_j_635 = m_b_i_821 ? (
                    c_binop_i_822 = int_j_633 <= input_j_634
                ) : (
                    ab_i_823 = abort
                ));
        flatten_fun_j_638 = fun expr_b_9 -> (
            var_j_637 = expr_b_9);
        record_j_639 = {checker = flatten_fun_j_632, generator = flatten_fun_j_636, wrapper = flatten_fun_j_638};
        proj_j_640 = record_j_639.generator;
        int_j_641 = 0;
        appl_j_642 = proj_j_640 int_j_641;
        b_b_3 = appl_j_642;
        bool_j_643 = false;
        fail_b_5 = bool_j_643;
        flatten_fun_j_652 = fun expr_b_4 -> (
            var_j_644 = expr_b_4;
            m_match_bool_j_646 = var_j_644 ~ any;
            m_match_bool_j_649 = var_j_644 ~ int;
            m_match_cond_j_650 = m_match_bool_j_649 ? (
                    bool_j_651 = true
                ) : (
                    m_match_cond_j_647 = m_match_bool_j_646 ? (
                            var_j_648 = fail_b_5
                        ) : (
                            void_j_645 = {}
                        )
                ));
        flatten_fun_j_654 = fun bj_null_j_13 -> (
            input_j_653 = input);
        flatten_fun_j_656 = fun expr_b_6 -> (
            var_j_655 = expr_b_6);
        record_j_657 = {checker = flatten_fun_j_652, generator = flatten_fun_j_654, wrapper = flatten_fun_j_656};
        proj_j_658 = record_j_657.generator;
        int_j_659 = 0;
        appl_j_660 = proj_j_658 int_j_659;
        a_b_2 = appl_j_660;
        var_j_661 = a_b_2;
        var_j_662 = b_b_3;
        record_j_663 = {a = var_j_661, b = var_j_662};
        record_j_664 = {};
        record_j_665 = {};
        record_j_666 = {a = record_j_664, b = record_j_665};
        record_j_667 = {bj_actual_rec = record_j_663, bj_decl_lbls = record_j_666});
    flatten_fun_j_670 = fun expr_b_21 -> (
        var_j_669 = expr_b_21);
    record_j_671 = {checker = flatten_fun_j_622, generator = flatten_fun_j_668, wrapper = flatten_fun_j_670};
    proj_j_672 = record_j_671.generator;
    int_j_673 = 0;
    appl_j_674 = proj_j_672 int_j_673;
    candidate_b_22 = appl_j_674;
    var_j_675 = aIsPos;
    var_j_676 = candidate_b_22;
    appl_j_677 = var_j_675 var_j_676;
    if_j_681 = appl_j_677 ? (
            var_j_678 = candidate_b_22
        ) : (
            bool_j_679 = false;
            assume_j_680 = assume bool_j_679
        ));
flatten_fun_j_684 = fun expr_b_46 -> (
    var_j_683 = expr_b_46);
record_j_685 = {checker = flatten_fun_j_554, generator = flatten_fun_j_682, wrapper = flatten_fun_j_684};
proj_j_686 = record_j_685.generator;
int_j_687 = 0;
appl_j_688 = proj_j_686 int_j_687;
r_b_114 = appl_j_688;
flatten_fun_j_717 = fun expr_b_110 -> (
    bool_j_689 = false;
    fail_b_108 = bool_j_689;
    flatten_fun_j_698 = fun expr_b_107 -> (
        var_j_690 = expr_b_107;
        m_match_bool_j_692 = var_j_690 ~ any;
        m_match_bool_j_695 = var_j_690 ~ int;
        m_match_cond_j_696 = m_match_bool_j_695 ? (
                bool_j_697 = true
            ) : (
                m_match_cond_j_693 = m_match_bool_j_692 ? (
                        var_j_694 = fail_b_108
                    ) : (
                        void_j_691 = {}
                    )
            ));
    flatten_fun_j_700 = fun bj_null_j_16 -> (
        input_j_699 = input);
    flatten_fun_j_702 = fun expr_b_109 -> (
        var_j_701 = expr_b_109);
    record_j_703 = {checker = flatten_fun_j_698, generator = flatten_fun_j_700, wrapper = flatten_fun_j_702};
    proj_j_704 = record_j_703.checker;
    var_j_705 = expr_b_110;
    appl_j_706 = proj_j_704 var_j_705;
    t_check_b_111 = appl_j_706;
    var_j_707 = t_check_b_111;
    if_j_716 = var_j_707 ? (
            bool_j_708 = false;
            pred_check_b_112 = bool_j_708;
            var_j_709 = isNeg;
            var_j_710 = expr_b_110;
            appl_j_711 = var_j_709 var_j_710;
            if_j_714 = appl_j_711 ? (
                    bool_j_712 = true
                ) : (
                    var_j_713 = pred_check_b_112
                )
        ) : (
            var_j_715 = t_check_b_111
        ));
flatten_fun_j_743 = fun bj_null_j_18 -> (
    bool_j_718 = false;
    fail_b_104 = bool_j_718;
    flatten_fun_j_727 = fun expr_b_103 -> (
        var_j_719 = expr_b_103;
        m_match_bool_j_721 = var_j_719 ~ any;
        m_match_bool_j_724 = var_j_719 ~ int;
        m_match_cond_j_725 = m_match_bool_j_724 ? (
                bool_j_726 = true
            ) : (
                m_match_cond_j_722 = m_match_bool_j_721 ? (
                        var_j_723 = fail_b_104
                    ) : (
                        void_j_720 = {}
                    )
            ));
    flatten_fun_j_729 = fun bj_null_j_17 -> (
        input_j_728 = input);
    flatten_fun_j_731 = fun expr_b_105 -> (
        var_j_730 = expr_b_105);
    record_j_732 = {checker = flatten_fun_j_727, generator = flatten_fun_j_729, wrapper = flatten_fun_j_731};
    proj_j_733 = record_j_732.generator;
    int_j_734 = 0;
    appl_j_735 = proj_j_733 int_j_734;
    candidate_b_106 = appl_j_735;
    var_j_736 = isNeg;
    var_j_737 = candidate_b_106;
    appl_j_738 = var_j_736 var_j_737;
    if_j_742 = appl_j_738 ? (
            var_j_739 = candidate_b_106
        ) : (
            bool_j_740 = false;
            assume_j_741 = assume bool_j_740
        ));
flatten_fun_j_745 = fun expr_b_113 -> (
    var_j_744 = expr_b_113);
record_j_746 = {checker = flatten_fun_j_717, generator = flatten_fun_j_743, wrapper = flatten_fun_j_745};
proj_j_747 = record_j_746.checker;
appl_j_750 = access_record r_b_114;
appl_j_751 = proj_j_747 appl_j_750;
check_res_b_115 = appl_j_751;
if_j_759 = check_res_b_115 ? (
        var_j_753 = access_record
    ) : (
        error_var_j_754 = check_res_b_115;
        assert_pred_j_755 = error_var_j_754;
        assert_res_j_756 = assert_pred_j_755 ? (
                assert_res_true_j_757 = {}
            ) : (
                ab_j_758 = abort
            )
    );
i_result = if_j_759