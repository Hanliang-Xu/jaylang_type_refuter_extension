i_first = {};
isNeg_j_9 = fun n_j_5 -> (
    var_j_6 = n_j_5;
    int_j_7 = 0;
    m_bl_i_140 = var_j_6 ~ int;
    m_br_i_141 = int_j_7 ~ int;
    m_b_i_142 = m_bl_i_140 and m_br_i_141;
    binop_j_8 = m_b_i_142 ? (
            c_binop_i_143 = var_j_6 <= int_j_7
        ) : (
            ab_i_144 = abort
        ));
isNeg = isNeg_j_9;
isPos_j_13 = fun n -> (
    int_j_10 = 0;
    var_j_11 = n;
    m_bl_i_145 = int_j_10 ~ int;
    m_br_i_146 = var_j_11 ~ int;
    m_b_i_147 = m_bl_i_145 and m_br_i_146;
    binop_j_12 = m_b_i_147 ? (
            c_binop_i_148 = int_j_10 < var_j_11
        ) : (
            ab_i_149 = abort
        ));
isPos = isPos_j_13;
negation_j_19 = fun x -> (
    int_j_14 = 0;
    int_j_15 = 1;
    m_bl_i_150 = int_j_14 ~ int;
    m_br_i_151 = int_j_15 ~ int;
    m_b_i_152 = m_bl_i_150 and m_br_i_151;
    binop_j_16 = m_b_i_152 ? (
            c_binop_i_153 = int_j_14 - int_j_15
        ) : (
            ab_i_154 = abort
        );
    var_j_17 = x;
    m_bl_i_155 = binop_j_16 ~ int;
    m_br_i_156 = var_j_17 ~ int;
    m_b_i_157 = m_bl_i_155 and m_br_i_156;
    binop_j_18 = m_b_i_157 ? (
            c_binop_i_158 = binop_j_16 * var_j_17
        ) : (
            ab_i_159 = abort
        ));
negation = negation_j_19;
flatten_fun_j_46 = fun expr_b_7 -> (
    bool_j_20 = false;
    fail_b_5 = bool_j_20;
    flatten_fun_j_29 = fun expr_b_4 -> (
        var_j_21 = expr_b_4;
        m_match_bool_j_23 = var_j_21 ~ any;
        m_match_bool_j_26 = var_j_21 ~ int;
        m_match_cond_j_27 = m_match_bool_j_26 ? (
                bool_j_28 = true
            ) : (
                m_match_cond_j_24 = m_match_bool_j_23 ? (
                        var_j_25 = fail_b_5
                    ) : (
                        void_j_22 = {}
                    )
            ));
    flatten_fun_j_31 = fun bj_null -> (
        input_j_30 = input);
    record_j_32 = {checker = flatten_fun_j_29, generator = flatten_fun_j_31};
    proj_j_33 = record_j_32.checker;
    var_j_34 = expr_b_7;
    appl_j_35 = proj_j_33 var_j_34;
    t_check_b_8 = appl_j_35;
    var_j_36 = t_check_b_8;
    if_j_45 = var_j_36 ? (
            bool_j_37 = false;
            pred_check_b_9 = bool_j_37;
            var_j_38 = isNeg;
            var_j_39 = expr_b_7;
            appl_j_40 = var_j_38 var_j_39;
            if_j_43 = appl_j_40 ? (
                    bool_j_41 = true
                ) : (
                    var_j_42 = pred_check_b_9
                )
        ) : (
            var_j_44 = t_check_b_8
        ));
flatten_fun_j_70 = fun bj_null_j_1 -> (
    bool_j_47 = false;
    fail_b_1 = bool_j_47;
    flatten_fun_j_56 = fun expr_b_0 -> (
        var_j_48 = expr_b_0;
        m_match_bool_j_50 = var_j_48 ~ any;
        m_match_bool_j_53 = var_j_48 ~ int;
        m_match_cond_j_54 = m_match_bool_j_53 ? (
                bool_j_55 = true
            ) : (
                m_match_cond_j_51 = m_match_bool_j_50 ? (
                        var_j_52 = fail_b_1
                    ) : (
                        void_j_49 = {}
                    )
            ));
    flatten_fun_j_58 = fun bj_null_j_0 -> (
        input_j_57 = input);
    record_j_59 = {checker = flatten_fun_j_56, generator = flatten_fun_j_58};
    proj_j_60 = record_j_59.generator;
    int_j_61 = 0;
    appl_j_62 = proj_j_60 int_j_61;
    candidate_b_3 = appl_j_62;
    var_j_63 = isNeg;
    var_j_64 = candidate_b_3;
    appl_j_65 = var_j_63 var_j_64;
    if_j_69 = appl_j_65 ? (
            var_j_66 = candidate_b_3
        ) : (
            bool_j_67 = false;
            assume_j_68 = assume bool_j_67
        ));
record_j_71 = {checker = flatten_fun_j_46, generator = flatten_fun_j_70};
proj_j_72 = record_j_71.generator;
int_j_73 = 0;
appl_j_74 = proj_j_72 int_j_73;
x_b_22 = appl_j_74;
flatten_fun_j_101 = fun expr_b_18 -> (
    bool_j_75 = false;
    fail_b_16 = bool_j_75;
    flatten_fun_j_84 = fun expr_b_15 -> (
        var_j_76 = expr_b_15;
        m_match_bool_j_78 = var_j_76 ~ any;
        m_match_bool_j_81 = var_j_76 ~ int;
        m_match_cond_j_82 = m_match_bool_j_81 ? (
                bool_j_83 = true
            ) : (
                m_match_cond_j_79 = m_match_bool_j_78 ? (
                        var_j_80 = fail_b_16
                    ) : (
                        void_j_77 = {}
                    )
            ));
    flatten_fun_j_86 = fun bj_null_j_2 -> (
        input_j_85 = input);
    record_j_87 = {checker = flatten_fun_j_84, generator = flatten_fun_j_86};
    proj_j_88 = record_j_87.checker;
    var_j_89 = expr_b_18;
    appl_j_90 = proj_j_88 var_j_89;
    t_check_b_19 = appl_j_90;
    var_j_91 = t_check_b_19;
    if_j_100 = var_j_91 ? (
            bool_j_92 = false;
            pred_check_b_20 = bool_j_92;
            var_j_93 = isPos;
            var_j_94 = expr_b_18;
            appl_j_95 = var_j_93 var_j_94;
            if_j_98 = appl_j_95 ? (
                    bool_j_96 = true
                ) : (
                    var_j_97 = pred_check_b_20
                )
        ) : (
            var_j_99 = t_check_b_19
        ));
flatten_fun_j_125 = fun bj_null_j_4 -> (
    bool_j_102 = false;
    fail_b_12 = bool_j_102;
    flatten_fun_j_111 = fun expr_b_11 -> (
        var_j_103 = expr_b_11;
        m_match_bool_j_105 = var_j_103 ~ any;
        m_match_bool_j_108 = var_j_103 ~ int;
        m_match_cond_j_109 = m_match_bool_j_108 ? (
                bool_j_110 = true
            ) : (
                m_match_cond_j_106 = m_match_bool_j_105 ? (
                        var_j_107 = fail_b_12
                    ) : (
                        void_j_104 = {}
                    )
            ));
    flatten_fun_j_113 = fun bj_null_j_3 -> (
        input_j_112 = input);
    record_j_114 = {checker = flatten_fun_j_111, generator = flatten_fun_j_113};
    proj_j_115 = record_j_114.generator;
    int_j_116 = 0;
    appl_j_117 = proj_j_115 int_j_116;
    candidate_b_14 = appl_j_117;
    var_j_118 = isPos;
    var_j_119 = candidate_b_14;
    appl_j_120 = var_j_118 var_j_119;
    if_j_124 = appl_j_120 ? (
            var_j_121 = candidate_b_14
        ) : (
            bool_j_122 = false;
            assume_j_123 = assume bool_j_122
        ));
record_j_126 = {checker = flatten_fun_j_101, generator = flatten_fun_j_125};
proj_j_127 = record_j_126.checker;
appl_j_130 = negation x_b_22;
appl_j_131 = proj_j_127 appl_j_130;
check_res_b_23 = appl_j_131;
if_j_139 = check_res_b_23 ? (
        var_j_133 = negation
    ) : (
        error_var_j_134 = check_res_b_23;
        assert_pred_j_135 = error_var_j_134;
        assert_res_j_136 = assert_pred_j_135 ? (
                assert_res_true_j_137 = {}
            ) : (
                ab_j_138 = abort
            )
    );
i_result = if_j_139