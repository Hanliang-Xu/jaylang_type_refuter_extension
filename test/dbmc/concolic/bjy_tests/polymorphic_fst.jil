i_first = {};
fst_j_31 = fun x -> (
    fst_j_30 = fun y -> (
        bool_j_3 = false;
        fail_b_8 = bool_j_3;
        flatten_fun_j_19 = fun expr_b_9 -> (
            var_j_4 = expr_b_9;
            m_match_bool_j_6 = var_j_4 ~ any;
            m_match_bool_j_9 = var_j_4 ~ {bj_untouched, _};
            m_match_cond_j_10 = m_match_bool_j_9 ? (
                    bj_poly_var_b_10 = var_j_4.bj_untouched;
                    var_j_11 = bj_poly_var_b_10;
                    m_match_bool_j_13 = var_j_11 ~ any;
                    m_match_bool_j_16 = var_j_11 ~ {bj_ticka, _};
                    m_match_cond_j_17 = m_match_bool_j_16 ? (
                            bool_j_18 = true
                        ) : (
                            m_match_cond_j_14 = m_match_bool_j_13 ? (
                                    var_j_15 = fail_b_8
                                ) : (
                                    void_j_12 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_7 = m_match_bool_j_6 ? (
                            var_j_8 = fail_b_8
                        ) : (
                            void_j_5 = {}
                        )
                ));
        flatten_fun_j_23 = fun bj_null_j_2 -> (
            record_j_20 = {};
            record_j_21 = {bj_ticka = record_j_20};
            record_j_22 = {bj_untouched = record_j_21});
        flatten_fun_j_25 = fun expr_b_11 -> (
            var_j_24 = expr_b_11);
        record_j_26 = {checker = flatten_fun_j_19, generator = flatten_fun_j_23, wrapper = flatten_fun_j_25};
        proj_j_27 = record_j_26.wrapper;
        var_j_28 = y;
        m_i_125 = proj_j_27 ~ fun;
        appl_j_29 = m_i_125 ? (
                c_appl_i_126 = proj_j_27 var_j_28
            ) : (
                ab_i_127 = abort
            )));
fst = fst_j_31;
bool_j_32 = false;
fail_b_0 = bool_j_32;
flatten_fun_j_48 = fun expr_b_1 -> (
    var_j_33 = expr_b_1;
    m_match_bool_j_35 = var_j_33 ~ any;
    m_match_bool_j_38 = var_j_33 ~ {bj_untouched, _};
    m_match_cond_j_39 = m_match_bool_j_38 ? (
            bj_poly_var_b_2 = var_j_33.bj_untouched;
            var_j_40 = bj_poly_var_b_2;
            m_match_bool_j_42 = var_j_40 ~ any;
            m_match_bool_j_45 = var_j_40 ~ {bj_ticka, _};
            m_match_cond_j_46 = m_match_bool_j_45 ? (
                    bool_j_47 = true
                ) : (
                    m_match_cond_j_43 = m_match_bool_j_42 ? (
                            var_j_44 = fail_b_0
                        ) : (
                            void_j_41 = {}
                        )
                )
        ) : (
            m_match_cond_j_36 = m_match_bool_j_35 ? (
                    var_j_37 = fail_b_0
                ) : (
                    void_j_34 = {}
                )
        ));
flatten_fun_j_52 = fun bj_null -> (
    record_j_49 = {};
    record_j_50 = {bj_ticka = record_j_49};
    record_j_51 = {bj_untouched = record_j_50});
flatten_fun_j_54 = fun expr_b_3 -> (
    var_j_53 = expr_b_3);
record_j_55 = {checker = flatten_fun_j_48, generator = flatten_fun_j_52, wrapper = flatten_fun_j_54};
proj_j_56 = record_j_55.generator;
int_j_57 = 0;
appl_j_58 = proj_j_56 int_j_57;
x_b_17 = appl_j_58;
bool_j_59 = false;
fail_b_4 = bool_j_59;
flatten_fun_j_75 = fun expr_b_5 -> (
    var_j_60 = expr_b_5;
    m_match_bool_j_62 = var_j_60 ~ any;
    m_match_bool_j_65 = var_j_60 ~ {bj_untouched, _};
    m_match_cond_j_66 = m_match_bool_j_65 ? (
            bj_poly_var_b_6 = var_j_60.bj_untouched;
            var_j_67 = bj_poly_var_b_6;
            m_match_bool_j_69 = var_j_67 ~ any;
            m_match_bool_j_72 = var_j_67 ~ {bj_tickb, _};
            m_match_cond_j_73 = m_match_bool_j_72 ? (
                    bool_j_74 = true
                ) : (
                    m_match_cond_j_70 = m_match_bool_j_69 ? (
                            var_j_71 = fail_b_4
                        ) : (
                            void_j_68 = {}
                        )
                )
        ) : (
            m_match_cond_j_63 = m_match_bool_j_62 ? (
                    var_j_64 = fail_b_4
                ) : (
                    void_j_61 = {}
                )
        ));
flatten_fun_j_79 = fun bj_null_j_0 -> (
    record_j_76 = {};
    record_j_77 = {bj_tickb = record_j_76};
    record_j_78 = {bj_untouched = record_j_77});
flatten_fun_j_81 = fun expr_b_7 -> (
    var_j_80 = expr_b_7);
record_j_82 = {checker = flatten_fun_j_75, generator = flatten_fun_j_79, wrapper = flatten_fun_j_81};
proj_j_83 = record_j_82.generator;
int_j_84 = 0;
appl_j_85 = proj_j_83 int_j_84;
y_b_16 = appl_j_85;
bool_j_86 = false;
fail_b_12 = bool_j_86;
flatten_fun_j_102 = fun expr_b_13 -> (
    var_j_87 = expr_b_13;
    m_match_bool_j_89 = var_j_87 ~ any;
    m_match_bool_j_92 = var_j_87 ~ {bj_untouched, _};
    m_match_cond_j_93 = m_match_bool_j_92 ? (
            bj_poly_var_b_14 = var_j_87.bj_untouched;
            var_j_94 = bj_poly_var_b_14;
            m_match_bool_j_96 = var_j_94 ~ any;
            m_match_bool_j_99 = var_j_94 ~ {bj_ticka, _};
            m_match_cond_j_100 = m_match_bool_j_99 ? (
                    bool_j_101 = true
                ) : (
                    m_match_cond_j_97 = m_match_bool_j_96 ? (
                            var_j_98 = fail_b_12
                        ) : (
                            void_j_95 = {}
                        )
                )
        ) : (
            m_match_cond_j_90 = m_match_bool_j_89 ? (
                    var_j_91 = fail_b_12
                ) : (
                    void_j_88 = {}
                )
        ));
flatten_fun_j_106 = fun bj_null_j_1 -> (
    record_j_103 = {};
    record_j_104 = {bj_ticka = record_j_103};
    record_j_105 = {bj_untouched = record_j_104});
flatten_fun_j_108 = fun expr_b_15 -> (
    var_j_107 = expr_b_15);
record_j_109 = {checker = flatten_fun_j_102, generator = flatten_fun_j_106, wrapper = flatten_fun_j_108};
proj_j_110 = record_j_109.checker;
appl_j_113 = fst x_b_17;
appl_j_115 = appl_j_113 y_b_16;
appl_j_116 = proj_j_110 appl_j_115;
check_res_b_18 = appl_j_116;
if_j_124 = check_res_b_18 ? (
        var_j_118 = fst
    ) : (
        error_var_j_119 = check_res_b_18;
        assert_pred_j_120 = error_var_j_119;
        assert_res_j_121 = assert_pred_j_120 ? (
                assert_res_true_j_122 = {}
            ) : (
                ab_j_123 = abort
            )
    );
i_result = if_j_124