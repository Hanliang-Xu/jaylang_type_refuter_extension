i_first = {};
flatten_fun_j_41 = fun makeList_j_0 -> (
    flatten_fun_j_40 = fun n -> (
        var_j_23 = makeList_j_0;
        var_j_24 = makeList_j_0;
        appl_j_25 = var_j_23 var_j_24;
        makeList = appl_j_25;
        var_j_26 = n;
        int_j_27 = 0;
        m_bl_i_365 = var_j_26 ~ int;
        m_br_i_366 = int_j_27 ~ int;
        m_b_i_367 = m_bl_i_365 and m_br_i_366;
        binop_j_28 = m_b_i_367 ? (
                c_binop_i_368 = var_j_26 == int_j_27
            ) : (
                ab_i_369 = abort
            );
        m_i_370 = binop_j_28 ~ bool;
        if_j_39 = m_i_370 ? (
                c_cond_i_379 = binop_j_28 ? (
                        record_j_29 = {};
                        record_j_30 = {j_empty = record_j_29}
                    ) : (
                        record_j_31 = {};
                        var_j_32 = n;
                        var_j_33 = makeList;
                        var_j_34 = n;
                        int_j_35 = 1;
                        m_bl_i_371 = var_j_34 ~ int;
                        m_br_i_372 = int_j_35 ~ int;
                        m_b_i_373 = m_bl_i_371 and m_br_i_372;
                        binop_j_36 = m_b_i_373 ? (
                                c_binop_i_374 = var_j_34 - int_j_35
                            ) : (
                                ab_i_375 = abort
                            );
                        m_i_376 = var_j_33 ~ fun;
                        appl_j_37 = m_i_376 ? (
                                c_appl_i_377 = var_j_33 binop_j_36
                            ) : (
                                ab_i_378 = abort
                            );
                        record_j_38 = {j_cons = record_j_31, j_head = var_j_32, j_tail = appl_j_37}
                    )
            ) : (
                ab_i_380 = abort
            )));
appl_j_44 = flatten_fun_j_41 flatten_fun_j_41;
getHead_j_65 = fun l_j_20 -> (
    bool_j_45 = false;
    fail_b_2 = bool_j_45;
    var_j_46 = l_j_20;
    m_match_bool_j_48 = var_j_46 ~ {j_head, j_tail, _};
    m_match_bool_j_51 = var_j_46 ~ {j_empty, _};
    m_match_bool_j_58 = var_j_46 ~ {bj_untouched, _};
    m_match_cond_j_59 = m_match_bool_j_58 ? (
            var_j_60 = fail_b_2;
            assert_pred_j_61 = var_j_60;
            assert_res_j_62 = assert_pred_j_61 ? (
                    assert_res_true_j_63 = {}
                ) : (
                    ab_j_64 = abort
                )
        ) : (
            m_match_cond_j_52 = m_match_bool_j_51 ? (
                    bool_j_53 = false;
                    assert_pred_j_54 = bool_j_53;
                    m_i_381 = assert_pred_j_54 ~ bool;
                    assert_res_j_55 = m_i_381 ? (
                            c_cond_i_382 = assert_pred_j_54 ? (
                                    assert_res_true_j_56 = {}
                                ) : (
                                    ab_j_57 = abort
                                )
                        ) : (
                            ab_i_383 = abort
                        )
                ) : (
                    m_match_cond_j_49 = m_match_bool_j_48 ? (
                            hd = var_j_46.j_head;
                            tl = var_j_46.j_tail;
                            var_j_50 = hd
                        ) : (
                            ab_j_47 = abort
                        )
                )
        ));
getHead = getHead_j_65;
main_j_220 = fun n_j_19 -> (
    flatten_fun_j_217 = fun n_b_0 -> (
        flatten_fun_j_97 = fun expr_b_21 -> (
            bool_j_66 = false;
            fail_b_19 = bool_j_66;
            flatten_fun_j_75 = fun expr_b_18 -> (
                var_j_67 = expr_b_18;
                m_match_bool_j_69 = var_j_67 ~ any;
                m_match_bool_j_72 = var_j_67 ~ int;
                m_match_cond_j_73 = m_match_bool_j_72 ? (
                        bool_j_74 = true
                    ) : (
                        m_match_cond_j_70 = m_match_bool_j_69 ? (
                                var_j_71 = fail_b_19
                            ) : (
                                void_j_68 = {}
                            )
                    ));
            flatten_fun_j_77 = fun bj_null_j_9 -> (
                input_j_76 = input);
            flatten_fun_j_79 = fun expr_b_20 -> (
                var_j_78 = expr_b_20);
            record_j_80 = {checker = flatten_fun_j_75, generator = flatten_fun_j_77, wrapper = flatten_fun_j_79};
            proj_j_81 = record_j_80.checker;
            var_j_82 = expr_b_21;
            appl_j_83 = proj_j_81 var_j_82;
            t_check_b_22 = appl_j_83;
            var_j_84 = t_check_b_22;
            if_j_96 = var_j_84 ? (
                    bool_j_85 = false;
                    pred_check_b_23 = bool_j_85;
                    flatten_fun_j_89 = fun a_j_10 -> (
                        int_j_86 = 0;
                        var_j_87 = a_j_10;
                        m_bl_i_384 = int_j_86 ~ int;
                        m_br_i_385 = var_j_87 ~ int;
                        m_b_i_386 = m_bl_i_384 and m_br_i_385;
                        binop_j_88 = m_b_i_386 ? (
                                c_binop_i_387 = int_j_86 <= var_j_87
                            ) : (
                                ab_i_388 = abort
                            ));
                    var_j_90 = expr_b_21;
                    appl_j_91 = flatten_fun_j_89 var_j_90;
                    if_j_94 = appl_j_91 ? (
                            bool_j_92 = true
                        ) : (
                            var_j_93 = pred_check_b_23
                        )
                ) : (
                    var_j_95 = t_check_b_22
                ));
        flatten_fun_j_126 = fun bj_null_j_13 -> (
            bool_j_98 = false;
            fail_b_15 = bool_j_98;
            flatten_fun_j_107 = fun expr_b_14 -> (
                var_j_99 = expr_b_14;
                m_match_bool_j_101 = var_j_99 ~ any;
                m_match_bool_j_104 = var_j_99 ~ int;
                m_match_cond_j_105 = m_match_bool_j_104 ? (
                        bool_j_106 = true
                    ) : (
                        m_match_cond_j_102 = m_match_bool_j_101 ? (
                                var_j_103 = fail_b_15
                            ) : (
                                void_j_100 = {}
                            )
                    ));
            flatten_fun_j_109 = fun bj_null_j_11 -> (
                input_j_108 = input);
            flatten_fun_j_111 = fun expr_b_16 -> (
                var_j_110 = expr_b_16);
            record_j_112 = {checker = flatten_fun_j_107, generator = flatten_fun_j_109, wrapper = flatten_fun_j_111};
            proj_j_113 = record_j_112.generator;
            int_j_114 = 0;
            appl_j_115 = proj_j_113 int_j_114;
            candidate_b_17 = appl_j_115;
            flatten_fun_j_119 = fun a_j_12 -> (
                int_j_116 = 0;
                var_j_117 = a_j_12;
                m_bl_i_389 = int_j_116 ~ int;
                m_br_i_390 = var_j_117 ~ int;
                m_b_i_391 = m_bl_i_389 and m_br_i_390;
                binop_j_118 = m_b_i_391 ? (
                        c_binop_i_392 = int_j_116 <= var_j_117
                    ) : (
                        ab_i_393 = abort
                    ));
            var_j_120 = candidate_b_17;
            appl_j_121 = flatten_fun_j_119 var_j_120;
            if_j_125 = appl_j_121 ? (
                    var_j_122 = candidate_b_17
                ) : (
                    bool_j_123 = false;
                    assume_j_124 = assume bool_j_123
                ));
        flatten_fun_j_128 = fun expr_b_24 -> (
            var_j_127 = expr_b_24);
        record_j_129 = {checker = flatten_fun_j_97, generator = flatten_fun_j_126, wrapper = flatten_fun_j_128};
        proj_j_130 = record_j_129.checker;
        var_j_131 = n_b_0;
        appl_j_132 = proj_j_130 var_j_131;
        arg_check_b_1 = appl_j_132;
        var_j_133 = arg_check_b_1;
        if_j_216 = var_j_133 ? (
                flatten_fun_j_165 = fun expr_b_32 -> (
                    bool_j_134 = false;
                    fail_b_30 = bool_j_134;
                    flatten_fun_j_143 = fun expr_b_29 -> (
                        var_j_135 = expr_b_29;
                        m_match_bool_j_137 = var_j_135 ~ any;
                        m_match_bool_j_140 = var_j_135 ~ int;
                        m_match_cond_j_141 = m_match_bool_j_140 ? (
                                bool_j_142 = true
                            ) : (
                                m_match_cond_j_138 = m_match_bool_j_137 ? (
                                        var_j_139 = fail_b_30
                                    ) : (
                                        void_j_136 = {}
                                    )
                            ));
                    flatten_fun_j_145 = fun bj_null_j_14 -> (
                        input_j_144 = input);
                    flatten_fun_j_147 = fun expr_b_31 -> (
                        var_j_146 = expr_b_31);
                    record_j_148 = {checker = flatten_fun_j_143, generator = flatten_fun_j_145, wrapper = flatten_fun_j_147};
                    proj_j_149 = record_j_148.checker;
                    var_j_150 = expr_b_32;
                    appl_j_151 = proj_j_149 var_j_150;
                    t_check_b_33 = appl_j_151;
                    var_j_152 = t_check_b_33;
                    if_j_164 = var_j_152 ? (
                            bool_j_153 = false;
                            pred_check_b_34 = bool_j_153;
                            flatten_fun_j_157 = fun a_j_15 -> (
                                int_j_154 = 0;
                                var_j_155 = a_j_15;
                                m_bl_i_394 = int_j_154 ~ int;
                                m_br_i_395 = var_j_155 ~ int;
                                m_b_i_396 = m_bl_i_394 and m_br_i_395;
                                binop_j_156 = m_b_i_396 ? (
                                        c_binop_i_397 = int_j_154 < var_j_155
                                    ) : (
                                        ab_i_398 = abort
                                    ));
                            var_j_158 = expr_b_32;
                            appl_j_159 = flatten_fun_j_157 var_j_158;
                            if_j_162 = appl_j_159 ? (
                                    bool_j_160 = true
                                ) : (
                                    var_j_161 = pred_check_b_34
                                )
                        ) : (
                            var_j_163 = t_check_b_33
                        ));
                flatten_fun_j_194 = fun bj_null_j_18 -> (
                    bool_j_166 = false;
                    fail_b_26 = bool_j_166;
                    flatten_fun_j_175 = fun expr_b_25 -> (
                        var_j_167 = expr_b_25;
                        m_match_bool_j_169 = var_j_167 ~ any;
                        m_match_bool_j_172 = var_j_167 ~ int;
                        m_match_cond_j_173 = m_match_bool_j_172 ? (
                                bool_j_174 = true
                            ) : (
                                m_match_cond_j_170 = m_match_bool_j_169 ? (
                                        var_j_171 = fail_b_26
                                    ) : (
                                        void_j_168 = {}
                                    )
                            ));
                    flatten_fun_j_177 = fun bj_null_j_16 -> (
                        input_j_176 = input);
                    flatten_fun_j_179 = fun expr_b_27 -> (
                        var_j_178 = expr_b_27);
                    record_j_180 = {checker = flatten_fun_j_175, generator = flatten_fun_j_177, wrapper = flatten_fun_j_179};
                    proj_j_181 = record_j_180.generator;
                    int_j_182 = 0;
                    appl_j_183 = proj_j_181 int_j_182;
                    candidate_b_28 = appl_j_183;
                    flatten_fun_j_187 = fun a_j_17 -> (
                        int_j_184 = 0;
                        var_j_185 = a_j_17;
                        m_bl_i_399 = int_j_184 ~ int;
                        m_br_i_400 = var_j_185 ~ int;
                        m_b_i_401 = m_bl_i_399 and m_br_i_400;
                        binop_j_186 = m_b_i_401 ? (
                                c_binop_i_402 = int_j_184 < var_j_185
                            ) : (
                                ab_i_403 = abort
                            ));
                    var_j_188 = candidate_b_28;
                    appl_j_189 = flatten_fun_j_187 var_j_188;
                    if_j_193 = appl_j_189 ? (
                            var_j_190 = candidate_b_28
                        ) : (
                            bool_j_191 = false;
                            assume_j_192 = assume bool_j_191
                        ));
                flatten_fun_j_196 = fun expr_b_35 -> (
                    var_j_195 = expr_b_35);
                record_j_197 = {checker = flatten_fun_j_165, generator = flatten_fun_j_194, wrapper = flatten_fun_j_196};
                proj_j_198 = record_j_197.wrapper;
                var_j_199 = appl_j_44;
                var_j_200 = n_j_19;
                m_i_404 = var_j_199 ~ fun;
                appl_j_201 = m_i_404 ? (
                        c_appl_i_405 = var_j_199 var_j_200
                    ) : (
                        ab_i_406 = abort
                    );
                l = appl_j_201;
                int_j_202 = 0;
                var_j_203 = n_j_19;
                m_bl_i_407 = int_j_202 ~ int;
                m_br_i_408 = var_j_203 ~ int;
                m_b_i_409 = m_bl_i_407 and m_br_i_408;
                binop_j_204 = m_b_i_409 ? (
                        c_binop_i_410 = int_j_202 < var_j_203
                    ) : (
                        ab_i_411 = abort
                    );
                m_i_412 = binop_j_204 ~ bool;
                if_j_209 = m_i_412 ? (
                        c_cond_i_416 = binop_j_204 ? (
                                var_j_205 = getHead;
                                var_j_206 = l;
                                m_i_413 = var_j_205 ~ fun;
                                appl_j_207 = m_i_413 ? (
                                        c_appl_i_414 = var_j_205 var_j_206
                                    ) : (
                                        ab_i_415 = abort
                                    )
                            ) : (
                                int_j_208 = 0
                            )
                    ) : (
                        ab_i_417 = abort
                    );
                m_i_418 = proj_j_198 ~ fun;
                appl_j_210 = m_i_418 ? (
                        c_appl_i_419 = proj_j_198 if_j_209
                    ) : (
                        ab_i_420 = abort
                    )
            ) : (
                var_j_211 = arg_check_b_1;
                assert_pred_j_212 = var_j_211;
                assert_res_j_213 = assert_pred_j_212 ? (
                        assert_res_true_j_214 = {}
                    ) : (
                        ab_j_215 = abort
                    )
            ));
    var_j_218 = n_j_19;
    appl_j_219 = flatten_fun_j_217 var_j_218);
main = main_j_220;
flatten_fun_j_252 = fun expr_b_10 -> (
    bool_j_221 = false;
    fail_b_8 = bool_j_221;
    flatten_fun_j_230 = fun expr_b_7 -> (
        var_j_222 = expr_b_7;
        m_match_bool_j_224 = var_j_222 ~ any;
        m_match_bool_j_227 = var_j_222 ~ int;
        m_match_cond_j_228 = m_match_bool_j_227 ? (
                bool_j_229 = true
            ) : (
                m_match_cond_j_225 = m_match_bool_j_224 ? (
                        var_j_226 = fail_b_8
                    ) : (
                        void_j_223 = {}
                    )
            ));
    flatten_fun_j_232 = fun bj_null -> (
        input_j_231 = input);
    flatten_fun_j_234 = fun expr_b_9 -> (
        var_j_233 = expr_b_9);
    record_j_235 = {checker = flatten_fun_j_230, generator = flatten_fun_j_232, wrapper = flatten_fun_j_234};
    proj_j_236 = record_j_235.checker;
    var_j_237 = expr_b_10;
    appl_j_238 = proj_j_236 var_j_237;
    t_check_b_11 = appl_j_238;
    var_j_239 = t_check_b_11;
    if_j_251 = var_j_239 ? (
            bool_j_240 = false;
            pred_check_b_12 = bool_j_240;
            flatten_fun_j_244 = fun a -> (
                int_j_241 = 0;
                var_j_242 = a;
                m_bl_i_421 = int_j_241 ~ int;
                m_br_i_422 = var_j_242 ~ int;
                m_b_i_423 = m_bl_i_421 and m_br_i_422;
                binop_j_243 = m_b_i_423 ? (
                        c_binop_i_424 = int_j_241 <= var_j_242
                    ) : (
                        ab_i_425 = abort
                    ));
            var_j_245 = expr_b_10;
            appl_j_246 = flatten_fun_j_244 var_j_245;
            if_j_249 = appl_j_246 ? (
                    bool_j_247 = true
                ) : (
                    var_j_248 = pred_check_b_12
                )
        ) : (
            var_j_250 = t_check_b_11
        ));
flatten_fun_j_281 = fun bj_null_j_3 -> (
    bool_j_253 = false;
    fail_b_4 = bool_j_253;
    flatten_fun_j_262 = fun expr_b_3 -> (
        var_j_254 = expr_b_3;
        m_match_bool_j_256 = var_j_254 ~ any;
        m_match_bool_j_259 = var_j_254 ~ int;
        m_match_cond_j_260 = m_match_bool_j_259 ? (
                bool_j_261 = true
            ) : (
                m_match_cond_j_257 = m_match_bool_j_256 ? (
                        var_j_258 = fail_b_4
                    ) : (
                        void_j_255 = {}
                    )
            ));
    flatten_fun_j_264 = fun bj_null_j_1 -> (
        input_j_263 = input);
    flatten_fun_j_266 = fun expr_b_5 -> (
        var_j_265 = expr_b_5);
    record_j_267 = {checker = flatten_fun_j_262, generator = flatten_fun_j_264, wrapper = flatten_fun_j_266};
    proj_j_268 = record_j_267.generator;
    int_j_269 = 0;
    appl_j_270 = proj_j_268 int_j_269;
    candidate_b_6 = appl_j_270;
    flatten_fun_j_274 = fun a_j_2 -> (
        int_j_271 = 0;
        var_j_272 = a_j_2;
        m_bl_i_426 = int_j_271 ~ int;
        m_br_i_427 = var_j_272 ~ int;
        m_b_i_428 = m_bl_i_426 and m_br_i_427;
        binop_j_273 = m_b_i_428 ? (
                c_binop_i_429 = int_j_271 <= var_j_272
            ) : (
                ab_i_430 = abort
            ));
    var_j_275 = candidate_b_6;
    appl_j_276 = flatten_fun_j_274 var_j_275;
    if_j_280 = appl_j_276 ? (
            var_j_277 = candidate_b_6
        ) : (
            bool_j_278 = false;
            assume_j_279 = assume bool_j_278
        ));
flatten_fun_j_283 = fun expr_b_13 -> (
    var_j_282 = expr_b_13);
record_j_284 = {checker = flatten_fun_j_252, generator = flatten_fun_j_281, wrapper = flatten_fun_j_283};
proj_j_285 = record_j_284.generator;
int_j_286 = 0;
appl_j_287 = proj_j_285 int_j_286;
n_b_47 = appl_j_287;
flatten_fun_j_319 = fun expr_b_43 -> (
    bool_j_288 = false;
    fail_b_41 = bool_j_288;
    flatten_fun_j_297 = fun expr_b_40 -> (
        var_j_289 = expr_b_40;
        m_match_bool_j_291 = var_j_289 ~ any;
        m_match_bool_j_294 = var_j_289 ~ int;
        m_match_cond_j_295 = m_match_bool_j_294 ? (
                bool_j_296 = true
            ) : (
                m_match_cond_j_292 = m_match_bool_j_291 ? (
                        var_j_293 = fail_b_41
                    ) : (
                        void_j_290 = {}
                    )
            ));
    flatten_fun_j_299 = fun bj_null_j_4 -> (
        input_j_298 = input);
    flatten_fun_j_301 = fun expr_b_42 -> (
        var_j_300 = expr_b_42);
    record_j_302 = {checker = flatten_fun_j_297, generator = flatten_fun_j_299, wrapper = flatten_fun_j_301};
    proj_j_303 = record_j_302.checker;
    var_j_304 = expr_b_43;
    appl_j_305 = proj_j_303 var_j_304;
    t_check_b_44 = appl_j_305;
    var_j_306 = t_check_b_44;
    if_j_318 = var_j_306 ? (
            bool_j_307 = false;
            pred_check_b_45 = bool_j_307;
            flatten_fun_j_311 = fun a_j_5 -> (
                int_j_308 = 0;
                var_j_309 = a_j_5;
                m_bl_i_431 = int_j_308 ~ int;
                m_br_i_432 = var_j_309 ~ int;
                m_b_i_433 = m_bl_i_431 and m_br_i_432;
                binop_j_310 = m_b_i_433 ? (
                        c_binop_i_434 = int_j_308 < var_j_309
                    ) : (
                        ab_i_435 = abort
                    ));
            var_j_312 = expr_b_43;
            appl_j_313 = flatten_fun_j_311 var_j_312;
            if_j_316 = appl_j_313 ? (
                    bool_j_314 = true
                ) : (
                    var_j_315 = pred_check_b_45
                )
        ) : (
            var_j_317 = t_check_b_44
        ));
flatten_fun_j_348 = fun bj_null_j_8 -> (
    bool_j_320 = false;
    fail_b_37 = bool_j_320;
    flatten_fun_j_329 = fun expr_b_36 -> (
        var_j_321 = expr_b_36;
        m_match_bool_j_323 = var_j_321 ~ any;
        m_match_bool_j_326 = var_j_321 ~ int;
        m_match_cond_j_327 = m_match_bool_j_326 ? (
                bool_j_328 = true
            ) : (
                m_match_cond_j_324 = m_match_bool_j_323 ? (
                        var_j_325 = fail_b_37
                    ) : (
                        void_j_322 = {}
                    )
            ));
    flatten_fun_j_331 = fun bj_null_j_6 -> (
        input_j_330 = input);
    flatten_fun_j_333 = fun expr_b_38 -> (
        var_j_332 = expr_b_38);
    record_j_334 = {checker = flatten_fun_j_329, generator = flatten_fun_j_331, wrapper = flatten_fun_j_333};
    proj_j_335 = record_j_334.generator;
    int_j_336 = 0;
    appl_j_337 = proj_j_335 int_j_336;
    candidate_b_39 = appl_j_337;
    flatten_fun_j_341 = fun a_j_7 -> (
        int_j_338 = 0;
        var_j_339 = a_j_7;
        m_bl_i_436 = int_j_338 ~ int;
        m_br_i_437 = var_j_339 ~ int;
        m_b_i_438 = m_bl_i_436 and m_br_i_437;
        binop_j_340 = m_b_i_438 ? (
                c_binop_i_439 = int_j_338 < var_j_339
            ) : (
                ab_i_440 = abort
            ));
    var_j_342 = candidate_b_39;
    appl_j_343 = flatten_fun_j_341 var_j_342;
    if_j_347 = appl_j_343 ? (
            var_j_344 = candidate_b_39
        ) : (
            bool_j_345 = false;
            assume_j_346 = assume bool_j_345
        ));
flatten_fun_j_350 = fun expr_b_46 -> (
    var_j_349 = expr_b_46);
record_j_351 = {checker = flatten_fun_j_319, generator = flatten_fun_j_348, wrapper = flatten_fun_j_350};
proj_j_352 = record_j_351.checker;
appl_j_355 = main n_b_47;
appl_j_356 = proj_j_352 appl_j_355;
check_res_b_48 = appl_j_356;
if_j_364 = check_res_b_48 ? (
        var_j_358 = main
    ) : (
        error_var_j_359 = check_res_b_48;
        assert_pred_j_360 = error_var_j_359;
        assert_res_j_361 = assert_pred_j_360 ? (
                assert_res_true_j_362 = {}
            ) : (
                ab_j_363 = abort
            )
    );
i_result = if_j_364