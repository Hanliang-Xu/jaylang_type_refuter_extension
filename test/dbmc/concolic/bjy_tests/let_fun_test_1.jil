i_first = {};
id_j_60 = fun x -> (
    flatten_fun_j_57 = fun x_b_0 -> (
        int_j_3 = 0;
        input_j_4 = input;
        m_bl_i_111 = int_j_3 ~ int;
        m_br_i_112 = input_j_4 ~ int;
        m_b_i_113 = m_bl_i_111 and m_br_i_112;
        binop_j_5 = m_b_i_113 ? (
                c_binop_i_114 = int_j_3 < input_j_4
            ) : (
                ab_i_115 = abort
            );
        if_j_27 = binop_j_5 ? (
                bool_j_6 = false;
                fail_b_6 = bool_j_6;
                flatten_fun_j_15 = fun expr_b_5 -> (
                    var_j_7 = expr_b_5;
                    m_match_bool_j_9 = var_j_7 ~ any;
                    m_match_bool_j_12 = var_j_7 ~ bool;
                    m_match_cond_j_13 = m_match_bool_j_12 ? (
                            bool_j_14 = true
                        ) : (
                            m_match_cond_j_10 = m_match_bool_j_9 ? (
                                    var_j_11 = fail_b_6
                                ) : (
                                    void_j_8 = {}
                                )
                        ));
                flatten_fun_j_19 = fun bj_null_j_1 -> (
                    int_j_16 = 0;
                    input_j_17 = input;
                    m_bl_i_116 = int_j_16 ~ int;
                    m_br_i_117 = input_j_17 ~ int;
                    m_b_i_118 = m_bl_i_116 and m_br_i_117;
                    binop_j_18 = m_b_i_118 ? (
                            c_binop_i_119 = int_j_16 <= input_j_17
                        ) : (
                            ab_i_120 = abort
                        ));
                flatten_fun_j_21 = fun expr_b_7 -> (
                    var_j_20 = expr_b_7);
                record_j_22 = {checker = flatten_fun_j_15, generator = flatten_fun_j_19, wrapper = flatten_fun_j_21};
                proj_j_23 = record_j_22.checker;
                var_j_24 = x_b_0;
                m_i_121 = proj_j_23 ~ fun;
                appl_j_25 = m_i_121 ? (
                        c_appl_i_122 = proj_j_23 var_j_24
                    ) : (
                        ab_i_123 = abort
                    )
            ) : (
                bool_j_26 = true
            );
        arg_check_b_1 = if_j_27;
        var_j_28 = arg_check_b_1;
        if_j_56 = var_j_28 ? (
                bool_j_29 = false;
                fail_b_9 = bool_j_29;
                flatten_fun_j_38 = fun expr_b_8 -> (
                    var_j_30 = expr_b_8;
                    m_match_bool_j_32 = var_j_30 ~ any;
                    m_match_bool_j_35 = var_j_30 ~ bool;
                    m_match_cond_j_36 = m_match_bool_j_35 ? (
                            bool_j_37 = true
                        ) : (
                            m_match_cond_j_33 = m_match_bool_j_32 ? (
                                    var_j_34 = fail_b_9
                                ) : (
                                    void_j_31 = {}
                                )
                        ));
                flatten_fun_j_42 = fun bj_null_j_2 -> (
                    int_j_39 = 0;
                    input_j_40 = input;
                    m_bl_i_124 = int_j_39 ~ int;
                    m_br_i_125 = input_j_40 ~ int;
                    m_b_i_126 = m_bl_i_124 and m_br_i_125;
                    binop_j_41 = m_b_i_126 ? (
                            c_binop_i_127 = int_j_39 <= input_j_40
                        ) : (
                            ab_i_128 = abort
                        ));
                flatten_fun_j_44 = fun expr_b_10 -> (
                    var_j_43 = expr_b_10);
                record_j_45 = {checker = flatten_fun_j_38, generator = flatten_fun_j_42, wrapper = flatten_fun_j_44};
                proj_j_46 = record_j_45.wrapper;
                int_j_47 = 1;
                int_j_48 = 1;
                m_bl_i_129 = int_j_47 ~ int;
                m_br_i_130 = int_j_48 ~ int;
                m_b_i_131 = m_bl_i_129 and m_br_i_130;
                binop_j_49 = m_b_i_131 ? (
                        c_binop_i_132 = int_j_47 + int_j_48
                    ) : (
                        ab_i_133 = abort
                    );
                m_i_134 = proj_j_46 ~ fun;
                appl_j_50 = m_i_134 ? (
                        c_appl_i_135 = proj_j_46 binop_j_49
                    ) : (
                        ab_i_136 = abort
                    )
            ) : (
                var_j_51 = arg_check_b_1;
                assert_pred_j_52 = var_j_51;
                assert_res_j_53 = assert_pred_j_52 ? (
                        assert_res_true_j_54 = {}
                    ) : (
                        ab_j_55 = abort
                    )
            ));
    var_j_58 = x;
    appl_j_59 = flatten_fun_j_57 var_j_58);
id = id_j_60;
bool_j_61 = false;
fail_b_3 = bool_j_61;
flatten_fun_j_70 = fun expr_b_2 -> (
    var_j_62 = expr_b_2;
    m_match_bool_j_64 = var_j_62 ~ any;
    m_match_bool_j_67 = var_j_62 ~ bool;
    m_match_cond_j_68 = m_match_bool_j_67 ? (
            bool_j_69 = true
        ) : (
            m_match_cond_j_65 = m_match_bool_j_64 ? (
                    var_j_66 = fail_b_3
                ) : (
                    void_j_63 = {}
                )
        ));
flatten_fun_j_74 = fun bj_null -> (
    int_j_71 = 0;
    input_j_72 = input;
    m_bl_i_137 = int_j_71 ~ int;
    m_br_i_138 = input_j_72 ~ int;
    m_b_i_139 = m_bl_i_137 and m_br_i_138;
    binop_j_73 = m_b_i_139 ? (
            c_binop_i_140 = int_j_71 <= input_j_72
        ) : (
            ab_i_141 = abort
        ));
flatten_fun_j_76 = fun expr_b_4 -> (
    var_j_75 = expr_b_4);
record_j_77 = {checker = flatten_fun_j_70, generator = flatten_fun_j_74, wrapper = flatten_fun_j_76};
proj_j_78 = record_j_77.generator;
int_j_79 = 0;
appl_j_80 = proj_j_78 int_j_79;
x_b_14 = appl_j_80;
bool_j_81 = false;
fail_b_12 = bool_j_81;
flatten_fun_j_90 = fun expr_b_11 -> (
    var_j_82 = expr_b_11;
    m_match_bool_j_84 = var_j_82 ~ any;
    m_match_bool_j_87 = var_j_82 ~ bool;
    m_match_cond_j_88 = m_match_bool_j_87 ? (
            bool_j_89 = true
        ) : (
            m_match_cond_j_85 = m_match_bool_j_84 ? (
                    var_j_86 = fail_b_12
                ) : (
                    void_j_83 = {}
                )
        ));
flatten_fun_j_94 = fun bj_null_j_0 -> (
    int_j_91 = 0;
    input_j_92 = input;
    m_bl_i_142 = int_j_91 ~ int;
    m_br_i_143 = input_j_92 ~ int;
    m_b_i_144 = m_bl_i_142 and m_br_i_143;
    binop_j_93 = m_b_i_144 ? (
            c_binop_i_145 = int_j_91 <= input_j_92
        ) : (
            ab_i_146 = abort
        ));
flatten_fun_j_96 = fun expr_b_13 -> (
    var_j_95 = expr_b_13);
record_j_97 = {checker = flatten_fun_j_90, generator = flatten_fun_j_94, wrapper = flatten_fun_j_96};
proj_j_98 = record_j_97.checker;
appl_j_101 = id x_b_14;
appl_j_102 = proj_j_98 appl_j_101;
check_res_b_15 = appl_j_102;
if_j_110 = check_res_b_15 ? (
        var_j_104 = id
    ) : (
        error_var_j_105 = check_res_b_15;
        assert_pred_j_106 = error_var_j_105;
        assert_res_j_107 = assert_pred_j_106 ? (
                assert_res_true_j_108 = {}
            ) : (
                ab_j_109 = abort
            )
    );
i_result = if_j_110