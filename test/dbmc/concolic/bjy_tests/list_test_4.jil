int_j_9 = 1;
x = int_j_9;
flatten_fun_j_61 = fun expr_b_12 -> (
    bool_j_10 = false;
    lst_fail_b_13 = bool_j_10;
    var_j_11 = expr_b_12;
    m_match_bool_j_13 = var_j_11 ~ any;
    m_match_bool_j_16 = var_j_11 ~ {j_head, j_tail, _};
    m_match_bool_j_58 = var_j_11 ~ {j_empty, _};
    m_match_cond_j_59 = m_match_bool_j_58 ? (
            bool_j_60 = true
        ) : (
            m_match_cond_j_17 = m_match_bool_j_16 ? (
                    bj_underscore = var_j_11.j_head;
                    bj_underscore2 = var_j_11.j_tail;
                    flatten_fun_j_51 = fun test_fun_b_9_j_0 -> (
                        flatten_fun_j_50 = fun test_list_b_10 -> (
                            var_j_18 = test_fun_b_9_j_0;
                            var_j_19 = test_fun_b_9_j_0;
                            appl_j_20 = var_j_18 var_j_19;
                            test_fun_b_9 = appl_j_20;
                            var_j_21 = test_list_b_10;
                            m_match_bool_j_23 = var_j_21 ~ {j_head, j_tail, _};
                            m_match_bool_j_47 = var_j_21 ~ {j_empty, _};
                            m_match_cond_j_48 = m_match_bool_j_47 ? (
                                    bool_j_49 = true
                                ) : (
                                    m_match_cond_j_24 = m_match_bool_j_23 ? (
                                            hd = var_j_21.j_head;
                                            tl = var_j_21.j_tail;
                                            bool_j_25 = false;
                                            fail_b_7 = bool_j_25;
                                            flatten_fun_j_34 = fun expr_b_6 -> (
                                                var_j_26 = expr_b_6;
                                                m_match_bool_j_28 = var_j_26 ~ any;
                                                m_match_bool_j_31 = var_j_26 ~ int;
                                                m_match_cond_j_32 = m_match_bool_j_31 ? (
                                                        bool_j_33 = true
                                                    ) : (
                                                        m_match_cond_j_29 = m_match_bool_j_28 ? (
                                                                var_j_30 = fail_b_7
                                                            ) : (
                                                                void_j_27 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_36 = fun bj_null -> (
                                                input_j_35 = input);
                                            record_j_37 = {checker = flatten_fun_j_34, generator = flatten_fun_j_36};
                                            proj_j_38 = record_j_37.checker;
                                            var_j_39 = hd;
                                            appl_j_40 = proj_j_38 var_j_39;
                                            elm_check_b_11 = appl_j_40;
                                            var_j_41 = elm_check_b_11;
                                            if_j_46 = var_j_41 ? (
                                                    var_j_42 = test_fun_b_9;
                                                    var_j_43 = tl;
                                                    appl_j_44 = var_j_42 var_j_43
                                                ) : (
                                                    var_j_45 = elm_check_b_11
                                                )
                                        ) : (
                                            void_j_22 = {}
                                        )
                                )));
                    test_fun_b_9_j_0_j_3 = flatten_fun_j_51;
                    var_j_52 = test_fun_b_9_j_0_j_3;
                    var_j_53 = test_fun_b_9_j_0_j_3;
                    appl_j_54 = var_j_52 var_j_53;
                    test_fun_b_9_j_2 = appl_j_54;
                    var_j_55 = test_fun_b_9_j_2;
                    var_j_56 = expr_b_12;
                    appl_j_57 = var_j_55 var_j_56
                ) : (
                    m_match_cond_j_14 = m_match_bool_j_13 ? (
                            var_j_15 = lst_fail_b_13
                        ) : (
                            void_j_12 = {}
                        )
                )
        ));
flatten_fun_j_110 = fun bj_null_j_8 -> (
    flatten_fun_j_96 = fun list_maker_b_4_j_1 -> (
        flatten_fun_j_95 = fun len_b_3 -> (
            var_j_62 = list_maker_b_4_j_1;
            var_j_63 = list_maker_b_4_j_1;
            appl_j_64 = var_j_62 var_j_63;
            list_maker_b_4 = appl_j_64;
            var_j_65 = len_b_3;
            int_j_66 = 0;
            binop_j_67 = var_j_65 == int_j_66;
            if_j_94 = binop_j_67 ? (
                    record_j_68 = {};
                    record_j_69 = {j_empty = record_j_68}
                ) : (
                    bool_j_70 = false;
                    fail_b_1 = bool_j_70;
                    flatten_fun_j_79 = fun expr_b_0 -> (
                        var_j_71 = expr_b_0;
                        m_match_bool_j_73 = var_j_71 ~ any;
                        m_match_bool_j_76 = var_j_71 ~ int;
                        m_match_cond_j_77 = m_match_bool_j_76 ? (
                                bool_j_78 = true
                            ) : (
                                m_match_cond_j_74 = m_match_bool_j_73 ? (
                                        var_j_75 = fail_b_1
                                    ) : (
                                        void_j_72 = {}
                                    )
                            ));
                    flatten_fun_j_81 = fun bj_null_j_4 -> (
                        input_j_80 = input);
                    record_j_82 = {checker = flatten_fun_j_79, generator = flatten_fun_j_81};
                    proj_j_83 = record_j_82.generator;
                    int_j_84 = 0;
                    appl_j_85 = proj_j_83 int_j_84;
                    elm_b_5 = appl_j_85;
                    record_j_86 = {};
                    var_j_87 = elm_b_5;
                    var_j_88 = list_maker_b_4;
                    var_j_89 = len_b_3;
                    int_j_90 = 1;
                    binop_j_91 = var_j_89 - int_j_90;
                    appl_j_92 = var_j_88 binop_j_91;
                    record_j_93 = {j_cons = record_j_86, j_head = var_j_87, j_tail = appl_j_92}
                )));
    list_maker_b_4_j_1_j_7 = flatten_fun_j_96;
    var_j_97 = list_maker_b_4_j_1_j_7;
    var_j_98 = list_maker_b_4_j_1_j_7;
    appl_j_99 = var_j_97 var_j_98;
    list_maker_b_4_j_6 = appl_j_99;
    input_j_100 = input;
    len_b_3_j_5 = input_j_100;
    int_j_101 = 0;
    var_j_102 = len_b_3_j_5;
    binop_j_103 = int_j_101 <= var_j_102;
    if_j_109 = binop_j_103 ? (
            var_j_104 = list_maker_b_4_j_6;
            var_j_105 = len_b_3_j_5;
            appl_j_106 = var_j_104 var_j_105
        ) : (
            bool_j_107 = false;
            assume_j_108 = assume bool_j_107
        ));
record_j_111 = {checker = flatten_fun_j_61, generator = flatten_fun_j_110};
proj_j_112 = record_j_111.checker;
int_j_113 = 1;
appl_j_114 = proj_j_112 int_j_113;
check_res_b_15 = appl_j_114;
if_j_122 = check_res_b_15 ? (
        var_j_116 = x
    ) : (
        error_var_j_117 = check_res_b_15;
        assert_pred_j_118 = error_var_j_117;
        assert_res_j_119 = assert_pred_j_118 ? (
                assert_res_true_j_120 = {}
            ) : (
                ab_j_121 = abort
            )
    );
i_result = if_j_122