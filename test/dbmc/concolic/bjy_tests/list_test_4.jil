int_j_9 = 1;
x_b_15 = int_j_9;
x = x_b_15;
flatten_fun_j_62 = fun expr_b_12 -> (
    bool_j_11 = false;
    lst_fail_b_13 = bool_j_11;
    var_j_12 = expr_b_12;
    m_match_bool_j_14 = var_j_12 ~ any;
    m_match_bool_j_17 = var_j_12 ~ {j_head, j_tail, _};
    m_match_bool_j_59 = var_j_12 ~ {j_empty, _};
    m_match_cond_j_60 = m_match_bool_j_59 ? (
            bool_j_61 = true
        ) : (
            m_match_cond_j_18 = m_match_bool_j_17 ? (
                    bj_underscore = var_j_12.j_head;
                    bj_underscore2 = var_j_12.j_tail;
                    flatten_fun_j_52 = fun test_fun_b_9_j_0 -> (
                        flatten_fun_j_51 = fun test_list_b_10 -> (
                            var_j_19 = test_fun_b_9_j_0;
                            var_j_20 = test_fun_b_9_j_0;
                            appl_j_21 = var_j_19 var_j_20;
                            test_fun_b_9 = appl_j_21;
                            var_j_22 = test_list_b_10;
                            m_match_bool_j_24 = var_j_22 ~ {j_head, j_tail, _};
                            m_match_bool_j_48 = var_j_22 ~ {j_empty, _};
                            m_match_cond_j_49 = m_match_bool_j_48 ? (
                                    bool_j_50 = true
                                ) : (
                                    m_match_cond_j_25 = m_match_bool_j_24 ? (
                                            hd = var_j_22.j_head;
                                            tl = var_j_22.j_tail;
                                            bool_j_26 = false;
                                            fail_b_7 = bool_j_26;
                                            flatten_fun_j_35 = fun expr_b_6 -> (
                                                var_j_27 = expr_b_6;
                                                m_match_bool_j_29 = var_j_27 ~ any;
                                                m_match_bool_j_32 = var_j_27 ~ int;
                                                m_match_cond_j_33 = m_match_bool_j_32 ? (
                                                        bool_j_34 = true
                                                    ) : (
                                                        m_match_cond_j_30 = m_match_bool_j_29 ? (
                                                                var_j_31 = fail_b_7
                                                            ) : (
                                                                void_j_28 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_37 = fun bj_null -> (
                                                input_j_36 = input);
                                            record_j_38 = {checker = flatten_fun_j_35, generator = flatten_fun_j_37};
                                            proj_j_39 = record_j_38.checker;
                                            var_j_40 = hd;
                                            appl_j_41 = proj_j_39 var_j_40;
                                            elm_check_b_11 = appl_j_41;
                                            var_j_42 = elm_check_b_11;
                                            if_j_47 = var_j_42 ? (
                                                    var_j_43 = test_fun_b_9;
                                                    var_j_44 = tl;
                                                    appl_j_45 = var_j_43 var_j_44
                                                ) : (
                                                    var_j_46 = elm_check_b_11
                                                )
                                        ) : (
                                            void_j_23 = {}
                                        )
                                )));
                    test_fun_b_9_j_0_j_3 = flatten_fun_j_52;
                    var_j_53 = test_fun_b_9_j_0_j_3;
                    var_j_54 = test_fun_b_9_j_0_j_3;
                    appl_j_55 = var_j_53 var_j_54;
                    test_fun_b_9_j_2 = appl_j_55;
                    var_j_56 = test_fun_b_9_j_2;
                    var_j_57 = expr_b_12;
                    appl_j_58 = var_j_56 var_j_57
                ) : (
                    m_match_cond_j_15 = m_match_bool_j_14 ? (
                            var_j_16 = lst_fail_b_13
                        ) : (
                            void_j_13 = {}
                        )
                )
        ));
flatten_fun_j_111 = fun bj_null_j_8 -> (
    flatten_fun_j_97 = fun list_maker_b_4_j_1 -> (
        flatten_fun_j_96 = fun len_b_3 -> (
            var_j_63 = list_maker_b_4_j_1;
            var_j_64 = list_maker_b_4_j_1;
            appl_j_65 = var_j_63 var_j_64;
            list_maker_b_4 = appl_j_65;
            var_j_66 = len_b_3;
            int_j_67 = 0;
            binop_j_68 = var_j_66 == int_j_67;
            if_j_95 = binop_j_68 ? (
                    record_j_69 = {};
                    record_j_70 = {j_empty = record_j_69}
                ) : (
                    bool_j_71 = false;
                    fail_b_1 = bool_j_71;
                    flatten_fun_j_80 = fun expr_b_0 -> (
                        var_j_72 = expr_b_0;
                        m_match_bool_j_74 = var_j_72 ~ any;
                        m_match_bool_j_77 = var_j_72 ~ int;
                        m_match_cond_j_78 = m_match_bool_j_77 ? (
                                bool_j_79 = true
                            ) : (
                                m_match_cond_j_75 = m_match_bool_j_74 ? (
                                        var_j_76 = fail_b_1
                                    ) : (
                                        void_j_73 = {}
                                    )
                            ));
                    flatten_fun_j_82 = fun bj_null_j_4 -> (
                        input_j_81 = input);
                    record_j_83 = {checker = flatten_fun_j_80, generator = flatten_fun_j_82};
                    proj_j_84 = record_j_83.generator;
                    int_j_85 = 0;
                    appl_j_86 = proj_j_84 int_j_85;
                    elm_b_5 = appl_j_86;
                    record_j_87 = {};
                    var_j_88 = elm_b_5;
                    var_j_89 = list_maker_b_4;
                    var_j_90 = len_b_3;
                    int_j_91 = 1;
                    binop_j_92 = var_j_90 - int_j_91;
                    appl_j_93 = var_j_89 binop_j_92;
                    record_j_94 = {j_cons = record_j_87, j_head = var_j_88, j_tail = appl_j_93}
                )));
    list_maker_b_4_j_1_j_7 = flatten_fun_j_97;
    var_j_98 = list_maker_b_4_j_1_j_7;
    var_j_99 = list_maker_b_4_j_1_j_7;
    appl_j_100 = var_j_98 var_j_99;
    list_maker_b_4_j_6 = appl_j_100;
    input_j_101 = input;
    len_b_3_j_5 = input_j_101;
    int_j_102 = 0;
    var_j_103 = len_b_3_j_5;
    binop_j_104 = int_j_102 <= var_j_103;
    if_j_110 = binop_j_104 ? (
            var_j_105 = list_maker_b_4_j_6;
            var_j_106 = len_b_3_j_5;
            appl_j_107 = var_j_105 var_j_106
        ) : (
            bool_j_108 = false;
            assume_j_109 = assume bool_j_108
        ));
record_j_112 = {checker = flatten_fun_j_62, generator = flatten_fun_j_111};
proj_j_113 = record_j_112.checker;
appl_j_115 = proj_j_113 x_b_15;
check_res_b_16 = appl_j_115;
if_j_123 = check_res_b_16 ? (
        var_j_117 = x
    ) : (
        error_var_j_118 = check_res_b_16;
        assert_pred_j_119 = error_var_j_118;
        assert_res_j_120 = assert_pred_j_119 ? (
                assert_res_true_j_121 = {}
            ) : (
                ab_j_122 = abort
            )
    );
i_result = if_j_123