i_first = {};
create_record_j_204 = fun x -> (
    create_record_j_203 = fun y -> (
        flatten_fun_j_200 = fun x_b_2 -> (
            bool_j_19 = false;
            fail_b_11 = bool_j_19;
            flatten_fun_j_28 = fun expr_b_10 -> (
                var_j_20 = expr_b_10;
                m_match_bool_j_22 = var_j_20 ~ any;
                m_match_bool_j_25 = var_j_20 ~ int;
                m_match_cond_j_26 = m_match_bool_j_25 ? (
                        bool_j_27 = true
                    ) : (
                        m_match_cond_j_23 = m_match_bool_j_22 ? (
                                var_j_24 = fail_b_11
                            ) : (
                                void_j_21 = {}
                            )
                    ));
            flatten_fun_j_30 = fun bj_null_j_8 -> (
                input_j_29 = input);
            flatten_fun_j_32 = fun expr_b_12 -> (
                var_j_31 = expr_b_12);
            record_j_33 = {checker = flatten_fun_j_28, generator = flatten_fun_j_30, wrapper = flatten_fun_j_32};
            proj_j_34 = record_j_33.checker;
            var_j_35 = x_b_2;
            appl_j_36 = proj_j_34 var_j_35;
            arg_check_b_3 = appl_j_36;
            var_j_37 = arg_check_b_3;
            if_j_199 = var_j_37 ? (
                    flatten_fun_j_191 = fun y_b_0 -> (
                        bool_j_38 = false;
                        fail_b_14 = bool_j_38;
                        flatten_fun_j_47 = fun expr_b_13 -> (
                            var_j_39 = expr_b_13;
                            m_match_bool_j_41 = var_j_39 ~ any;
                            m_match_bool_j_44 = var_j_39 ~ bool;
                            m_match_cond_j_45 = m_match_bool_j_44 ? (
                                    bool_j_46 = true
                                ) : (
                                    m_match_cond_j_42 = m_match_bool_j_41 ? (
                                            var_j_43 = fail_b_14
                                        ) : (
                                            void_j_40 = {}
                                        )
                                ));
                        flatten_fun_j_51 = fun bj_null_j_9 -> (
                            int_j_48 = 0;
                            input_j_49 = input;
                            m_bl_i_375 = int_j_48 ~ int;
                            m_br_i_376 = input_j_49 ~ int;
                            m_b_i_377 = m_bl_i_375 and m_br_i_376;
                            binop_j_50 = m_b_i_377 ? (
                                    c_binop_i_378 = int_j_48 <= input_j_49
                                ) : (
                                    ab_i_379 = abort
                                ));
                        flatten_fun_j_53 = fun expr_b_15 -> (
                            var_j_52 = expr_b_15);
                        record_j_54 = {checker = flatten_fun_j_47, generator = flatten_fun_j_51, wrapper = flatten_fun_j_53};
                        proj_j_55 = record_j_54.checker;
                        var_j_56 = y_b_0;
                        appl_j_57 = proj_j_55 var_j_56;
                        arg_check_b_1 = appl_j_57;
                        var_j_58 = arg_check_b_1;
                        if_j_190 = var_j_58 ? (
                                flatten_fun_j_126 = fun expr_b_27 -> (
                                    bool_j_59 = false;
                                    rec_fail_b_26 = bool_j_59;
                                    bool_j_60 = false;
                                    rec_fail_b_25 = bool_j_60;
                                    bool_j_61 = false;
                                    rec_fail_b_24 = bool_j_61;
                                    var_j_62 = expr_b_27;
                                    m_match_bool_j_64 = var_j_62 ~ any;
                                    m_match_bool_j_67 = var_j_62 ~ {bj_actual_rec, _};
                                    m_match_cond_j_68 = m_match_bool_j_67 ? (
                                            var_j_69 = expr_b_27;
                                            proj_j_70 = var_j_69.bj_decl_lbls;
                                            m_match_bool_j_72 = proj_j_70 ~ any;
                                            m_match_bool_j_75 = proj_j_70 ~ 
                                                {a, b, _};
                                            m_match_cond_j_76 = m_match_bool_j_75 ? (
                                                    a_j_15 = proj_j_70.a;
                                                    b_j_14 = proj_j_70.b;
                                                    var_j_77 = expr_b_27;
                                                    proj_j_78 = var_j_77.bj_actual_rec;
                                                    m_match_bool_j_80 = proj_j_78 ~ any;
                                                    m_match_bool_j_83 = proj_j_78 ~ 
                                                        {a, b, _};
                                                    m_match_cond_j_84 = m_match_bool_j_83 ? (
                                                            a_j_13 = proj_j_78.a;
                                                            b_j_12 = proj_j_78.b;
                                                            bool_j_85 = false;
                                                            fail_b_33 = bool_j_85;
                                                            flatten_fun_j_94 = fun expr_b_32 -> (
                                                                var_j_86 = expr_b_32;
                                                                m_match_bool_j_88 = var_j_86 ~ any;
                                                                m_match_bool_j_91 = var_j_86 ~ int;
                                                                m_match_cond_j_92 = m_match_bool_j_91 ? (
                                                                        
                                                                    bool_j_93 = true
                                                                    ) : (
                                                                        
                                                                    m_match_cond_j_89 = m_match_bool_j_88 ? (
                                                                        var_j_90 = fail_b_33
                                                                    ) : (
                                                                        void_j_87 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                            flatten_fun_j_96 = fun bj_null_j_10 -> (
                                                                input_j_95 = input);
                                                            flatten_fun_j_98 = fun expr_b_34 -> (
                                                                var_j_97 = expr_b_34);
                                                            record_j_99 = 
                                                                {checker = flatten_fun_j_94, generator = flatten_fun_j_96, wrapper = flatten_fun_j_98};
                                                            proj_j_100 = record_j_99.checker;
                                                            var_j_101 = a_j_13;
                                                            appl_j_102 = proj_j_100 var_j_101;
                                                            lbl_check_b_31 = appl_j_102;
                                                            var_j_103 = lbl_check_b_31;
                                                            if_j_125 = var_j_103 ? (
                                                                    bool_j_104 = false;
                                                                    fail_b_29 = bool_j_104;
                                                                    flatten_fun_j_113 = fun expr_b_28 -> (
                                                                    var_j_105 = expr_b_28;
                                                                    m_match_bool_j_107 = var_j_105 ~ any;
                                                                    m_match_bool_j_110 = var_j_105 ~ bool;
                                                                    m_match_cond_j_111 = m_match_bool_j_110 ? (
                                                                        bool_j_112 = true
                                                                    ) : (
                                                                        m_match_cond_j_108 = m_match_bool_j_107 ? (
                                                                        var_j_109 = fail_b_29
                                                                    ) : (
                                                                        void_j_106 = 
                                                                    {}
                                                                    )
                                                                    ));
                                                                    flatten_fun_j_117 = fun bj_null_j_11 -> (
                                                                    int_j_114 = 0;
                                                                    input_j_115 = input;
                                                                    m_bl_i_380 = int_j_114 ~ int;
                                                                    m_br_i_381 = input_j_115 ~ int;
                                                                    m_b_i_382 = m_bl_i_380 and m_br_i_381;
                                                                    binop_j_116 = m_b_i_382 ? (
                                                                        c_binop_i_383 = int_j_114 <= input_j_115
                                                                    ) : (
                                                                        ab_i_384 = abort
                                                                    ));
                                                                    flatten_fun_j_119 = fun expr_b_30 -> (
                                                                    var_j_118 = expr_b_30);
                                                                    record_j_120 = 
                                                                    {checker = flatten_fun_j_113, generator = flatten_fun_j_117, wrapper = flatten_fun_j_119};
                                                                    proj_j_121 = record_j_120.checker;
                                                                    var_j_122 = b_j_12;
                                                                    appl_j_123 = proj_j_121 var_j_122
                                                                ) : (
                                                                    var_j_124 = lbl_check_b_31
                                                                )
                                                        ) : (
                                                            m_match_cond_j_81 = m_match_bool_j_80 ? (
                                                                    var_j_82 = rec_fail_b_24
                                                                ) : (
                                                                    void_j_79 = 
                                                                    {}
                                                                )
                                                        )
                                                ) : (
                                                    m_match_cond_j_73 = m_match_bool_j_72 ? (
                                                            var_j_74 = rec_fail_b_25
                                                        ) : (
                                                            void_j_71 = 
                                                                {}
                                                        )
                                                )
                                        ) : (
                                            m_match_cond_j_65 = m_match_bool_j_64 ? (
                                                    var_j_66 = rec_fail_b_26
                                                ) : (
                                                    void_j_63 = {}
                                                )
                                        ));
                                flatten_fun_j_172 = fun bj_null_j_18 -> (
                                    bool_j_127 = false;
                                    fail_b_22 = bool_j_127;
                                    flatten_fun_j_136 = fun expr_b_21 -> (
                                        var_j_128 = expr_b_21;
                                        m_match_bool_j_130 = var_j_128 ~ any;
                                        m_match_bool_j_133 = var_j_128 ~ bool;
                                        m_match_cond_j_134 = m_match_bool_j_133 ? (
                                                bool_j_135 = true
                                            ) : (
                                                m_match_cond_j_131 = m_match_bool_j_130 ? (
                                                        var_j_132 = fail_b_22
                                                    ) : (
                                                        void_j_129 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_140 = fun bj_null_j_16 -> (
                                        int_j_137 = 0;
                                        input_j_138 = input;
                                        m_bl_i_385 = int_j_137 ~ int;
                                        m_br_i_386 = input_j_138 ~ int;
                                        m_b_i_387 = m_bl_i_385 and m_br_i_386;
                                        binop_j_139 = m_b_i_387 ? (
                                                c_binop_i_388 = int_j_137 <= input_j_138
                                            ) : (
                                                ab_i_389 = abort
                                            ));
                                    flatten_fun_j_142 = fun expr_b_23 -> (
                                        var_j_141 = expr_b_23);
                                    record_j_143 = {checker = flatten_fun_j_136, generator = flatten_fun_j_140, wrapper = flatten_fun_j_142};
                                    proj_j_144 = record_j_143.generator;
                                    int_j_145 = 0;
                                    appl_j_146 = proj_j_144 int_j_145;
                                    b_b_17 = appl_j_146;
                                    bool_j_147 = false;
                                    fail_b_19 = bool_j_147;
                                    flatten_fun_j_156 = fun expr_b_18 -> (
                                        var_j_148 = expr_b_18;
                                        m_match_bool_j_150 = var_j_148 ~ any;
                                        m_match_bool_j_153 = var_j_148 ~ int;
                                        m_match_cond_j_154 = m_match_bool_j_153 ? (
                                                bool_j_155 = true
                                            ) : (
                                                m_match_cond_j_151 = m_match_bool_j_150 ? (
                                                        var_j_152 = fail_b_19
                                                    ) : (
                                                        void_j_149 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_158 = fun bj_null_j_17 -> (
                                        input_j_157 = input);
                                    flatten_fun_j_160 = fun expr_b_20 -> (
                                        var_j_159 = expr_b_20);
                                    record_j_161 = {checker = flatten_fun_j_156, generator = flatten_fun_j_158, wrapper = flatten_fun_j_160};
                                    proj_j_162 = record_j_161.generator;
                                    int_j_163 = 0;
                                    appl_j_164 = proj_j_162 int_j_163;
                                    a_b_16 = appl_j_164;
                                    var_j_165 = a_b_16;
                                    var_j_166 = b_b_17;
                                    record_j_167 = {a = var_j_165, b = var_j_166};
                                    record_j_168 = {};
                                    record_j_169 = {};
                                    record_j_170 = {a = record_j_168, b = record_j_169};
                                    record_j_171 = {bj_actual_rec = record_j_167, bj_decl_lbls = record_j_170});
                                flatten_fun_j_174 = fun expr_b_35 -> (
                                    var_j_173 = expr_b_35);
                                record_j_175 = {checker = flatten_fun_j_126, generator = flatten_fun_j_172, wrapper = flatten_fun_j_174};
                                proj_j_176 = record_j_175.wrapper;
                                var_j_177 = x;
                                var_j_178 = x;
                                record_j_179 = {a = var_j_177, b = var_j_178};
                                record_j_180 = {};
                                record_j_181 = {};
                                record_j_182 = {a = record_j_180, b = record_j_181};
                                record_j_183 = {bj_actual_rec = record_j_179, bj_decl_lbls = record_j_182};
                                m_i_390 = proj_j_176 ~ fun;
                                appl_j_184 = m_i_390 ? (
                                        c_appl_i_391 = proj_j_176 record_j_183
                                    ) : (
                                        ab_i_392 = abort
                                    )
                            ) : (
                                var_j_185 = arg_check_b_1;
                                assert_pred_j_186 = var_j_185;
                                assert_res_j_187 = assert_pred_j_186 ? (
                                        assert_res_true_j_188 = {}
                                    ) : (
                                        ab_j_189 = abort
                                    )
                            ));
                    var_j_192 = y;
                    appl_j_193 = flatten_fun_j_191 var_j_192
                ) : (
                    var_j_194 = arg_check_b_3;
                    assert_pred_j_195 = var_j_194;
                    assert_res_j_196 = assert_pred_j_195 ? (
                            assert_res_true_j_197 = {}
                        ) : (
                            ab_j_198 = abort
                        )
                ));
        var_j_201 = x;
        appl_j_202 = flatten_fun_j_200 var_j_201));
create_record = create_record_j_204;
bool_j_205 = false;
fail_b_5 = bool_j_205;
flatten_fun_j_214 = fun expr_b_4 -> (
    var_j_206 = expr_b_4;
    m_match_bool_j_208 = var_j_206 ~ any;
    m_match_bool_j_211 = var_j_206 ~ int;
    m_match_cond_j_212 = m_match_bool_j_211 ? (
            bool_j_213 = true
        ) : (
            m_match_cond_j_209 = m_match_bool_j_208 ? (
                    var_j_210 = fail_b_5
                ) : (
                    void_j_207 = {}
                )
        ));
flatten_fun_j_216 = fun bj_null -> (
    input_j_215 = input);
flatten_fun_j_218 = fun expr_b_6 -> (
    var_j_217 = expr_b_6);
record_j_219 = {checker = flatten_fun_j_214, generator = flatten_fun_j_216, wrapper = flatten_fun_j_218};
proj_j_220 = record_j_219.generator;
int_j_221 = 0;
appl_j_222 = proj_j_220 int_j_221;
x_b_57 = appl_j_222;
bool_j_223 = false;
fail_b_8 = bool_j_223;
flatten_fun_j_232 = fun expr_b_7 -> (
    var_j_224 = expr_b_7;
    m_match_bool_j_226 = var_j_224 ~ any;
    m_match_bool_j_229 = var_j_224 ~ bool;
    m_match_cond_j_230 = m_match_bool_j_229 ? (
            bool_j_231 = true
        ) : (
            m_match_cond_j_227 = m_match_bool_j_226 ? (
                    var_j_228 = fail_b_8
                ) : (
                    void_j_225 = {}
                )
        ));
flatten_fun_j_236 = fun bj_null_j_0 -> (
    int_j_233 = 0;
    input_j_234 = input;
    m_bl_i_393 = int_j_233 ~ int;
    m_br_i_394 = input_j_234 ~ int;
    m_b_i_395 = m_bl_i_393 and m_br_i_394;
    binop_j_235 = m_b_i_395 ? (
            c_binop_i_396 = int_j_233 <= input_j_234
        ) : (
            ab_i_397 = abort
        ));
flatten_fun_j_238 = fun expr_b_9 -> (
    var_j_237 = expr_b_9);
record_j_239 = {checker = flatten_fun_j_232, generator = flatten_fun_j_236, wrapper = flatten_fun_j_238};
proj_j_240 = record_j_239.generator;
int_j_241 = 0;
appl_j_242 = proj_j_240 int_j_241;
y_b_56 = appl_j_242;
flatten_fun_j_310 = fun expr_b_47 -> (
    bool_j_243 = false;
    rec_fail_b_46 = bool_j_243;
    bool_j_244 = false;
    rec_fail_b_45 = bool_j_244;
    bool_j_245 = false;
    rec_fail_b_44 = bool_j_245;
    var_j_246 = expr_b_47;
    m_match_bool_j_248 = var_j_246 ~ any;
    m_match_bool_j_251 = var_j_246 ~ {bj_actual_rec, _};
    m_match_cond_j_252 = m_match_bool_j_251 ? (
            var_j_253 = expr_b_47;
            proj_j_254 = var_j_253.bj_decl_lbls;
            m_match_bool_j_256 = proj_j_254 ~ any;
            m_match_bool_j_259 = proj_j_254 ~ {a, b, _};
            m_match_cond_j_260 = m_match_bool_j_259 ? (
                    a_j_4 = proj_j_254.a;
                    b_j_3 = proj_j_254.b;
                    var_j_261 = expr_b_47;
                    proj_j_262 = var_j_261.bj_actual_rec;
                    m_match_bool_j_264 = proj_j_262 ~ any;
                    m_match_bool_j_267 = proj_j_262 ~ {a, b, _};
                    m_match_cond_j_268 = m_match_bool_j_267 ? (
                            a = proj_j_262.a;
                            b = proj_j_262.b;
                            bool_j_269 = false;
                            fail_b_53 = bool_j_269;
                            flatten_fun_j_278 = fun expr_b_52 -> (
                                var_j_270 = expr_b_52;
                                m_match_bool_j_272 = var_j_270 ~ any;
                                m_match_bool_j_275 = var_j_270 ~ int;
                                m_match_cond_j_276 = m_match_bool_j_275 ? (
                                        bool_j_277 = true
                                    ) : (
                                        m_match_cond_j_273 = m_match_bool_j_272 ? (
                                                var_j_274 = fail_b_53
                                            ) : (
                                                void_j_271 = {}
                                            )
                                    ));
                            flatten_fun_j_280 = fun bj_null_j_1 -> (
                                input_j_279 = input);
                            flatten_fun_j_282 = fun expr_b_54 -> (
                                var_j_281 = expr_b_54);
                            record_j_283 = {checker = flatten_fun_j_278, generator = flatten_fun_j_280, wrapper = flatten_fun_j_282};
                            proj_j_284 = record_j_283.checker;
                            var_j_285 = a;
                            appl_j_286 = proj_j_284 var_j_285;
                            lbl_check_b_51 = appl_j_286;
                            var_j_287 = lbl_check_b_51;
                            if_j_309 = var_j_287 ? (
                                    bool_j_288 = false;
                                    fail_b_49 = bool_j_288;
                                    flatten_fun_j_297 = fun expr_b_48 -> (
                                        var_j_289 = expr_b_48;
                                        m_match_bool_j_291 = var_j_289 ~ any;
                                        m_match_bool_j_294 = var_j_289 ~ bool;
                                        m_match_cond_j_295 = m_match_bool_j_294 ? (
                                                bool_j_296 = true
                                            ) : (
                                                m_match_cond_j_292 = m_match_bool_j_291 ? (
                                                        var_j_293 = fail_b_49
                                                    ) : (
                                                        void_j_290 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_301 = fun bj_null_j_2 -> (
                                        int_j_298 = 0;
                                        input_j_299 = input;
                                        m_bl_i_398 = int_j_298 ~ int;
                                        m_br_i_399 = input_j_299 ~ int;
                                        m_b_i_400 = m_bl_i_398 and m_br_i_399;
                                        binop_j_300 = m_b_i_400 ? (
                                                c_binop_i_401 = int_j_298 <= input_j_299
                                            ) : (
                                                ab_i_402 = abort
                                            ));
                                    flatten_fun_j_303 = fun expr_b_50 -> (
                                        var_j_302 = expr_b_50);
                                    record_j_304 = {checker = flatten_fun_j_297, generator = flatten_fun_j_301, wrapper = flatten_fun_j_303};
                                    proj_j_305 = record_j_304.checker;
                                    var_j_306 = b;
                                    appl_j_307 = proj_j_305 var_j_306
                                ) : (
                                    var_j_308 = lbl_check_b_51
                                )
                        ) : (
                            m_match_cond_j_265 = m_match_bool_j_264 ? (
                                    var_j_266 = rec_fail_b_44
                                ) : (
                                    void_j_263 = {}
                                )
                        )
                ) : (
                    m_match_cond_j_257 = m_match_bool_j_256 ? (
                            var_j_258 = rec_fail_b_45
                        ) : (
                            void_j_255 = {}
                        )
                )
        ) : (
            m_match_cond_j_249 = m_match_bool_j_248 ? (
                    var_j_250 = rec_fail_b_46
                ) : (
                    void_j_247 = {}
                )
        ));
flatten_fun_j_356 = fun bj_null_j_7 -> (
    bool_j_311 = false;
    fail_b_42 = bool_j_311;
    flatten_fun_j_320 = fun expr_b_41 -> (
        var_j_312 = expr_b_41;
        m_match_bool_j_314 = var_j_312 ~ any;
        m_match_bool_j_317 = var_j_312 ~ bool;
        m_match_cond_j_318 = m_match_bool_j_317 ? (
                bool_j_319 = true
            ) : (
                m_match_cond_j_315 = m_match_bool_j_314 ? (
                        var_j_316 = fail_b_42
                    ) : (
                        void_j_313 = {}
                    )
            ));
    flatten_fun_j_324 = fun bj_null_j_5 -> (
        int_j_321 = 0;
        input_j_322 = input;
        m_bl_i_403 = int_j_321 ~ int;
        m_br_i_404 = input_j_322 ~ int;
        m_b_i_405 = m_bl_i_403 and m_br_i_404;
        binop_j_323 = m_b_i_405 ? (
                c_binop_i_406 = int_j_321 <= input_j_322
            ) : (
                ab_i_407 = abort
            ));
    flatten_fun_j_326 = fun expr_b_43 -> (
        var_j_325 = expr_b_43);
    record_j_327 = {checker = flatten_fun_j_320, generator = flatten_fun_j_324, wrapper = flatten_fun_j_326};
    proj_j_328 = record_j_327.generator;
    int_j_329 = 0;
    appl_j_330 = proj_j_328 int_j_329;
    b_b_37 = appl_j_330;
    bool_j_331 = false;
    fail_b_39 = bool_j_331;
    flatten_fun_j_340 = fun expr_b_38 -> (
        var_j_332 = expr_b_38;
        m_match_bool_j_334 = var_j_332 ~ any;
        m_match_bool_j_337 = var_j_332 ~ int;
        m_match_cond_j_338 = m_match_bool_j_337 ? (
                bool_j_339 = true
            ) : (
                m_match_cond_j_335 = m_match_bool_j_334 ? (
                        var_j_336 = fail_b_39
                    ) : (
                        void_j_333 = {}
                    )
            ));
    flatten_fun_j_342 = fun bj_null_j_6 -> (
        input_j_341 = input);
    flatten_fun_j_344 = fun expr_b_40 -> (
        var_j_343 = expr_b_40);
    record_j_345 = {checker = flatten_fun_j_340, generator = flatten_fun_j_342, wrapper = flatten_fun_j_344};
    proj_j_346 = record_j_345.generator;
    int_j_347 = 0;
    appl_j_348 = proj_j_346 int_j_347;
    a_b_36 = appl_j_348;
    var_j_349 = a_b_36;
    var_j_350 = b_b_37;
    record_j_351 = {a = var_j_349, b = var_j_350};
    record_j_352 = {};
    record_j_353 = {};
    record_j_354 = {a = record_j_352, b = record_j_353};
    record_j_355 = {bj_actual_rec = record_j_351, bj_decl_lbls = record_j_354});
flatten_fun_j_358 = fun expr_b_55 -> (
    var_j_357 = expr_b_55);
record_j_359 = {checker = flatten_fun_j_310, generator = flatten_fun_j_356, wrapper = flatten_fun_j_358};
proj_j_360 = record_j_359.checker;
appl_j_363 = create_record x_b_57;
appl_j_365 = appl_j_363 y_b_56;
appl_j_366 = proj_j_360 appl_j_365;
check_res_b_58 = appl_j_366;
if_j_374 = check_res_b_58 ? (
        var_j_368 = create_record
    ) : (
        error_var_j_369 = check_res_b_58;
        assert_pred_j_370 = error_var_j_369;
        assert_res_j_371 = assert_pred_j_370 ? (
                assert_res_true_j_372 = {}
            ) : (
                ab_j_373 = abort
            )
    );
i_result = if_j_374