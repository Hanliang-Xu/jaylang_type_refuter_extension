i_first = {};
test_j_452 = fun f -> (
    flatten_fun_j_449 = fun f_b_0 -> (
        int_j_39 = 0;
        input_j_40 = input;
        m_bl_i_859 = int_j_39 ~ int;
        m_br_i_860 = input_j_40 ~ int;
        m_b_i_861 = m_bl_i_859 and m_br_i_860;
        binop_j_41 = m_b_i_861 ? (
                c_binop_i_862 = int_j_39 < input_j_40
            ) : (
                ab_i_863 = abort
            );
        if_j_421 = binop_j_41 ? (
                flatten_fun_j_328 = fun expr_b_132 -> (
                    flatten_fun_j_81 = fun expr_b_96 -> (
                        bool_j_42 = false;
                        fail_b_91 = bool_j_42;
                        flatten_fun_j_51 = fun expr_b_90 -> (
                            var_j_43 = expr_b_90;
                            m_match_bool_j_45 = var_j_43 ~ any;
                            m_match_bool_j_48 = var_j_43 ~ int;
                            m_match_cond_j_49 = m_match_bool_j_48 ? (
                                    bool_j_50 = true
                                ) : (
                                    m_match_cond_j_46 = m_match_bool_j_45 ? (
                                            var_j_47 = fail_b_91
                                        ) : (
                                            void_j_44 = {}
                                        )
                                ));
                        flatten_fun_j_53 = fun bj_null_j_19 -> (
                            input_j_52 = input);
                        flatten_fun_j_55 = fun expr_b_92 -> (
                            var_j_54 = expr_b_92);
                        record_j_56 = {checker = flatten_fun_j_51, generator = flatten_fun_j_53, wrapper = flatten_fun_j_55};
                        proj_j_57 = record_j_56.generator;
                        int_j_58 = 0;
                        appl_j_59 = proj_j_57 int_j_58;
                        arg_assert_b_97 = appl_j_59;
                        var_j_60 = expr_b_96;
                        var_j_61 = arg_assert_b_97;
                        appl_j_62 = var_j_60 var_j_61;
                        fun_ret_b_98 = appl_j_62;
                        bool_j_63 = false;
                        fail_b_94 = bool_j_63;
                        flatten_fun_j_72 = fun expr_b_93 -> (
                            var_j_64 = expr_b_93;
                            m_match_bool_j_66 = var_j_64 ~ any;
                            m_match_bool_j_69 = var_j_64 ~ int;
                            m_match_cond_j_70 = m_match_bool_j_69 ? (
                                    bool_j_71 = true
                                ) : (
                                    m_match_cond_j_67 = m_match_bool_j_66 ? (
                                            var_j_68 = fail_b_94
                                        ) : (
                                            void_j_65 = {}
                                        )
                                ));
                        flatten_fun_j_74 = fun bj_null_j_20 -> (
                            input_j_73 = input);
                        flatten_fun_j_76 = fun expr_b_95 -> (
                            var_j_75 = expr_b_95);
                        record_j_77 = {checker = flatten_fun_j_72, generator = flatten_fun_j_74, wrapper = flatten_fun_j_76};
                        proj_j_78 = record_j_77.checker;
                        var_j_79 = fun_ret_b_98;
                        appl_j_80 = proj_j_78 var_j_79);
                    flatten_fun_j_126 = fun bj_null_j_23 -> (
                        flatten_fun_j_125 = fun arg_assume_b_88 -> (
                            bool_j_82 = false;
                            fail_b_83 = bool_j_82;
                            flatten_fun_j_91 = fun expr_b_82 -> (
                                var_j_83 = expr_b_82;
                                m_match_bool_j_85 = var_j_83 ~ any;
                                m_match_bool_j_88 = var_j_83 ~ int;
                                m_match_cond_j_89 = m_match_bool_j_88 ? (
                                        bool_j_90 = true
                                    ) : (
                                        m_match_cond_j_86 = m_match_bool_j_85 ? (
                                                var_j_87 = fail_b_83
                                            ) : (
                                                void_j_84 = {}
                                            )
                                    ));
                            flatten_fun_j_93 = fun bj_null_j_21 -> (
                                input_j_92 = input);
                            flatten_fun_j_95 = fun expr_b_84 -> (
                                var_j_94 = expr_b_84);
                            record_j_96 = {checker = flatten_fun_j_91, generator = flatten_fun_j_93, wrapper = flatten_fun_j_95};
                            proj_j_97 = record_j_96.checker;
                            var_j_98 = arg_assume_b_88;
                            appl_j_99 = proj_j_97 var_j_98;
                            if_j_124 = appl_j_99 ? (
                                    bool_j_100 = false;
                                    fail_b_86 = bool_j_100;
                                    flatten_fun_j_109 = fun expr_b_85 -> (
                                        var_j_101 = expr_b_85;
                                        m_match_bool_j_103 = var_j_101 ~ any;
                                        m_match_bool_j_106 = var_j_101 ~ int;
                                        m_match_cond_j_107 = m_match_bool_j_106 ? (
                                                bool_j_108 = true
                                            ) : (
                                                m_match_cond_j_104 = m_match_bool_j_103 ? (
                                                        var_j_105 = fail_b_86
                                                    ) : (
                                                        void_j_102 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_111 = fun bj_null_j_22 -> (
                                        input_j_110 = input);
                                    flatten_fun_j_113 = fun expr_b_87 -> (
                                        var_j_112 = expr_b_87);
                                    record_j_114 = {checker = flatten_fun_j_109, generator = flatten_fun_j_111, wrapper = flatten_fun_j_113};
                                    proj_j_115 = record_j_114.generator;
                                    int_j_116 = 0;
                                    appl_j_117 = proj_j_115 int_j_116
                                ) : (
                                    bool_j_118 = false;
                                    fail_b_89 = bool_j_118;
                                    var_j_119 = fail_b_89;
                                    assert_pred_j_120 = var_j_119;
                                    assert_res_j_121 = assert_pred_j_120 ? (
                                            assert_res_true_j_122 = {}
                                        ) : (
                                            ab_j_123 = abort
                                        )
                                )));
                    flatten_fun_j_172 = fun expr_b_105 -> (
                        flatten_fun_j_171 = fun arg_b_106 -> (
                            bool_j_127 = false;
                            fail_b_100 = bool_j_127;
                            flatten_fun_j_136 = fun expr_b_99 -> (
                                var_j_128 = expr_b_99;
                                m_match_bool_j_130 = var_j_128 ~ any;
                                m_match_bool_j_133 = var_j_128 ~ int;
                                m_match_cond_j_134 = m_match_bool_j_133 ? (
                                        bool_j_135 = true
                                    ) : (
                                        m_match_cond_j_131 = m_match_bool_j_130 ? (
                                                var_j_132 = fail_b_100
                                            ) : (
                                                void_j_129 = {}
                                            )
                                    ));
                            flatten_fun_j_138 = fun bj_null_j_24 -> (
                                input_j_137 = input);
                            flatten_fun_j_140 = fun expr_b_101 -> (
                                var_j_139 = expr_b_101);
                            record_j_141 = {checker = flatten_fun_j_136, generator = flatten_fun_j_138, wrapper = flatten_fun_j_140};
                            proj_j_142 = record_j_141.checker;
                            var_j_143 = arg_b_106;
                            m_i_864 = proj_j_142 ~ fun;
                            appl_j_144 = m_i_864 ? (
                                    c_appl_i_865 = proj_j_142 var_j_143
                                ) : (
                                    ab_i_866 = abort
                                );
                            m_i_867 = appl_j_144 ~ bool;
                            if_j_170 = m_i_867 ? (
                                    c_cond_i_874 = appl_j_144 ? (
                                            bool_j_145 = false;
                                            fail_b_103 = bool_j_145;
                                            flatten_fun_j_154 = fun expr_b_102 -> (
                                                var_j_146 = expr_b_102;
                                                m_match_bool_j_148 = var_j_146 ~ any;
                                                m_match_bool_j_151 = var_j_146 ~ int;
                                                m_match_cond_j_152 = m_match_bool_j_151 ? (
                                                        bool_j_153 = true
                                                    ) : (
                                                        m_match_cond_j_149 = m_match_bool_j_148 ? (
                                                                var_j_150 = fail_b_103
                                                            ) : (
                                                                void_j_147 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_156 = fun bj_null_j_25 -> (
                                                input_j_155 = input);
                                            flatten_fun_j_158 = fun expr_b_104 -> (
                                                var_j_157 = expr_b_104);
                                            record_j_159 = {checker = flatten_fun_j_154, generator = flatten_fun_j_156, wrapper = flatten_fun_j_158};
                                            proj_j_160 = record_j_159.wrapper;
                                            var_j_161 = expr_b_105;
                                            var_j_162 = arg_b_106;
                                            m_i_868 = var_j_161 ~ fun;
                                            appl_j_163 = m_i_868 ? (
                                                    c_appl_i_869 = var_j_161 var_j_162
                                                ) : (
                                                    ab_i_870 = abort
                                                );
                                            m_i_871 = proj_j_160 ~ fun;
                                            appl_j_164 = m_i_871 ? (
                                                    c_appl_i_872 = proj_j_160 appl_j_163
                                                ) : (
                                                    ab_i_873 = abort
                                                )
                                        ) : (
                                            bool_j_165 = false;
                                            assert_pred_j_166 = bool_j_165;
                                            assert_res_j_167 = assert_pred_j_166 ? (
                                                    assert_res_true_j_168 = 
                                                        {}
                                                ) : (
                                                    ab_j_169 = abort
                                                )
                                        )
                                ) : (
                                    ab_i_875 = abort
                                )));
                    record_j_173 = {checker = flatten_fun_j_81, generator = flatten_fun_j_126, wrapper = flatten_fun_j_172};
                    proj_j_174 = record_j_173.checker;
                    var_j_175 = expr_b_132;
                    appl_j_176 = proj_j_174 var_j_175;
                    check_1_b_133 = appl_j_176;
                    var_j_177 = check_1_b_133;
                    if_j_327 = var_j_177 ? (
                            flatten_fun_j_221 = fun expr_b_121 -> (
                                bool_j_178 = false;
                                fail_b_116 = bool_j_178;
                                flatten_fun_j_187 = fun expr_b_115 -> (
                                    var_j_179 = expr_b_115;
                                    m_match_bool_j_181 = var_j_179 ~ any;
                                    m_match_bool_j_184 = var_j_179 ~ bool;
                                    m_match_cond_j_185 = m_match_bool_j_184 ? (
                                            bool_j_186 = true
                                        ) : (
                                            m_match_cond_j_182 = m_match_bool_j_181 ? (
                                                    var_j_183 = fail_b_116
                                                ) : (
                                                    void_j_180 = {}
                                                )
                                        ));
                                flatten_fun_j_191 = fun bj_null_j_26 -> (
                                    int_j_188 = 0;
                                    input_j_189 = input;
                                    m_bl_i_876 = int_j_188 ~ int;
                                    m_br_i_877 = input_j_189 ~ int;
                                    m_b_i_878 = m_bl_i_876 and m_br_i_877;
                                    binop_j_190 = m_b_i_878 ? (
                                            c_binop_i_879 = int_j_188 <= input_j_189
                                        ) : (
                                            ab_i_880 = abort
                                        ));
                                flatten_fun_j_193 = fun expr_b_117 -> (
                                    var_j_192 = expr_b_117);
                                record_j_194 = {checker = flatten_fun_j_187, generator = flatten_fun_j_191, wrapper = flatten_fun_j_193};
                                proj_j_195 = record_j_194.generator;
                                int_j_196 = 0;
                                appl_j_197 = proj_j_195 int_j_196;
                                arg_assert_b_122 = appl_j_197;
                                var_j_198 = expr_b_121;
                                var_j_199 = arg_assert_b_122;
                                appl_j_200 = var_j_198 var_j_199;
                                fun_ret_b_123 = appl_j_200;
                                bool_j_201 = false;
                                fail_b_119 = bool_j_201;
                                flatten_fun_j_210 = fun expr_b_118 -> (
                                    var_j_202 = expr_b_118;
                                    m_match_bool_j_204 = var_j_202 ~ any;
                                    m_match_bool_j_207 = var_j_202 ~ bool;
                                    m_match_cond_j_208 = m_match_bool_j_207 ? (
                                            bool_j_209 = true
                                        ) : (
                                            m_match_cond_j_205 = m_match_bool_j_204 ? (
                                                    var_j_206 = fail_b_119
                                                ) : (
                                                    void_j_203 = {}
                                                )
                                        ));
                                flatten_fun_j_214 = fun bj_null_j_27 -> (
                                    int_j_211 = 0;
                                    input_j_212 = input;
                                    m_bl_i_881 = int_j_211 ~ int;
                                    m_br_i_882 = input_j_212 ~ int;
                                    m_b_i_883 = m_bl_i_881 and m_br_i_882;
                                    binop_j_213 = m_b_i_883 ? (
                                            c_binop_i_884 = int_j_211 <= input_j_212
                                        ) : (
                                            ab_i_885 = abort
                                        ));
                                flatten_fun_j_216 = fun expr_b_120 -> (
                                    var_j_215 = expr_b_120);
                                record_j_217 = {checker = flatten_fun_j_210, generator = flatten_fun_j_214, wrapper = flatten_fun_j_216};
                                proj_j_218 = record_j_217.checker;
                                var_j_219 = fun_ret_b_123;
                                appl_j_220 = proj_j_218 var_j_219);
                            flatten_fun_j_270 = fun bj_null_j_30 -> (
                                flatten_fun_j_269 = fun arg_assume_b_113 -> (
                                    bool_j_222 = false;
                                    fail_b_108 = bool_j_222;
                                    flatten_fun_j_231 = fun expr_b_107 -> (
                                        var_j_223 = expr_b_107;
                                        m_match_bool_j_225 = var_j_223 ~ any;
                                        m_match_bool_j_228 = var_j_223 ~ bool;
                                        m_match_cond_j_229 = m_match_bool_j_228 ? (
                                                bool_j_230 = true
                                            ) : (
                                                m_match_cond_j_226 = m_match_bool_j_225 ? (
                                                        var_j_227 = fail_b_108
                                                    ) : (
                                                        void_j_224 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_235 = fun bj_null_j_28 -> (
                                        int_j_232 = 0;
                                        input_j_233 = input;
                                        m_bl_i_886 = int_j_232 ~ int;
                                        m_br_i_887 = input_j_233 ~ int;
                                        m_b_i_888 = m_bl_i_886 and m_br_i_887;
                                        binop_j_234 = m_b_i_888 ? (
                                                c_binop_i_889 = int_j_232 <= input_j_233
                                            ) : (
                                                ab_i_890 = abort
                                            ));
                                    flatten_fun_j_237 = fun expr_b_109 -> (
                                        var_j_236 = expr_b_109);
                                    record_j_238 = {checker = flatten_fun_j_231, generator = flatten_fun_j_235, wrapper = flatten_fun_j_237};
                                    proj_j_239 = record_j_238.checker;
                                    var_j_240 = arg_assume_b_113;
                                    appl_j_241 = proj_j_239 var_j_240;
                                    if_j_268 = appl_j_241 ? (
                                            bool_j_242 = false;
                                            fail_b_111 = bool_j_242;
                                            flatten_fun_j_251 = fun expr_b_110 -> (
                                                var_j_243 = expr_b_110;
                                                m_match_bool_j_245 = var_j_243 ~ any;
                                                m_match_bool_j_248 = var_j_243 ~ bool;
                                                m_match_cond_j_249 = m_match_bool_j_248 ? (
                                                        bool_j_250 = true
                                                    ) : (
                                                        m_match_cond_j_246 = m_match_bool_j_245 ? (
                                                                var_j_247 = fail_b_111
                                                            ) : (
                                                                void_j_244 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_255 = fun bj_null_j_29 -> (
                                                int_j_252 = 0;
                                                input_j_253 = input;
                                                m_bl_i_891 = int_j_252 ~ int;
                                                m_br_i_892 = input_j_253 ~ int;
                                                m_b_i_893 = m_bl_i_891 and m_br_i_892;
                                                binop_j_254 = m_b_i_893 ? (
                                                        c_binop_i_894 = int_j_252 <= input_j_253
                                                    ) : (
                                                        ab_i_895 = abort
                                                    ));
                                            flatten_fun_j_257 = fun expr_b_112 -> (
                                                var_j_256 = expr_b_112);
                                            record_j_258 = {checker = flatten_fun_j_251, generator = flatten_fun_j_255, wrapper = flatten_fun_j_257};
                                            proj_j_259 = record_j_258.generator;
                                            int_j_260 = 0;
                                            appl_j_261 = proj_j_259 int_j_260
                                        ) : (
                                            bool_j_262 = false;
                                            fail_b_114 = bool_j_262;
                                            var_j_263 = fail_b_114;
                                            assert_pred_j_264 = var_j_263;
                                            assert_res_j_265 = assert_pred_j_264 ? (
                                                    assert_res_true_j_266 = 
                                                        {}
                                                ) : (
                                                    ab_j_267 = abort
                                                )
                                        )));
                            flatten_fun_j_320 = fun expr_b_130 -> (
                                flatten_fun_j_319 = fun arg_b_131 -> (
                                    bool_j_271 = false;
                                    fail_b_125 = bool_j_271;
                                    flatten_fun_j_280 = fun expr_b_124 -> (
                                        var_j_272 = expr_b_124;
                                        m_match_bool_j_274 = var_j_272 ~ any;
                                        m_match_bool_j_277 = var_j_272 ~ bool;
                                        m_match_cond_j_278 = m_match_bool_j_277 ? (
                                                bool_j_279 = true
                                            ) : (
                                                m_match_cond_j_275 = m_match_bool_j_274 ? (
                                                        var_j_276 = fail_b_125
                                                    ) : (
                                                        void_j_273 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_284 = fun bj_null_j_31 -> (
                                        int_j_281 = 0;
                                        input_j_282 = input;
                                        m_bl_i_896 = int_j_281 ~ int;
                                        m_br_i_897 = input_j_282 ~ int;
                                        m_b_i_898 = m_bl_i_896 and m_br_i_897;
                                        binop_j_283 = m_b_i_898 ? (
                                                c_binop_i_899 = int_j_281 <= input_j_282
                                            ) : (
                                                ab_i_900 = abort
                                            ));
                                    flatten_fun_j_286 = fun expr_b_126 -> (
                                        var_j_285 = expr_b_126);
                                    record_j_287 = {checker = flatten_fun_j_280, generator = flatten_fun_j_284, wrapper = flatten_fun_j_286};
                                    proj_j_288 = record_j_287.checker;
                                    var_j_289 = arg_b_131;
                                    m_i_901 = proj_j_288 ~ fun;
                                    appl_j_290 = m_i_901 ? (
                                            c_appl_i_902 = proj_j_288 var_j_289
                                        ) : (
                                            ab_i_903 = abort
                                        );
                                    m_i_904 = appl_j_290 ~ bool;
                                    if_j_318 = m_i_904 ? (
                                            c_cond_i_916 = appl_j_290 ? (
                                                    bool_j_291 = false;
                                                    fail_b_128 = bool_j_291;
                                                    flatten_fun_j_300 = fun expr_b_127 -> (
                                                        var_j_292 = expr_b_127;
                                                        m_match_bool_j_294 = var_j_292 ~ any;
                                                        m_match_bool_j_297 = var_j_292 ~ bool;
                                                        m_match_cond_j_298 = m_match_bool_j_297 ? (
                                                                bool_j_299 = true
                                                            ) : (
                                                                m_match_cond_j_295 = m_match_bool_j_294 ? (
                                                                        
                                                                    var_j_296 = fail_b_128
                                                                    ) : (
                                                                        
                                                                    void_j_293 = 
                                                                    {}
                                                                    )
                                                            ));
                                                    flatten_fun_j_304 = fun bj_null_j_32 -> (
                                                        int_j_301 = 0;
                                                        input_j_302 = input;
                                                        m_bl_i_905 = int_j_301 ~ int;
                                                        m_br_i_906 = input_j_302 ~ int;
                                                        m_b_i_907 = m_bl_i_905 and m_br_i_906;
                                                        binop_j_303 = m_b_i_907 ? (
                                                                c_binop_i_908 = int_j_301 <= input_j_302
                                                            ) : (
                                                                ab_i_909 = abort
                                                            ));
                                                    flatten_fun_j_306 = fun expr_b_129 -> (
                                                        var_j_305 = expr_b_129);
                                                    record_j_307 = {checker = flatten_fun_j_300, generator = flatten_fun_j_304, wrapper = flatten_fun_j_306};
                                                    proj_j_308 = record_j_307.wrapper;
                                                    var_j_309 = expr_b_130;
                                                    var_j_310 = arg_b_131;
                                                    m_i_910 = var_j_309 ~ fun;
                                                    appl_j_311 = m_i_910 ? (
                                                            c_appl_i_911 = var_j_309 var_j_310
                                                        ) : (
                                                            ab_i_912 = abort
                                                        );
                                                    m_i_913 = proj_j_308 ~ fun;
                                                    appl_j_312 = m_i_913 ? (
                                                            c_appl_i_914 = proj_j_308 appl_j_311
                                                        ) : (
                                                            ab_i_915 = abort
                                                        )
                                                ) : (
                                                    bool_j_313 = false;
                                                    assert_pred_j_314 = bool_j_313;
                                                    assert_res_j_315 = assert_pred_j_314 ? (
                                                            assert_res_true_j_316 = 
                                                                {}
                                                        ) : (
                                                            ab_j_317 = abort
                                                        )
                                                )
                                        ) : (
                                            ab_i_917 = abort
                                        )));
                            record_j_321 = {checker = flatten_fun_j_221, generator = flatten_fun_j_270, wrapper = flatten_fun_j_320};
                            proj_j_322 = record_j_321.checker;
                            var_j_323 = expr_b_132;
                            appl_j_324 = proj_j_322 var_j_323;
                            check_2_b_134 = appl_j_324;
                            var_j_325 = check_2_b_134
                        ) : (
                            var_j_326 = check_1_b_133
                        ));
                flatten_fun_j_413 = fun bj_null_j_37 -> (
                    flatten_fun_j_412 = fun arg_b_69 -> (
                        bool_j_329 = false;
                        fail_b_77 = bool_j_329;
                        flatten_fun_j_338 = fun expr_b_76 -> (
                            var_j_330 = expr_b_76;
                            m_match_bool_j_332 = var_j_330 ~ any;
                            m_match_bool_j_335 = var_j_330 ~ int;
                            m_match_cond_j_336 = m_match_bool_j_335 ? (
                                    bool_j_337 = true
                                ) : (
                                    m_match_cond_j_333 = m_match_bool_j_332 ? (
                                            var_j_334 = fail_b_77
                                        ) : (
                                            void_j_331 = {}
                                        )
                                ));
                        flatten_fun_j_340 = fun bj_null_j_33 -> (
                            input_j_339 = input);
                        flatten_fun_j_342 = fun expr_b_78 -> (
                            var_j_341 = expr_b_78);
                        record_j_343 = {checker = flatten_fun_j_338, generator = flatten_fun_j_340, wrapper = flatten_fun_j_342};
                        proj_j_344 = record_j_343.checker;
                        var_j_345 = arg_b_69;
                        appl_j_346 = proj_j_344 var_j_345;
                        if_j_411 = appl_j_346 ? (
                                bool_j_347 = false;
                                fail_b_80 = bool_j_347;
                                flatten_fun_j_356 = fun expr_b_79 -> (
                                    var_j_348 = expr_b_79;
                                    m_match_bool_j_350 = var_j_348 ~ any;
                                    m_match_bool_j_353 = var_j_348 ~ int;
                                    m_match_cond_j_354 = m_match_bool_j_353 ? (
                                            bool_j_355 = true
                                        ) : (
                                            m_match_cond_j_351 = m_match_bool_j_350 ? (
                                                    var_j_352 = fail_b_80
                                                ) : (
                                                    void_j_349 = {}
                                                )
                                        ));
                                flatten_fun_j_358 = fun bj_null_j_34 -> (
                                    input_j_357 = input);
                                flatten_fun_j_360 = fun expr_b_81 -> (
                                    var_j_359 = expr_b_81);
                                record_j_361 = {checker = flatten_fun_j_356, generator = flatten_fun_j_358, wrapper = flatten_fun_j_360};
                                proj_j_362 = record_j_361.generator;
                                int_j_363 = 0;
                                appl_j_364 = proj_j_362 int_j_363
                            ) : (
                                bool_j_365 = false;
                                fail_b_71 = bool_j_365;
                                flatten_fun_j_374 = fun expr_b_70 -> (
                                    var_j_366 = expr_b_70;
                                    m_match_bool_j_368 = var_j_366 ~ any;
                                    m_match_bool_j_371 = var_j_366 ~ bool;
                                    m_match_cond_j_372 = m_match_bool_j_371 ? (
                                            bool_j_373 = true
                                        ) : (
                                            m_match_cond_j_369 = m_match_bool_j_368 ? (
                                                    var_j_370 = fail_b_71
                                                ) : (
                                                    void_j_367 = {}
                                                )
                                        ));
                                flatten_fun_j_378 = fun bj_null_j_35 -> (
                                    int_j_375 = 0;
                                    input_j_376 = input;
                                    m_bl_i_918 = int_j_375 ~ int;
                                    m_br_i_919 = input_j_376 ~ int;
                                    m_b_i_920 = m_bl_i_918 and m_br_i_919;
                                    binop_j_377 = m_b_i_920 ? (
                                            c_binop_i_921 = int_j_375 <= input_j_376
                                        ) : (
                                            ab_i_922 = abort
                                        ));
                                flatten_fun_j_380 = fun expr_b_72 -> (
                                    var_j_379 = expr_b_72);
                                record_j_381 = {checker = flatten_fun_j_374, generator = flatten_fun_j_378, wrapper = flatten_fun_j_380};
                                proj_j_382 = record_j_381.checker;
                                var_j_383 = arg_b_69;
                                appl_j_384 = proj_j_382 var_j_383;
                                if_j_410 = appl_j_384 ? (
                                        bool_j_385 = false;
                                        fail_b_74 = bool_j_385;
                                        flatten_fun_j_394 = fun expr_b_73 -> (
                                            var_j_386 = expr_b_73;
                                            m_match_bool_j_388 = var_j_386 ~ any;
                                            m_match_bool_j_391 = var_j_386 ~ bool;
                                            m_match_cond_j_392 = m_match_bool_j_391 ? (
                                                    bool_j_393 = true
                                                ) : (
                                                    m_match_cond_j_389 = m_match_bool_j_388 ? (
                                                            var_j_390 = fail_b_74
                                                        ) : (
                                                            void_j_387 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_398 = fun bj_null_j_36 -> (
                                            int_j_395 = 0;
                                            input_j_396 = input;
                                            m_bl_i_923 = int_j_395 ~ int;
                                            m_br_i_924 = input_j_396 ~ int;
                                            m_b_i_925 = m_bl_i_923 and m_br_i_924;
                                            binop_j_397 = m_b_i_925 ? (
                                                    c_binop_i_926 = int_j_395 <= input_j_396
                                                ) : (
                                                    ab_i_927 = abort
                                                ));
                                        flatten_fun_j_400 = fun expr_b_75 -> (
                                            var_j_399 = expr_b_75);
                                        record_j_401 = {checker = flatten_fun_j_394, generator = flatten_fun_j_398, wrapper = flatten_fun_j_400};
                                        proj_j_402 = record_j_401.generator;
                                        int_j_403 = 0;
                                        appl_j_404 = proj_j_402 int_j_403
                                    ) : (
                                        bool_j_405 = false;
                                        assert_pred_j_406 = bool_j_405;
                                        assert_res_j_407 = assert_pred_j_406 ? (
                                                assert_res_true_j_408 = 
                                                    {}
                                            ) : (
                                                ab_j_409 = abort
                                            )
                                    )
                            )));
                flatten_fun_j_415 = fun expr_b_135 -> (
                    var_j_414 = expr_b_135);
                record_j_416 = {checker = flatten_fun_j_328, generator = flatten_fun_j_413, wrapper = flatten_fun_j_415};
                proj_j_417 = record_j_416.checker;
                var_j_418 = f_b_0;
                m_i_928 = proj_j_417 ~ fun;
                appl_j_419 = m_i_928 ? (
                        c_appl_i_929 = proj_j_417 var_j_418
                    ) : (
                        ab_i_930 = abort
                    )
            ) : (
                bool_j_420 = true
            );
        arg_check_b_1 = if_j_421;
        var_j_422 = arg_check_b_1;
        if_j_448 = var_j_422 ? (
                bool_j_423 = false;
                fail_b_137 = bool_j_423;
                flatten_fun_j_432 = fun expr_b_136 -> (
                    var_j_424 = expr_b_136;
                    m_match_bool_j_426 = var_j_424 ~ any;
                    m_match_bool_j_429 = var_j_424 ~ int;
                    m_match_cond_j_430 = m_match_bool_j_429 ? (
                            bool_j_431 = true
                        ) : (
                            m_match_cond_j_427 = m_match_bool_j_426 ? (
                                    var_j_428 = fail_b_137
                                ) : (
                                    void_j_425 = {}
                                )
                        ));
                flatten_fun_j_434 = fun bj_null_j_38 -> (
                    input_j_433 = input);
                flatten_fun_j_436 = fun expr_b_138 -> (
                    var_j_435 = expr_b_138);
                record_j_437 = {checker = flatten_fun_j_432, generator = flatten_fun_j_434, wrapper = flatten_fun_j_436};
                proj_j_438 = record_j_437.wrapper;
                var_j_439 = f;
                bool_j_440 = true;
                m_i_931 = var_j_439 ~ fun;
                appl_j_441 = m_i_931 ? (
                        c_appl_i_932 = var_j_439 bool_j_440
                    ) : (
                        ab_i_933 = abort
                    );
                m_i_934 = proj_j_438 ~ fun;
                appl_j_442 = m_i_934 ? (
                        c_appl_i_935 = proj_j_438 appl_j_441
                    ) : (
                        ab_i_936 = abort
                    )
            ) : (
                var_j_443 = arg_check_b_1;
                assert_pred_j_444 = var_j_443;
                assert_res_j_445 = assert_pred_j_444 ? (
                        assert_res_true_j_446 = {}
                    ) : (
                        ab_j_447 = abort
                    )
            ));
    var_j_450 = f;
    appl_j_451 = flatten_fun_j_449 var_j_450);
test = test_j_452;
flatten_fun_j_739 = fun expr_b_65 -> (
    flatten_fun_j_492 = fun expr_b_29 -> (
        bool_j_453 = false;
        fail_b_24 = bool_j_453;
        flatten_fun_j_462 = fun expr_b_23 -> (
            var_j_454 = expr_b_23;
            m_match_bool_j_456 = var_j_454 ~ any;
            m_match_bool_j_459 = var_j_454 ~ int;
            m_match_cond_j_460 = m_match_bool_j_459 ? (
                    bool_j_461 = true
                ) : (
                    m_match_cond_j_457 = m_match_bool_j_456 ? (
                            var_j_458 = fail_b_24
                        ) : (
                            void_j_455 = {}
                        )
                ));
        flatten_fun_j_464 = fun bj_null -> (
            input_j_463 = input);
        flatten_fun_j_466 = fun expr_b_25 -> (
            var_j_465 = expr_b_25);
        record_j_467 = {checker = flatten_fun_j_462, generator = flatten_fun_j_464, wrapper = flatten_fun_j_466};
        proj_j_468 = record_j_467.generator;
        int_j_469 = 0;
        appl_j_470 = proj_j_468 int_j_469;
        arg_assert_b_30 = appl_j_470;
        var_j_471 = expr_b_29;
        var_j_472 = arg_assert_b_30;
        appl_j_473 = var_j_471 var_j_472;
        fun_ret_b_31 = appl_j_473;
        bool_j_474 = false;
        fail_b_27 = bool_j_474;
        flatten_fun_j_483 = fun expr_b_26 -> (
            var_j_475 = expr_b_26;
            m_match_bool_j_477 = var_j_475 ~ any;
            m_match_bool_j_480 = var_j_475 ~ int;
            m_match_cond_j_481 = m_match_bool_j_480 ? (
                    bool_j_482 = true
                ) : (
                    m_match_cond_j_478 = m_match_bool_j_477 ? (
                            var_j_479 = fail_b_27
                        ) : (
                            void_j_476 = {}
                        )
                ));
        flatten_fun_j_485 = fun bj_null_j_0 -> (
            input_j_484 = input);
        flatten_fun_j_487 = fun expr_b_28 -> (
            var_j_486 = expr_b_28);
        record_j_488 = {checker = flatten_fun_j_483, generator = flatten_fun_j_485, wrapper = flatten_fun_j_487};
        proj_j_489 = record_j_488.checker;
        var_j_490 = fun_ret_b_31;
        appl_j_491 = proj_j_489 var_j_490);
    flatten_fun_j_537 = fun bj_null_j_3 -> (
        flatten_fun_j_536 = fun arg_assume_b_21 -> (
            bool_j_493 = false;
            fail_b_16 = bool_j_493;
            flatten_fun_j_502 = fun expr_b_15 -> (
                var_j_494 = expr_b_15;
                m_match_bool_j_496 = var_j_494 ~ any;
                m_match_bool_j_499 = var_j_494 ~ int;
                m_match_cond_j_500 = m_match_bool_j_499 ? (
                        bool_j_501 = true
                    ) : (
                        m_match_cond_j_497 = m_match_bool_j_496 ? (
                                var_j_498 = fail_b_16
                            ) : (
                                void_j_495 = {}
                            )
                    ));
            flatten_fun_j_504 = fun bj_null_j_1 -> (
                input_j_503 = input);
            flatten_fun_j_506 = fun expr_b_17 -> (
                var_j_505 = expr_b_17);
            record_j_507 = {checker = flatten_fun_j_502, generator = flatten_fun_j_504, wrapper = flatten_fun_j_506};
            proj_j_508 = record_j_507.checker;
            var_j_509 = arg_assume_b_21;
            appl_j_510 = proj_j_508 var_j_509;
            if_j_535 = appl_j_510 ? (
                    bool_j_511 = false;
                    fail_b_19 = bool_j_511;
                    flatten_fun_j_520 = fun expr_b_18 -> (
                        var_j_512 = expr_b_18;
                        m_match_bool_j_514 = var_j_512 ~ any;
                        m_match_bool_j_517 = var_j_512 ~ int;
                        m_match_cond_j_518 = m_match_bool_j_517 ? (
                                bool_j_519 = true
                            ) : (
                                m_match_cond_j_515 = m_match_bool_j_514 ? (
                                        var_j_516 = fail_b_19
                                    ) : (
                                        void_j_513 = {}
                                    )
                            ));
                    flatten_fun_j_522 = fun bj_null_j_2 -> (
                        input_j_521 = input);
                    flatten_fun_j_524 = fun expr_b_20 -> (
                        var_j_523 = expr_b_20);
                    record_j_525 = {checker = flatten_fun_j_520, generator = flatten_fun_j_522, wrapper = flatten_fun_j_524};
                    proj_j_526 = record_j_525.generator;
                    int_j_527 = 0;
                    appl_j_528 = proj_j_526 int_j_527
                ) : (
                    bool_j_529 = false;
                    fail_b_22 = bool_j_529;
                    var_j_530 = fail_b_22;
                    assert_pred_j_531 = var_j_530;
                    assert_res_j_532 = assert_pred_j_531 ? (
                            assert_res_true_j_533 = {}
                        ) : (
                            ab_j_534 = abort
                        )
                )));
    flatten_fun_j_583 = fun expr_b_38 -> (
        flatten_fun_j_582 = fun arg_b_39 -> (
            bool_j_538 = false;
            fail_b_33 = bool_j_538;
            flatten_fun_j_547 = fun expr_b_32 -> (
                var_j_539 = expr_b_32;
                m_match_bool_j_541 = var_j_539 ~ any;
                m_match_bool_j_544 = var_j_539 ~ int;
                m_match_cond_j_545 = m_match_bool_j_544 ? (
                        bool_j_546 = true
                    ) : (
                        m_match_cond_j_542 = m_match_bool_j_541 ? (
                                var_j_543 = fail_b_33
                            ) : (
                                void_j_540 = {}
                            )
                    ));
            flatten_fun_j_549 = fun bj_null_j_4 -> (
                input_j_548 = input);
            flatten_fun_j_551 = fun expr_b_34 -> (
                var_j_550 = expr_b_34);
            record_j_552 = {checker = flatten_fun_j_547, generator = flatten_fun_j_549, wrapper = flatten_fun_j_551};
            proj_j_553 = record_j_552.checker;
            var_j_554 = arg_b_39;
            m_i_937 = proj_j_553 ~ fun;
            appl_j_555 = m_i_937 ? (
                    c_appl_i_938 = proj_j_553 var_j_554
                ) : (
                    ab_i_939 = abort
                );
            m_i_940 = appl_j_555 ~ bool;
            if_j_581 = m_i_940 ? (
                    c_cond_i_947 = appl_j_555 ? (
                            bool_j_556 = false;
                            fail_b_36 = bool_j_556;
                            flatten_fun_j_565 = fun expr_b_35 -> (
                                var_j_557 = expr_b_35;
                                m_match_bool_j_559 = var_j_557 ~ any;
                                m_match_bool_j_562 = var_j_557 ~ int;
                                m_match_cond_j_563 = m_match_bool_j_562 ? (
                                        bool_j_564 = true
                                    ) : (
                                        m_match_cond_j_560 = m_match_bool_j_559 ? (
                                                var_j_561 = fail_b_36
                                            ) : (
                                                void_j_558 = {}
                                            )
                                    ));
                            flatten_fun_j_567 = fun bj_null_j_5 -> (
                                input_j_566 = input);
                            flatten_fun_j_569 = fun expr_b_37 -> (
                                var_j_568 = expr_b_37);
                            record_j_570 = {checker = flatten_fun_j_565, generator = flatten_fun_j_567, wrapper = flatten_fun_j_569};
                            proj_j_571 = record_j_570.wrapper;
                            var_j_572 = expr_b_38;
                            var_j_573 = arg_b_39;
                            m_i_941 = var_j_572 ~ fun;
                            appl_j_574 = m_i_941 ? (
                                    c_appl_i_942 = var_j_572 var_j_573
                                ) : (
                                    ab_i_943 = abort
                                );
                            m_i_944 = proj_j_571 ~ fun;
                            appl_j_575 = m_i_944 ? (
                                    c_appl_i_945 = proj_j_571 appl_j_574
                                ) : (
                                    ab_i_946 = abort
                                )
                        ) : (
                            bool_j_576 = false;
                            assert_pred_j_577 = bool_j_576;
                            assert_res_j_578 = assert_pred_j_577 ? (
                                    assert_res_true_j_579 = {}
                                ) : (
                                    ab_j_580 = abort
                                )
                        )
                ) : (
                    ab_i_948 = abort
                )));
    record_j_584 = {checker = flatten_fun_j_492, generator = flatten_fun_j_537, wrapper = flatten_fun_j_583};
    proj_j_585 = record_j_584.checker;
    var_j_586 = expr_b_65;
    appl_j_587 = proj_j_585 var_j_586;
    check_1_b_66 = appl_j_587;
    var_j_588 = check_1_b_66;
    if_j_738 = var_j_588 ? (
            flatten_fun_j_632 = fun expr_b_54 -> (
                bool_j_589 = false;
                fail_b_49 = bool_j_589;
                flatten_fun_j_598 = fun expr_b_48 -> (
                    var_j_590 = expr_b_48;
                    m_match_bool_j_592 = var_j_590 ~ any;
                    m_match_bool_j_595 = var_j_590 ~ bool;
                    m_match_cond_j_596 = m_match_bool_j_595 ? (
                            bool_j_597 = true
                        ) : (
                            m_match_cond_j_593 = m_match_bool_j_592 ? (
                                    var_j_594 = fail_b_49
                                ) : (
                                    void_j_591 = {}
                                )
                        ));
                flatten_fun_j_602 = fun bj_null_j_6 -> (
                    int_j_599 = 0;
                    input_j_600 = input;
                    m_bl_i_949 = int_j_599 ~ int;
                    m_br_i_950 = input_j_600 ~ int;
                    m_b_i_951 = m_bl_i_949 and m_br_i_950;
                    binop_j_601 = m_b_i_951 ? (
                            c_binop_i_952 = int_j_599 <= input_j_600
                        ) : (
                            ab_i_953 = abort
                        ));
                flatten_fun_j_604 = fun expr_b_50 -> (
                    var_j_603 = expr_b_50);
                record_j_605 = {checker = flatten_fun_j_598, generator = flatten_fun_j_602, wrapper = flatten_fun_j_604};
                proj_j_606 = record_j_605.generator;
                int_j_607 = 0;
                appl_j_608 = proj_j_606 int_j_607;
                arg_assert_b_55 = appl_j_608;
                var_j_609 = expr_b_54;
                var_j_610 = arg_assert_b_55;
                appl_j_611 = var_j_609 var_j_610;
                fun_ret_b_56 = appl_j_611;
                bool_j_612 = false;
                fail_b_52 = bool_j_612;
                flatten_fun_j_621 = fun expr_b_51 -> (
                    var_j_613 = expr_b_51;
                    m_match_bool_j_615 = var_j_613 ~ any;
                    m_match_bool_j_618 = var_j_613 ~ bool;
                    m_match_cond_j_619 = m_match_bool_j_618 ? (
                            bool_j_620 = true
                        ) : (
                            m_match_cond_j_616 = m_match_bool_j_615 ? (
                                    var_j_617 = fail_b_52
                                ) : (
                                    void_j_614 = {}
                                )
                        ));
                flatten_fun_j_625 = fun bj_null_j_7 -> (
                    int_j_622 = 0;
                    input_j_623 = input;
                    m_bl_i_954 = int_j_622 ~ int;
                    m_br_i_955 = input_j_623 ~ int;
                    m_b_i_956 = m_bl_i_954 and m_br_i_955;
                    binop_j_624 = m_b_i_956 ? (
                            c_binop_i_957 = int_j_622 <= input_j_623
                        ) : (
                            ab_i_958 = abort
                        ));
                flatten_fun_j_627 = fun expr_b_53 -> (
                    var_j_626 = expr_b_53);
                record_j_628 = {checker = flatten_fun_j_621, generator = flatten_fun_j_625, wrapper = flatten_fun_j_627};
                proj_j_629 = record_j_628.checker;
                var_j_630 = fun_ret_b_56;
                appl_j_631 = proj_j_629 var_j_630);
            flatten_fun_j_681 = fun bj_null_j_10 -> (
                flatten_fun_j_680 = fun arg_assume_b_46 -> (
                    bool_j_633 = false;
                    fail_b_41 = bool_j_633;
                    flatten_fun_j_642 = fun expr_b_40 -> (
                        var_j_634 = expr_b_40;
                        m_match_bool_j_636 = var_j_634 ~ any;
                        m_match_bool_j_639 = var_j_634 ~ bool;
                        m_match_cond_j_640 = m_match_bool_j_639 ? (
                                bool_j_641 = true
                            ) : (
                                m_match_cond_j_637 = m_match_bool_j_636 ? (
                                        var_j_638 = fail_b_41
                                    ) : (
                                        void_j_635 = {}
                                    )
                            ));
                    flatten_fun_j_646 = fun bj_null_j_8 -> (
                        int_j_643 = 0;
                        input_j_644 = input;
                        m_bl_i_959 = int_j_643 ~ int;
                        m_br_i_960 = input_j_644 ~ int;
                        m_b_i_961 = m_bl_i_959 and m_br_i_960;
                        binop_j_645 = m_b_i_961 ? (
                                c_binop_i_962 = int_j_643 <= input_j_644
                            ) : (
                                ab_i_963 = abort
                            ));
                    flatten_fun_j_648 = fun expr_b_42 -> (
                        var_j_647 = expr_b_42);
                    record_j_649 = {checker = flatten_fun_j_642, generator = flatten_fun_j_646, wrapper = flatten_fun_j_648};
                    proj_j_650 = record_j_649.checker;
                    var_j_651 = arg_assume_b_46;
                    appl_j_652 = proj_j_650 var_j_651;
                    if_j_679 = appl_j_652 ? (
                            bool_j_653 = false;
                            fail_b_44 = bool_j_653;
                            flatten_fun_j_662 = fun expr_b_43 -> (
                                var_j_654 = expr_b_43;
                                m_match_bool_j_656 = var_j_654 ~ any;
                                m_match_bool_j_659 = var_j_654 ~ bool;
                                m_match_cond_j_660 = m_match_bool_j_659 ? (
                                        bool_j_661 = true
                                    ) : (
                                        m_match_cond_j_657 = m_match_bool_j_656 ? (
                                                var_j_658 = fail_b_44
                                            ) : (
                                                void_j_655 = {}
                                            )
                                    ));
                            flatten_fun_j_666 = fun bj_null_j_9 -> (
                                int_j_663 = 0;
                                input_j_664 = input;
                                m_bl_i_964 = int_j_663 ~ int;
                                m_br_i_965 = input_j_664 ~ int;
                                m_b_i_966 = m_bl_i_964 and m_br_i_965;
                                binop_j_665 = m_b_i_966 ? (
                                        c_binop_i_967 = int_j_663 <= input_j_664
                                    ) : (
                                        ab_i_968 = abort
                                    ));
                            flatten_fun_j_668 = fun expr_b_45 -> (
                                var_j_667 = expr_b_45);
                            record_j_669 = {checker = flatten_fun_j_662, generator = flatten_fun_j_666, wrapper = flatten_fun_j_668};
                            proj_j_670 = record_j_669.generator;
                            int_j_671 = 0;
                            appl_j_672 = proj_j_670 int_j_671
                        ) : (
                            bool_j_673 = false;
                            fail_b_47 = bool_j_673;
                            var_j_674 = fail_b_47;
                            assert_pred_j_675 = var_j_674;
                            assert_res_j_676 = assert_pred_j_675 ? (
                                    assert_res_true_j_677 = {}
                                ) : (
                                    ab_j_678 = abort
                                )
                        )));
            flatten_fun_j_731 = fun expr_b_63 -> (
                flatten_fun_j_730 = fun arg_b_64 -> (
                    bool_j_682 = false;
                    fail_b_58 = bool_j_682;
                    flatten_fun_j_691 = fun expr_b_57 -> (
                        var_j_683 = expr_b_57;
                        m_match_bool_j_685 = var_j_683 ~ any;
                        m_match_bool_j_688 = var_j_683 ~ bool;
                        m_match_cond_j_689 = m_match_bool_j_688 ? (
                                bool_j_690 = true
                            ) : (
                                m_match_cond_j_686 = m_match_bool_j_685 ? (
                                        var_j_687 = fail_b_58
                                    ) : (
                                        void_j_684 = {}
                                    )
                            ));
                    flatten_fun_j_695 = fun bj_null_j_11 -> (
                        int_j_692 = 0;
                        input_j_693 = input;
                        m_bl_i_969 = int_j_692 ~ int;
                        m_br_i_970 = input_j_693 ~ int;
                        m_b_i_971 = m_bl_i_969 and m_br_i_970;
                        binop_j_694 = m_b_i_971 ? (
                                c_binop_i_972 = int_j_692 <= input_j_693
                            ) : (
                                ab_i_973 = abort
                            ));
                    flatten_fun_j_697 = fun expr_b_59 -> (
                        var_j_696 = expr_b_59);
                    record_j_698 = {checker = flatten_fun_j_691, generator = flatten_fun_j_695, wrapper = flatten_fun_j_697};
                    proj_j_699 = record_j_698.checker;
                    var_j_700 = arg_b_64;
                    m_i_974 = proj_j_699 ~ fun;
                    appl_j_701 = m_i_974 ? (
                            c_appl_i_975 = proj_j_699 var_j_700
                        ) : (
                            ab_i_976 = abort
                        );
                    m_i_977 = appl_j_701 ~ bool;
                    if_j_729 = m_i_977 ? (
                            c_cond_i_989 = appl_j_701 ? (
                                    bool_j_702 = false;
                                    fail_b_61 = bool_j_702;
                                    flatten_fun_j_711 = fun expr_b_60 -> (
                                        var_j_703 = expr_b_60;
                                        m_match_bool_j_705 = var_j_703 ~ any;
                                        m_match_bool_j_708 = var_j_703 ~ bool;
                                        m_match_cond_j_709 = m_match_bool_j_708 ? (
                                                bool_j_710 = true
                                            ) : (
                                                m_match_cond_j_706 = m_match_bool_j_705 ? (
                                                        var_j_707 = fail_b_61
                                                    ) : (
                                                        void_j_704 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_715 = fun bj_null_j_12 -> (
                                        int_j_712 = 0;
                                        input_j_713 = input;
                                        m_bl_i_978 = int_j_712 ~ int;
                                        m_br_i_979 = input_j_713 ~ int;
                                        m_b_i_980 = m_bl_i_978 and m_br_i_979;
                                        binop_j_714 = m_b_i_980 ? (
                                                c_binop_i_981 = int_j_712 <= input_j_713
                                            ) : (
                                                ab_i_982 = abort
                                            ));
                                    flatten_fun_j_717 = fun expr_b_62 -> (
                                        var_j_716 = expr_b_62);
                                    record_j_718 = {checker = flatten_fun_j_711, generator = flatten_fun_j_715, wrapper = flatten_fun_j_717};
                                    proj_j_719 = record_j_718.wrapper;
                                    var_j_720 = expr_b_63;
                                    var_j_721 = arg_b_64;
                                    m_i_983 = var_j_720 ~ fun;
                                    appl_j_722 = m_i_983 ? (
                                            c_appl_i_984 = var_j_720 var_j_721
                                        ) : (
                                            ab_i_985 = abort
                                        );
                                    m_i_986 = proj_j_719 ~ fun;
                                    appl_j_723 = m_i_986 ? (
                                            c_appl_i_987 = proj_j_719 appl_j_722
                                        ) : (
                                            ab_i_988 = abort
                                        )
                                ) : (
                                    bool_j_724 = false;
                                    assert_pred_j_725 = bool_j_724;
                                    assert_res_j_726 = assert_pred_j_725 ? (
                                            assert_res_true_j_727 = {}
                                        ) : (
                                            ab_j_728 = abort
                                        )
                                )
                        ) : (
                            ab_i_990 = abort
                        )));
            record_j_732 = {checker = flatten_fun_j_632, generator = flatten_fun_j_681, wrapper = flatten_fun_j_731};
            proj_j_733 = record_j_732.checker;
            var_j_734 = expr_b_65;
            appl_j_735 = proj_j_733 var_j_734;
            check_2_b_67 = appl_j_735;
            var_j_736 = check_2_b_67
        ) : (
            var_j_737 = check_1_b_66
        ));
flatten_fun_j_824 = fun bj_null_j_17 -> (
    flatten_fun_j_823 = fun arg_b_2 -> (
        bool_j_740 = false;
        fail_b_10 = bool_j_740;
        flatten_fun_j_749 = fun expr_b_9 -> (
            var_j_741 = expr_b_9;
            m_match_bool_j_743 = var_j_741 ~ any;
            m_match_bool_j_746 = var_j_741 ~ int;
            m_match_cond_j_747 = m_match_bool_j_746 ? (
                    bool_j_748 = true
                ) : (
                    m_match_cond_j_744 = m_match_bool_j_743 ? (
                            var_j_745 = fail_b_10
                        ) : (
                            void_j_742 = {}
                        )
                ));
        flatten_fun_j_751 = fun bj_null_j_13 -> (
            input_j_750 = input);
        flatten_fun_j_753 = fun expr_b_11 -> (
            var_j_752 = expr_b_11);
        record_j_754 = {checker = flatten_fun_j_749, generator = flatten_fun_j_751, wrapper = flatten_fun_j_753};
        proj_j_755 = record_j_754.checker;
        var_j_756 = arg_b_2;
        appl_j_757 = proj_j_755 var_j_756;
        if_j_822 = appl_j_757 ? (
                bool_j_758 = false;
                fail_b_13 = bool_j_758;
                flatten_fun_j_767 = fun expr_b_12 -> (
                    var_j_759 = expr_b_12;
                    m_match_bool_j_761 = var_j_759 ~ any;
                    m_match_bool_j_764 = var_j_759 ~ int;
                    m_match_cond_j_765 = m_match_bool_j_764 ? (
                            bool_j_766 = true
                        ) : (
                            m_match_cond_j_762 = m_match_bool_j_761 ? (
                                    var_j_763 = fail_b_13
                                ) : (
                                    void_j_760 = {}
                                )
                        ));
                flatten_fun_j_769 = fun bj_null_j_14 -> (
                    input_j_768 = input);
                flatten_fun_j_771 = fun expr_b_14 -> (
                    var_j_770 = expr_b_14);
                record_j_772 = {checker = flatten_fun_j_767, generator = flatten_fun_j_769, wrapper = flatten_fun_j_771};
                proj_j_773 = record_j_772.generator;
                int_j_774 = 0;
                appl_j_775 = proj_j_773 int_j_774
            ) : (
                bool_j_776 = false;
                fail_b_4 = bool_j_776;
                flatten_fun_j_785 = fun expr_b_3 -> (
                    var_j_777 = expr_b_3;
                    m_match_bool_j_779 = var_j_777 ~ any;
                    m_match_bool_j_782 = var_j_777 ~ bool;
                    m_match_cond_j_783 = m_match_bool_j_782 ? (
                            bool_j_784 = true
                        ) : (
                            m_match_cond_j_780 = m_match_bool_j_779 ? (
                                    var_j_781 = fail_b_4
                                ) : (
                                    void_j_778 = {}
                                )
                        ));
                flatten_fun_j_789 = fun bj_null_j_15 -> (
                    int_j_786 = 0;
                    input_j_787 = input;
                    m_bl_i_991 = int_j_786 ~ int;
                    m_br_i_992 = input_j_787 ~ int;
                    m_b_i_993 = m_bl_i_991 and m_br_i_992;
                    binop_j_788 = m_b_i_993 ? (
                            c_binop_i_994 = int_j_786 <= input_j_787
                        ) : (
                            ab_i_995 = abort
                        ));
                flatten_fun_j_791 = fun expr_b_5 -> (
                    var_j_790 = expr_b_5);
                record_j_792 = {checker = flatten_fun_j_785, generator = flatten_fun_j_789, wrapper = flatten_fun_j_791};
                proj_j_793 = record_j_792.checker;
                var_j_794 = arg_b_2;
                appl_j_795 = proj_j_793 var_j_794;
                if_j_821 = appl_j_795 ? (
                        bool_j_796 = false;
                        fail_b_7 = bool_j_796;
                        flatten_fun_j_805 = fun expr_b_6 -> (
                            var_j_797 = expr_b_6;
                            m_match_bool_j_799 = var_j_797 ~ any;
                            m_match_bool_j_802 = var_j_797 ~ bool;
                            m_match_cond_j_803 = m_match_bool_j_802 ? (
                                    bool_j_804 = true
                                ) : (
                                    m_match_cond_j_800 = m_match_bool_j_799 ? (
                                            var_j_801 = fail_b_7
                                        ) : (
                                            void_j_798 = {}
                                        )
                                ));
                        flatten_fun_j_809 = fun bj_null_j_16 -> (
                            int_j_806 = 0;
                            input_j_807 = input;
                            m_bl_i_996 = int_j_806 ~ int;
                            m_br_i_997 = input_j_807 ~ int;
                            m_b_i_998 = m_bl_i_996 and m_br_i_997;
                            binop_j_808 = m_b_i_998 ? (
                                    c_binop_i_999 = int_j_806 <= input_j_807
                                ) : (
                                    ab_i_1000 = abort
                                ));
                        flatten_fun_j_811 = fun expr_b_8 -> (
                            var_j_810 = expr_b_8);
                        record_j_812 = {checker = flatten_fun_j_805, generator = flatten_fun_j_809, wrapper = flatten_fun_j_811};
                        proj_j_813 = record_j_812.generator;
                        int_j_814 = 0;
                        appl_j_815 = proj_j_813 int_j_814
                    ) : (
                        bool_j_816 = false;
                        assert_pred_j_817 = bool_j_816;
                        assert_res_j_818 = assert_pred_j_817 ? (
                                assert_res_true_j_819 = {}
                            ) : (
                                ab_j_820 = abort
                            )
                    )
            )));
flatten_fun_j_826 = fun expr_b_68 -> (
    var_j_825 = expr_b_68);
record_j_827 = {checker = flatten_fun_j_739, generator = flatten_fun_j_824, wrapper = flatten_fun_j_826};
proj_j_828 = record_j_827.generator;
int_j_829 = 0;
appl_j_830 = proj_j_828 int_j_829;
f_b_142 = appl_j_830;
bool_j_831 = false;
fail_b_140 = bool_j_831;
flatten_fun_j_840 = fun expr_b_139 -> (
    var_j_832 = expr_b_139;
    m_match_bool_j_834 = var_j_832 ~ any;
    m_match_bool_j_837 = var_j_832 ~ int;
    m_match_cond_j_838 = m_match_bool_j_837 ? (
            bool_j_839 = true
        ) : (
            m_match_cond_j_835 = m_match_bool_j_834 ? (
                    var_j_836 = fail_b_140
                ) : (
                    void_j_833 = {}
                )
        ));
flatten_fun_j_842 = fun bj_null_j_18 -> (
    input_j_841 = input);
flatten_fun_j_844 = fun expr_b_141 -> (
    var_j_843 = expr_b_141);
record_j_845 = {checker = flatten_fun_j_840, generator = flatten_fun_j_842, wrapper = flatten_fun_j_844};
proj_j_846 = record_j_845.checker;
appl_j_849 = test f_b_142;
appl_j_850 = proj_j_846 appl_j_849;
check_res_b_143 = appl_j_850;
if_j_858 = check_res_b_143 ? (
        var_j_852 = test
    ) : (
        error_var_j_853 = check_res_b_143;
        assert_pred_j_854 = error_var_j_853;
        assert_res_j_855 = assert_pred_j_854 ? (
                assert_res_true_j_856 = {}
            ) : (
                ab_j_857 = abort
            )
    );
i_result = if_j_858