i_first = {};
test_j_447 = fun f -> (
    flatten_fun_j_444 = fun f_b_0 -> (
        flatten_fun_j_325 = fun expr_b_132 -> (
            flatten_fun_j_78 = fun expr_b_96 -> (
                bool_j_39 = false;
                fail_b_91 = bool_j_39;
                flatten_fun_j_48 = fun expr_b_90 -> (
                    var_j_40 = expr_b_90;
                    m_match_bool_j_42 = var_j_40 ~ any;
                    m_match_bool_j_45 = var_j_40 ~ int;
                    m_match_cond_j_46 = m_match_bool_j_45 ? (
                            bool_j_47 = true
                        ) : (
                            m_match_cond_j_43 = m_match_bool_j_42 ? (
                                    var_j_44 = fail_b_91
                                ) : (
                                    void_j_41 = {}
                                )
                        ));
                flatten_fun_j_50 = fun bj_null_j_19 -> (
                    input_j_49 = input);
                flatten_fun_j_52 = fun expr_b_92 -> (
                    var_j_51 = expr_b_92);
                record_j_53 = {checker = flatten_fun_j_48, generator = flatten_fun_j_50, wrapper = flatten_fun_j_52};
                proj_j_54 = record_j_53.generator;
                int_j_55 = 0;
                appl_j_56 = proj_j_54 int_j_55;
                arg_assert_b_97 = appl_j_56;
                var_j_57 = expr_b_96;
                var_j_58 = arg_assert_b_97;
                appl_j_59 = var_j_57 var_j_58;
                fun_ret_b_98 = appl_j_59;
                bool_j_60 = false;
                fail_b_94 = bool_j_60;
                flatten_fun_j_69 = fun expr_b_93 -> (
                    var_j_61 = expr_b_93;
                    m_match_bool_j_63 = var_j_61 ~ any;
                    m_match_bool_j_66 = var_j_61 ~ int;
                    m_match_cond_j_67 = m_match_bool_j_66 ? (
                            bool_j_68 = true
                        ) : (
                            m_match_cond_j_64 = m_match_bool_j_63 ? (
                                    var_j_65 = fail_b_94
                                ) : (
                                    void_j_62 = {}
                                )
                        ));
                flatten_fun_j_71 = fun bj_null_j_20 -> (
                    input_j_70 = input);
                flatten_fun_j_73 = fun expr_b_95 -> (
                    var_j_72 = expr_b_95);
                record_j_74 = {checker = flatten_fun_j_69, generator = flatten_fun_j_71, wrapper = flatten_fun_j_73};
                proj_j_75 = record_j_74.checker;
                var_j_76 = fun_ret_b_98;
                appl_j_77 = proj_j_75 var_j_76);
            flatten_fun_j_123 = fun bj_null_j_23 -> (
                flatten_fun_j_122 = fun arg_assume_b_88 -> (
                    bool_j_79 = false;
                    fail_b_83 = bool_j_79;
                    flatten_fun_j_88 = fun expr_b_82 -> (
                        var_j_80 = expr_b_82;
                        m_match_bool_j_82 = var_j_80 ~ any;
                        m_match_bool_j_85 = var_j_80 ~ int;
                        m_match_cond_j_86 = m_match_bool_j_85 ? (
                                bool_j_87 = true
                            ) : (
                                m_match_cond_j_83 = m_match_bool_j_82 ? (
                                        var_j_84 = fail_b_83
                                    ) : (
                                        void_j_81 = {}
                                    )
                            ));
                    flatten_fun_j_90 = fun bj_null_j_21 -> (
                        input_j_89 = input);
                    flatten_fun_j_92 = fun expr_b_84 -> (
                        var_j_91 = expr_b_84);
                    record_j_93 = {checker = flatten_fun_j_88, generator = flatten_fun_j_90, wrapper = flatten_fun_j_92};
                    proj_j_94 = record_j_93.checker;
                    var_j_95 = arg_assume_b_88;
                    appl_j_96 = proj_j_94 var_j_95;
                    if_j_121 = appl_j_96 ? (
                            bool_j_97 = false;
                            fail_b_86 = bool_j_97;
                            flatten_fun_j_106 = fun expr_b_85 -> (
                                var_j_98 = expr_b_85;
                                m_match_bool_j_100 = var_j_98 ~ any;
                                m_match_bool_j_103 = var_j_98 ~ int;
                                m_match_cond_j_104 = m_match_bool_j_103 ? (
                                        bool_j_105 = true
                                    ) : (
                                        m_match_cond_j_101 = m_match_bool_j_100 ? (
                                                var_j_102 = fail_b_86
                                            ) : (
                                                void_j_99 = {}
                                            )
                                    ));
                            flatten_fun_j_108 = fun bj_null_j_22 -> (
                                input_j_107 = input);
                            flatten_fun_j_110 = fun expr_b_87 -> (
                                var_j_109 = expr_b_87);
                            record_j_111 = {checker = flatten_fun_j_106, generator = flatten_fun_j_108, wrapper = flatten_fun_j_110};
                            proj_j_112 = record_j_111.generator;
                            int_j_113 = 0;
                            appl_j_114 = proj_j_112 int_j_113
                        ) : (
                            bool_j_115 = false;
                            fail_b_89 = bool_j_115;
                            var_j_116 = fail_b_89;
                            assert_pred_j_117 = var_j_116;
                            assert_res_j_118 = assert_pred_j_117 ? (
                                    assert_res_true_j_119 = {}
                                ) : (
                                    ab_j_120 = abort
                                )
                        )));
            flatten_fun_j_169 = fun expr_b_105 -> (
                flatten_fun_j_168 = fun arg_b_106 -> (
                    bool_j_124 = false;
                    fail_b_100 = bool_j_124;
                    flatten_fun_j_133 = fun expr_b_99 -> (
                        var_j_125 = expr_b_99;
                        m_match_bool_j_127 = var_j_125 ~ any;
                        m_match_bool_j_130 = var_j_125 ~ int;
                        m_match_cond_j_131 = m_match_bool_j_130 ? (
                                bool_j_132 = true
                            ) : (
                                m_match_cond_j_128 = m_match_bool_j_127 ? (
                                        var_j_129 = fail_b_100
                                    ) : (
                                        void_j_126 = {}
                                    )
                            ));
                    flatten_fun_j_135 = fun bj_null_j_24 -> (
                        input_j_134 = input);
                    flatten_fun_j_137 = fun expr_b_101 -> (
                        var_j_136 = expr_b_101);
                    record_j_138 = {checker = flatten_fun_j_133, generator = flatten_fun_j_135, wrapper = flatten_fun_j_137};
                    proj_j_139 = record_j_138.checker;
                    var_j_140 = arg_b_106;
                    m_i_854 = proj_j_139 ~ fun;
                    appl_j_141 = m_i_854 ? (
                            c_appl_i_855 = proj_j_139 var_j_140
                        ) : (
                            ab_i_856 = abort
                        );
                    m_i_857 = appl_j_141 ~ bool;
                    if_j_167 = m_i_857 ? (
                            c_cond_i_864 = appl_j_141 ? (
                                    bool_j_142 = false;
                                    fail_b_103 = bool_j_142;
                                    flatten_fun_j_151 = fun expr_b_102 -> (
                                        var_j_143 = expr_b_102;
                                        m_match_bool_j_145 = var_j_143 ~ any;
                                        m_match_bool_j_148 = var_j_143 ~ int;
                                        m_match_cond_j_149 = m_match_bool_j_148 ? (
                                                bool_j_150 = true
                                            ) : (
                                                m_match_cond_j_146 = m_match_bool_j_145 ? (
                                                        var_j_147 = fail_b_103
                                                    ) : (
                                                        void_j_144 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_153 = fun bj_null_j_25 -> (
                                        input_j_152 = input);
                                    flatten_fun_j_155 = fun expr_b_104 -> (
                                        var_j_154 = expr_b_104);
                                    record_j_156 = {checker = flatten_fun_j_151, generator = flatten_fun_j_153, wrapper = flatten_fun_j_155};
                                    proj_j_157 = record_j_156.wrapper;
                                    var_j_158 = expr_b_105;
                                    var_j_159 = arg_b_106;
                                    m_i_858 = var_j_158 ~ fun;
                                    appl_j_160 = m_i_858 ? (
                                            c_appl_i_859 = var_j_158 var_j_159
                                        ) : (
                                            ab_i_860 = abort
                                        );
                                    m_i_861 = proj_j_157 ~ fun;
                                    appl_j_161 = m_i_861 ? (
                                            c_appl_i_862 = proj_j_157 appl_j_160
                                        ) : (
                                            ab_i_863 = abort
                                        )
                                ) : (
                                    bool_j_162 = false;
                                    assert_pred_j_163 = bool_j_162;
                                    assert_res_j_164 = assert_pred_j_163 ? (
                                            assert_res_true_j_165 = {}
                                        ) : (
                                            ab_j_166 = abort
                                        )
                                )
                        ) : (
                            ab_i_865 = abort
                        )));
            record_j_170 = {checker = flatten_fun_j_78, generator = flatten_fun_j_123, wrapper = flatten_fun_j_169};
            proj_j_171 = record_j_170.checker;
            var_j_172 = expr_b_132;
            appl_j_173 = proj_j_171 var_j_172;
            check_1_b_133 = appl_j_173;
            var_j_174 = check_1_b_133;
            if_j_324 = var_j_174 ? (
                    flatten_fun_j_218 = fun expr_b_121 -> (
                        bool_j_175 = false;
                        fail_b_116 = bool_j_175;
                        flatten_fun_j_184 = fun expr_b_115 -> (
                            var_j_176 = expr_b_115;
                            m_match_bool_j_178 = var_j_176 ~ any;
                            m_match_bool_j_181 = var_j_176 ~ bool;
                            m_match_cond_j_182 = m_match_bool_j_181 ? (
                                    bool_j_183 = true
                                ) : (
                                    m_match_cond_j_179 = m_match_bool_j_178 ? (
                                            var_j_180 = fail_b_116
                                        ) : (
                                            void_j_177 = {}
                                        )
                                ));
                        flatten_fun_j_188 = fun bj_null_j_26 -> (
                            int_j_185 = 0;
                            input_j_186 = input;
                            m_bl_i_866 = int_j_185 ~ int;
                            m_br_i_867 = input_j_186 ~ int;
                            m_b_i_868 = m_bl_i_866 and m_br_i_867;
                            binop_j_187 = m_b_i_868 ? (
                                    c_binop_i_869 = int_j_185 <= input_j_186
                                ) : (
                                    ab_i_870 = abort
                                ));
                        flatten_fun_j_190 = fun expr_b_117 -> (
                            var_j_189 = expr_b_117);
                        record_j_191 = {checker = flatten_fun_j_184, generator = flatten_fun_j_188, wrapper = flatten_fun_j_190};
                        proj_j_192 = record_j_191.generator;
                        int_j_193 = 0;
                        appl_j_194 = proj_j_192 int_j_193;
                        arg_assert_b_122 = appl_j_194;
                        var_j_195 = expr_b_121;
                        var_j_196 = arg_assert_b_122;
                        appl_j_197 = var_j_195 var_j_196;
                        fun_ret_b_123 = appl_j_197;
                        bool_j_198 = false;
                        fail_b_119 = bool_j_198;
                        flatten_fun_j_207 = fun expr_b_118 -> (
                            var_j_199 = expr_b_118;
                            m_match_bool_j_201 = var_j_199 ~ any;
                            m_match_bool_j_204 = var_j_199 ~ bool;
                            m_match_cond_j_205 = m_match_bool_j_204 ? (
                                    bool_j_206 = true
                                ) : (
                                    m_match_cond_j_202 = m_match_bool_j_201 ? (
                                            var_j_203 = fail_b_119
                                        ) : (
                                            void_j_200 = {}
                                        )
                                ));
                        flatten_fun_j_211 = fun bj_null_j_27 -> (
                            int_j_208 = 0;
                            input_j_209 = input;
                            m_bl_i_871 = int_j_208 ~ int;
                            m_br_i_872 = input_j_209 ~ int;
                            m_b_i_873 = m_bl_i_871 and m_br_i_872;
                            binop_j_210 = m_b_i_873 ? (
                                    c_binop_i_874 = int_j_208 <= input_j_209
                                ) : (
                                    ab_i_875 = abort
                                ));
                        flatten_fun_j_213 = fun expr_b_120 -> (
                            var_j_212 = expr_b_120);
                        record_j_214 = {checker = flatten_fun_j_207, generator = flatten_fun_j_211, wrapper = flatten_fun_j_213};
                        proj_j_215 = record_j_214.checker;
                        var_j_216 = fun_ret_b_123;
                        appl_j_217 = proj_j_215 var_j_216);
                    flatten_fun_j_267 = fun bj_null_j_30 -> (
                        flatten_fun_j_266 = fun arg_assume_b_113 -> (
                            bool_j_219 = false;
                            fail_b_108 = bool_j_219;
                            flatten_fun_j_228 = fun expr_b_107 -> (
                                var_j_220 = expr_b_107;
                                m_match_bool_j_222 = var_j_220 ~ any;
                                m_match_bool_j_225 = var_j_220 ~ bool;
                                m_match_cond_j_226 = m_match_bool_j_225 ? (
                                        bool_j_227 = true
                                    ) : (
                                        m_match_cond_j_223 = m_match_bool_j_222 ? (
                                                var_j_224 = fail_b_108
                                            ) : (
                                                void_j_221 = {}
                                            )
                                    ));
                            flatten_fun_j_232 = fun bj_null_j_28 -> (
                                int_j_229 = 0;
                                input_j_230 = input;
                                m_bl_i_876 = int_j_229 ~ int;
                                m_br_i_877 = input_j_230 ~ int;
                                m_b_i_878 = m_bl_i_876 and m_br_i_877;
                                binop_j_231 = m_b_i_878 ? (
                                        c_binop_i_879 = int_j_229 <= input_j_230
                                    ) : (
                                        ab_i_880 = abort
                                    ));
                            flatten_fun_j_234 = fun expr_b_109 -> (
                                var_j_233 = expr_b_109);
                            record_j_235 = {checker = flatten_fun_j_228, generator = flatten_fun_j_232, wrapper = flatten_fun_j_234};
                            proj_j_236 = record_j_235.checker;
                            var_j_237 = arg_assume_b_113;
                            appl_j_238 = proj_j_236 var_j_237;
                            if_j_265 = appl_j_238 ? (
                                    bool_j_239 = false;
                                    fail_b_111 = bool_j_239;
                                    flatten_fun_j_248 = fun expr_b_110 -> (
                                        var_j_240 = expr_b_110;
                                        m_match_bool_j_242 = var_j_240 ~ any;
                                        m_match_bool_j_245 = var_j_240 ~ bool;
                                        m_match_cond_j_246 = m_match_bool_j_245 ? (
                                                bool_j_247 = true
                                            ) : (
                                                m_match_cond_j_243 = m_match_bool_j_242 ? (
                                                        var_j_244 = fail_b_111
                                                    ) : (
                                                        void_j_241 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_252 = fun bj_null_j_29 -> (
                                        int_j_249 = 0;
                                        input_j_250 = input;
                                        m_bl_i_881 = int_j_249 ~ int;
                                        m_br_i_882 = input_j_250 ~ int;
                                        m_b_i_883 = m_bl_i_881 and m_br_i_882;
                                        binop_j_251 = m_b_i_883 ? (
                                                c_binop_i_884 = int_j_249 <= input_j_250
                                            ) : (
                                                ab_i_885 = abort
                                            ));
                                    flatten_fun_j_254 = fun expr_b_112 -> (
                                        var_j_253 = expr_b_112);
                                    record_j_255 = {checker = flatten_fun_j_248, generator = flatten_fun_j_252, wrapper = flatten_fun_j_254};
                                    proj_j_256 = record_j_255.generator;
                                    int_j_257 = 0;
                                    appl_j_258 = proj_j_256 int_j_257
                                ) : (
                                    bool_j_259 = false;
                                    fail_b_114 = bool_j_259;
                                    var_j_260 = fail_b_114;
                                    assert_pred_j_261 = var_j_260;
                                    assert_res_j_262 = assert_pred_j_261 ? (
                                            assert_res_true_j_263 = {}
                                        ) : (
                                            ab_j_264 = abort
                                        )
                                )));
                    flatten_fun_j_317 = fun expr_b_130 -> (
                        flatten_fun_j_316 = fun arg_b_131 -> (
                            bool_j_268 = false;
                            fail_b_125 = bool_j_268;
                            flatten_fun_j_277 = fun expr_b_124 -> (
                                var_j_269 = expr_b_124;
                                m_match_bool_j_271 = var_j_269 ~ any;
                                m_match_bool_j_274 = var_j_269 ~ bool;
                                m_match_cond_j_275 = m_match_bool_j_274 ? (
                                        bool_j_276 = true
                                    ) : (
                                        m_match_cond_j_272 = m_match_bool_j_271 ? (
                                                var_j_273 = fail_b_125
                                            ) : (
                                                void_j_270 = {}
                                            )
                                    ));
                            flatten_fun_j_281 = fun bj_null_j_31 -> (
                                int_j_278 = 0;
                                input_j_279 = input;
                                m_bl_i_886 = int_j_278 ~ int;
                                m_br_i_887 = input_j_279 ~ int;
                                m_b_i_888 = m_bl_i_886 and m_br_i_887;
                                binop_j_280 = m_b_i_888 ? (
                                        c_binop_i_889 = int_j_278 <= input_j_279
                                    ) : (
                                        ab_i_890 = abort
                                    ));
                            flatten_fun_j_283 = fun expr_b_126 -> (
                                var_j_282 = expr_b_126);
                            record_j_284 = {checker = flatten_fun_j_277, generator = flatten_fun_j_281, wrapper = flatten_fun_j_283};
                            proj_j_285 = record_j_284.checker;
                            var_j_286 = arg_b_131;
                            m_i_891 = proj_j_285 ~ fun;
                            appl_j_287 = m_i_891 ? (
                                    c_appl_i_892 = proj_j_285 var_j_286
                                ) : (
                                    ab_i_893 = abort
                                );
                            m_i_894 = appl_j_287 ~ bool;
                            if_j_315 = m_i_894 ? (
                                    c_cond_i_906 = appl_j_287 ? (
                                            bool_j_288 = false;
                                            fail_b_128 = bool_j_288;
                                            flatten_fun_j_297 = fun expr_b_127 -> (
                                                var_j_289 = expr_b_127;
                                                m_match_bool_j_291 = var_j_289 ~ any;
                                                m_match_bool_j_294 = var_j_289 ~ bool;
                                                m_match_cond_j_295 = m_match_bool_j_294 ? (
                                                        bool_j_296 = true
                                                    ) : (
                                                        m_match_cond_j_292 = m_match_bool_j_291 ? (
                                                                var_j_293 = fail_b_128
                                                            ) : (
                                                                void_j_290 = 
                                                                    {}
                                                            )
                                                    ));
                                            flatten_fun_j_301 = fun bj_null_j_32 -> (
                                                int_j_298 = 0;
                                                input_j_299 = input;
                                                m_bl_i_895 = int_j_298 ~ int;
                                                m_br_i_896 = input_j_299 ~ int;
                                                m_b_i_897 = m_bl_i_895 and m_br_i_896;
                                                binop_j_300 = m_b_i_897 ? (
                                                        c_binop_i_898 = int_j_298 <= input_j_299
                                                    ) : (
                                                        ab_i_899 = abort
                                                    ));
                                            flatten_fun_j_303 = fun expr_b_129 -> (
                                                var_j_302 = expr_b_129);
                                            record_j_304 = {checker = flatten_fun_j_297, generator = flatten_fun_j_301, wrapper = flatten_fun_j_303};
                                            proj_j_305 = record_j_304.wrapper;
                                            var_j_306 = expr_b_130;
                                            var_j_307 = arg_b_131;
                                            m_i_900 = var_j_306 ~ fun;
                                            appl_j_308 = m_i_900 ? (
                                                    c_appl_i_901 = var_j_306 var_j_307
                                                ) : (
                                                    ab_i_902 = abort
                                                );
                                            m_i_903 = proj_j_305 ~ fun;
                                            appl_j_309 = m_i_903 ? (
                                                    c_appl_i_904 = proj_j_305 appl_j_308
                                                ) : (
                                                    ab_i_905 = abort
                                                )
                                        ) : (
                                            bool_j_310 = false;
                                            assert_pred_j_311 = bool_j_310;
                                            assert_res_j_312 = assert_pred_j_311 ? (
                                                    assert_res_true_j_313 = 
                                                        {}
                                                ) : (
                                                    ab_j_314 = abort
                                                )
                                        )
                                ) : (
                                    ab_i_907 = abort
                                )));
                    record_j_318 = {checker = flatten_fun_j_218, generator = flatten_fun_j_267, wrapper = flatten_fun_j_317};
                    proj_j_319 = record_j_318.checker;
                    var_j_320 = expr_b_132;
                    appl_j_321 = proj_j_319 var_j_320;
                    check_2_b_134 = appl_j_321;
                    var_j_322 = check_2_b_134
                ) : (
                    var_j_323 = check_1_b_133
                ));
        flatten_fun_j_410 = fun bj_null_j_37 -> (
            flatten_fun_j_409 = fun arg_b_69 -> (
                bool_j_326 = false;
                fail_b_77 = bool_j_326;
                flatten_fun_j_335 = fun expr_b_76 -> (
                    var_j_327 = expr_b_76;
                    m_match_bool_j_329 = var_j_327 ~ any;
                    m_match_bool_j_332 = var_j_327 ~ int;
                    m_match_cond_j_333 = m_match_bool_j_332 ? (
                            bool_j_334 = true
                        ) : (
                            m_match_cond_j_330 = m_match_bool_j_329 ? (
                                    var_j_331 = fail_b_77
                                ) : (
                                    void_j_328 = {}
                                )
                        ));
                flatten_fun_j_337 = fun bj_null_j_33 -> (
                    input_j_336 = input);
                flatten_fun_j_339 = fun expr_b_78 -> (
                    var_j_338 = expr_b_78);
                record_j_340 = {checker = flatten_fun_j_335, generator = flatten_fun_j_337, wrapper = flatten_fun_j_339};
                proj_j_341 = record_j_340.checker;
                var_j_342 = arg_b_69;
                appl_j_343 = proj_j_341 var_j_342;
                if_j_408 = appl_j_343 ? (
                        bool_j_344 = false;
                        fail_b_80 = bool_j_344;
                        flatten_fun_j_353 = fun expr_b_79 -> (
                            var_j_345 = expr_b_79;
                            m_match_bool_j_347 = var_j_345 ~ any;
                            m_match_bool_j_350 = var_j_345 ~ int;
                            m_match_cond_j_351 = m_match_bool_j_350 ? (
                                    bool_j_352 = true
                                ) : (
                                    m_match_cond_j_348 = m_match_bool_j_347 ? (
                                            var_j_349 = fail_b_80
                                        ) : (
                                            void_j_346 = {}
                                        )
                                ));
                        flatten_fun_j_355 = fun bj_null_j_34 -> (
                            input_j_354 = input);
                        flatten_fun_j_357 = fun expr_b_81 -> (
                            var_j_356 = expr_b_81);
                        record_j_358 = {checker = flatten_fun_j_353, generator = flatten_fun_j_355, wrapper = flatten_fun_j_357};
                        proj_j_359 = record_j_358.generator;
                        int_j_360 = 0;
                        appl_j_361 = proj_j_359 int_j_360
                    ) : (
                        bool_j_362 = false;
                        fail_b_71 = bool_j_362;
                        flatten_fun_j_371 = fun expr_b_70 -> (
                            var_j_363 = expr_b_70;
                            m_match_bool_j_365 = var_j_363 ~ any;
                            m_match_bool_j_368 = var_j_363 ~ bool;
                            m_match_cond_j_369 = m_match_bool_j_368 ? (
                                    bool_j_370 = true
                                ) : (
                                    m_match_cond_j_366 = m_match_bool_j_365 ? (
                                            var_j_367 = fail_b_71
                                        ) : (
                                            void_j_364 = {}
                                        )
                                ));
                        flatten_fun_j_375 = fun bj_null_j_35 -> (
                            int_j_372 = 0;
                            input_j_373 = input;
                            m_bl_i_908 = int_j_372 ~ int;
                            m_br_i_909 = input_j_373 ~ int;
                            m_b_i_910 = m_bl_i_908 and m_br_i_909;
                            binop_j_374 = m_b_i_910 ? (
                                    c_binop_i_911 = int_j_372 <= input_j_373
                                ) : (
                                    ab_i_912 = abort
                                ));
                        flatten_fun_j_377 = fun expr_b_72 -> (
                            var_j_376 = expr_b_72);
                        record_j_378 = {checker = flatten_fun_j_371, generator = flatten_fun_j_375, wrapper = flatten_fun_j_377};
                        proj_j_379 = record_j_378.checker;
                        var_j_380 = arg_b_69;
                        appl_j_381 = proj_j_379 var_j_380;
                        if_j_407 = appl_j_381 ? (
                                bool_j_382 = false;
                                fail_b_74 = bool_j_382;
                                flatten_fun_j_391 = fun expr_b_73 -> (
                                    var_j_383 = expr_b_73;
                                    m_match_bool_j_385 = var_j_383 ~ any;
                                    m_match_bool_j_388 = var_j_383 ~ bool;
                                    m_match_cond_j_389 = m_match_bool_j_388 ? (
                                            bool_j_390 = true
                                        ) : (
                                            m_match_cond_j_386 = m_match_bool_j_385 ? (
                                                    var_j_387 = fail_b_74
                                                ) : (
                                                    void_j_384 = {}
                                                )
                                        ));
                                flatten_fun_j_395 = fun bj_null_j_36 -> (
                                    int_j_392 = 0;
                                    input_j_393 = input;
                                    m_bl_i_913 = int_j_392 ~ int;
                                    m_br_i_914 = input_j_393 ~ int;
                                    m_b_i_915 = m_bl_i_913 and m_br_i_914;
                                    binop_j_394 = m_b_i_915 ? (
                                            c_binop_i_916 = int_j_392 <= input_j_393
                                        ) : (
                                            ab_i_917 = abort
                                        ));
                                flatten_fun_j_397 = fun expr_b_75 -> (
                                    var_j_396 = expr_b_75);
                                record_j_398 = {checker = flatten_fun_j_391, generator = flatten_fun_j_395, wrapper = flatten_fun_j_397};
                                proj_j_399 = record_j_398.generator;
                                int_j_400 = 0;
                                appl_j_401 = proj_j_399 int_j_400
                            ) : (
                                bool_j_402 = false;
                                assert_pred_j_403 = bool_j_402;
                                assert_res_j_404 = assert_pred_j_403 ? (
                                        assert_res_true_j_405 = {}
                                    ) : (
                                        ab_j_406 = abort
                                    )
                            )
                    )));
        flatten_fun_j_412 = fun expr_b_135 -> (
            var_j_411 = expr_b_135);
        record_j_413 = {checker = flatten_fun_j_325, generator = flatten_fun_j_410, wrapper = flatten_fun_j_412};
        proj_j_414 = record_j_413.checker;
        var_j_415 = f_b_0;
        appl_j_416 = proj_j_414 var_j_415;
        arg_check_b_1 = appl_j_416;
        var_j_417 = arg_check_b_1;
        if_j_443 = var_j_417 ? (
                bool_j_418 = false;
                fail_b_137 = bool_j_418;
                flatten_fun_j_427 = fun expr_b_136 -> (
                    var_j_419 = expr_b_136;
                    m_match_bool_j_421 = var_j_419 ~ any;
                    m_match_bool_j_424 = var_j_419 ~ int;
                    m_match_cond_j_425 = m_match_bool_j_424 ? (
                            bool_j_426 = true
                        ) : (
                            m_match_cond_j_422 = m_match_bool_j_421 ? (
                                    var_j_423 = fail_b_137
                                ) : (
                                    void_j_420 = {}
                                )
                        ));
                flatten_fun_j_429 = fun bj_null_j_38 -> (
                    input_j_428 = input);
                flatten_fun_j_431 = fun expr_b_138 -> (
                    var_j_430 = expr_b_138);
                record_j_432 = {checker = flatten_fun_j_427, generator = flatten_fun_j_429, wrapper = flatten_fun_j_431};
                proj_j_433 = record_j_432.wrapper;
                var_j_434 = f;
                bool_j_435 = true;
                m_i_918 = var_j_434 ~ fun;
                appl_j_436 = m_i_918 ? (
                        c_appl_i_919 = var_j_434 bool_j_435
                    ) : (
                        ab_i_920 = abort
                    );
                m_i_921 = proj_j_433 ~ fun;
                appl_j_437 = m_i_921 ? (
                        c_appl_i_922 = proj_j_433 appl_j_436
                    ) : (
                        ab_i_923 = abort
                    )
            ) : (
                var_j_438 = arg_check_b_1;
                assert_pred_j_439 = var_j_438;
                assert_res_j_440 = assert_pred_j_439 ? (
                        assert_res_true_j_441 = {}
                    ) : (
                        ab_j_442 = abort
                    )
            ));
    var_j_445 = f;
    appl_j_446 = flatten_fun_j_444 var_j_445);
test = test_j_447;
flatten_fun_j_734 = fun expr_b_65 -> (
    flatten_fun_j_487 = fun expr_b_29 -> (
        bool_j_448 = false;
        fail_b_24 = bool_j_448;
        flatten_fun_j_457 = fun expr_b_23 -> (
            var_j_449 = expr_b_23;
            m_match_bool_j_451 = var_j_449 ~ any;
            m_match_bool_j_454 = var_j_449 ~ int;
            m_match_cond_j_455 = m_match_bool_j_454 ? (
                    bool_j_456 = true
                ) : (
                    m_match_cond_j_452 = m_match_bool_j_451 ? (
                            var_j_453 = fail_b_24
                        ) : (
                            void_j_450 = {}
                        )
                ));
        flatten_fun_j_459 = fun bj_null -> (
            input_j_458 = input);
        flatten_fun_j_461 = fun expr_b_25 -> (
            var_j_460 = expr_b_25);
        record_j_462 = {checker = flatten_fun_j_457, generator = flatten_fun_j_459, wrapper = flatten_fun_j_461};
        proj_j_463 = record_j_462.generator;
        int_j_464 = 0;
        appl_j_465 = proj_j_463 int_j_464;
        arg_assert_b_30 = appl_j_465;
        var_j_466 = expr_b_29;
        var_j_467 = arg_assert_b_30;
        appl_j_468 = var_j_466 var_j_467;
        fun_ret_b_31 = appl_j_468;
        bool_j_469 = false;
        fail_b_27 = bool_j_469;
        flatten_fun_j_478 = fun expr_b_26 -> (
            var_j_470 = expr_b_26;
            m_match_bool_j_472 = var_j_470 ~ any;
            m_match_bool_j_475 = var_j_470 ~ int;
            m_match_cond_j_476 = m_match_bool_j_475 ? (
                    bool_j_477 = true
                ) : (
                    m_match_cond_j_473 = m_match_bool_j_472 ? (
                            var_j_474 = fail_b_27
                        ) : (
                            void_j_471 = {}
                        )
                ));
        flatten_fun_j_480 = fun bj_null_j_0 -> (
            input_j_479 = input);
        flatten_fun_j_482 = fun expr_b_28 -> (
            var_j_481 = expr_b_28);
        record_j_483 = {checker = flatten_fun_j_478, generator = flatten_fun_j_480, wrapper = flatten_fun_j_482};
        proj_j_484 = record_j_483.checker;
        var_j_485 = fun_ret_b_31;
        appl_j_486 = proj_j_484 var_j_485);
    flatten_fun_j_532 = fun bj_null_j_3 -> (
        flatten_fun_j_531 = fun arg_assume_b_21 -> (
            bool_j_488 = false;
            fail_b_16 = bool_j_488;
            flatten_fun_j_497 = fun expr_b_15 -> (
                var_j_489 = expr_b_15;
                m_match_bool_j_491 = var_j_489 ~ any;
                m_match_bool_j_494 = var_j_489 ~ int;
                m_match_cond_j_495 = m_match_bool_j_494 ? (
                        bool_j_496 = true
                    ) : (
                        m_match_cond_j_492 = m_match_bool_j_491 ? (
                                var_j_493 = fail_b_16
                            ) : (
                                void_j_490 = {}
                            )
                    ));
            flatten_fun_j_499 = fun bj_null_j_1 -> (
                input_j_498 = input);
            flatten_fun_j_501 = fun expr_b_17 -> (
                var_j_500 = expr_b_17);
            record_j_502 = {checker = flatten_fun_j_497, generator = flatten_fun_j_499, wrapper = flatten_fun_j_501};
            proj_j_503 = record_j_502.checker;
            var_j_504 = arg_assume_b_21;
            appl_j_505 = proj_j_503 var_j_504;
            if_j_530 = appl_j_505 ? (
                    bool_j_506 = false;
                    fail_b_19 = bool_j_506;
                    flatten_fun_j_515 = fun expr_b_18 -> (
                        var_j_507 = expr_b_18;
                        m_match_bool_j_509 = var_j_507 ~ any;
                        m_match_bool_j_512 = var_j_507 ~ int;
                        m_match_cond_j_513 = m_match_bool_j_512 ? (
                                bool_j_514 = true
                            ) : (
                                m_match_cond_j_510 = m_match_bool_j_509 ? (
                                        var_j_511 = fail_b_19
                                    ) : (
                                        void_j_508 = {}
                                    )
                            ));
                    flatten_fun_j_517 = fun bj_null_j_2 -> (
                        input_j_516 = input);
                    flatten_fun_j_519 = fun expr_b_20 -> (
                        var_j_518 = expr_b_20);
                    record_j_520 = {checker = flatten_fun_j_515, generator = flatten_fun_j_517, wrapper = flatten_fun_j_519};
                    proj_j_521 = record_j_520.generator;
                    int_j_522 = 0;
                    appl_j_523 = proj_j_521 int_j_522
                ) : (
                    bool_j_524 = false;
                    fail_b_22 = bool_j_524;
                    var_j_525 = fail_b_22;
                    assert_pred_j_526 = var_j_525;
                    assert_res_j_527 = assert_pred_j_526 ? (
                            assert_res_true_j_528 = {}
                        ) : (
                            ab_j_529 = abort
                        )
                )));
    flatten_fun_j_578 = fun expr_b_38 -> (
        flatten_fun_j_577 = fun arg_b_39 -> (
            bool_j_533 = false;
            fail_b_33 = bool_j_533;
            flatten_fun_j_542 = fun expr_b_32 -> (
                var_j_534 = expr_b_32;
                m_match_bool_j_536 = var_j_534 ~ any;
                m_match_bool_j_539 = var_j_534 ~ int;
                m_match_cond_j_540 = m_match_bool_j_539 ? (
                        bool_j_541 = true
                    ) : (
                        m_match_cond_j_537 = m_match_bool_j_536 ? (
                                var_j_538 = fail_b_33
                            ) : (
                                void_j_535 = {}
                            )
                    ));
            flatten_fun_j_544 = fun bj_null_j_4 -> (
                input_j_543 = input);
            flatten_fun_j_546 = fun expr_b_34 -> (
                var_j_545 = expr_b_34);
            record_j_547 = {checker = flatten_fun_j_542, generator = flatten_fun_j_544, wrapper = flatten_fun_j_546};
            proj_j_548 = record_j_547.checker;
            var_j_549 = arg_b_39;
            m_i_924 = proj_j_548 ~ fun;
            appl_j_550 = m_i_924 ? (
                    c_appl_i_925 = proj_j_548 var_j_549
                ) : (
                    ab_i_926 = abort
                );
            m_i_927 = appl_j_550 ~ bool;
            if_j_576 = m_i_927 ? (
                    c_cond_i_934 = appl_j_550 ? (
                            bool_j_551 = false;
                            fail_b_36 = bool_j_551;
                            flatten_fun_j_560 = fun expr_b_35 -> (
                                var_j_552 = expr_b_35;
                                m_match_bool_j_554 = var_j_552 ~ any;
                                m_match_bool_j_557 = var_j_552 ~ int;
                                m_match_cond_j_558 = m_match_bool_j_557 ? (
                                        bool_j_559 = true
                                    ) : (
                                        m_match_cond_j_555 = m_match_bool_j_554 ? (
                                                var_j_556 = fail_b_36
                                            ) : (
                                                void_j_553 = {}
                                            )
                                    ));
                            flatten_fun_j_562 = fun bj_null_j_5 -> (
                                input_j_561 = input);
                            flatten_fun_j_564 = fun expr_b_37 -> (
                                var_j_563 = expr_b_37);
                            record_j_565 = {checker = flatten_fun_j_560, generator = flatten_fun_j_562, wrapper = flatten_fun_j_564};
                            proj_j_566 = record_j_565.wrapper;
                            var_j_567 = expr_b_38;
                            var_j_568 = arg_b_39;
                            m_i_928 = var_j_567 ~ fun;
                            appl_j_569 = m_i_928 ? (
                                    c_appl_i_929 = var_j_567 var_j_568
                                ) : (
                                    ab_i_930 = abort
                                );
                            m_i_931 = proj_j_566 ~ fun;
                            appl_j_570 = m_i_931 ? (
                                    c_appl_i_932 = proj_j_566 appl_j_569
                                ) : (
                                    ab_i_933 = abort
                                )
                        ) : (
                            bool_j_571 = false;
                            assert_pred_j_572 = bool_j_571;
                            assert_res_j_573 = assert_pred_j_572 ? (
                                    assert_res_true_j_574 = {}
                                ) : (
                                    ab_j_575 = abort
                                )
                        )
                ) : (
                    ab_i_935 = abort
                )));
    record_j_579 = {checker = flatten_fun_j_487, generator = flatten_fun_j_532, wrapper = flatten_fun_j_578};
    proj_j_580 = record_j_579.checker;
    var_j_581 = expr_b_65;
    appl_j_582 = proj_j_580 var_j_581;
    check_1_b_66 = appl_j_582;
    var_j_583 = check_1_b_66;
    if_j_733 = var_j_583 ? (
            flatten_fun_j_627 = fun expr_b_54 -> (
                bool_j_584 = false;
                fail_b_49 = bool_j_584;
                flatten_fun_j_593 = fun expr_b_48 -> (
                    var_j_585 = expr_b_48;
                    m_match_bool_j_587 = var_j_585 ~ any;
                    m_match_bool_j_590 = var_j_585 ~ bool;
                    m_match_cond_j_591 = m_match_bool_j_590 ? (
                            bool_j_592 = true
                        ) : (
                            m_match_cond_j_588 = m_match_bool_j_587 ? (
                                    var_j_589 = fail_b_49
                                ) : (
                                    void_j_586 = {}
                                )
                        ));
                flatten_fun_j_597 = fun bj_null_j_6 -> (
                    int_j_594 = 0;
                    input_j_595 = input;
                    m_bl_i_936 = int_j_594 ~ int;
                    m_br_i_937 = input_j_595 ~ int;
                    m_b_i_938 = m_bl_i_936 and m_br_i_937;
                    binop_j_596 = m_b_i_938 ? (
                            c_binop_i_939 = int_j_594 <= input_j_595
                        ) : (
                            ab_i_940 = abort
                        ));
                flatten_fun_j_599 = fun expr_b_50 -> (
                    var_j_598 = expr_b_50);
                record_j_600 = {checker = flatten_fun_j_593, generator = flatten_fun_j_597, wrapper = flatten_fun_j_599};
                proj_j_601 = record_j_600.generator;
                int_j_602 = 0;
                appl_j_603 = proj_j_601 int_j_602;
                arg_assert_b_55 = appl_j_603;
                var_j_604 = expr_b_54;
                var_j_605 = arg_assert_b_55;
                appl_j_606 = var_j_604 var_j_605;
                fun_ret_b_56 = appl_j_606;
                bool_j_607 = false;
                fail_b_52 = bool_j_607;
                flatten_fun_j_616 = fun expr_b_51 -> (
                    var_j_608 = expr_b_51;
                    m_match_bool_j_610 = var_j_608 ~ any;
                    m_match_bool_j_613 = var_j_608 ~ bool;
                    m_match_cond_j_614 = m_match_bool_j_613 ? (
                            bool_j_615 = true
                        ) : (
                            m_match_cond_j_611 = m_match_bool_j_610 ? (
                                    var_j_612 = fail_b_52
                                ) : (
                                    void_j_609 = {}
                                )
                        ));
                flatten_fun_j_620 = fun bj_null_j_7 -> (
                    int_j_617 = 0;
                    input_j_618 = input;
                    m_bl_i_941 = int_j_617 ~ int;
                    m_br_i_942 = input_j_618 ~ int;
                    m_b_i_943 = m_bl_i_941 and m_br_i_942;
                    binop_j_619 = m_b_i_943 ? (
                            c_binop_i_944 = int_j_617 <= input_j_618
                        ) : (
                            ab_i_945 = abort
                        ));
                flatten_fun_j_622 = fun expr_b_53 -> (
                    var_j_621 = expr_b_53);
                record_j_623 = {checker = flatten_fun_j_616, generator = flatten_fun_j_620, wrapper = flatten_fun_j_622};
                proj_j_624 = record_j_623.checker;
                var_j_625 = fun_ret_b_56;
                appl_j_626 = proj_j_624 var_j_625);
            flatten_fun_j_676 = fun bj_null_j_10 -> (
                flatten_fun_j_675 = fun arg_assume_b_46 -> (
                    bool_j_628 = false;
                    fail_b_41 = bool_j_628;
                    flatten_fun_j_637 = fun expr_b_40 -> (
                        var_j_629 = expr_b_40;
                        m_match_bool_j_631 = var_j_629 ~ any;
                        m_match_bool_j_634 = var_j_629 ~ bool;
                        m_match_cond_j_635 = m_match_bool_j_634 ? (
                                bool_j_636 = true
                            ) : (
                                m_match_cond_j_632 = m_match_bool_j_631 ? (
                                        var_j_633 = fail_b_41
                                    ) : (
                                        void_j_630 = {}
                                    )
                            ));
                    flatten_fun_j_641 = fun bj_null_j_8 -> (
                        int_j_638 = 0;
                        input_j_639 = input;
                        m_bl_i_946 = int_j_638 ~ int;
                        m_br_i_947 = input_j_639 ~ int;
                        m_b_i_948 = m_bl_i_946 and m_br_i_947;
                        binop_j_640 = m_b_i_948 ? (
                                c_binop_i_949 = int_j_638 <= input_j_639
                            ) : (
                                ab_i_950 = abort
                            ));
                    flatten_fun_j_643 = fun expr_b_42 -> (
                        var_j_642 = expr_b_42);
                    record_j_644 = {checker = flatten_fun_j_637, generator = flatten_fun_j_641, wrapper = flatten_fun_j_643};
                    proj_j_645 = record_j_644.checker;
                    var_j_646 = arg_assume_b_46;
                    appl_j_647 = proj_j_645 var_j_646;
                    if_j_674 = appl_j_647 ? (
                            bool_j_648 = false;
                            fail_b_44 = bool_j_648;
                            flatten_fun_j_657 = fun expr_b_43 -> (
                                var_j_649 = expr_b_43;
                                m_match_bool_j_651 = var_j_649 ~ any;
                                m_match_bool_j_654 = var_j_649 ~ bool;
                                m_match_cond_j_655 = m_match_bool_j_654 ? (
                                        bool_j_656 = true
                                    ) : (
                                        m_match_cond_j_652 = m_match_bool_j_651 ? (
                                                var_j_653 = fail_b_44
                                            ) : (
                                                void_j_650 = {}
                                            )
                                    ));
                            flatten_fun_j_661 = fun bj_null_j_9 -> (
                                int_j_658 = 0;
                                input_j_659 = input;
                                m_bl_i_951 = int_j_658 ~ int;
                                m_br_i_952 = input_j_659 ~ int;
                                m_b_i_953 = m_bl_i_951 and m_br_i_952;
                                binop_j_660 = m_b_i_953 ? (
                                        c_binop_i_954 = int_j_658 <= input_j_659
                                    ) : (
                                        ab_i_955 = abort
                                    ));
                            flatten_fun_j_663 = fun expr_b_45 -> (
                                var_j_662 = expr_b_45);
                            record_j_664 = {checker = flatten_fun_j_657, generator = flatten_fun_j_661, wrapper = flatten_fun_j_663};
                            proj_j_665 = record_j_664.generator;
                            int_j_666 = 0;
                            appl_j_667 = proj_j_665 int_j_666
                        ) : (
                            bool_j_668 = false;
                            fail_b_47 = bool_j_668;
                            var_j_669 = fail_b_47;
                            assert_pred_j_670 = var_j_669;
                            assert_res_j_671 = assert_pred_j_670 ? (
                                    assert_res_true_j_672 = {}
                                ) : (
                                    ab_j_673 = abort
                                )
                        )));
            flatten_fun_j_726 = fun expr_b_63 -> (
                flatten_fun_j_725 = fun arg_b_64 -> (
                    bool_j_677 = false;
                    fail_b_58 = bool_j_677;
                    flatten_fun_j_686 = fun expr_b_57 -> (
                        var_j_678 = expr_b_57;
                        m_match_bool_j_680 = var_j_678 ~ any;
                        m_match_bool_j_683 = var_j_678 ~ bool;
                        m_match_cond_j_684 = m_match_bool_j_683 ? (
                                bool_j_685 = true
                            ) : (
                                m_match_cond_j_681 = m_match_bool_j_680 ? (
                                        var_j_682 = fail_b_58
                                    ) : (
                                        void_j_679 = {}
                                    )
                            ));
                    flatten_fun_j_690 = fun bj_null_j_11 -> (
                        int_j_687 = 0;
                        input_j_688 = input;
                        m_bl_i_956 = int_j_687 ~ int;
                        m_br_i_957 = input_j_688 ~ int;
                        m_b_i_958 = m_bl_i_956 and m_br_i_957;
                        binop_j_689 = m_b_i_958 ? (
                                c_binop_i_959 = int_j_687 <= input_j_688
                            ) : (
                                ab_i_960 = abort
                            ));
                    flatten_fun_j_692 = fun expr_b_59 -> (
                        var_j_691 = expr_b_59);
                    record_j_693 = {checker = flatten_fun_j_686, generator = flatten_fun_j_690, wrapper = flatten_fun_j_692};
                    proj_j_694 = record_j_693.checker;
                    var_j_695 = arg_b_64;
                    m_i_961 = proj_j_694 ~ fun;
                    appl_j_696 = m_i_961 ? (
                            c_appl_i_962 = proj_j_694 var_j_695
                        ) : (
                            ab_i_963 = abort
                        );
                    m_i_964 = appl_j_696 ~ bool;
                    if_j_724 = m_i_964 ? (
                            c_cond_i_976 = appl_j_696 ? (
                                    bool_j_697 = false;
                                    fail_b_61 = bool_j_697;
                                    flatten_fun_j_706 = fun expr_b_60 -> (
                                        var_j_698 = expr_b_60;
                                        m_match_bool_j_700 = var_j_698 ~ any;
                                        m_match_bool_j_703 = var_j_698 ~ bool;
                                        m_match_cond_j_704 = m_match_bool_j_703 ? (
                                                bool_j_705 = true
                                            ) : (
                                                m_match_cond_j_701 = m_match_bool_j_700 ? (
                                                        var_j_702 = fail_b_61
                                                    ) : (
                                                        void_j_699 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_710 = fun bj_null_j_12 -> (
                                        int_j_707 = 0;
                                        input_j_708 = input;
                                        m_bl_i_965 = int_j_707 ~ int;
                                        m_br_i_966 = input_j_708 ~ int;
                                        m_b_i_967 = m_bl_i_965 and m_br_i_966;
                                        binop_j_709 = m_b_i_967 ? (
                                                c_binop_i_968 = int_j_707 <= input_j_708
                                            ) : (
                                                ab_i_969 = abort
                                            ));
                                    flatten_fun_j_712 = fun expr_b_62 -> (
                                        var_j_711 = expr_b_62);
                                    record_j_713 = {checker = flatten_fun_j_706, generator = flatten_fun_j_710, wrapper = flatten_fun_j_712};
                                    proj_j_714 = record_j_713.wrapper;
                                    var_j_715 = expr_b_63;
                                    var_j_716 = arg_b_64;
                                    m_i_970 = var_j_715 ~ fun;
                                    appl_j_717 = m_i_970 ? (
                                            c_appl_i_971 = var_j_715 var_j_716
                                        ) : (
                                            ab_i_972 = abort
                                        );
                                    m_i_973 = proj_j_714 ~ fun;
                                    appl_j_718 = m_i_973 ? (
                                            c_appl_i_974 = proj_j_714 appl_j_717
                                        ) : (
                                            ab_i_975 = abort
                                        )
                                ) : (
                                    bool_j_719 = false;
                                    assert_pred_j_720 = bool_j_719;
                                    assert_res_j_721 = assert_pred_j_720 ? (
                                            assert_res_true_j_722 = {}
                                        ) : (
                                            ab_j_723 = abort
                                        )
                                )
                        ) : (
                            ab_i_977 = abort
                        )));
            record_j_727 = {checker = flatten_fun_j_627, generator = flatten_fun_j_676, wrapper = flatten_fun_j_726};
            proj_j_728 = record_j_727.checker;
            var_j_729 = expr_b_65;
            appl_j_730 = proj_j_728 var_j_729;
            check_2_b_67 = appl_j_730;
            var_j_731 = check_2_b_67
        ) : (
            var_j_732 = check_1_b_66
        ));
flatten_fun_j_819 = fun bj_null_j_17 -> (
    flatten_fun_j_818 = fun arg_b_2 -> (
        bool_j_735 = false;
        fail_b_10 = bool_j_735;
        flatten_fun_j_744 = fun expr_b_9 -> (
            var_j_736 = expr_b_9;
            m_match_bool_j_738 = var_j_736 ~ any;
            m_match_bool_j_741 = var_j_736 ~ int;
            m_match_cond_j_742 = m_match_bool_j_741 ? (
                    bool_j_743 = true
                ) : (
                    m_match_cond_j_739 = m_match_bool_j_738 ? (
                            var_j_740 = fail_b_10
                        ) : (
                            void_j_737 = {}
                        )
                ));
        flatten_fun_j_746 = fun bj_null_j_13 -> (
            input_j_745 = input);
        flatten_fun_j_748 = fun expr_b_11 -> (
            var_j_747 = expr_b_11);
        record_j_749 = {checker = flatten_fun_j_744, generator = flatten_fun_j_746, wrapper = flatten_fun_j_748};
        proj_j_750 = record_j_749.checker;
        var_j_751 = arg_b_2;
        appl_j_752 = proj_j_750 var_j_751;
        if_j_817 = appl_j_752 ? (
                bool_j_753 = false;
                fail_b_13 = bool_j_753;
                flatten_fun_j_762 = fun expr_b_12 -> (
                    var_j_754 = expr_b_12;
                    m_match_bool_j_756 = var_j_754 ~ any;
                    m_match_bool_j_759 = var_j_754 ~ int;
                    m_match_cond_j_760 = m_match_bool_j_759 ? (
                            bool_j_761 = true
                        ) : (
                            m_match_cond_j_757 = m_match_bool_j_756 ? (
                                    var_j_758 = fail_b_13
                                ) : (
                                    void_j_755 = {}
                                )
                        ));
                flatten_fun_j_764 = fun bj_null_j_14 -> (
                    input_j_763 = input);
                flatten_fun_j_766 = fun expr_b_14 -> (
                    var_j_765 = expr_b_14);
                record_j_767 = {checker = flatten_fun_j_762, generator = flatten_fun_j_764, wrapper = flatten_fun_j_766};
                proj_j_768 = record_j_767.generator;
                int_j_769 = 0;
                appl_j_770 = proj_j_768 int_j_769
            ) : (
                bool_j_771 = false;
                fail_b_4 = bool_j_771;
                flatten_fun_j_780 = fun expr_b_3 -> (
                    var_j_772 = expr_b_3;
                    m_match_bool_j_774 = var_j_772 ~ any;
                    m_match_bool_j_777 = var_j_772 ~ bool;
                    m_match_cond_j_778 = m_match_bool_j_777 ? (
                            bool_j_779 = true
                        ) : (
                            m_match_cond_j_775 = m_match_bool_j_774 ? (
                                    var_j_776 = fail_b_4
                                ) : (
                                    void_j_773 = {}
                                )
                        ));
                flatten_fun_j_784 = fun bj_null_j_15 -> (
                    int_j_781 = 0;
                    input_j_782 = input;
                    m_bl_i_978 = int_j_781 ~ int;
                    m_br_i_979 = input_j_782 ~ int;
                    m_b_i_980 = m_bl_i_978 and m_br_i_979;
                    binop_j_783 = m_b_i_980 ? (
                            c_binop_i_981 = int_j_781 <= input_j_782
                        ) : (
                            ab_i_982 = abort
                        ));
                flatten_fun_j_786 = fun expr_b_5 -> (
                    var_j_785 = expr_b_5);
                record_j_787 = {checker = flatten_fun_j_780, generator = flatten_fun_j_784, wrapper = flatten_fun_j_786};
                proj_j_788 = record_j_787.checker;
                var_j_789 = arg_b_2;
                appl_j_790 = proj_j_788 var_j_789;
                if_j_816 = appl_j_790 ? (
                        bool_j_791 = false;
                        fail_b_7 = bool_j_791;
                        flatten_fun_j_800 = fun expr_b_6 -> (
                            var_j_792 = expr_b_6;
                            m_match_bool_j_794 = var_j_792 ~ any;
                            m_match_bool_j_797 = var_j_792 ~ bool;
                            m_match_cond_j_798 = m_match_bool_j_797 ? (
                                    bool_j_799 = true
                                ) : (
                                    m_match_cond_j_795 = m_match_bool_j_794 ? (
                                            var_j_796 = fail_b_7
                                        ) : (
                                            void_j_793 = {}
                                        )
                                ));
                        flatten_fun_j_804 = fun bj_null_j_16 -> (
                            int_j_801 = 0;
                            input_j_802 = input;
                            m_bl_i_983 = int_j_801 ~ int;
                            m_br_i_984 = input_j_802 ~ int;
                            m_b_i_985 = m_bl_i_983 and m_br_i_984;
                            binop_j_803 = m_b_i_985 ? (
                                    c_binop_i_986 = int_j_801 <= input_j_802
                                ) : (
                                    ab_i_987 = abort
                                ));
                        flatten_fun_j_806 = fun expr_b_8 -> (
                            var_j_805 = expr_b_8);
                        record_j_807 = {checker = flatten_fun_j_800, generator = flatten_fun_j_804, wrapper = flatten_fun_j_806};
                        proj_j_808 = record_j_807.generator;
                        int_j_809 = 0;
                        appl_j_810 = proj_j_808 int_j_809
                    ) : (
                        bool_j_811 = false;
                        assert_pred_j_812 = bool_j_811;
                        assert_res_j_813 = assert_pred_j_812 ? (
                                assert_res_true_j_814 = {}
                            ) : (
                                ab_j_815 = abort
                            )
                    )
            )));
flatten_fun_j_821 = fun expr_b_68 -> (
    var_j_820 = expr_b_68);
record_j_822 = {checker = flatten_fun_j_734, generator = flatten_fun_j_819, wrapper = flatten_fun_j_821};
proj_j_823 = record_j_822.generator;
int_j_824 = 0;
appl_j_825 = proj_j_823 int_j_824;
f_b_142 = appl_j_825;
bool_j_826 = false;
fail_b_140 = bool_j_826;
flatten_fun_j_835 = fun expr_b_139 -> (
    var_j_827 = expr_b_139;
    m_match_bool_j_829 = var_j_827 ~ any;
    m_match_bool_j_832 = var_j_827 ~ int;
    m_match_cond_j_833 = m_match_bool_j_832 ? (
            bool_j_834 = true
        ) : (
            m_match_cond_j_830 = m_match_bool_j_829 ? (
                    var_j_831 = fail_b_140
                ) : (
                    void_j_828 = {}
                )
        ));
flatten_fun_j_837 = fun bj_null_j_18 -> (
    input_j_836 = input);
flatten_fun_j_839 = fun expr_b_141 -> (
    var_j_838 = expr_b_141);
record_j_840 = {checker = flatten_fun_j_835, generator = flatten_fun_j_837, wrapper = flatten_fun_j_839};
proj_j_841 = record_j_840.checker;
appl_j_844 = test f_b_142;
appl_j_845 = proj_j_841 appl_j_844;
check_res_b_143 = appl_j_845;
if_j_853 = check_res_b_143 ? (
        var_j_847 = test
    ) : (
        error_var_j_848 = check_res_b_143;
        assert_pred_j_849 = error_var_j_848;
        assert_res_j_850 = assert_pred_j_849 ? (
                assert_res_true_j_851 = {}
            ) : (
                ab_j_852 = abort
            )
    );
i_result = if_j_853