i_first = {};
isPos_j_17 = fun n_j_13 -> (
    int_j_14 = 0;
    var_j_15 = n_j_13;
    m_bl_i_281 = int_j_14 ~ int;
    m_br_i_282 = var_j_15 ~ int;
    m_b_i_283 = m_bl_i_281 and m_br_i_282;
    binop_j_16 = m_b_i_283 ? (
            c_binop_i_284 = int_j_14 < var_j_15
        ) : (
            ab_i_285 = abort
        ));
isPos = isPos_j_17;
isNeg_j_21 = fun n -> (
    var_j_18 = n;
    int_j_19 = 0;
    m_bl_i_286 = var_j_18 ~ int;
    m_br_i_287 = int_j_19 ~ int;
    m_b_i_288 = m_bl_i_286 and m_br_i_287;
    binop_j_20 = m_b_i_288 ? (
            c_binop_i_289 = var_j_18 < int_j_19
        ) : (
            ab_i_290 = abort
        ));
isNeg = isNeg_j_21;
twice_j_28 = fun f -> (
    twice_j_27 = fun x_j_12 -> (
        var_j_22 = f;
        var_j_23 = f;
        var_j_24 = x_j_12;
        m_i_291 = var_j_23 ~ fun;
        appl_j_25 = m_i_291 ? (
                c_appl_i_292 = var_j_23 var_j_24
            ) : (
                ab_i_293 = abort
            );
        m_i_294 = var_j_22 ~ fun;
        appl_j_26 = m_i_294 ? (
                c_appl_i_295 = var_j_22 appl_j_25
            ) : (
                ab_i_296 = abort
            )));
twice = twice_j_28;
flatten_fun_j_64 = fun expr_b_14 -> (
    bool_j_29 = false;
    fail_b_9 = bool_j_29;
    flatten_fun_j_38 = fun expr_b_8 -> (
        var_j_30 = expr_b_8;
        m_match_bool_j_32 = var_j_30 ~ any;
        m_match_bool_j_35 = var_j_30 ~ int;
        m_match_cond_j_36 = m_match_bool_j_35 ? (
                bool_j_37 = true
            ) : (
                m_match_cond_j_33 = m_match_bool_j_32 ? (
                        var_j_34 = fail_b_9
                    ) : (
                        void_j_31 = {}
                    )
            ));
    flatten_fun_j_40 = fun bj_null -> (
        input_j_39 = input);
    record_j_41 = {checker = flatten_fun_j_38, generator = flatten_fun_j_40};
    proj_j_42 = record_j_41.generator;
    int_j_43 = 0;
    appl_j_44 = proj_j_42 int_j_43;
    arg_assert_b_15 = appl_j_44;
    var_j_45 = expr_b_14;
    var_j_46 = arg_assert_b_15;
    appl_j_47 = var_j_45 var_j_46;
    fun_ret_b_16 = appl_j_47;
    bool_j_48 = false;
    fail_b_12 = bool_j_48;
    flatten_fun_j_57 = fun expr_b_11 -> (
        var_j_49 = expr_b_11;
        m_match_bool_j_51 = var_j_49 ~ any;
        m_match_bool_j_54 = var_j_49 ~ int;
        m_match_cond_j_55 = m_match_bool_j_54 ? (
                bool_j_56 = true
            ) : (
                m_match_cond_j_52 = m_match_bool_j_51 ? (
                        var_j_53 = fail_b_12
                    ) : (
                        void_j_50 = {}
                    )
            ));
    flatten_fun_j_59 = fun bj_null_j_0 -> (
        input_j_58 = input);
    record_j_60 = {checker = flatten_fun_j_57, generator = flatten_fun_j_59};
    proj_j_61 = record_j_60.checker;
    var_j_62 = fun_ret_b_16;
    appl_j_63 = proj_j_61 var_j_62);
flatten_fun_j_105 = fun bj_null_j_3 -> (
    flatten_fun_j_104 = fun arg_assume_b_6 -> (
        bool_j_65 = false;
        fail_b_1 = bool_j_65;
        flatten_fun_j_74 = fun expr_b_0 -> (
            var_j_66 = expr_b_0;
            m_match_bool_j_68 = var_j_66 ~ any;
            m_match_bool_j_71 = var_j_66 ~ int;
            m_match_cond_j_72 = m_match_bool_j_71 ? (
                    bool_j_73 = true
                ) : (
                    m_match_cond_j_69 = m_match_bool_j_68 ? (
                            var_j_70 = fail_b_1
                        ) : (
                            void_j_67 = {}
                        )
                ));
        flatten_fun_j_76 = fun bj_null_j_1 -> (
            input_j_75 = input);
        record_j_77 = {checker = flatten_fun_j_74, generator = flatten_fun_j_76};
        proj_j_78 = record_j_77.checker;
        var_j_79 = arg_assume_b_6;
        appl_j_80 = proj_j_78 var_j_79;
        if_j_103 = appl_j_80 ? (
                bool_j_81 = false;
                fail_b_4 = bool_j_81;
                flatten_fun_j_90 = fun expr_b_3 -> (
                    var_j_82 = expr_b_3;
                    m_match_bool_j_84 = var_j_82 ~ any;
                    m_match_bool_j_87 = var_j_82 ~ int;
                    m_match_cond_j_88 = m_match_bool_j_87 ? (
                            bool_j_89 = true
                        ) : (
                            m_match_cond_j_85 = m_match_bool_j_84 ? (
                                    var_j_86 = fail_b_4
                                ) : (
                                    void_j_83 = {}
                                )
                        ));
                flatten_fun_j_92 = fun bj_null_j_2 -> (
                    input_j_91 = input);
                record_j_93 = {checker = flatten_fun_j_90, generator = flatten_fun_j_92};
                proj_j_94 = record_j_93.generator;
                int_j_95 = 0;
                appl_j_96 = proj_j_94 int_j_95
            ) : (
                bool_j_97 = false;
                fail_b_7 = bool_j_97;
                var_j_98 = fail_b_7;
                assert_pred_j_99 = var_j_98;
                assert_res_j_100 = assert_pred_j_99 ? (
                        assert_res_true_j_101 = {}
                    ) : (
                        ab_j_102 = abort
                    )
            )));
record_j_106 = {checker = flatten_fun_j_64, generator = flatten_fun_j_105};
proj_j_107 = record_j_106.generator;
int_j_108 = 0;
appl_j_109 = proj_j_107 int_j_108;
f_b_54 = appl_j_109;
bool_j_110 = false;
fail_b_26 = bool_j_110;
flatten_fun_j_119 = fun expr_b_25 -> (
    var_j_111 = expr_b_25;
    m_match_bool_j_113 = var_j_111 ~ any;
    m_match_bool_j_116 = var_j_111 ~ int;
    m_match_cond_j_117 = m_match_bool_j_116 ? (
            bool_j_118 = true
        ) : (
            m_match_cond_j_114 = m_match_bool_j_113 ? (
                    var_j_115 = fail_b_26
                ) : (
                    void_j_112 = {}
                )
        ));
flatten_fun_j_121 = fun bj_null_j_4 -> (
    input_j_120 = input);
record_j_122 = {checker = flatten_fun_j_119, generator = flatten_fun_j_121};
proj_j_123 = record_j_122.generator;
int_j_124 = 0;
appl_j_125 = proj_j_123 int_j_124;
x_b_53 = appl_j_125;
bool_j_126 = false;
fail_b_29 = bool_j_126;
flatten_fun_j_135 = fun expr_b_28 -> (
    var_j_127 = expr_b_28;
    m_match_bool_j_129 = var_j_127 ~ any;
    m_match_bool_j_132 = var_j_127 ~ int;
    m_match_cond_j_133 = m_match_bool_j_132 ? (
            bool_j_134 = true
        ) : (
            m_match_cond_j_130 = m_match_bool_j_129 ? (
                    var_j_131 = fail_b_29
                ) : (
                    void_j_128 = {}
                )
        ));
flatten_fun_j_137 = fun bj_null_j_5 -> (
    input_j_136 = input);
record_j_138 = {checker = flatten_fun_j_135, generator = flatten_fun_j_137};
proj_j_139 = record_j_138.checker;
appl_j_142 = twice f_b_54;
appl_j_144 = appl_j_142 x_b_53;
appl_j_145 = proj_j_139 appl_j_144;
check_res_b_57 = appl_j_145;
if_j_280 = check_res_b_57 ? (
        inc_j_150 = fun x -> (
            var_j_147 = x;
            int_j_148 = 1;
            m_bl_i_297 = var_j_147 ~ int;
            m_br_i_298 = int_j_148 ~ int;
            m_b_i_299 = m_bl_i_297 and m_br_i_298;
            binop_j_149 = m_b_i_299 ? (
                    c_binop_i_300 = var_j_147 + int_j_148
                ) : (
                    ab_i_301 = abort
                ));
        inc = inc_j_150;
        flatten_fun_j_177 = fun expr_b_38 -> (
            bool_j_151 = false;
            fail_b_36 = bool_j_151;
            flatten_fun_j_160 = fun expr_b_35 -> (
                var_j_152 = expr_b_35;
                m_match_bool_j_154 = var_j_152 ~ any;
                m_match_bool_j_157 = var_j_152 ~ int;
                m_match_cond_j_158 = m_match_bool_j_157 ? (
                        bool_j_159 = true
                    ) : (
                        m_match_cond_j_155 = m_match_bool_j_154 ? (
                                var_j_156 = fail_b_36
                            ) : (
                                void_j_153 = {}
                            )
                    ));
            flatten_fun_j_162 = fun bj_null_j_6 -> (
                input_j_161 = input);
            record_j_163 = {checker = flatten_fun_j_160, generator = flatten_fun_j_162};
            proj_j_164 = record_j_163.checker;
            var_j_165 = expr_b_38;
            appl_j_166 = proj_j_164 var_j_165;
            t_check_b_39 = appl_j_166;
            var_j_167 = t_check_b_39;
            if_j_176 = var_j_167 ? (
                    bool_j_168 = false;
                    pred_check_b_40 = bool_j_168;
                    var_j_169 = isPos;
                    var_j_170 = expr_b_38;
                    appl_j_171 = var_j_169 var_j_170;
                    if_j_174 = appl_j_171 ? (
                            bool_j_172 = true
                        ) : (
                            var_j_173 = pred_check_b_40
                        )
                ) : (
                    var_j_175 = t_check_b_39
                ));
        flatten_fun_j_201 = fun bj_null_j_8 -> (
            bool_j_178 = false;
            fail_b_32 = bool_j_178;
            flatten_fun_j_187 = fun expr_b_31 -> (
                var_j_179 = expr_b_31;
                m_match_bool_j_181 = var_j_179 ~ any;
                m_match_bool_j_184 = var_j_179 ~ int;
                m_match_cond_j_185 = m_match_bool_j_184 ? (
                        bool_j_186 = true
                    ) : (
                        m_match_cond_j_182 = m_match_bool_j_181 ? (
                                var_j_183 = fail_b_32
                            ) : (
                                void_j_180 = {}
                            )
                    ));
            flatten_fun_j_189 = fun bj_null_j_7 -> (
                input_j_188 = input);
            record_j_190 = {checker = flatten_fun_j_187, generator = flatten_fun_j_189};
            proj_j_191 = record_j_190.generator;
            int_j_192 = 0;
            appl_j_193 = proj_j_191 int_j_192;
            candidate_b_34 = appl_j_193;
            var_j_194 = isPos;
            var_j_195 = candidate_b_34;
            appl_j_196 = var_j_194 var_j_195;
            if_j_200 = appl_j_196 ? (
                    var_j_197 = candidate_b_34
                ) : (
                    bool_j_198 = false;
                    assume_j_199 = assume bool_j_198
                ));
        record_j_202 = {checker = flatten_fun_j_177, generator = flatten_fun_j_201};
        proj_j_203 = record_j_202.generator;
        int_j_204 = 0;
        appl_j_205 = proj_j_203 int_j_204;
        x_b_55 = appl_j_205;
        flatten_fun_j_232 = fun expr_b_49 -> (
            bool_j_206 = false;
            fail_b_47 = bool_j_206;
            flatten_fun_j_215 = fun expr_b_46 -> (
                var_j_207 = expr_b_46;
                m_match_bool_j_209 = var_j_207 ~ any;
                m_match_bool_j_212 = var_j_207 ~ int;
                m_match_cond_j_213 = m_match_bool_j_212 ? (
                        bool_j_214 = true
                    ) : (
                        m_match_cond_j_210 = m_match_bool_j_209 ? (
                                var_j_211 = fail_b_47
                            ) : (
                                void_j_208 = {}
                            )
                    ));
            flatten_fun_j_217 = fun bj_null_j_9 -> (
                input_j_216 = input);
            record_j_218 = {checker = flatten_fun_j_215, generator = flatten_fun_j_217};
            proj_j_219 = record_j_218.checker;
            var_j_220 = expr_b_49;
            appl_j_221 = proj_j_219 var_j_220;
            t_check_b_50 = appl_j_221;
            var_j_222 = t_check_b_50;
            if_j_231 = var_j_222 ? (
                    bool_j_223 = false;
                    pred_check_b_51 = bool_j_223;
                    var_j_224 = isNeg;
                    var_j_225 = expr_b_49;
                    appl_j_226 = var_j_224 var_j_225;
                    if_j_229 = appl_j_226 ? (
                            bool_j_227 = true
                        ) : (
                            var_j_228 = pred_check_b_51
                        )
                ) : (
                    var_j_230 = t_check_b_50
                ));
        flatten_fun_j_256 = fun bj_null_j_11 -> (
            bool_j_233 = false;
            fail_b_43 = bool_j_233;
            flatten_fun_j_242 = fun expr_b_42 -> (
                var_j_234 = expr_b_42;
                m_match_bool_j_236 = var_j_234 ~ any;
                m_match_bool_j_239 = var_j_234 ~ int;
                m_match_cond_j_240 = m_match_bool_j_239 ? (
                        bool_j_241 = true
                    ) : (
                        m_match_cond_j_237 = m_match_bool_j_236 ? (
                                var_j_238 = fail_b_43
                            ) : (
                                void_j_235 = {}
                            )
                    ));
            flatten_fun_j_244 = fun bj_null_j_10 -> (
                input_j_243 = input);
            record_j_245 = {checker = flatten_fun_j_242, generator = flatten_fun_j_244};
            proj_j_246 = record_j_245.generator;
            int_j_247 = 0;
            appl_j_248 = proj_j_246 int_j_247;
            candidate_b_45 = appl_j_248;
            var_j_249 = isNeg;
            var_j_250 = candidate_b_45;
            appl_j_251 = var_j_249 var_j_250;
            if_j_255 = appl_j_251 ? (
                    var_j_252 = candidate_b_45
                ) : (
                    bool_j_253 = false;
                    assume_j_254 = assume bool_j_253
                ));
        record_j_257 = {checker = flatten_fun_j_232, generator = flatten_fun_j_256};
        proj_j_258 = record_j_257.checker;
        var_j_259 = inc;
        var_j_260 = x_b_55;
        appl_j_261 = var_j_259 var_j_260;
        appl_j_262 = proj_j_258 appl_j_261;
        check_res_b_56 = appl_j_262;
        var_j_263 = check_res_b_56;
        if_j_274 = var_j_263 ? (
                var_j_264 = twice;
                var_j_265 = inc;
                m_i_302 = var_j_264 ~ fun;
                appl_j_266 = m_i_302 ? (
                        c_appl_i_303 = var_j_264 var_j_265
                    ) : (
                        ab_i_304 = abort
                    );
                int_j_267 = 0;
                m_i_305 = appl_j_266 ~ fun;
                appl_j_268 = m_i_305 ? (
                        c_appl_i_306 = appl_j_266 int_j_267
                    ) : (
                        ab_i_307 = abort
                    )
            ) : (
                error_var_j_269 = check_res_b_56;
                assert_pred_j_270 = error_var_j_269;
                assert_res_j_271 = assert_pred_j_270 ? (
                        assert_res_true_j_272 = {}
                    ) : (
                        ab_j_273 = abort
                    )
            )
    ) : (
        error_var_j_275 = check_res_b_57;
        assert_pred_j_276 = error_var_j_275;
        assert_res_j_277 = assert_pred_j_276 ? (
                assert_res_true_j_278 = {}
            ) : (
                ab_j_279 = abort
            )
    );
i_result = if_j_280