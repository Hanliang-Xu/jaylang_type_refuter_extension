i_first = {};
isPos_j_34 = fun n_j_30 -> (
    int_j_31 = 0;
    var_j_32 = n_j_30;
    m_bl_i_689 = int_j_31 ~ int;
    m_br_i_690 = var_j_32 ~ int;
    m_b_i_691 = m_bl_i_689 and m_br_i_690;
    binop_j_33 = m_b_i_691 ? (
            c_binop_i_692 = int_j_31 < var_j_32
        ) : (
            ab_i_693 = abort
        ));
isPos = isPos_j_34;
isNeg_j_38 = fun n -> (
    var_j_35 = n;
    int_j_36 = 0;
    m_bl_i_694 = var_j_35 ~ int;
    m_br_i_695 = int_j_36 ~ int;
    m_b_i_696 = m_bl_i_694 and m_br_i_695;
    binop_j_37 = m_b_i_696 ? (
            c_binop_i_697 = var_j_35 < int_j_36
        ) : (
            ab_i_698 = abort
        ));
isNeg = isNeg_j_38;
twice_j_235 = fun f -> (
    twice_j_234 = fun x_j_29 -> (
        flatten_fun_j_231 = fun f_b_2 -> (
            flatten_fun_j_78 = fun expr_b_48 -> (
                bool_j_39 = false;
                fail_b_43 = bool_j_39;
                flatten_fun_j_48 = fun expr_b_42 -> (
                    var_j_40 = expr_b_42;
                    m_match_bool_j_42 = var_j_40 ~ any;
                    m_match_bool_j_45 = var_j_40 ~ int;
                    m_match_cond_j_46 = m_match_bool_j_45 ? (
                            bool_j_47 = true
                        ) : (
                            m_match_cond_j_43 = m_match_bool_j_42 ? (
                                    var_j_44 = fail_b_43
                                ) : (
                                    void_j_41 = {}
                                )
                        ));
                flatten_fun_j_50 = fun bj_null_j_20 -> (
                    input_j_49 = input);
                flatten_fun_j_52 = fun expr_b_44 -> (
                    var_j_51 = expr_b_44);
                record_j_53 = {checker = flatten_fun_j_48, generator = flatten_fun_j_50, wrapper = flatten_fun_j_52};
                proj_j_54 = record_j_53.generator;
                int_j_55 = 0;
                appl_j_56 = proj_j_54 int_j_55;
                arg_assert_b_49 = appl_j_56;
                var_j_57 = expr_b_48;
                var_j_58 = arg_assert_b_49;
                appl_j_59 = var_j_57 var_j_58;
                fun_ret_b_50 = appl_j_59;
                bool_j_60 = false;
                fail_b_46 = bool_j_60;
                flatten_fun_j_69 = fun expr_b_45 -> (
                    var_j_61 = expr_b_45;
                    m_match_bool_j_63 = var_j_61 ~ any;
                    m_match_bool_j_66 = var_j_61 ~ int;
                    m_match_cond_j_67 = m_match_bool_j_66 ? (
                            bool_j_68 = true
                        ) : (
                            m_match_cond_j_64 = m_match_bool_j_63 ? (
                                    var_j_65 = fail_b_46
                                ) : (
                                    void_j_62 = {}
                                )
                        ));
                flatten_fun_j_71 = fun bj_null_j_21 -> (
                    input_j_70 = input);
                flatten_fun_j_73 = fun expr_b_47 -> (
                    var_j_72 = expr_b_47);
                record_j_74 = {checker = flatten_fun_j_69, generator = flatten_fun_j_71, wrapper = flatten_fun_j_73};
                proj_j_75 = record_j_74.checker;
                var_j_76 = fun_ret_b_50;
                appl_j_77 = proj_j_75 var_j_76);
            flatten_fun_j_123 = fun bj_null_j_24 -> (
                flatten_fun_j_122 = fun arg_assume_b_40 -> (
                    bool_j_79 = false;
                    fail_b_35 = bool_j_79;
                    flatten_fun_j_88 = fun expr_b_34 -> (
                        var_j_80 = expr_b_34;
                        m_match_bool_j_82 = var_j_80 ~ any;
                        m_match_bool_j_85 = var_j_80 ~ int;
                        m_match_cond_j_86 = m_match_bool_j_85 ? (
                                bool_j_87 = true
                            ) : (
                                m_match_cond_j_83 = m_match_bool_j_82 ? (
                                        var_j_84 = fail_b_35
                                    ) : (
                                        void_j_81 = {}
                                    )
                            ));
                    flatten_fun_j_90 = fun bj_null_j_22 -> (
                        input_j_89 = input);
                    flatten_fun_j_92 = fun expr_b_36 -> (
                        var_j_91 = expr_b_36);
                    record_j_93 = {checker = flatten_fun_j_88, generator = flatten_fun_j_90, wrapper = flatten_fun_j_92};
                    proj_j_94 = record_j_93.checker;
                    var_j_95 = arg_assume_b_40;
                    appl_j_96 = proj_j_94 var_j_95;
                    if_j_121 = appl_j_96 ? (
                            bool_j_97 = false;
                            fail_b_38 = bool_j_97;
                            flatten_fun_j_106 = fun expr_b_37 -> (
                                var_j_98 = expr_b_37;
                                m_match_bool_j_100 = var_j_98 ~ any;
                                m_match_bool_j_103 = var_j_98 ~ int;
                                m_match_cond_j_104 = m_match_bool_j_103 ? (
                                        bool_j_105 = true
                                    ) : (
                                        m_match_cond_j_101 = m_match_bool_j_100 ? (
                                                var_j_102 = fail_b_38
                                            ) : (
                                                void_j_99 = {}
                                            )
                                    ));
                            flatten_fun_j_108 = fun bj_null_j_23 -> (
                                input_j_107 = input);
                            flatten_fun_j_110 = fun expr_b_39 -> (
                                var_j_109 = expr_b_39);
                            record_j_111 = {checker = flatten_fun_j_106, generator = flatten_fun_j_108, wrapper = flatten_fun_j_110};
                            proj_j_112 = record_j_111.generator;
                            int_j_113 = 0;
                            appl_j_114 = proj_j_112 int_j_113
                        ) : (
                            bool_j_115 = false;
                            fail_b_41 = bool_j_115;
                            var_j_116 = fail_b_41;
                            assert_pred_j_117 = var_j_116;
                            assert_res_j_118 = assert_pred_j_117 ? (
                                    assert_res_true_j_119 = {}
                                ) : (
                                    ab_j_120 = abort
                                )
                        )));
            flatten_fun_j_169 = fun expr_b_57 -> (
                flatten_fun_j_168 = fun arg_b_58 -> (
                    bool_j_124 = false;
                    fail_b_52 = bool_j_124;
                    flatten_fun_j_133 = fun expr_b_51 -> (
                        var_j_125 = expr_b_51;
                        m_match_bool_j_127 = var_j_125 ~ any;
                        m_match_bool_j_130 = var_j_125 ~ int;
                        m_match_cond_j_131 = m_match_bool_j_130 ? (
                                bool_j_132 = true
                            ) : (
                                m_match_cond_j_128 = m_match_bool_j_127 ? (
                                        var_j_129 = fail_b_52
                                    ) : (
                                        void_j_126 = {}
                                    )
                            ));
                    flatten_fun_j_135 = fun bj_null_j_25 -> (
                        input_j_134 = input);
                    flatten_fun_j_137 = fun expr_b_53 -> (
                        var_j_136 = expr_b_53);
                    record_j_138 = {checker = flatten_fun_j_133, generator = flatten_fun_j_135, wrapper = flatten_fun_j_137};
                    proj_j_139 = record_j_138.checker;
                    var_j_140 = arg_b_58;
                    m_i_699 = proj_j_139 ~ fun;
                    appl_j_141 = m_i_699 ? (
                            c_appl_i_700 = proj_j_139 var_j_140
                        ) : (
                            ab_i_701 = abort
                        );
                    m_i_702 = appl_j_141 ~ bool;
                    if_j_167 = m_i_702 ? (
                            c_cond_i_709 = appl_j_141 ? (
                                    bool_j_142 = false;
                                    fail_b_55 = bool_j_142;
                                    flatten_fun_j_151 = fun expr_b_54 -> (
                                        var_j_143 = expr_b_54;
                                        m_match_bool_j_145 = var_j_143 ~ any;
                                        m_match_bool_j_148 = var_j_143 ~ int;
                                        m_match_cond_j_149 = m_match_bool_j_148 ? (
                                                bool_j_150 = true
                                            ) : (
                                                m_match_cond_j_146 = m_match_bool_j_145 ? (
                                                        var_j_147 = fail_b_55
                                                    ) : (
                                                        void_j_144 = 
                                                            {}
                                                    )
                                            ));
                                    flatten_fun_j_153 = fun bj_null_j_26 -> (
                                        input_j_152 = input);
                                    flatten_fun_j_155 = fun expr_b_56 -> (
                                        var_j_154 = expr_b_56);
                                    record_j_156 = {checker = flatten_fun_j_151, generator = flatten_fun_j_153, wrapper = flatten_fun_j_155};
                                    proj_j_157 = record_j_156.wrapper;
                                    var_j_158 = expr_b_57;
                                    var_j_159 = arg_b_58;
                                    m_i_703 = var_j_158 ~ fun;
                                    appl_j_160 = m_i_703 ? (
                                            c_appl_i_704 = var_j_158 var_j_159
                                        ) : (
                                            ab_i_705 = abort
                                        );
                                    m_i_706 = proj_j_157 ~ fun;
                                    appl_j_161 = m_i_706 ? (
                                            c_appl_i_707 = proj_j_157 appl_j_160
                                        ) : (
                                            ab_i_708 = abort
                                        )
                                ) : (
                                    bool_j_162 = false;
                                    assert_pred_j_163 = bool_j_162;
                                    assert_res_j_164 = assert_pred_j_163 ? (
                                            assert_res_true_j_165 = {}
                                        ) : (
                                            ab_j_166 = abort
                                        )
                                )
                        ) : (
                            ab_i_710 = abort
                        )));
            record_j_170 = {checker = flatten_fun_j_78, generator = flatten_fun_j_123, wrapper = flatten_fun_j_169};
            proj_j_171 = record_j_170.checker;
            var_j_172 = f_b_2;
            appl_j_173 = proj_j_171 var_j_172;
            arg_check_b_3 = appl_j_173;
            var_j_174 = arg_check_b_3;
            if_j_230 = var_j_174 ? (
                    flatten_fun_j_222 = fun x_b_0 -> (
                        bool_j_175 = false;
                        fail_b_60 = bool_j_175;
                        flatten_fun_j_184 = fun expr_b_59 -> (
                            var_j_176 = expr_b_59;
                            m_match_bool_j_178 = var_j_176 ~ any;
                            m_match_bool_j_181 = var_j_176 ~ int;
                            m_match_cond_j_182 = m_match_bool_j_181 ? (
                                    bool_j_183 = true
                                ) : (
                                    m_match_cond_j_179 = m_match_bool_j_178 ? (
                                            var_j_180 = fail_b_60
                                        ) : (
                                            void_j_177 = {}
                                        )
                                ));
                        flatten_fun_j_186 = fun bj_null_j_27 -> (
                            input_j_185 = input);
                        flatten_fun_j_188 = fun expr_b_61 -> (
                            var_j_187 = expr_b_61);
                        record_j_189 = {checker = flatten_fun_j_184, generator = flatten_fun_j_186, wrapper = flatten_fun_j_188};
                        proj_j_190 = record_j_189.checker;
                        var_j_191 = x_b_0;
                        appl_j_192 = proj_j_190 var_j_191;
                        arg_check_b_1 = appl_j_192;
                        var_j_193 = arg_check_b_1;
                        if_j_221 = var_j_193 ? (
                                bool_j_194 = false;
                                fail_b_63 = bool_j_194;
                                flatten_fun_j_203 = fun expr_b_62 -> (
                                    var_j_195 = expr_b_62;
                                    m_match_bool_j_197 = var_j_195 ~ any;
                                    m_match_bool_j_200 = var_j_195 ~ int;
                                    m_match_cond_j_201 = m_match_bool_j_200 ? (
                                            bool_j_202 = true
                                        ) : (
                                            m_match_cond_j_198 = m_match_bool_j_197 ? (
                                                    var_j_199 = fail_b_63
                                                ) : (
                                                    void_j_196 = {}
                                                )
                                        ));
                                flatten_fun_j_205 = fun bj_null_j_28 -> (
                                    input_j_204 = input);
                                flatten_fun_j_207 = fun expr_b_64 -> (
                                    var_j_206 = expr_b_64);
                                record_j_208 = {checker = flatten_fun_j_203, generator = flatten_fun_j_205, wrapper = flatten_fun_j_207};
                                proj_j_209 = record_j_208.wrapper;
                                var_j_210 = f;
                                var_j_211 = f;
                                var_j_212 = x_j_29;
                                m_i_711 = var_j_211 ~ fun;
                                appl_j_213 = m_i_711 ? (
                                        c_appl_i_712 = var_j_211 var_j_212
                                    ) : (
                                        ab_i_713 = abort
                                    );
                                m_i_714 = var_j_210 ~ fun;
                                appl_j_214 = m_i_714 ? (
                                        c_appl_i_715 = var_j_210 appl_j_213
                                    ) : (
                                        ab_i_716 = abort
                                    );
                                m_i_717 = proj_j_209 ~ fun;
                                appl_j_215 = m_i_717 ? (
                                        c_appl_i_718 = proj_j_209 appl_j_214
                                    ) : (
                                        ab_i_719 = abort
                                    )
                            ) : (
                                var_j_216 = arg_check_b_1;
                                assert_pred_j_217 = var_j_216;
                                assert_res_j_218 = assert_pred_j_217 ? (
                                        assert_res_true_j_219 = {}
                                    ) : (
                                        ab_j_220 = abort
                                    )
                            ));
                    var_j_223 = x_j_29;
                    appl_j_224 = flatten_fun_j_222 var_j_223
                ) : (
                    var_j_225 = arg_check_b_3;
                    assert_pred_j_226 = var_j_225;
                    assert_res_j_227 = assert_pred_j_226 ? (
                            assert_res_true_j_228 = {}
                        ) : (
                            ab_j_229 = abort
                        )
                ));
        var_j_232 = f;
        appl_j_233 = flatten_fun_j_231 var_j_232));
twice = twice_j_235;
flatten_fun_j_275 = fun expr_b_20 -> (
    bool_j_236 = false;
    fail_b_15 = bool_j_236;
    flatten_fun_j_245 = fun expr_b_14 -> (
        var_j_237 = expr_b_14;
        m_match_bool_j_239 = var_j_237 ~ any;
        m_match_bool_j_242 = var_j_237 ~ int;
        m_match_cond_j_243 = m_match_bool_j_242 ? (
                bool_j_244 = true
            ) : (
                m_match_cond_j_240 = m_match_bool_j_239 ? (
                        var_j_241 = fail_b_15
                    ) : (
                        void_j_238 = {}
                    )
            ));
    flatten_fun_j_247 = fun bj_null -> (
        input_j_246 = input);
    flatten_fun_j_249 = fun expr_b_16 -> (
        var_j_248 = expr_b_16);
    record_j_250 = {checker = flatten_fun_j_245, generator = flatten_fun_j_247, wrapper = flatten_fun_j_249};
    proj_j_251 = record_j_250.generator;
    int_j_252 = 0;
    appl_j_253 = proj_j_251 int_j_252;
    arg_assert_b_21 = appl_j_253;
    var_j_254 = expr_b_20;
    var_j_255 = arg_assert_b_21;
    appl_j_256 = var_j_254 var_j_255;
    fun_ret_b_22 = appl_j_256;
    bool_j_257 = false;
    fail_b_18 = bool_j_257;
    flatten_fun_j_266 = fun expr_b_17 -> (
        var_j_258 = expr_b_17;
        m_match_bool_j_260 = var_j_258 ~ any;
        m_match_bool_j_263 = var_j_258 ~ int;
        m_match_cond_j_264 = m_match_bool_j_263 ? (
                bool_j_265 = true
            ) : (
                m_match_cond_j_261 = m_match_bool_j_260 ? (
                        var_j_262 = fail_b_18
                    ) : (
                        void_j_259 = {}
                    )
            ));
    flatten_fun_j_268 = fun bj_null_j_0 -> (
        input_j_267 = input);
    flatten_fun_j_270 = fun expr_b_19 -> (
        var_j_269 = expr_b_19);
    record_j_271 = {checker = flatten_fun_j_266, generator = flatten_fun_j_268, wrapper = flatten_fun_j_270};
    proj_j_272 = record_j_271.checker;
    var_j_273 = fun_ret_b_22;
    appl_j_274 = proj_j_272 var_j_273);
flatten_fun_j_320 = fun bj_null_j_3 -> (
    flatten_fun_j_319 = fun arg_assume_b_12 -> (
        bool_j_276 = false;
        fail_b_7 = bool_j_276;
        flatten_fun_j_285 = fun expr_b_6 -> (
            var_j_277 = expr_b_6;
            m_match_bool_j_279 = var_j_277 ~ any;
            m_match_bool_j_282 = var_j_277 ~ int;
            m_match_cond_j_283 = m_match_bool_j_282 ? (
                    bool_j_284 = true
                ) : (
                    m_match_cond_j_280 = m_match_bool_j_279 ? (
                            var_j_281 = fail_b_7
                        ) : (
                            void_j_278 = {}
                        )
                ));
        flatten_fun_j_287 = fun bj_null_j_1 -> (
            input_j_286 = input);
        flatten_fun_j_289 = fun expr_b_8 -> (
            var_j_288 = expr_b_8);
        record_j_290 = {checker = flatten_fun_j_285, generator = flatten_fun_j_287, wrapper = flatten_fun_j_289};
        proj_j_291 = record_j_290.checker;
        var_j_292 = arg_assume_b_12;
        appl_j_293 = proj_j_291 var_j_292;
        if_j_318 = appl_j_293 ? (
                bool_j_294 = false;
                fail_b_10 = bool_j_294;
                flatten_fun_j_303 = fun expr_b_9 -> (
                    var_j_295 = expr_b_9;
                    m_match_bool_j_297 = var_j_295 ~ any;
                    m_match_bool_j_300 = var_j_295 ~ int;
                    m_match_cond_j_301 = m_match_bool_j_300 ? (
                            bool_j_302 = true
                        ) : (
                            m_match_cond_j_298 = m_match_bool_j_297 ? (
                                    var_j_299 = fail_b_10
                                ) : (
                                    void_j_296 = {}
                                )
                        ));
                flatten_fun_j_305 = fun bj_null_j_2 -> (
                    input_j_304 = input);
                flatten_fun_j_307 = fun expr_b_11 -> (
                    var_j_306 = expr_b_11);
                record_j_308 = {checker = flatten_fun_j_303, generator = flatten_fun_j_305, wrapper = flatten_fun_j_307};
                proj_j_309 = record_j_308.generator;
                int_j_310 = 0;
                appl_j_311 = proj_j_309 int_j_310
            ) : (
                bool_j_312 = false;
                fail_b_13 = bool_j_312;
                var_j_313 = fail_b_13;
                assert_pred_j_314 = var_j_313;
                assert_res_j_315 = assert_pred_j_314 ? (
                        assert_res_true_j_316 = {}
                    ) : (
                        ab_j_317 = abort
                    )
            )));
flatten_fun_j_366 = fun expr_b_29 -> (
    flatten_fun_j_365 = fun arg_b_30 -> (
        bool_j_321 = false;
        fail_b_24 = bool_j_321;
        flatten_fun_j_330 = fun expr_b_23 -> (
            var_j_322 = expr_b_23;
            m_match_bool_j_324 = var_j_322 ~ any;
            m_match_bool_j_327 = var_j_322 ~ int;
            m_match_cond_j_328 = m_match_bool_j_327 ? (
                    bool_j_329 = true
                ) : (
                    m_match_cond_j_325 = m_match_bool_j_324 ? (
                            var_j_326 = fail_b_24
                        ) : (
                            void_j_323 = {}
                        )
                ));
        flatten_fun_j_332 = fun bj_null_j_4 -> (
            input_j_331 = input);
        flatten_fun_j_334 = fun expr_b_25 -> (
            var_j_333 = expr_b_25);
        record_j_335 = {checker = flatten_fun_j_330, generator = flatten_fun_j_332, wrapper = flatten_fun_j_334};
        proj_j_336 = record_j_335.checker;
        var_j_337 = arg_b_30;
        m_i_720 = proj_j_336 ~ fun;
        appl_j_338 = m_i_720 ? (
                c_appl_i_721 = proj_j_336 var_j_337
            ) : (
                ab_i_722 = abort
            );
        m_i_723 = appl_j_338 ~ bool;
        if_j_364 = m_i_723 ? (
                c_cond_i_730 = appl_j_338 ? (
                        bool_j_339 = false;
                        fail_b_27 = bool_j_339;
                        flatten_fun_j_348 = fun expr_b_26 -> (
                            var_j_340 = expr_b_26;
                            m_match_bool_j_342 = var_j_340 ~ any;
                            m_match_bool_j_345 = var_j_340 ~ int;
                            m_match_cond_j_346 = m_match_bool_j_345 ? (
                                    bool_j_347 = true
                                ) : (
                                    m_match_cond_j_343 = m_match_bool_j_342 ? (
                                            var_j_344 = fail_b_27
                                        ) : (
                                            void_j_341 = {}
                                        )
                                ));
                        flatten_fun_j_350 = fun bj_null_j_5 -> (
                            input_j_349 = input);
                        flatten_fun_j_352 = fun expr_b_28 -> (
                            var_j_351 = expr_b_28);
                        record_j_353 = {checker = flatten_fun_j_348, generator = flatten_fun_j_350, wrapper = flatten_fun_j_352};
                        proj_j_354 = record_j_353.wrapper;
                        var_j_355 = expr_b_29;
                        var_j_356 = arg_b_30;
                        m_i_724 = var_j_355 ~ fun;
                        appl_j_357 = m_i_724 ? (
                                c_appl_i_725 = var_j_355 var_j_356
                            ) : (
                                ab_i_726 = abort
                            );
                        m_i_727 = proj_j_354 ~ fun;
                        appl_j_358 = m_i_727 ? (
                                c_appl_i_728 = proj_j_354 appl_j_357
                            ) : (
                                ab_i_729 = abort
                            )
                    ) : (
                        bool_j_359 = false;
                        assert_pred_j_360 = bool_j_359;
                        assert_res_j_361 = assert_pred_j_360 ? (
                                assert_res_true_j_362 = {}
                            ) : (
                                ab_j_363 = abort
                            )
                    )
            ) : (
                ab_i_731 = abort
            )));
record_j_367 = {checker = flatten_fun_j_275, generator = flatten_fun_j_320, wrapper = flatten_fun_j_366};
proj_j_368 = record_j_367.generator;
int_j_369 = 0;
appl_j_370 = proj_j_368 int_j_369;
f_b_113 = appl_j_370;
bool_j_371 = false;
fail_b_32 = bool_j_371;
flatten_fun_j_380 = fun expr_b_31 -> (
    var_j_372 = expr_b_31;
    m_match_bool_j_374 = var_j_372 ~ any;
    m_match_bool_j_377 = var_j_372 ~ int;
    m_match_cond_j_378 = m_match_bool_j_377 ? (
            bool_j_379 = true
        ) : (
            m_match_cond_j_375 = m_match_bool_j_374 ? (
                    var_j_376 = fail_b_32
                ) : (
                    void_j_373 = {}
                )
        ));
flatten_fun_j_382 = fun bj_null_j_6 -> (
    input_j_381 = input);
flatten_fun_j_384 = fun expr_b_33 -> (
    var_j_383 = expr_b_33);
record_j_385 = {checker = flatten_fun_j_380, generator = flatten_fun_j_382, wrapper = flatten_fun_j_384};
proj_j_386 = record_j_385.generator;
int_j_387 = 0;
appl_j_388 = proj_j_386 int_j_387;
x_b_112 = appl_j_388;
bool_j_389 = false;
fail_b_66 = bool_j_389;
flatten_fun_j_398 = fun expr_b_65 -> (
    var_j_390 = expr_b_65;
    m_match_bool_j_392 = var_j_390 ~ any;
    m_match_bool_j_395 = var_j_390 ~ int;
    m_match_cond_j_396 = m_match_bool_j_395 ? (
            bool_j_397 = true
        ) : (
            m_match_cond_j_393 = m_match_bool_j_392 ? (
                    var_j_394 = fail_b_66
                ) : (
                    void_j_391 = {}
                )
        ));
flatten_fun_j_400 = fun bj_null_j_7 -> (
    input_j_399 = input);
flatten_fun_j_402 = fun expr_b_67 -> (
    var_j_401 = expr_b_67);
record_j_403 = {checker = flatten_fun_j_398, generator = flatten_fun_j_400, wrapper = flatten_fun_j_402};
proj_j_404 = record_j_403.checker;
appl_j_407 = twice f_b_113;
appl_j_409 = appl_j_407 x_b_112;
appl_j_410 = proj_j_404 appl_j_409;
check_res_b_116 = appl_j_410;
if_j_688 = check_res_b_116 ? (
        inc_j_546 = fun x -> (
            flatten_fun_j_543 = fun x_b_4 -> (
                flatten_fun_j_440 = fun expr_b_86 -> (
                    bool_j_412 = false;
                    fail_b_84 = bool_j_412;
                    flatten_fun_j_421 = fun expr_b_83 -> (
                        var_j_413 = expr_b_83;
                        m_match_bool_j_415 = var_j_413 ~ any;
                        m_match_bool_j_418 = var_j_413 ~ int;
                        m_match_cond_j_419 = m_match_bool_j_418 ? (
                                bool_j_420 = true
                            ) : (
                                m_match_cond_j_416 = m_match_bool_j_415 ? (
                                        var_j_417 = fail_b_84
                                    ) : (
                                        void_j_414 = {}
                                    )
                            ));
                    flatten_fun_j_423 = fun bj_null_j_14 -> (
                        input_j_422 = input);
                    flatten_fun_j_425 = fun expr_b_85 -> (
                        var_j_424 = expr_b_85);
                    record_j_426 = {checker = flatten_fun_j_421, generator = flatten_fun_j_423, wrapper = flatten_fun_j_425};
                    proj_j_427 = record_j_426.checker;
                    var_j_428 = expr_b_86;
                    appl_j_429 = proj_j_427 var_j_428;
                    t_check_b_87 = appl_j_429;
                    var_j_430 = t_check_b_87;
                    if_j_439 = var_j_430 ? (
                            bool_j_431 = false;
                            pred_check_b_88 = bool_j_431;
                            var_j_432 = isPos;
                            var_j_433 = expr_b_86;
                            appl_j_434 = var_j_432 var_j_433;
                            if_j_437 = appl_j_434 ? (
                                    bool_j_435 = true
                                ) : (
                                    var_j_436 = pred_check_b_88
                                )
                        ) : (
                            var_j_438 = t_check_b_87
                        ));
                flatten_fun_j_466 = fun bj_null_j_16 -> (
                    bool_j_441 = false;
                    fail_b_80 = bool_j_441;
                    flatten_fun_j_450 = fun expr_b_79 -> (
                        var_j_442 = expr_b_79;
                        m_match_bool_j_444 = var_j_442 ~ any;
                        m_match_bool_j_447 = var_j_442 ~ int;
                        m_match_cond_j_448 = m_match_bool_j_447 ? (
                                bool_j_449 = true
                            ) : (
                                m_match_cond_j_445 = m_match_bool_j_444 ? (
                                        var_j_446 = fail_b_80
                                    ) : (
                                        void_j_443 = {}
                                    )
                            ));
                    flatten_fun_j_452 = fun bj_null_j_15 -> (
                        input_j_451 = input);
                    flatten_fun_j_454 = fun expr_b_81 -> (
                        var_j_453 = expr_b_81);
                    record_j_455 = {checker = flatten_fun_j_450, generator = flatten_fun_j_452, wrapper = flatten_fun_j_454};
                    proj_j_456 = record_j_455.generator;
                    int_j_457 = 0;
                    appl_j_458 = proj_j_456 int_j_457;
                    candidate_b_82 = appl_j_458;
                    var_j_459 = isPos;
                    var_j_460 = candidate_b_82;
                    appl_j_461 = var_j_459 var_j_460;
                    if_j_465 = appl_j_461 ? (
                            var_j_462 = candidate_b_82
                        ) : (
                            bool_j_463 = false;
                            assume_j_464 = assume bool_j_463
                        ));
                flatten_fun_j_468 = fun expr_b_89 -> (
                    var_j_467 = expr_b_89);
                record_j_469 = {checker = flatten_fun_j_440, generator = flatten_fun_j_466, wrapper = flatten_fun_j_468};
                proj_j_470 = record_j_469.checker;
                var_j_471 = x_b_4;
                appl_j_472 = proj_j_470 var_j_471;
                arg_check_b_5 = appl_j_472;
                var_j_473 = arg_check_b_5;
                if_j_542 = var_j_473 ? (
                        flatten_fun_j_502 = fun expr_b_97 -> (
                            bool_j_474 = false;
                            fail_b_95 = bool_j_474;
                            flatten_fun_j_483 = fun expr_b_94 -> (
                                var_j_475 = expr_b_94;
                                m_match_bool_j_477 = var_j_475 ~ any;
                                m_match_bool_j_480 = var_j_475 ~ int;
                                m_match_cond_j_481 = m_match_bool_j_480 ? (
                                        bool_j_482 = true
                                    ) : (
                                        m_match_cond_j_478 = m_match_bool_j_477 ? (
                                                var_j_479 = fail_b_95
                                            ) : (
                                                void_j_476 = {}
                                            )
                                    ));
                            flatten_fun_j_485 = fun bj_null_j_17 -> (
                                input_j_484 = input);
                            flatten_fun_j_487 = fun expr_b_96 -> (
                                var_j_486 = expr_b_96);
                            record_j_488 = {checker = flatten_fun_j_483, generator = flatten_fun_j_485, wrapper = flatten_fun_j_487};
                            proj_j_489 = record_j_488.checker;
                            var_j_490 = expr_b_97;
                            appl_j_491 = proj_j_489 var_j_490;
                            t_check_b_98 = appl_j_491;
                            var_j_492 = t_check_b_98;
                            if_j_501 = var_j_492 ? (
                                    bool_j_493 = false;
                                    pred_check_b_99 = bool_j_493;
                                    var_j_494 = isNeg;
                                    var_j_495 = expr_b_97;
                                    appl_j_496 = var_j_494 var_j_495;
                                    if_j_499 = appl_j_496 ? (
                                            bool_j_497 = true
                                        ) : (
                                            var_j_498 = pred_check_b_99
                                        )
                                ) : (
                                    var_j_500 = t_check_b_98
                                ));
                        flatten_fun_j_528 = fun bj_null_j_19 -> (
                            bool_j_503 = false;
                            fail_b_91 = bool_j_503;
                            flatten_fun_j_512 = fun expr_b_90 -> (
                                var_j_504 = expr_b_90;
                                m_match_bool_j_506 = var_j_504 ~ any;
                                m_match_bool_j_509 = var_j_504 ~ int;
                                m_match_cond_j_510 = m_match_bool_j_509 ? (
                                        bool_j_511 = true
                                    ) : (
                                        m_match_cond_j_507 = m_match_bool_j_506 ? (
                                                var_j_508 = fail_b_91
                                            ) : (
                                                void_j_505 = {}
                                            )
                                    ));
                            flatten_fun_j_514 = fun bj_null_j_18 -> (
                                input_j_513 = input);
                            flatten_fun_j_516 = fun expr_b_92 -> (
                                var_j_515 = expr_b_92);
                            record_j_517 = {checker = flatten_fun_j_512, generator = flatten_fun_j_514, wrapper = flatten_fun_j_516};
                            proj_j_518 = record_j_517.generator;
                            int_j_519 = 0;
                            appl_j_520 = proj_j_518 int_j_519;
                            candidate_b_93 = appl_j_520;
                            var_j_521 = isNeg;
                            var_j_522 = candidate_b_93;
                            appl_j_523 = var_j_521 var_j_522;
                            if_j_527 = appl_j_523 ? (
                                    var_j_524 = candidate_b_93
                                ) : (
                                    bool_j_525 = false;
                                    assume_j_526 = assume bool_j_525
                                ));
                        flatten_fun_j_530 = fun expr_b_100 -> (
                            var_j_529 = expr_b_100);
                        record_j_531 = {checker = flatten_fun_j_502, generator = flatten_fun_j_528, wrapper = flatten_fun_j_530};
                        proj_j_532 = record_j_531.wrapper;
                        var_j_533 = x;
                        int_j_534 = 1;
                        m_bl_i_732 = var_j_533 ~ int;
                        m_br_i_733 = int_j_534 ~ int;
                        m_b_i_734 = m_bl_i_732 and m_br_i_733;
                        binop_j_535 = m_b_i_734 ? (
                                c_binop_i_735 = var_j_533 + int_j_534
                            ) : (
                                ab_i_736 = abort
                            );
                        m_i_737 = proj_j_532 ~ fun;
                        appl_j_536 = m_i_737 ? (
                                c_appl_i_738 = proj_j_532 binop_j_535
                            ) : (
                                ab_i_739 = abort
                            )
                    ) : (
                        var_j_537 = arg_check_b_5;
                        assert_pred_j_538 = var_j_537;
                        assert_res_j_539 = assert_pred_j_538 ? (
                                assert_res_true_j_540 = {}
                            ) : (
                                ab_j_541 = abort
                            )
                    ));
            var_j_544 = x;
            appl_j_545 = flatten_fun_j_543 var_j_544);
        inc = inc_j_546;
        flatten_fun_j_575 = fun expr_b_75 -> (
            bool_j_547 = false;
            fail_b_73 = bool_j_547;
            flatten_fun_j_556 = fun expr_b_72 -> (
                var_j_548 = expr_b_72;
                m_match_bool_j_550 = var_j_548 ~ any;
                m_match_bool_j_553 = var_j_548 ~ int;
                m_match_cond_j_554 = m_match_bool_j_553 ? (
                        bool_j_555 = true
                    ) : (
                        m_match_cond_j_551 = m_match_bool_j_550 ? (
                                var_j_552 = fail_b_73
                            ) : (
                                void_j_549 = {}
                            )
                    ));
            flatten_fun_j_558 = fun bj_null_j_8 -> (
                input_j_557 = input);
            flatten_fun_j_560 = fun expr_b_74 -> (
                var_j_559 = expr_b_74);
            record_j_561 = {checker = flatten_fun_j_556, generator = flatten_fun_j_558, wrapper = flatten_fun_j_560};
            proj_j_562 = record_j_561.checker;
            var_j_563 = expr_b_75;
            appl_j_564 = proj_j_562 var_j_563;
            t_check_b_76 = appl_j_564;
            var_j_565 = t_check_b_76;
            if_j_574 = var_j_565 ? (
                    bool_j_566 = false;
                    pred_check_b_77 = bool_j_566;
                    var_j_567 = isPos;
                    var_j_568 = expr_b_75;
                    appl_j_569 = var_j_567 var_j_568;
                    if_j_572 = appl_j_569 ? (
                            bool_j_570 = true
                        ) : (
                            var_j_571 = pred_check_b_77
                        )
                ) : (
                    var_j_573 = t_check_b_76
                ));
        flatten_fun_j_601 = fun bj_null_j_10 -> (
            bool_j_576 = false;
            fail_b_69 = bool_j_576;
            flatten_fun_j_585 = fun expr_b_68 -> (
                var_j_577 = expr_b_68;
                m_match_bool_j_579 = var_j_577 ~ any;
                m_match_bool_j_582 = var_j_577 ~ int;
                m_match_cond_j_583 = m_match_bool_j_582 ? (
                        bool_j_584 = true
                    ) : (
                        m_match_cond_j_580 = m_match_bool_j_579 ? (
                                var_j_581 = fail_b_69
                            ) : (
                                void_j_578 = {}
                            )
                    ));
            flatten_fun_j_587 = fun bj_null_j_9 -> (
                input_j_586 = input);
            flatten_fun_j_589 = fun expr_b_70 -> (
                var_j_588 = expr_b_70);
            record_j_590 = {checker = flatten_fun_j_585, generator = flatten_fun_j_587, wrapper = flatten_fun_j_589};
            proj_j_591 = record_j_590.generator;
            int_j_592 = 0;
            appl_j_593 = proj_j_591 int_j_592;
            candidate_b_71 = appl_j_593;
            var_j_594 = isPos;
            var_j_595 = candidate_b_71;
            appl_j_596 = var_j_594 var_j_595;
            if_j_600 = appl_j_596 ? (
                    var_j_597 = candidate_b_71
                ) : (
                    bool_j_598 = false;
                    assume_j_599 = assume bool_j_598
                ));
        flatten_fun_j_603 = fun expr_b_78 -> (
            var_j_602 = expr_b_78);
        record_j_604 = {checker = flatten_fun_j_575, generator = flatten_fun_j_601, wrapper = flatten_fun_j_603};
        proj_j_605 = record_j_604.generator;
        int_j_606 = 0;
        appl_j_607 = proj_j_605 int_j_606;
        x_b_114 = appl_j_607;
        flatten_fun_j_636 = fun expr_b_108 -> (
            bool_j_608 = false;
            fail_b_106 = bool_j_608;
            flatten_fun_j_617 = fun expr_b_105 -> (
                var_j_609 = expr_b_105;
                m_match_bool_j_611 = var_j_609 ~ any;
                m_match_bool_j_614 = var_j_609 ~ int;
                m_match_cond_j_615 = m_match_bool_j_614 ? (
                        bool_j_616 = true
                    ) : (
                        m_match_cond_j_612 = m_match_bool_j_611 ? (
                                var_j_613 = fail_b_106
                            ) : (
                                void_j_610 = {}
                            )
                    ));
            flatten_fun_j_619 = fun bj_null_j_11 -> (
                input_j_618 = input);
            flatten_fun_j_621 = fun expr_b_107 -> (
                var_j_620 = expr_b_107);
            record_j_622 = {checker = flatten_fun_j_617, generator = flatten_fun_j_619, wrapper = flatten_fun_j_621};
            proj_j_623 = record_j_622.checker;
            var_j_624 = expr_b_108;
            appl_j_625 = proj_j_623 var_j_624;
            t_check_b_109 = appl_j_625;
            var_j_626 = t_check_b_109;
            if_j_635 = var_j_626 ? (
                    bool_j_627 = false;
                    pred_check_b_110 = bool_j_627;
                    var_j_628 = isNeg;
                    var_j_629 = expr_b_108;
                    appl_j_630 = var_j_628 var_j_629;
                    if_j_633 = appl_j_630 ? (
                            bool_j_631 = true
                        ) : (
                            var_j_632 = pred_check_b_110
                        )
                ) : (
                    var_j_634 = t_check_b_109
                ));
        flatten_fun_j_662 = fun bj_null_j_13 -> (
            bool_j_637 = false;
            fail_b_102 = bool_j_637;
            flatten_fun_j_646 = fun expr_b_101 -> (
                var_j_638 = expr_b_101;
                m_match_bool_j_640 = var_j_638 ~ any;
                m_match_bool_j_643 = var_j_638 ~ int;
                m_match_cond_j_644 = m_match_bool_j_643 ? (
                        bool_j_645 = true
                    ) : (
                        m_match_cond_j_641 = m_match_bool_j_640 ? (
                                var_j_642 = fail_b_102
                            ) : (
                                void_j_639 = {}
                            )
                    ));
            flatten_fun_j_648 = fun bj_null_j_12 -> (
                input_j_647 = input);
            flatten_fun_j_650 = fun expr_b_103 -> (
                var_j_649 = expr_b_103);
            record_j_651 = {checker = flatten_fun_j_646, generator = flatten_fun_j_648, wrapper = flatten_fun_j_650};
            proj_j_652 = record_j_651.generator;
            int_j_653 = 0;
            appl_j_654 = proj_j_652 int_j_653;
            candidate_b_104 = appl_j_654;
            var_j_655 = isNeg;
            var_j_656 = candidate_b_104;
            appl_j_657 = var_j_655 var_j_656;
            if_j_661 = appl_j_657 ? (
                    var_j_658 = candidate_b_104
                ) : (
                    bool_j_659 = false;
                    assume_j_660 = assume bool_j_659
                ));
        flatten_fun_j_664 = fun expr_b_111 -> (
            var_j_663 = expr_b_111);
        record_j_665 = {checker = flatten_fun_j_636, generator = flatten_fun_j_662, wrapper = flatten_fun_j_664};
        proj_j_666 = record_j_665.checker;
        var_j_667 = inc;
        var_j_668 = x_b_114;
        appl_j_669 = var_j_667 var_j_668;
        appl_j_670 = proj_j_666 appl_j_669;
        check_res_b_115 = appl_j_670;
        var_j_671 = check_res_b_115;
        if_j_682 = var_j_671 ? (
                var_j_672 = twice;
                var_j_673 = inc;
                m_i_740 = var_j_672 ~ fun;
                appl_j_674 = m_i_740 ? (
                        c_appl_i_741 = var_j_672 var_j_673
                    ) : (
                        ab_i_742 = abort
                    );
                int_j_675 = 0;
                m_i_743 = appl_j_674 ~ fun;
                appl_j_676 = m_i_743 ? (
                        c_appl_i_744 = appl_j_674 int_j_675
                    ) : (
                        ab_i_745 = abort
                    )
            ) : (
                error_var_j_677 = check_res_b_115;
                assert_pred_j_678 = error_var_j_677;
                assert_res_j_679 = assert_pred_j_678 ? (
                        assert_res_true_j_680 = {}
                    ) : (
                        ab_j_681 = abort
                    )
            )
    ) : (
        error_var_j_683 = check_res_b_116;
        assert_pred_j_684 = error_var_j_683;
        assert_res_j_685 = assert_pred_j_684 ? (
                assert_res_true_j_686 = {}
            ) : (
                ab_j_687 = abort
            )
    );
i_result = if_j_688