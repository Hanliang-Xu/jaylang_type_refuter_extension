i_first = {};
neg_j_60 = fun x -> (
    flatten_fun_j_57 = fun x_b_0 -> (
        int_j_3 = 0;
        input_j_4 = input;
        m_bl_i_109 = int_j_3 ~ int;
        m_br_i_110 = input_j_4 ~ int;
        m_b_i_111 = m_bl_i_109 and m_br_i_110;
        binop_j_5 = m_b_i_111 ? (
                c_binop_i_112 = int_j_3 < input_j_4
            ) : (
                ab_i_113 = abort
            );
        if_j_25 = binop_j_5 ? (
                bool_j_6 = false;
                fail_b_6 = bool_j_6;
                flatten_fun_j_15 = fun expr_b_5 -> (
                    var_j_7 = expr_b_5;
                    m_match_bool_j_9 = var_j_7 ~ any;
                    m_match_bool_j_12 = var_j_7 ~ int;
                    m_match_cond_j_13 = m_match_bool_j_12 ? (
                            bool_j_14 = true
                        ) : (
                            m_match_cond_j_10 = m_match_bool_j_9 ? (
                                    var_j_11 = fail_b_6
                                ) : (
                                    void_j_8 = {}
                                )
                        ));
                flatten_fun_j_17 = fun bj_null_j_1 -> (
                    input_j_16 = input);
                flatten_fun_j_19 = fun expr_b_7 -> (
                    var_j_18 = expr_b_7);
                record_j_20 = {checker = flatten_fun_j_15, generator = flatten_fun_j_17, wrapper = flatten_fun_j_19};
                proj_j_21 = record_j_20.checker;
                var_j_22 = x_b_0;
                m_i_114 = proj_j_21 ~ fun;
                appl_j_23 = m_i_114 ? (
                        c_appl_i_115 = proj_j_21 var_j_22
                    ) : (
                        ab_i_116 = abort
                    )
            ) : (
                bool_j_24 = true
            );
        arg_check_b_1 = if_j_25;
        var_j_26 = arg_check_b_1;
        if_j_56 = var_j_26 ? (
                bool_j_27 = false;
                fail_b_9 = bool_j_27;
                flatten_fun_j_36 = fun expr_b_8 -> (
                    var_j_28 = expr_b_8;
                    m_match_bool_j_30 = var_j_28 ~ any;
                    m_match_bool_j_33 = var_j_28 ~ bool;
                    m_match_cond_j_34 = m_match_bool_j_33 ? (
                            bool_j_35 = true
                        ) : (
                            m_match_cond_j_31 = m_match_bool_j_30 ? (
                                    var_j_32 = fail_b_9
                                ) : (
                                    void_j_29 = {}
                                )
                        ));
                flatten_fun_j_40 = fun bj_null_j_2 -> (
                    int_j_37 = 0;
                    input_j_38 = input;
                    m_bl_i_117 = int_j_37 ~ int;
                    m_br_i_118 = input_j_38 ~ int;
                    m_b_i_119 = m_bl_i_117 and m_br_i_118;
                    binop_j_39 = m_b_i_119 ? (
                            c_binop_i_120 = int_j_37 <= input_j_38
                        ) : (
                            ab_i_121 = abort
                        ));
                flatten_fun_j_42 = fun expr_b_10 -> (
                    var_j_41 = expr_b_10);
                record_j_43 = {checker = flatten_fun_j_36, generator = flatten_fun_j_40, wrapper = flatten_fun_j_42};
                proj_j_44 = record_j_43.wrapper;
                int_j_45 = 0;
                int_j_46 = 1;
                m_bl_i_122 = int_j_45 ~ int;
                m_br_i_123 = int_j_46 ~ int;
                m_b_i_124 = m_bl_i_122 and m_br_i_123;
                binop_j_47 = m_b_i_124 ? (
                        c_binop_i_125 = int_j_45 - int_j_46
                    ) : (
                        ab_i_126 = abort
                    );
                var_j_48 = x;
                m_bl_i_127 = binop_j_47 ~ int;
                m_br_i_128 = var_j_48 ~ int;
                m_b_i_129 = m_bl_i_127 and m_br_i_128;
                binop_j_49 = m_b_i_129 ? (
                        c_binop_i_130 = binop_j_47 * var_j_48
                    ) : (
                        ab_i_131 = abort
                    );
                m_i_132 = proj_j_44 ~ fun;
                appl_j_50 = m_i_132 ? (
                        c_appl_i_133 = proj_j_44 binop_j_49
                    ) : (
                        ab_i_134 = abort
                    )
            ) : (
                var_j_51 = arg_check_b_1;
                assert_pred_j_52 = var_j_51;
                assert_res_j_53 = assert_pred_j_52 ? (
                        assert_res_true_j_54 = {}
                    ) : (
                        ab_j_55 = abort
                    )
            ));
    var_j_58 = x;
    appl_j_59 = flatten_fun_j_57 var_j_58);
neg = neg_j_60;
bool_j_61 = false;
fail_b_3 = bool_j_61;
flatten_fun_j_70 = fun expr_b_2 -> (
    var_j_62 = expr_b_2;
    m_match_bool_j_64 = var_j_62 ~ any;
    m_match_bool_j_67 = var_j_62 ~ int;
    m_match_cond_j_68 = m_match_bool_j_67 ? (
            bool_j_69 = true
        ) : (
            m_match_cond_j_65 = m_match_bool_j_64 ? (
                    var_j_66 = fail_b_3
                ) : (
                    void_j_63 = {}
                )
        ));
flatten_fun_j_72 = fun bj_null -> (
    input_j_71 = input);
flatten_fun_j_74 = fun expr_b_4 -> (
    var_j_73 = expr_b_4);
record_j_75 = {checker = flatten_fun_j_70, generator = flatten_fun_j_72, wrapper = flatten_fun_j_74};
proj_j_76 = record_j_75.generator;
int_j_77 = 0;
appl_j_78 = proj_j_76 int_j_77;
x_b_14 = appl_j_78;
bool_j_79 = false;
fail_b_12 = bool_j_79;
flatten_fun_j_88 = fun expr_b_11 -> (
    var_j_80 = expr_b_11;
    m_match_bool_j_82 = var_j_80 ~ any;
    m_match_bool_j_85 = var_j_80 ~ bool;
    m_match_cond_j_86 = m_match_bool_j_85 ? (
            bool_j_87 = true
        ) : (
            m_match_cond_j_83 = m_match_bool_j_82 ? (
                    var_j_84 = fail_b_12
                ) : (
                    void_j_81 = {}
                )
        ));
flatten_fun_j_92 = fun bj_null_j_0 -> (
    int_j_89 = 0;
    input_j_90 = input;
    m_bl_i_135 = int_j_89 ~ int;
    m_br_i_136 = input_j_90 ~ int;
    m_b_i_137 = m_bl_i_135 and m_br_i_136;
    binop_j_91 = m_b_i_137 ? (
            c_binop_i_138 = int_j_89 <= input_j_90
        ) : (
            ab_i_139 = abort
        ));
flatten_fun_j_94 = fun expr_b_13 -> (
    var_j_93 = expr_b_13);
record_j_95 = {checker = flatten_fun_j_88, generator = flatten_fun_j_92, wrapper = flatten_fun_j_94};
proj_j_96 = record_j_95.checker;
appl_j_99 = neg x_b_14;
appl_j_100 = proj_j_96 appl_j_99;
check_res_b_15 = appl_j_100;
if_j_108 = check_res_b_15 ? (
        var_j_102 = neg
    ) : (
        error_var_j_103 = check_res_b_15;
        assert_pred_j_104 = error_var_j_103;
        assert_res_j_105 = assert_pred_j_104 ? (
                assert_res_true_j_106 = {}
            ) : (
                ab_j_107 = abort
            )
    );
i_result = if_j_108