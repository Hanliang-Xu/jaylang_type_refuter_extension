i_first = {};
f_j_53 = fun x -> (
    g_j_10 = fun y -> (
        int_j_7 = 0;
        var_j_8 = y;
        m_bl_i_163 = int_j_7 ~ int;
        m_br_i_164 = var_j_8 ~ int;
        m_b_i_165 = m_bl_i_163 and m_br_i_164;
        binop_j_9 = m_b_i_165 ? (
                c_binop_i_166 = int_j_7 <= var_j_8
            ) : (
                ab_i_167 = abort
            ));
    g = g_j_10;
    bool_j_11 = false;
    fail_b_4 = bool_j_11;
    flatten_fun_j_20 = fun expr_b_3 -> (
        var_j_12 = expr_b_3;
        m_match_bool_j_14 = var_j_12 ~ any;
        m_match_bool_j_17 = var_j_12 ~ int;
        m_match_cond_j_18 = m_match_bool_j_17 ? (
                bool_j_19 = true
            ) : (
                m_match_cond_j_15 = m_match_bool_j_14 ? (
                        var_j_16 = fail_b_4
                    ) : (
                        void_j_13 = {}
                    )
            ));
    flatten_fun_j_22 = fun bj_null_j_5 -> (
        input_j_21 = input);
    record_j_23 = {checker = flatten_fun_j_20, generator = flatten_fun_j_22};
    proj_j_24 = record_j_23.generator;
    int_j_25 = 0;
    appl_j_26 = proj_j_24 int_j_25;
    y_b_36 = appl_j_26;
    bool_j_27 = false;
    fail_b_7 = bool_j_27;
    flatten_fun_j_36 = fun expr_b_6 -> (
        var_j_28 = expr_b_6;
        m_match_bool_j_30 = var_j_28 ~ any;
        m_match_bool_j_33 = var_j_28 ~ int;
        m_match_cond_j_34 = m_match_bool_j_33 ? (
                bool_j_35 = true
            ) : (
                m_match_cond_j_31 = m_match_bool_j_30 ? (
                        var_j_32 = fail_b_7
                    ) : (
                        void_j_29 = {}
                    )
            ));
    flatten_fun_j_38 = fun bj_null_j_6 -> (
        input_j_37 = input);
    record_j_39 = {checker = flatten_fun_j_36, generator = flatten_fun_j_38};
    proj_j_40 = record_j_39.checker;
    var_j_41 = g;
    var_j_42 = y_b_36;
    appl_j_43 = var_j_41 var_j_42;
    appl_j_44 = proj_j_40 appl_j_43;
    check_res_b_37 = appl_j_44;
    var_j_45 = check_res_b_37;
    if_j_52 = var_j_45 ? (
            var_j_46 = g
        ) : (
            error_var_j_47 = check_res_b_37;
            assert_pred_j_48 = error_var_j_47;
            assert_res_j_49 = assert_pred_j_48 ? (
                    assert_res_true_j_50 = {}
                ) : (
                    ab_j_51 = abort
                )
        ));
f = f_j_53;
bool_j_54 = false;
fail_b_1 = bool_j_54;
flatten_fun_j_63 = fun expr_b_0 -> (
    var_j_55 = expr_b_0;
    m_match_bool_j_57 = var_j_55 ~ any;
    m_match_bool_j_60 = var_j_55 ~ bool;
    m_match_cond_j_61 = m_match_bool_j_60 ? (
            bool_j_62 = true
        ) : (
            m_match_cond_j_58 = m_match_bool_j_57 ? (
                    var_j_59 = fail_b_1
                ) : (
                    void_j_56 = {}
                )
        ));
flatten_fun_j_67 = fun bj_null -> (
    int_j_64 = 0;
    input_j_65 = input;
    m_bl_i_168 = int_j_64 ~ int;
    m_br_i_169 = input_j_65 ~ int;
    m_b_i_170 = m_bl_i_168 and m_br_i_169;
    binop_j_66 = m_b_i_170 ? (
            c_binop_i_171 = int_j_64 <= input_j_65
        ) : (
            ab_i_172 = abort
        ));
record_j_68 = {checker = flatten_fun_j_63, generator = flatten_fun_j_67};
proj_j_69 = record_j_68.generator;
int_j_70 = 0;
appl_j_71 = proj_j_69 int_j_70;
x_b_34 = appl_j_71;
flatten_fun_j_107 = fun expr_b_23 -> (
    bool_j_72 = false;
    fail_b_18 = bool_j_72;
    flatten_fun_j_81 = fun expr_b_17 -> (
        var_j_73 = expr_b_17;
        m_match_bool_j_75 = var_j_73 ~ any;
        m_match_bool_j_78 = var_j_73 ~ int;
        m_match_cond_j_79 = m_match_bool_j_78 ? (
                bool_j_80 = true
            ) : (
                m_match_cond_j_76 = m_match_bool_j_75 ? (
                        var_j_77 = fail_b_18
                    ) : (
                        void_j_74 = {}
                    )
            ));
    flatten_fun_j_83 = fun bj_null_j_0 -> (
        input_j_82 = input);
    record_j_84 = {checker = flatten_fun_j_81, generator = flatten_fun_j_83};
    proj_j_85 = record_j_84.generator;
    int_j_86 = 0;
    appl_j_87 = proj_j_85 int_j_86;
    arg_assert_b_24 = appl_j_87;
    var_j_88 = expr_b_23;
    var_j_89 = arg_assert_b_24;
    appl_j_90 = var_j_88 var_j_89;
    fun_ret_b_25 = appl_j_90;
    bool_j_91 = false;
    fail_b_21 = bool_j_91;
    flatten_fun_j_100 = fun expr_b_20 -> (
        var_j_92 = expr_b_20;
        m_match_bool_j_94 = var_j_92 ~ any;
        m_match_bool_j_97 = var_j_92 ~ int;
        m_match_cond_j_98 = m_match_bool_j_97 ? (
                bool_j_99 = true
            ) : (
                m_match_cond_j_95 = m_match_bool_j_94 ? (
                        var_j_96 = fail_b_21
                    ) : (
                        void_j_93 = {}
                    )
            ));
    flatten_fun_j_102 = fun bj_null_j_1 -> (
        input_j_101 = input);
    record_j_103 = {checker = flatten_fun_j_100, generator = flatten_fun_j_102};
    proj_j_104 = record_j_103.checker;
    var_j_105 = fun_ret_b_25;
    appl_j_106 = proj_j_104 var_j_105);
flatten_fun_j_148 = fun bj_null_j_4 -> (
    flatten_fun_j_147 = fun arg_assume_b_15 -> (
        bool_j_108 = false;
        fail_b_10 = bool_j_108;
        flatten_fun_j_117 = fun expr_b_9 -> (
            var_j_109 = expr_b_9;
            m_match_bool_j_111 = var_j_109 ~ any;
            m_match_bool_j_114 = var_j_109 ~ int;
            m_match_cond_j_115 = m_match_bool_j_114 ? (
                    bool_j_116 = true
                ) : (
                    m_match_cond_j_112 = m_match_bool_j_111 ? (
                            var_j_113 = fail_b_10
                        ) : (
                            void_j_110 = {}
                        )
                ));
        flatten_fun_j_119 = fun bj_null_j_2 -> (
            input_j_118 = input);
        record_j_120 = {checker = flatten_fun_j_117, generator = flatten_fun_j_119};
        proj_j_121 = record_j_120.checker;
        var_j_122 = arg_assume_b_15;
        appl_j_123 = proj_j_121 var_j_122;
        if_j_146 = appl_j_123 ? (
                bool_j_124 = false;
                fail_b_13 = bool_j_124;
                flatten_fun_j_133 = fun expr_b_12 -> (
                    var_j_125 = expr_b_12;
                    m_match_bool_j_127 = var_j_125 ~ any;
                    m_match_bool_j_130 = var_j_125 ~ int;
                    m_match_cond_j_131 = m_match_bool_j_130 ? (
                            bool_j_132 = true
                        ) : (
                            m_match_cond_j_128 = m_match_bool_j_127 ? (
                                    var_j_129 = fail_b_13
                                ) : (
                                    void_j_126 = {}
                                )
                        ));
                flatten_fun_j_135 = fun bj_null_j_3 -> (
                    input_j_134 = input);
                record_j_136 = {checker = flatten_fun_j_133, generator = flatten_fun_j_135};
                proj_j_137 = record_j_136.generator;
                int_j_138 = 0;
                appl_j_139 = proj_j_137 int_j_138
            ) : (
                bool_j_140 = false;
                fail_b_16 = bool_j_140;
                var_j_141 = fail_b_16;
                assert_pred_j_142 = var_j_141;
                assert_res_j_143 = assert_pred_j_142 ? (
                        assert_res_true_j_144 = {}
                    ) : (
                        ab_j_145 = abort
                    )
            )));
record_j_149 = {checker = flatten_fun_j_107, generator = flatten_fun_j_148};
proj_j_150 = record_j_149.checker;
appl_j_153 = f x_b_34;
appl_j_154 = proj_j_150 appl_j_153;
check_res_b_35 = appl_j_154;
if_j_162 = check_res_b_35 ? (
        var_j_156 = f
    ) : (
        error_var_j_157 = check_res_b_35;
        assert_pred_j_158 = error_var_j_157;
        assert_res_j_159 = assert_pred_j_158 ? (
                assert_res_true_j_160 = {}
            ) : (
                ab_j_161 = abort
            )
    );
i_result = if_j_162