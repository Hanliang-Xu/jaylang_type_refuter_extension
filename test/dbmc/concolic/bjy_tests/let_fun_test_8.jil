i_first = {};
f_j_288 = fun x -> (
    flatten_fun_j_285 = fun x_b_2 -> (
        int_j_19 = 0;
        input_j_20 = input;
        m_bl_i_454 = int_j_19 ~ int;
        m_br_i_455 = input_j_20 ~ int;
        m_b_i_456 = m_bl_i_454 and m_br_i_455;
        binop_j_21 = m_b_i_456 ? (
                c_binop_i_457 = int_j_19 < input_j_20
            ) : (
                ab_i_458 = abort
            );
        if_j_43 = binop_j_21 ? (
                bool_j_22 = false;
                fail_b_8 = bool_j_22;
                flatten_fun_j_31 = fun expr_b_7 -> (
                    var_j_23 = expr_b_7;
                    m_match_bool_j_25 = var_j_23 ~ any;
                    m_match_bool_j_28 = var_j_23 ~ bool;
                    m_match_cond_j_29 = m_match_bool_j_28 ? (
                            bool_j_30 = true
                        ) : (
                            m_match_cond_j_26 = m_match_bool_j_25 ? (
                                    var_j_27 = fail_b_8
                                ) : (
                                    void_j_24 = {}
                                )
                        ));
                flatten_fun_j_35 = fun bj_null_j_7 -> (
                    int_j_32 = 0;
                    input_j_33 = input;
                    m_bl_i_459 = int_j_32 ~ int;
                    m_br_i_460 = input_j_33 ~ int;
                    m_b_i_461 = m_bl_i_459 and m_br_i_460;
                    binop_j_34 = m_b_i_461 ? (
                            c_binop_i_462 = int_j_32 <= input_j_33
                        ) : (
                            ab_i_463 = abort
                        ));
                flatten_fun_j_37 = fun expr_b_9 -> (
                    var_j_36 = expr_b_9);
                record_j_38 = {checker = flatten_fun_j_31, generator = flatten_fun_j_35, wrapper = flatten_fun_j_37};
                proj_j_39 = record_j_38.checker;
                var_j_40 = x_b_2;
                m_i_464 = proj_j_39 ~ fun;
                appl_j_41 = m_i_464 ? (
                        c_appl_i_465 = proj_j_39 var_j_40
                    ) : (
                        ab_i_466 = abort
                    )
            ) : (
                bool_j_42 = true
            );
        arg_check_b_3 = if_j_43;
        var_j_44 = arg_check_b_3;
        if_j_284 = var_j_44 ? (
                flatten_fun_j_84 = fun expr_b_24 -> (
                    bool_j_45 = false;
                    fail_b_19 = bool_j_45;
                    flatten_fun_j_54 = fun expr_b_18 -> (
                        var_j_46 = expr_b_18;
                        m_match_bool_j_48 = var_j_46 ~ any;
                        m_match_bool_j_51 = var_j_46 ~ int;
                        m_match_cond_j_52 = m_match_bool_j_51 ? (
                                bool_j_53 = true
                            ) : (
                                m_match_cond_j_49 = m_match_bool_j_48 ? (
                                        var_j_50 = fail_b_19
                                    ) : (
                                        void_j_47 = {}
                                    )
                            ));
                    flatten_fun_j_56 = fun bj_null_j_8 -> (
                        input_j_55 = input);
                    flatten_fun_j_58 = fun expr_b_20 -> (
                        var_j_57 = expr_b_20);
                    record_j_59 = {checker = flatten_fun_j_54, generator = flatten_fun_j_56, wrapper = flatten_fun_j_58};
                    proj_j_60 = record_j_59.generator;
                    int_j_61 = 0;
                    appl_j_62 = proj_j_60 int_j_61;
                    arg_assert_b_25 = appl_j_62;
                    var_j_63 = expr_b_24;
                    var_j_64 = arg_assert_b_25;
                    appl_j_65 = var_j_63 var_j_64;
                    fun_ret_b_26 = appl_j_65;
                    bool_j_66 = false;
                    fail_b_22 = bool_j_66;
                    flatten_fun_j_75 = fun expr_b_21 -> (
                        var_j_67 = expr_b_21;
                        m_match_bool_j_69 = var_j_67 ~ any;
                        m_match_bool_j_72 = var_j_67 ~ int;
                        m_match_cond_j_73 = m_match_bool_j_72 ? (
                                bool_j_74 = true
                            ) : (
                                m_match_cond_j_70 = m_match_bool_j_69 ? (
                                        var_j_71 = fail_b_22
                                    ) : (
                                        void_j_68 = {}
                                    )
                            ));
                    flatten_fun_j_77 = fun bj_null_j_9 -> (
                        input_j_76 = input);
                    flatten_fun_j_79 = fun expr_b_23 -> (
                        var_j_78 = expr_b_23);
                    record_j_80 = {checker = flatten_fun_j_75, generator = flatten_fun_j_77, wrapper = flatten_fun_j_79};
                    proj_j_81 = record_j_80.checker;
                    var_j_82 = fun_ret_b_26;
                    appl_j_83 = proj_j_81 var_j_82);
                flatten_fun_j_129 = fun bj_null_j_12 -> (
                    flatten_fun_j_128 = fun arg_assume_b_16 -> (
                        bool_j_85 = false;
                        fail_b_11 = bool_j_85;
                        flatten_fun_j_94 = fun expr_b_10 -> (
                            var_j_86 = expr_b_10;
                            m_match_bool_j_88 = var_j_86 ~ any;
                            m_match_bool_j_91 = var_j_86 ~ int;
                            m_match_cond_j_92 = m_match_bool_j_91 ? (
                                    bool_j_93 = true
                                ) : (
                                    m_match_cond_j_89 = m_match_bool_j_88 ? (
                                            var_j_90 = fail_b_11
                                        ) : (
                                            void_j_87 = {}
                                        )
                                ));
                        flatten_fun_j_96 = fun bj_null_j_10 -> (
                            input_j_95 = input);
                        flatten_fun_j_98 = fun expr_b_12 -> (
                            var_j_97 = expr_b_12);
                        record_j_99 = {checker = flatten_fun_j_94, generator = flatten_fun_j_96, wrapper = flatten_fun_j_98};
                        proj_j_100 = record_j_99.checker;
                        var_j_101 = arg_assume_b_16;
                        appl_j_102 = proj_j_100 var_j_101;
                        if_j_127 = appl_j_102 ? (
                                bool_j_103 = false;
                                fail_b_14 = bool_j_103;
                                flatten_fun_j_112 = fun expr_b_13 -> (
                                    var_j_104 = expr_b_13;
                                    m_match_bool_j_106 = var_j_104 ~ any;
                                    m_match_bool_j_109 = var_j_104 ~ int;
                                    m_match_cond_j_110 = m_match_bool_j_109 ? (
                                            bool_j_111 = true
                                        ) : (
                                            m_match_cond_j_107 = m_match_bool_j_106 ? (
                                                    var_j_108 = fail_b_14
                                                ) : (
                                                    void_j_105 = {}
                                                )
                                        ));
                                flatten_fun_j_114 = fun bj_null_j_11 -> (
                                    input_j_113 = input);
                                flatten_fun_j_116 = fun expr_b_15 -> (
                                    var_j_115 = expr_b_15);
                                record_j_117 = {checker = flatten_fun_j_112, generator = flatten_fun_j_114, wrapper = flatten_fun_j_116};
                                proj_j_118 = record_j_117.generator;
                                int_j_119 = 0;
                                appl_j_120 = proj_j_118 int_j_119
                            ) : (
                                bool_j_121 = false;
                                fail_b_17 = bool_j_121;
                                var_j_122 = fail_b_17;
                                assert_pred_j_123 = var_j_122;
                                assert_res_j_124 = assert_pred_j_123 ? (
                                        assert_res_true_j_125 = {}
                                    ) : (
                                        ab_j_126 = abort
                                    )
                            )));
                flatten_fun_j_175 = fun expr_b_33 -> (
                    flatten_fun_j_174 = fun arg_b_34 -> (
                        bool_j_130 = false;
                        fail_b_28 = bool_j_130;
                        flatten_fun_j_139 = fun expr_b_27 -> (
                            var_j_131 = expr_b_27;
                            m_match_bool_j_133 = var_j_131 ~ any;
                            m_match_bool_j_136 = var_j_131 ~ int;
                            m_match_cond_j_137 = m_match_bool_j_136 ? (
                                    bool_j_138 = true
                                ) : (
                                    m_match_cond_j_134 = m_match_bool_j_133 ? (
                                            var_j_135 = fail_b_28
                                        ) : (
                                            void_j_132 = {}
                                        )
                                ));
                        flatten_fun_j_141 = fun bj_null_j_13 -> (
                            input_j_140 = input);
                        flatten_fun_j_143 = fun expr_b_29 -> (
                            var_j_142 = expr_b_29);
                        record_j_144 = {checker = flatten_fun_j_139, generator = flatten_fun_j_141, wrapper = flatten_fun_j_143};
                        proj_j_145 = record_j_144.checker;
                        var_j_146 = arg_b_34;
                        m_i_467 = proj_j_145 ~ fun;
                        appl_j_147 = m_i_467 ? (
                                c_appl_i_468 = proj_j_145 var_j_146
                            ) : (
                                ab_i_469 = abort
                            );
                        m_i_470 = appl_j_147 ~ bool;
                        if_j_173 = m_i_470 ? (
                                c_cond_i_477 = appl_j_147 ? (
                                        bool_j_148 = false;
                                        fail_b_31 = bool_j_148;
                                        flatten_fun_j_157 = fun expr_b_30 -> (
                                            var_j_149 = expr_b_30;
                                            m_match_bool_j_151 = var_j_149 ~ any;
                                            m_match_bool_j_154 = var_j_149 ~ int;
                                            m_match_cond_j_155 = m_match_bool_j_154 ? (
                                                    bool_j_156 = true
                                                ) : (
                                                    m_match_cond_j_152 = m_match_bool_j_151 ? (
                                                            var_j_153 = fail_b_31
                                                        ) : (
                                                            void_j_150 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_159 = fun bj_null_j_14 -> (
                                            input_j_158 = input);
                                        flatten_fun_j_161 = fun expr_b_32 -> (
                                            var_j_160 = expr_b_32);
                                        record_j_162 = {checker = flatten_fun_j_157, generator = flatten_fun_j_159, wrapper = flatten_fun_j_161};
                                        proj_j_163 = record_j_162.wrapper;
                                        var_j_164 = expr_b_33;
                                        var_j_165 = arg_b_34;
                                        m_i_471 = var_j_164 ~ fun;
                                        appl_j_166 = m_i_471 ? (
                                                c_appl_i_472 = var_j_164 var_j_165
                                            ) : (
                                                ab_i_473 = abort
                                            );
                                        m_i_474 = proj_j_163 ~ fun;
                                        appl_j_167 = m_i_474 ? (
                                                c_appl_i_475 = proj_j_163 appl_j_166
                                            ) : (
                                                ab_i_476 = abort
                                            )
                                    ) : (
                                        bool_j_168 = false;
                                        assert_pred_j_169 = bool_j_168;
                                        assert_res_j_170 = assert_pred_j_169 ? (
                                                assert_res_true_j_171 = 
                                                    {}
                                            ) : (
                                                ab_j_172 = abort
                                            )
                                    )
                            ) : (
                                ab_i_478 = abort
                            )));
                record_j_176 = {checker = flatten_fun_j_84, generator = flatten_fun_j_129, wrapper = flatten_fun_j_175};
                proj_j_177 = record_j_176.wrapper;
                g_j_231 = fun y -> (
                    flatten_fun_j_228 = fun y_b_0 -> (
                        int_j_178 = 0;
                        input_j_179 = input;
                        m_bl_i_479 = int_j_178 ~ int;
                        m_br_i_480 = input_j_179 ~ int;
                        m_b_i_481 = m_bl_i_479 and m_br_i_480;
                        binop_j_180 = m_b_i_481 ? (
                                c_binop_i_482 = int_j_178 < input_j_179
                            ) : (
                                ab_i_483 = abort
                            );
                        if_j_200 = binop_j_180 ? (
                                bool_j_181 = false;
                                fail_b_39 = bool_j_181;
                                flatten_fun_j_190 = fun expr_b_38 -> (
                                    var_j_182 = expr_b_38;
                                    m_match_bool_j_184 = var_j_182 ~ any;
                                    m_match_bool_j_187 = var_j_182 ~ int;
                                    m_match_cond_j_188 = m_match_bool_j_187 ? (
                                            bool_j_189 = true
                                        ) : (
                                            m_match_cond_j_185 = m_match_bool_j_184 ? (
                                                    var_j_186 = fail_b_39
                                                ) : (
                                                    void_j_183 = {}
                                                )
                                        ));
                                flatten_fun_j_192 = fun bj_null_j_17 -> (
                                    input_j_191 = input);
                                flatten_fun_j_194 = fun expr_b_40 -> (
                                    var_j_193 = expr_b_40);
                                record_j_195 = {checker = flatten_fun_j_190, generator = flatten_fun_j_192, wrapper = flatten_fun_j_194};
                                proj_j_196 = record_j_195.checker;
                                var_j_197 = y_b_0;
                                m_i_484 = proj_j_196 ~ fun;
                                appl_j_198 = m_i_484 ? (
                                        c_appl_i_485 = proj_j_196 var_j_197
                                    ) : (
                                        ab_i_486 = abort
                                    )
                            ) : (
                                bool_j_199 = true
                            );
                        arg_check_b_1 = if_j_200;
                        var_j_201 = arg_check_b_1;
                        if_j_227 = var_j_201 ? (
                                bool_j_202 = false;
                                fail_b_42 = bool_j_202;
                                flatten_fun_j_211 = fun expr_b_41 -> (
                                    var_j_203 = expr_b_41;
                                    m_match_bool_j_205 = var_j_203 ~ any;
                                    m_match_bool_j_208 = var_j_203 ~ int;
                                    m_match_cond_j_209 = m_match_bool_j_208 ? (
                                            bool_j_210 = true
                                        ) : (
                                            m_match_cond_j_206 = m_match_bool_j_205 ? (
                                                    var_j_207 = fail_b_42
                                                ) : (
                                                    void_j_204 = {}
                                                )
                                        ));
                                flatten_fun_j_213 = fun bj_null_j_18 -> (
                                    input_j_212 = input);
                                flatten_fun_j_215 = fun expr_b_43 -> (
                                    var_j_214 = expr_b_43);
                                record_j_216 = {checker = flatten_fun_j_211, generator = flatten_fun_j_213, wrapper = flatten_fun_j_215};
                                proj_j_217 = record_j_216.wrapper;
                                int_j_218 = 0;
                                var_j_219 = y;
                                m_bl_i_487 = int_j_218 ~ int;
                                m_br_i_488 = var_j_219 ~ int;
                                m_b_i_489 = m_bl_i_487 and m_br_i_488;
                                binop_j_220 = m_b_i_489 ? (
                                        c_binop_i_490 = int_j_218 <= var_j_219
                                    ) : (
                                        ab_i_491 = abort
                                    );
                                m_i_492 = proj_j_217 ~ fun;
                                appl_j_221 = m_i_492 ? (
                                        c_appl_i_493 = proj_j_217 binop_j_220
                                    ) : (
                                        ab_i_494 = abort
                                    )
                            ) : (
                                var_j_222 = arg_check_b_1;
                                assert_pred_j_223 = var_j_222;
                                assert_res_j_224 = assert_pred_j_223 ? (
                                        assert_res_true_j_225 = {}
                                    ) : (
                                        ab_j_226 = abort
                                    )
                            ));
                    var_j_229 = y;
                    appl_j_230 = flatten_fun_j_228 var_j_229);
                g = g_j_231;
                bool_j_232 = false;
                fail_b_36 = bool_j_232;
                flatten_fun_j_241 = fun expr_b_35 -> (
                    var_j_233 = expr_b_35;
                    m_match_bool_j_235 = var_j_233 ~ any;
                    m_match_bool_j_238 = var_j_233 ~ int;
                    m_match_cond_j_239 = m_match_bool_j_238 ? (
                            bool_j_240 = true
                        ) : (
                            m_match_cond_j_236 = m_match_bool_j_235 ? (
                                    var_j_237 = fail_b_36
                                ) : (
                                    void_j_234 = {}
                                )
                        ));
                flatten_fun_j_243 = fun bj_null_j_15 -> (
                    input_j_242 = input);
                flatten_fun_j_245 = fun expr_b_37 -> (
                    var_j_244 = expr_b_37);
                record_j_246 = {checker = flatten_fun_j_241, generator = flatten_fun_j_243, wrapper = flatten_fun_j_245};
                proj_j_247 = record_j_246.generator;
                int_j_248 = 0;
                appl_j_249 = proj_j_247 int_j_248;
                y_b_74 = appl_j_249;
                bool_j_250 = false;
                fail_b_45 = bool_j_250;
                flatten_fun_j_259 = fun expr_b_44 -> (
                    var_j_251 = expr_b_44;
                    m_match_bool_j_253 = var_j_251 ~ any;
                    m_match_bool_j_256 = var_j_251 ~ int;
                    m_match_cond_j_257 = m_match_bool_j_256 ? (
                            bool_j_258 = true
                        ) : (
                            m_match_cond_j_254 = m_match_bool_j_253 ? (
                                    var_j_255 = fail_b_45
                                ) : (
                                    void_j_252 = {}
                                )
                        ));
                flatten_fun_j_261 = fun bj_null_j_16 -> (
                    input_j_260 = input);
                flatten_fun_j_263 = fun expr_b_46 -> (
                    var_j_262 = expr_b_46);
                record_j_264 = {checker = flatten_fun_j_259, generator = flatten_fun_j_261, wrapper = flatten_fun_j_263};
                proj_j_265 = record_j_264.checker;
                var_j_266 = g;
                var_j_267 = y_b_74;
                appl_j_268 = var_j_266 var_j_267;
                appl_j_269 = proj_j_265 appl_j_268;
                check_res_b_75 = appl_j_269;
                var_j_270 = check_res_b_75;
                if_j_277 = var_j_270 ? (
                        var_j_271 = g
                    ) : (
                        error_var_j_272 = check_res_b_75;
                        assert_pred_j_273 = error_var_j_272;
                        assert_res_j_274 = assert_pred_j_273 ? (
                                assert_res_true_j_275 = {}
                            ) : (
                                ab_j_276 = abort
                            )
                    );
                m_i_495 = proj_j_177 ~ fun;
                appl_j_278 = m_i_495 ? (
                        c_appl_i_496 = proj_j_177 if_j_277
                    ) : (
                        ab_i_497 = abort
                    )
            ) : (
                var_j_279 = arg_check_b_3;
                assert_pred_j_280 = var_j_279;
                assert_res_j_281 = assert_pred_j_280 ? (
                        assert_res_true_j_282 = {}
                    ) : (
                        ab_j_283 = abort
                    )
            ));
    var_j_286 = x;
    appl_j_287 = flatten_fun_j_285 var_j_286);
f = f_j_288;
bool_j_289 = false;
fail_b_5 = bool_j_289;
flatten_fun_j_298 = fun expr_b_4 -> (
    var_j_290 = expr_b_4;
    m_match_bool_j_292 = var_j_290 ~ any;
    m_match_bool_j_295 = var_j_290 ~ bool;
    m_match_cond_j_296 = m_match_bool_j_295 ? (
            bool_j_297 = true
        ) : (
            m_match_cond_j_293 = m_match_bool_j_292 ? (
                    var_j_294 = fail_b_5
                ) : (
                    void_j_291 = {}
                )
        ));
flatten_fun_j_302 = fun bj_null -> (
    int_j_299 = 0;
    input_j_300 = input;
    m_bl_i_498 = int_j_299 ~ int;
    m_br_i_499 = input_j_300 ~ int;
    m_b_i_500 = m_bl_i_498 and m_br_i_499;
    binop_j_301 = m_b_i_500 ? (
            c_binop_i_501 = int_j_299 <= input_j_300
        ) : (
            ab_i_502 = abort
        ));
flatten_fun_j_304 = fun expr_b_6 -> (
    var_j_303 = expr_b_6);
record_j_305 = {checker = flatten_fun_j_298, generator = flatten_fun_j_302, wrapper = flatten_fun_j_304};
proj_j_306 = record_j_305.generator;
int_j_307 = 0;
appl_j_308 = proj_j_306 int_j_307;
x_b_72 = appl_j_308;
flatten_fun_j_348 = fun expr_b_61 -> (
    bool_j_309 = false;
    fail_b_56 = bool_j_309;
    flatten_fun_j_318 = fun expr_b_55 -> (
        var_j_310 = expr_b_55;
        m_match_bool_j_312 = var_j_310 ~ any;
        m_match_bool_j_315 = var_j_310 ~ int;
        m_match_cond_j_316 = m_match_bool_j_315 ? (
                bool_j_317 = true
            ) : (
                m_match_cond_j_313 = m_match_bool_j_312 ? (
                        var_j_314 = fail_b_56
                    ) : (
                        void_j_311 = {}
                    )
            ));
    flatten_fun_j_320 = fun bj_null_j_0 -> (
        input_j_319 = input);
    flatten_fun_j_322 = fun expr_b_57 -> (
        var_j_321 = expr_b_57);
    record_j_323 = {checker = flatten_fun_j_318, generator = flatten_fun_j_320, wrapper = flatten_fun_j_322};
    proj_j_324 = record_j_323.generator;
    int_j_325 = 0;
    appl_j_326 = proj_j_324 int_j_325;
    arg_assert_b_62 = appl_j_326;
    var_j_327 = expr_b_61;
    var_j_328 = arg_assert_b_62;
    appl_j_329 = var_j_327 var_j_328;
    fun_ret_b_63 = appl_j_329;
    bool_j_330 = false;
    fail_b_59 = bool_j_330;
    flatten_fun_j_339 = fun expr_b_58 -> (
        var_j_331 = expr_b_58;
        m_match_bool_j_333 = var_j_331 ~ any;
        m_match_bool_j_336 = var_j_331 ~ int;
        m_match_cond_j_337 = m_match_bool_j_336 ? (
                bool_j_338 = true
            ) : (
                m_match_cond_j_334 = m_match_bool_j_333 ? (
                        var_j_335 = fail_b_59
                    ) : (
                        void_j_332 = {}
                    )
            ));
    flatten_fun_j_341 = fun bj_null_j_1 -> (
        input_j_340 = input);
    flatten_fun_j_343 = fun expr_b_60 -> (
        var_j_342 = expr_b_60);
    record_j_344 = {checker = flatten_fun_j_339, generator = flatten_fun_j_341, wrapper = flatten_fun_j_343};
    proj_j_345 = record_j_344.checker;
    var_j_346 = fun_ret_b_63;
    appl_j_347 = proj_j_345 var_j_346);
flatten_fun_j_393 = fun bj_null_j_4 -> (
    flatten_fun_j_392 = fun arg_assume_b_53 -> (
        bool_j_349 = false;
        fail_b_48 = bool_j_349;
        flatten_fun_j_358 = fun expr_b_47 -> (
            var_j_350 = expr_b_47;
            m_match_bool_j_352 = var_j_350 ~ any;
            m_match_bool_j_355 = var_j_350 ~ int;
            m_match_cond_j_356 = m_match_bool_j_355 ? (
                    bool_j_357 = true
                ) : (
                    m_match_cond_j_353 = m_match_bool_j_352 ? (
                            var_j_354 = fail_b_48
                        ) : (
                            void_j_351 = {}
                        )
                ));
        flatten_fun_j_360 = fun bj_null_j_2 -> (
            input_j_359 = input);
        flatten_fun_j_362 = fun expr_b_49 -> (
            var_j_361 = expr_b_49);
        record_j_363 = {checker = flatten_fun_j_358, generator = flatten_fun_j_360, wrapper = flatten_fun_j_362};
        proj_j_364 = record_j_363.checker;
        var_j_365 = arg_assume_b_53;
        appl_j_366 = proj_j_364 var_j_365;
        if_j_391 = appl_j_366 ? (
                bool_j_367 = false;
                fail_b_51 = bool_j_367;
                flatten_fun_j_376 = fun expr_b_50 -> (
                    var_j_368 = expr_b_50;
                    m_match_bool_j_370 = var_j_368 ~ any;
                    m_match_bool_j_373 = var_j_368 ~ int;
                    m_match_cond_j_374 = m_match_bool_j_373 ? (
                            bool_j_375 = true
                        ) : (
                            m_match_cond_j_371 = m_match_bool_j_370 ? (
                                    var_j_372 = fail_b_51
                                ) : (
                                    void_j_369 = {}
                                )
                        ));
                flatten_fun_j_378 = fun bj_null_j_3 -> (
                    input_j_377 = input);
                flatten_fun_j_380 = fun expr_b_52 -> (
                    var_j_379 = expr_b_52);
                record_j_381 = {checker = flatten_fun_j_376, generator = flatten_fun_j_378, wrapper = flatten_fun_j_380};
                proj_j_382 = record_j_381.generator;
                int_j_383 = 0;
                appl_j_384 = proj_j_382 int_j_383
            ) : (
                bool_j_385 = false;
                fail_b_54 = bool_j_385;
                var_j_386 = fail_b_54;
                assert_pred_j_387 = var_j_386;
                assert_res_j_388 = assert_pred_j_387 ? (
                        assert_res_true_j_389 = {}
                    ) : (
                        ab_j_390 = abort
                    )
            )));
flatten_fun_j_439 = fun expr_b_70 -> (
    flatten_fun_j_438 = fun arg_b_71 -> (
        bool_j_394 = false;
        fail_b_65 = bool_j_394;
        flatten_fun_j_403 = fun expr_b_64 -> (
            var_j_395 = expr_b_64;
            m_match_bool_j_397 = var_j_395 ~ any;
            m_match_bool_j_400 = var_j_395 ~ int;
            m_match_cond_j_401 = m_match_bool_j_400 ? (
                    bool_j_402 = true
                ) : (
                    m_match_cond_j_398 = m_match_bool_j_397 ? (
                            var_j_399 = fail_b_65
                        ) : (
                            void_j_396 = {}
                        )
                ));
        flatten_fun_j_405 = fun bj_null_j_5 -> (
            input_j_404 = input);
        flatten_fun_j_407 = fun expr_b_66 -> (
            var_j_406 = expr_b_66);
        record_j_408 = {checker = flatten_fun_j_403, generator = flatten_fun_j_405, wrapper = flatten_fun_j_407};
        proj_j_409 = record_j_408.checker;
        var_j_410 = arg_b_71;
        m_i_503 = proj_j_409 ~ fun;
        appl_j_411 = m_i_503 ? (
                c_appl_i_504 = proj_j_409 var_j_410
            ) : (
                ab_i_505 = abort
            );
        m_i_506 = appl_j_411 ~ bool;
        if_j_437 = m_i_506 ? (
                c_cond_i_513 = appl_j_411 ? (
                        bool_j_412 = false;
                        fail_b_68 = bool_j_412;
                        flatten_fun_j_421 = fun expr_b_67 -> (
                            var_j_413 = expr_b_67;
                            m_match_bool_j_415 = var_j_413 ~ any;
                            m_match_bool_j_418 = var_j_413 ~ int;
                            m_match_cond_j_419 = m_match_bool_j_418 ? (
                                    bool_j_420 = true
                                ) : (
                                    m_match_cond_j_416 = m_match_bool_j_415 ? (
                                            var_j_417 = fail_b_68
                                        ) : (
                                            void_j_414 = {}
                                        )
                                ));
                        flatten_fun_j_423 = fun bj_null_j_6 -> (
                            input_j_422 = input);
                        flatten_fun_j_425 = fun expr_b_69 -> (
                            var_j_424 = expr_b_69);
                        record_j_426 = {checker = flatten_fun_j_421, generator = flatten_fun_j_423, wrapper = flatten_fun_j_425};
                        proj_j_427 = record_j_426.wrapper;
                        var_j_428 = expr_b_70;
                        var_j_429 = arg_b_71;
                        m_i_507 = var_j_428 ~ fun;
                        appl_j_430 = m_i_507 ? (
                                c_appl_i_508 = var_j_428 var_j_429
                            ) : (
                                ab_i_509 = abort
                            );
                        m_i_510 = proj_j_427 ~ fun;
                        appl_j_431 = m_i_510 ? (
                                c_appl_i_511 = proj_j_427 appl_j_430
                            ) : (
                                ab_i_512 = abort
                            )
                    ) : (
                        bool_j_432 = false;
                        assert_pred_j_433 = bool_j_432;
                        assert_res_j_434 = assert_pred_j_433 ? (
                                assert_res_true_j_435 = {}
                            ) : (
                                ab_j_436 = abort
                            )
                    )
            ) : (
                ab_i_514 = abort
            )));
record_j_440 = {checker = flatten_fun_j_348, generator = flatten_fun_j_393, wrapper = flatten_fun_j_439};
proj_j_441 = record_j_440.checker;
appl_j_444 = f x_b_72;
appl_j_445 = proj_j_441 appl_j_444;
check_res_b_73 = appl_j_445;
if_j_453 = check_res_b_73 ? (
        var_j_447 = f
    ) : (
        error_var_j_448 = check_res_b_73;
        assert_pred_j_449 = error_var_j_448;
        assert_res_j_450 = assert_pred_j_449 ? (
                assert_res_true_j_451 = {}
            ) : (
                ab_j_452 = abort
            )
    );
i_result = if_j_453