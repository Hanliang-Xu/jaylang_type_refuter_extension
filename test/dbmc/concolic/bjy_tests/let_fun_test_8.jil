i_first = {};
f_j_278 = fun x -> (
    flatten_fun_j_275 = fun x_b_2 -> (
        bool_j_19 = false;
        fail_b_8 = bool_j_19;
        flatten_fun_j_28 = fun expr_b_7 -> (
            var_j_20 = expr_b_7;
            m_match_bool_j_22 = var_j_20 ~ any;
            m_match_bool_j_25 = var_j_20 ~ bool;
            m_match_cond_j_26 = m_match_bool_j_25 ? (
                    bool_j_27 = true
                ) : (
                    m_match_cond_j_23 = m_match_bool_j_22 ? (
                            var_j_24 = fail_b_8
                        ) : (
                            void_j_21 = {}
                        )
                ));
        flatten_fun_j_32 = fun bj_null_j_7 -> (
            int_j_29 = 0;
            input_j_30 = input;
            m_bl_i_444 = int_j_29 ~ int;
            m_br_i_445 = input_j_30 ~ int;
            m_b_i_446 = m_bl_i_444 and m_br_i_445;
            binop_j_31 = m_b_i_446 ? (
                    c_binop_i_447 = int_j_29 <= input_j_30
                ) : (
                    ab_i_448 = abort
                ));
        flatten_fun_j_34 = fun expr_b_9 -> (
            var_j_33 = expr_b_9);
        record_j_35 = {checker = flatten_fun_j_28, generator = flatten_fun_j_32, wrapper = flatten_fun_j_34};
        proj_j_36 = record_j_35.checker;
        var_j_37 = x_b_2;
        appl_j_38 = proj_j_36 var_j_37;
        arg_check_b_3 = appl_j_38;
        var_j_39 = arg_check_b_3;
        if_j_274 = var_j_39 ? (
                flatten_fun_j_79 = fun expr_b_24 -> (
                    bool_j_40 = false;
                    fail_b_19 = bool_j_40;
                    flatten_fun_j_49 = fun expr_b_18 -> (
                        var_j_41 = expr_b_18;
                        m_match_bool_j_43 = var_j_41 ~ any;
                        m_match_bool_j_46 = var_j_41 ~ int;
                        m_match_cond_j_47 = m_match_bool_j_46 ? (
                                bool_j_48 = true
                            ) : (
                                m_match_cond_j_44 = m_match_bool_j_43 ? (
                                        var_j_45 = fail_b_19
                                    ) : (
                                        void_j_42 = {}
                                    )
                            ));
                    flatten_fun_j_51 = fun bj_null_j_8 -> (
                        input_j_50 = input);
                    flatten_fun_j_53 = fun expr_b_20 -> (
                        var_j_52 = expr_b_20);
                    record_j_54 = {checker = flatten_fun_j_49, generator = flatten_fun_j_51, wrapper = flatten_fun_j_53};
                    proj_j_55 = record_j_54.generator;
                    int_j_56 = 0;
                    appl_j_57 = proj_j_55 int_j_56;
                    arg_assert_b_25 = appl_j_57;
                    var_j_58 = expr_b_24;
                    var_j_59 = arg_assert_b_25;
                    appl_j_60 = var_j_58 var_j_59;
                    fun_ret_b_26 = appl_j_60;
                    bool_j_61 = false;
                    fail_b_22 = bool_j_61;
                    flatten_fun_j_70 = fun expr_b_21 -> (
                        var_j_62 = expr_b_21;
                        m_match_bool_j_64 = var_j_62 ~ any;
                        m_match_bool_j_67 = var_j_62 ~ int;
                        m_match_cond_j_68 = m_match_bool_j_67 ? (
                                bool_j_69 = true
                            ) : (
                                m_match_cond_j_65 = m_match_bool_j_64 ? (
                                        var_j_66 = fail_b_22
                                    ) : (
                                        void_j_63 = {}
                                    )
                            ));
                    flatten_fun_j_72 = fun bj_null_j_9 -> (
                        input_j_71 = input);
                    flatten_fun_j_74 = fun expr_b_23 -> (
                        var_j_73 = expr_b_23);
                    record_j_75 = {checker = flatten_fun_j_70, generator = flatten_fun_j_72, wrapper = flatten_fun_j_74};
                    proj_j_76 = record_j_75.checker;
                    var_j_77 = fun_ret_b_26;
                    appl_j_78 = proj_j_76 var_j_77);
                flatten_fun_j_124 = fun bj_null_j_12 -> (
                    flatten_fun_j_123 = fun arg_assume_b_16 -> (
                        bool_j_80 = false;
                        fail_b_11 = bool_j_80;
                        flatten_fun_j_89 = fun expr_b_10 -> (
                            var_j_81 = expr_b_10;
                            m_match_bool_j_83 = var_j_81 ~ any;
                            m_match_bool_j_86 = var_j_81 ~ int;
                            m_match_cond_j_87 = m_match_bool_j_86 ? (
                                    bool_j_88 = true
                                ) : (
                                    m_match_cond_j_84 = m_match_bool_j_83 ? (
                                            var_j_85 = fail_b_11
                                        ) : (
                                            void_j_82 = {}
                                        )
                                ));
                        flatten_fun_j_91 = fun bj_null_j_10 -> (
                            input_j_90 = input);
                        flatten_fun_j_93 = fun expr_b_12 -> (
                            var_j_92 = expr_b_12);
                        record_j_94 = {checker = flatten_fun_j_89, generator = flatten_fun_j_91, wrapper = flatten_fun_j_93};
                        proj_j_95 = record_j_94.checker;
                        var_j_96 = arg_assume_b_16;
                        appl_j_97 = proj_j_95 var_j_96;
                        if_j_122 = appl_j_97 ? (
                                bool_j_98 = false;
                                fail_b_14 = bool_j_98;
                                flatten_fun_j_107 = fun expr_b_13 -> (
                                    var_j_99 = expr_b_13;
                                    m_match_bool_j_101 = var_j_99 ~ any;
                                    m_match_bool_j_104 = var_j_99 ~ int;
                                    m_match_cond_j_105 = m_match_bool_j_104 ? (
                                            bool_j_106 = true
                                        ) : (
                                            m_match_cond_j_102 = m_match_bool_j_101 ? (
                                                    var_j_103 = fail_b_14
                                                ) : (
                                                    void_j_100 = {}
                                                )
                                        ));
                                flatten_fun_j_109 = fun bj_null_j_11 -> (
                                    input_j_108 = input);
                                flatten_fun_j_111 = fun expr_b_15 -> (
                                    var_j_110 = expr_b_15);
                                record_j_112 = {checker = flatten_fun_j_107, generator = flatten_fun_j_109, wrapper = flatten_fun_j_111};
                                proj_j_113 = record_j_112.generator;
                                int_j_114 = 0;
                                appl_j_115 = proj_j_113 int_j_114
                            ) : (
                                bool_j_116 = false;
                                fail_b_17 = bool_j_116;
                                var_j_117 = fail_b_17;
                                assert_pred_j_118 = var_j_117;
                                assert_res_j_119 = assert_pred_j_118 ? (
                                        assert_res_true_j_120 = {}
                                    ) : (
                                        ab_j_121 = abort
                                    )
                            )));
                flatten_fun_j_170 = fun expr_b_33 -> (
                    flatten_fun_j_169 = fun arg_b_34 -> (
                        bool_j_125 = false;
                        fail_b_28 = bool_j_125;
                        flatten_fun_j_134 = fun expr_b_27 -> (
                            var_j_126 = expr_b_27;
                            m_match_bool_j_128 = var_j_126 ~ any;
                            m_match_bool_j_131 = var_j_126 ~ int;
                            m_match_cond_j_132 = m_match_bool_j_131 ? (
                                    bool_j_133 = true
                                ) : (
                                    m_match_cond_j_129 = m_match_bool_j_128 ? (
                                            var_j_130 = fail_b_28
                                        ) : (
                                            void_j_127 = {}
                                        )
                                ));
                        flatten_fun_j_136 = fun bj_null_j_13 -> (
                            input_j_135 = input);
                        flatten_fun_j_138 = fun expr_b_29 -> (
                            var_j_137 = expr_b_29);
                        record_j_139 = {checker = flatten_fun_j_134, generator = flatten_fun_j_136, wrapper = flatten_fun_j_138};
                        proj_j_140 = record_j_139.checker;
                        var_j_141 = arg_b_34;
                        m_i_449 = proj_j_140 ~ fun;
                        appl_j_142 = m_i_449 ? (
                                c_appl_i_450 = proj_j_140 var_j_141
                            ) : (
                                ab_i_451 = abort
                            );
                        m_i_452 = appl_j_142 ~ bool;
                        if_j_168 = m_i_452 ? (
                                c_cond_i_459 = appl_j_142 ? (
                                        bool_j_143 = false;
                                        fail_b_31 = bool_j_143;
                                        flatten_fun_j_152 = fun expr_b_30 -> (
                                            var_j_144 = expr_b_30;
                                            m_match_bool_j_146 = var_j_144 ~ any;
                                            m_match_bool_j_149 = var_j_144 ~ int;
                                            m_match_cond_j_150 = m_match_bool_j_149 ? (
                                                    bool_j_151 = true
                                                ) : (
                                                    m_match_cond_j_147 = m_match_bool_j_146 ? (
                                                            var_j_148 = fail_b_31
                                                        ) : (
                                                            void_j_145 = 
                                                                {}
                                                        )
                                                ));
                                        flatten_fun_j_154 = fun bj_null_j_14 -> (
                                            input_j_153 = input);
                                        flatten_fun_j_156 = fun expr_b_32 -> (
                                            var_j_155 = expr_b_32);
                                        record_j_157 = {checker = flatten_fun_j_152, generator = flatten_fun_j_154, wrapper = flatten_fun_j_156};
                                        proj_j_158 = record_j_157.wrapper;
                                        var_j_159 = expr_b_33;
                                        var_j_160 = arg_b_34;
                                        m_i_453 = var_j_159 ~ fun;
                                        appl_j_161 = m_i_453 ? (
                                                c_appl_i_454 = var_j_159 var_j_160
                                            ) : (
                                                ab_i_455 = abort
                                            );
                                        m_i_456 = proj_j_158 ~ fun;
                                        appl_j_162 = m_i_456 ? (
                                                c_appl_i_457 = proj_j_158 appl_j_161
                                            ) : (
                                                ab_i_458 = abort
                                            )
                                    ) : (
                                        bool_j_163 = false;
                                        assert_pred_j_164 = bool_j_163;
                                        assert_res_j_165 = assert_pred_j_164 ? (
                                                assert_res_true_j_166 = 
                                                    {}
                                            ) : (
                                                ab_j_167 = abort
                                            )
                                    )
                            ) : (
                                ab_i_460 = abort
                            )));
                record_j_171 = {checker = flatten_fun_j_79, generator = flatten_fun_j_124, wrapper = flatten_fun_j_170};
                proj_j_172 = record_j_171.wrapper;
                g_j_221 = fun y -> (
                    flatten_fun_j_218 = fun y_b_0 -> (
                        bool_j_173 = false;
                        fail_b_39 = bool_j_173;
                        flatten_fun_j_182 = fun expr_b_38 -> (
                            var_j_174 = expr_b_38;
                            m_match_bool_j_176 = var_j_174 ~ any;
                            m_match_bool_j_179 = var_j_174 ~ int;
                            m_match_cond_j_180 = m_match_bool_j_179 ? (
                                    bool_j_181 = true
                                ) : (
                                    m_match_cond_j_177 = m_match_bool_j_176 ? (
                                            var_j_178 = fail_b_39
                                        ) : (
                                            void_j_175 = {}
                                        )
                                ));
                        flatten_fun_j_184 = fun bj_null_j_17 -> (
                            input_j_183 = input);
                        flatten_fun_j_186 = fun expr_b_40 -> (
                            var_j_185 = expr_b_40);
                        record_j_187 = {checker = flatten_fun_j_182, generator = flatten_fun_j_184, wrapper = flatten_fun_j_186};
                        proj_j_188 = record_j_187.checker;
                        var_j_189 = y_b_0;
                        appl_j_190 = proj_j_188 var_j_189;
                        arg_check_b_1 = appl_j_190;
                        var_j_191 = arg_check_b_1;
                        if_j_217 = var_j_191 ? (
                                bool_j_192 = false;
                                fail_b_42 = bool_j_192;
                                flatten_fun_j_201 = fun expr_b_41 -> (
                                    var_j_193 = expr_b_41;
                                    m_match_bool_j_195 = var_j_193 ~ any;
                                    m_match_bool_j_198 = var_j_193 ~ int;
                                    m_match_cond_j_199 = m_match_bool_j_198 ? (
                                            bool_j_200 = true
                                        ) : (
                                            m_match_cond_j_196 = m_match_bool_j_195 ? (
                                                    var_j_197 = fail_b_42
                                                ) : (
                                                    void_j_194 = {}
                                                )
                                        ));
                                flatten_fun_j_203 = fun bj_null_j_18 -> (
                                    input_j_202 = input);
                                flatten_fun_j_205 = fun expr_b_43 -> (
                                    var_j_204 = expr_b_43);
                                record_j_206 = {checker = flatten_fun_j_201, generator = flatten_fun_j_203, wrapper = flatten_fun_j_205};
                                proj_j_207 = record_j_206.wrapper;
                                int_j_208 = 0;
                                var_j_209 = y;
                                m_bl_i_461 = int_j_208 ~ int;
                                m_br_i_462 = var_j_209 ~ int;
                                m_b_i_463 = m_bl_i_461 and m_br_i_462;
                                binop_j_210 = m_b_i_463 ? (
                                        c_binop_i_464 = int_j_208 <= var_j_209
                                    ) : (
                                        ab_i_465 = abort
                                    );
                                m_i_466 = proj_j_207 ~ fun;
                                appl_j_211 = m_i_466 ? (
                                        c_appl_i_467 = proj_j_207 binop_j_210
                                    ) : (
                                        ab_i_468 = abort
                                    )
                            ) : (
                                var_j_212 = arg_check_b_1;
                                assert_pred_j_213 = var_j_212;
                                assert_res_j_214 = assert_pred_j_213 ? (
                                        assert_res_true_j_215 = {}
                                    ) : (
                                        ab_j_216 = abort
                                    )
                            ));
                    var_j_219 = y;
                    appl_j_220 = flatten_fun_j_218 var_j_219);
                g = g_j_221;
                bool_j_222 = false;
                fail_b_36 = bool_j_222;
                flatten_fun_j_231 = fun expr_b_35 -> (
                    var_j_223 = expr_b_35;
                    m_match_bool_j_225 = var_j_223 ~ any;
                    m_match_bool_j_228 = var_j_223 ~ int;
                    m_match_cond_j_229 = m_match_bool_j_228 ? (
                            bool_j_230 = true
                        ) : (
                            m_match_cond_j_226 = m_match_bool_j_225 ? (
                                    var_j_227 = fail_b_36
                                ) : (
                                    void_j_224 = {}
                                )
                        ));
                flatten_fun_j_233 = fun bj_null_j_15 -> (
                    input_j_232 = input);
                flatten_fun_j_235 = fun expr_b_37 -> (
                    var_j_234 = expr_b_37);
                record_j_236 = {checker = flatten_fun_j_231, generator = flatten_fun_j_233, wrapper = flatten_fun_j_235};
                proj_j_237 = record_j_236.generator;
                int_j_238 = 0;
                appl_j_239 = proj_j_237 int_j_238;
                y_b_74 = appl_j_239;
                bool_j_240 = false;
                fail_b_45 = bool_j_240;
                flatten_fun_j_249 = fun expr_b_44 -> (
                    var_j_241 = expr_b_44;
                    m_match_bool_j_243 = var_j_241 ~ any;
                    m_match_bool_j_246 = var_j_241 ~ int;
                    m_match_cond_j_247 = m_match_bool_j_246 ? (
                            bool_j_248 = true
                        ) : (
                            m_match_cond_j_244 = m_match_bool_j_243 ? (
                                    var_j_245 = fail_b_45
                                ) : (
                                    void_j_242 = {}
                                )
                        ));
                flatten_fun_j_251 = fun bj_null_j_16 -> (
                    input_j_250 = input);
                flatten_fun_j_253 = fun expr_b_46 -> (
                    var_j_252 = expr_b_46);
                record_j_254 = {checker = flatten_fun_j_249, generator = flatten_fun_j_251, wrapper = flatten_fun_j_253};
                proj_j_255 = record_j_254.checker;
                var_j_256 = g;
                var_j_257 = y_b_74;
                appl_j_258 = var_j_256 var_j_257;
                appl_j_259 = proj_j_255 appl_j_258;
                check_res_b_75 = appl_j_259;
                var_j_260 = check_res_b_75;
                if_j_267 = var_j_260 ? (
                        var_j_261 = g
                    ) : (
                        error_var_j_262 = check_res_b_75;
                        assert_pred_j_263 = error_var_j_262;
                        assert_res_j_264 = assert_pred_j_263 ? (
                                assert_res_true_j_265 = {}
                            ) : (
                                ab_j_266 = abort
                            )
                    );
                m_i_469 = proj_j_172 ~ fun;
                appl_j_268 = m_i_469 ? (
                        c_appl_i_470 = proj_j_172 if_j_267
                    ) : (
                        ab_i_471 = abort
                    )
            ) : (
                var_j_269 = arg_check_b_3;
                assert_pred_j_270 = var_j_269;
                assert_res_j_271 = assert_pred_j_270 ? (
                        assert_res_true_j_272 = {}
                    ) : (
                        ab_j_273 = abort
                    )
            ));
    var_j_276 = x;
    appl_j_277 = flatten_fun_j_275 var_j_276);
f = f_j_278;
bool_j_279 = false;
fail_b_5 = bool_j_279;
flatten_fun_j_288 = fun expr_b_4 -> (
    var_j_280 = expr_b_4;
    m_match_bool_j_282 = var_j_280 ~ any;
    m_match_bool_j_285 = var_j_280 ~ bool;
    m_match_cond_j_286 = m_match_bool_j_285 ? (
            bool_j_287 = true
        ) : (
            m_match_cond_j_283 = m_match_bool_j_282 ? (
                    var_j_284 = fail_b_5
                ) : (
                    void_j_281 = {}
                )
        ));
flatten_fun_j_292 = fun bj_null -> (
    int_j_289 = 0;
    input_j_290 = input;
    m_bl_i_472 = int_j_289 ~ int;
    m_br_i_473 = input_j_290 ~ int;
    m_b_i_474 = m_bl_i_472 and m_br_i_473;
    binop_j_291 = m_b_i_474 ? (
            c_binop_i_475 = int_j_289 <= input_j_290
        ) : (
            ab_i_476 = abort
        ));
flatten_fun_j_294 = fun expr_b_6 -> (
    var_j_293 = expr_b_6);
record_j_295 = {checker = flatten_fun_j_288, generator = flatten_fun_j_292, wrapper = flatten_fun_j_294};
proj_j_296 = record_j_295.generator;
int_j_297 = 0;
appl_j_298 = proj_j_296 int_j_297;
x_b_72 = appl_j_298;
flatten_fun_j_338 = fun expr_b_61 -> (
    bool_j_299 = false;
    fail_b_56 = bool_j_299;
    flatten_fun_j_308 = fun expr_b_55 -> (
        var_j_300 = expr_b_55;
        m_match_bool_j_302 = var_j_300 ~ any;
        m_match_bool_j_305 = var_j_300 ~ int;
        m_match_cond_j_306 = m_match_bool_j_305 ? (
                bool_j_307 = true
            ) : (
                m_match_cond_j_303 = m_match_bool_j_302 ? (
                        var_j_304 = fail_b_56
                    ) : (
                        void_j_301 = {}
                    )
            ));
    flatten_fun_j_310 = fun bj_null_j_0 -> (
        input_j_309 = input);
    flatten_fun_j_312 = fun expr_b_57 -> (
        var_j_311 = expr_b_57);
    record_j_313 = {checker = flatten_fun_j_308, generator = flatten_fun_j_310, wrapper = flatten_fun_j_312};
    proj_j_314 = record_j_313.generator;
    int_j_315 = 0;
    appl_j_316 = proj_j_314 int_j_315;
    arg_assert_b_62 = appl_j_316;
    var_j_317 = expr_b_61;
    var_j_318 = arg_assert_b_62;
    appl_j_319 = var_j_317 var_j_318;
    fun_ret_b_63 = appl_j_319;
    bool_j_320 = false;
    fail_b_59 = bool_j_320;
    flatten_fun_j_329 = fun expr_b_58 -> (
        var_j_321 = expr_b_58;
        m_match_bool_j_323 = var_j_321 ~ any;
        m_match_bool_j_326 = var_j_321 ~ int;
        m_match_cond_j_327 = m_match_bool_j_326 ? (
                bool_j_328 = true
            ) : (
                m_match_cond_j_324 = m_match_bool_j_323 ? (
                        var_j_325 = fail_b_59
                    ) : (
                        void_j_322 = {}
                    )
            ));
    flatten_fun_j_331 = fun bj_null_j_1 -> (
        input_j_330 = input);
    flatten_fun_j_333 = fun expr_b_60 -> (
        var_j_332 = expr_b_60);
    record_j_334 = {checker = flatten_fun_j_329, generator = flatten_fun_j_331, wrapper = flatten_fun_j_333};
    proj_j_335 = record_j_334.checker;
    var_j_336 = fun_ret_b_63;
    appl_j_337 = proj_j_335 var_j_336);
flatten_fun_j_383 = fun bj_null_j_4 -> (
    flatten_fun_j_382 = fun arg_assume_b_53 -> (
        bool_j_339 = false;
        fail_b_48 = bool_j_339;
        flatten_fun_j_348 = fun expr_b_47 -> (
            var_j_340 = expr_b_47;
            m_match_bool_j_342 = var_j_340 ~ any;
            m_match_bool_j_345 = var_j_340 ~ int;
            m_match_cond_j_346 = m_match_bool_j_345 ? (
                    bool_j_347 = true
                ) : (
                    m_match_cond_j_343 = m_match_bool_j_342 ? (
                            var_j_344 = fail_b_48
                        ) : (
                            void_j_341 = {}
                        )
                ));
        flatten_fun_j_350 = fun bj_null_j_2 -> (
            input_j_349 = input);
        flatten_fun_j_352 = fun expr_b_49 -> (
            var_j_351 = expr_b_49);
        record_j_353 = {checker = flatten_fun_j_348, generator = flatten_fun_j_350, wrapper = flatten_fun_j_352};
        proj_j_354 = record_j_353.checker;
        var_j_355 = arg_assume_b_53;
        appl_j_356 = proj_j_354 var_j_355;
        if_j_381 = appl_j_356 ? (
                bool_j_357 = false;
                fail_b_51 = bool_j_357;
                flatten_fun_j_366 = fun expr_b_50 -> (
                    var_j_358 = expr_b_50;
                    m_match_bool_j_360 = var_j_358 ~ any;
                    m_match_bool_j_363 = var_j_358 ~ int;
                    m_match_cond_j_364 = m_match_bool_j_363 ? (
                            bool_j_365 = true
                        ) : (
                            m_match_cond_j_361 = m_match_bool_j_360 ? (
                                    var_j_362 = fail_b_51
                                ) : (
                                    void_j_359 = {}
                                )
                        ));
                flatten_fun_j_368 = fun bj_null_j_3 -> (
                    input_j_367 = input);
                flatten_fun_j_370 = fun expr_b_52 -> (
                    var_j_369 = expr_b_52);
                record_j_371 = {checker = flatten_fun_j_366, generator = flatten_fun_j_368, wrapper = flatten_fun_j_370};
                proj_j_372 = record_j_371.generator;
                int_j_373 = 0;
                appl_j_374 = proj_j_372 int_j_373
            ) : (
                bool_j_375 = false;
                fail_b_54 = bool_j_375;
                var_j_376 = fail_b_54;
                assert_pred_j_377 = var_j_376;
                assert_res_j_378 = assert_pred_j_377 ? (
                        assert_res_true_j_379 = {}
                    ) : (
                        ab_j_380 = abort
                    )
            )));
flatten_fun_j_429 = fun expr_b_70 -> (
    flatten_fun_j_428 = fun arg_b_71 -> (
        bool_j_384 = false;
        fail_b_65 = bool_j_384;
        flatten_fun_j_393 = fun expr_b_64 -> (
            var_j_385 = expr_b_64;
            m_match_bool_j_387 = var_j_385 ~ any;
            m_match_bool_j_390 = var_j_385 ~ int;
            m_match_cond_j_391 = m_match_bool_j_390 ? (
                    bool_j_392 = true
                ) : (
                    m_match_cond_j_388 = m_match_bool_j_387 ? (
                            var_j_389 = fail_b_65
                        ) : (
                            void_j_386 = {}
                        )
                ));
        flatten_fun_j_395 = fun bj_null_j_5 -> (
            input_j_394 = input);
        flatten_fun_j_397 = fun expr_b_66 -> (
            var_j_396 = expr_b_66);
        record_j_398 = {checker = flatten_fun_j_393, generator = flatten_fun_j_395, wrapper = flatten_fun_j_397};
        proj_j_399 = record_j_398.checker;
        var_j_400 = arg_b_71;
        m_i_477 = proj_j_399 ~ fun;
        appl_j_401 = m_i_477 ? (
                c_appl_i_478 = proj_j_399 var_j_400
            ) : (
                ab_i_479 = abort
            );
        m_i_480 = appl_j_401 ~ bool;
        if_j_427 = m_i_480 ? (
                c_cond_i_487 = appl_j_401 ? (
                        bool_j_402 = false;
                        fail_b_68 = bool_j_402;
                        flatten_fun_j_411 = fun expr_b_67 -> (
                            var_j_403 = expr_b_67;
                            m_match_bool_j_405 = var_j_403 ~ any;
                            m_match_bool_j_408 = var_j_403 ~ int;
                            m_match_cond_j_409 = m_match_bool_j_408 ? (
                                    bool_j_410 = true
                                ) : (
                                    m_match_cond_j_406 = m_match_bool_j_405 ? (
                                            var_j_407 = fail_b_68
                                        ) : (
                                            void_j_404 = {}
                                        )
                                ));
                        flatten_fun_j_413 = fun bj_null_j_6 -> (
                            input_j_412 = input);
                        flatten_fun_j_415 = fun expr_b_69 -> (
                            var_j_414 = expr_b_69);
                        record_j_416 = {checker = flatten_fun_j_411, generator = flatten_fun_j_413, wrapper = flatten_fun_j_415};
                        proj_j_417 = record_j_416.wrapper;
                        var_j_418 = expr_b_70;
                        var_j_419 = arg_b_71;
                        m_i_481 = var_j_418 ~ fun;
                        appl_j_420 = m_i_481 ? (
                                c_appl_i_482 = var_j_418 var_j_419
                            ) : (
                                ab_i_483 = abort
                            );
                        m_i_484 = proj_j_417 ~ fun;
                        appl_j_421 = m_i_484 ? (
                                c_appl_i_485 = proj_j_417 appl_j_420
                            ) : (
                                ab_i_486 = abort
                            )
                    ) : (
                        bool_j_422 = false;
                        assert_pred_j_423 = bool_j_422;
                        assert_res_j_424 = assert_pred_j_423 ? (
                                assert_res_true_j_425 = {}
                            ) : (
                                ab_j_426 = abort
                            )
                    )
            ) : (
                ab_i_488 = abort
            )));
record_j_430 = {checker = flatten_fun_j_338, generator = flatten_fun_j_383, wrapper = flatten_fun_j_429};
proj_j_431 = record_j_430.checker;
appl_j_434 = f x_b_72;
appl_j_435 = proj_j_431 appl_j_434;
check_res_b_73 = appl_j_435;
if_j_443 = check_res_b_73 ? (
        var_j_437 = f
    ) : (
        error_var_j_438 = check_res_b_73;
        assert_pred_j_439 = error_var_j_438;
        assert_res_j_440 = assert_pred_j_439 ? (
                assert_res_true_j_441 = {}
            ) : (
                ab_j_442 = abort
            )
    );
i_result = if_j_443