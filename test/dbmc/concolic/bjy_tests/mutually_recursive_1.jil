i_first = {};
flatten_fun_j_89 = fun f_j_0 -> (
    flatten_fun_j_88 = fun g_j_1 -> (
        flatten_fun_j_87 = fun x -> (
            var_j_17 = f_j_0;
            var_j_18 = f_j_0;
            appl_j_19 = var_j_17 var_j_18;
            var_j_20 = g_j_1;
            appl_j_21 = appl_j_19 var_j_20;
            f = appl_j_21;
            var_j_22 = g_j_1;
            var_j_23 = f_j_0;
            appl_j_24 = var_j_22 var_j_23;
            var_j_25 = g_j_1;
            appl_j_26 = appl_j_24 var_j_25;
            g = appl_j_26;
            flatten_fun_j_84 = fun x_b_0 -> (
                int_j_27 = 0;
                input_j_28 = input;
                m_bl_i_266 = int_j_27 ~ int;
                m_br_i_267 = input_j_28 ~ int;
                m_b_i_268 = m_bl_i_266 and m_br_i_267;
                binop_j_29 = m_b_i_268 ? (
                        c_binop_i_269 = int_j_27 < input_j_28
                    ) : (
                        ab_i_270 = abort
                    );
                if_j_49 = binop_j_29 ? (
                        bool_j_30 = false;
                        fail_b_8 = bool_j_30;
                        flatten_fun_j_39 = fun expr_b_7 -> (
                            var_j_31 = expr_b_7;
                            m_match_bool_j_33 = var_j_31 ~ any;
                            m_match_bool_j_36 = var_j_31 ~ int;
                            m_match_cond_j_37 = m_match_bool_j_36 ? (
                                    bool_j_38 = true
                                ) : (
                                    m_match_cond_j_34 = m_match_bool_j_33 ? (
                                            var_j_35 = fail_b_8
                                        ) : (
                                            void_j_32 = {}
                                        )
                                ));
                        flatten_fun_j_41 = fun bj_null -> (
                            input_j_40 = input);
                        flatten_fun_j_43 = fun expr_b_9 -> (
                            var_j_42 = expr_b_9);
                        record_j_44 = {checker = flatten_fun_j_39, generator = flatten_fun_j_41, wrapper = flatten_fun_j_43};
                        proj_j_45 = record_j_44.checker;
                        var_j_46 = x_b_0;
                        m_i_271 = proj_j_45 ~ fun;
                        appl_j_47 = m_i_271 ? (
                                c_appl_i_272 = proj_j_45 var_j_46
                            ) : (
                                ab_i_273 = abort
                            )
                    ) : (
                        bool_j_48 = true
                    );
                arg_check_b_1 = if_j_49;
                var_j_50 = arg_check_b_1;
                if_j_83 = var_j_50 ? (
                        bool_j_51 = false;
                        fail_b_11 = bool_j_51;
                        flatten_fun_j_60 = fun expr_b_10 -> (
                            var_j_52 = expr_b_10;
                            m_match_bool_j_54 = var_j_52 ~ any;
                            m_match_bool_j_57 = var_j_52 ~ int;
                            m_match_cond_j_58 = m_match_bool_j_57 ? (
                                    bool_j_59 = true
                                ) : (
                                    m_match_cond_j_55 = m_match_bool_j_54 ? (
                                            var_j_56 = fail_b_11
                                        ) : (
                                            void_j_53 = {}
                                        )
                                ));
                        flatten_fun_j_62 = fun bj_null_j_2 -> (
                            input_j_61 = input);
                        flatten_fun_j_64 = fun expr_b_12 -> (
                            var_j_63 = expr_b_12);
                        record_j_65 = {checker = flatten_fun_j_60, generator = flatten_fun_j_62, wrapper = flatten_fun_j_64};
                        proj_j_66 = record_j_65.wrapper;
                        var_j_67 = x;
                        int_j_68 = 0;
                        m_bl_i_274 = var_j_67 ~ int;
                        m_br_i_275 = int_j_68 ~ int;
                        m_b_i_276 = m_bl_i_274 and m_br_i_275;
                        binop_j_69 = m_b_i_276 ? (
                                c_binop_i_277 = var_j_67 == int_j_68
                            ) : (
                                ab_i_278 = abort
                            );
                        m_i_279 = binop_j_69 ~ bool;
                        if_j_76 = m_i_279 ? (
                                c_cond_i_288 = binop_j_69 ? (
                                        int_j_70 = 0
                                    ) : (
                                        var_j_71 = g;
                                        var_j_72 = x;
                                        int_j_73 = 1;
                                        m_bl_i_280 = var_j_72 ~ int;
                                        m_br_i_281 = int_j_73 ~ int;
                                        m_b_i_282 = m_bl_i_280 and m_br_i_281;
                                        binop_j_74 = m_b_i_282 ? (
                                                c_binop_i_283 = var_j_72 - int_j_73
                                            ) : (
                                                ab_i_284 = abort
                                            );
                                        m_i_285 = var_j_71 ~ fun;
                                        appl_j_75 = m_i_285 ? (
                                                c_appl_i_286 = var_j_71 binop_j_74
                                            ) : (
                                                ab_i_287 = abort
                                            )
                                    )
                            ) : (
                                ab_i_289 = abort
                            );
                        m_i_290 = proj_j_66 ~ fun;
                        appl_j_77 = m_i_290 ? (
                                c_appl_i_291 = proj_j_66 if_j_76
                            ) : (
                                ab_i_292 = abort
                            )
                    ) : (
                        var_j_78 = arg_check_b_1;
                        assert_pred_j_79 = var_j_78;
                        assert_res_j_80 = assert_pred_j_79 ? (
                                assert_res_true_j_81 = {}
                            ) : (
                                ab_j_82 = abort
                            )
                    ));
            var_j_85 = x;
            appl_j_86 = flatten_fun_j_84 var_j_85)));
flatten_fun_j_162 = fun f_j_0_j_8 -> (
    flatten_fun_j_161 = fun g_j_1_j_7 -> (
        flatten_fun_j_160 = fun y -> (
            var_j_90 = f_j_0_j_8;
            var_j_91 = f_j_0_j_8;
            appl_j_92 = var_j_90 var_j_91;
            var_j_93 = g_j_1_j_7;
            appl_j_94 = appl_j_92 var_j_93;
            f_j_6 = appl_j_94;
            var_j_95 = g_j_1_j_7;
            var_j_96 = f_j_0_j_8;
            appl_j_97 = var_j_95 var_j_96;
            var_j_98 = g_j_1_j_7;
            appl_j_99 = appl_j_97 var_j_98;
            g_j_5 = appl_j_99;
            flatten_fun_j_157 = fun y_b_2 -> (
                int_j_100 = 0;
                input_j_101 = input;
                m_bl_i_293 = int_j_100 ~ int;
                m_br_i_294 = input_j_101 ~ int;
                m_b_i_295 = m_bl_i_293 and m_br_i_294;
                binop_j_102 = m_b_i_295 ? (
                        c_binop_i_296 = int_j_100 < input_j_101
                    ) : (
                        ab_i_297 = abort
                    );
                if_j_122 = binop_j_102 ? (
                        bool_j_103 = false;
                        fail_b_20 = bool_j_103;
                        flatten_fun_j_112 = fun expr_b_19 -> (
                            var_j_104 = expr_b_19;
                            m_match_bool_j_106 = var_j_104 ~ any;
                            m_match_bool_j_109 = var_j_104 ~ int;
                            m_match_cond_j_110 = m_match_bool_j_109 ? (
                                    bool_j_111 = true
                                ) : (
                                    m_match_cond_j_107 = m_match_bool_j_106 ? (
                                            var_j_108 = fail_b_20
                                        ) : (
                                            void_j_105 = {}
                                        )
                                ));
                        flatten_fun_j_114 = fun bj_null_j_3 -> (
                            input_j_113 = input);
                        flatten_fun_j_116 = fun expr_b_21 -> (
                            var_j_115 = expr_b_21);
                        record_j_117 = {checker = flatten_fun_j_112, generator = flatten_fun_j_114, wrapper = flatten_fun_j_116};
                        proj_j_118 = record_j_117.checker;
                        var_j_119 = y_b_2;
                        m_i_298 = proj_j_118 ~ fun;
                        appl_j_120 = m_i_298 ? (
                                c_appl_i_299 = proj_j_118 var_j_119
                            ) : (
                                ab_i_300 = abort
                            )
                    ) : (
                        bool_j_121 = true
                    );
                arg_check_b_3 = if_j_122;
                var_j_123 = arg_check_b_3;
                if_j_156 = var_j_123 ? (
                        bool_j_124 = false;
                        fail_b_23 = bool_j_124;
                        flatten_fun_j_133 = fun expr_b_22 -> (
                            var_j_125 = expr_b_22;
                            m_match_bool_j_127 = var_j_125 ~ any;
                            m_match_bool_j_130 = var_j_125 ~ int;
                            m_match_cond_j_131 = m_match_bool_j_130 ? (
                                    bool_j_132 = true
                                ) : (
                                    m_match_cond_j_128 = m_match_bool_j_127 ? (
                                            var_j_129 = fail_b_23
                                        ) : (
                                            void_j_126 = {}
                                        )
                                ));
                        flatten_fun_j_135 = fun bj_null_j_4 -> (
                            input_j_134 = input);
                        flatten_fun_j_137 = fun expr_b_24 -> (
                            var_j_136 = expr_b_24);
                        record_j_138 = {checker = flatten_fun_j_133, generator = flatten_fun_j_135, wrapper = flatten_fun_j_137};
                        proj_j_139 = record_j_138.wrapper;
                        var_j_140 = y;
                        int_j_141 = 0;
                        m_bl_i_301 = var_j_140 ~ int;
                        m_br_i_302 = int_j_141 ~ int;
                        m_b_i_303 = m_bl_i_301 and m_br_i_302;
                        binop_j_142 = m_b_i_303 ? (
                                c_binop_i_304 = var_j_140 < int_j_141
                            ) : (
                                ab_i_305 = abort
                            );
                        m_i_306 = binop_j_142 ~ bool;
                        if_j_149 = m_i_306 ? (
                                c_cond_i_315 = binop_j_142 ? (
                                        bool_j_143 = false
                                    ) : (
                                        var_j_144 = f_j_6;
                                        var_j_145 = y;
                                        int_j_146 = 1;
                                        m_bl_i_307 = var_j_145 ~ int;
                                        m_br_i_308 = int_j_146 ~ int;
                                        m_b_i_309 = m_bl_i_307 and m_br_i_308;
                                        binop_j_147 = m_b_i_309 ? (
                                                c_binop_i_310 = var_j_145 - int_j_146
                                            ) : (
                                                ab_i_311 = abort
                                            );
                                        m_i_312 = var_j_144 ~ fun;
                                        appl_j_148 = m_i_312 ? (
                                                c_appl_i_313 = var_j_144 binop_j_147
                                            ) : (
                                                ab_i_314 = abort
                                            )
                                    )
                            ) : (
                                ab_i_316 = abort
                            );
                        m_i_317 = proj_j_139 ~ fun;
                        appl_j_150 = m_i_317 ? (
                                c_appl_i_318 = proj_j_139 if_j_149
                            ) : (
                                ab_i_319 = abort
                            )
                    ) : (
                        var_j_151 = arg_check_b_3;
                        assert_pred_j_152 = var_j_151;
                        assert_res_j_153 = assert_pred_j_152 ? (
                                assert_res_true_j_154 = {}
                            ) : (
                                ab_j_155 = abort
                            )
                    ));
            var_j_158 = y;
            appl_j_159 = flatten_fun_j_157 var_j_158)));
appl_j_165 = flatten_fun_j_89 flatten_fun_j_89;
appl_j_167 = appl_j_165 flatten_fun_j_162;
appl_j_170 = flatten_fun_j_162 flatten_fun_j_89;
appl_j_172 = appl_j_170 flatten_fun_j_162;
bool_j_173 = false;
fail_b_5 = bool_j_173;
flatten_fun_j_182 = fun expr_b_4 -> (
    var_j_174 = expr_b_4;
    m_match_bool_j_176 = var_j_174 ~ any;
    m_match_bool_j_179 = var_j_174 ~ int;
    m_match_cond_j_180 = m_match_bool_j_179 ? (
            bool_j_181 = true
        ) : (
            m_match_cond_j_177 = m_match_bool_j_176 ? (
                    var_j_178 = fail_b_5
                ) : (
                    void_j_175 = {}
                )
        ));
flatten_fun_j_184 = fun bj_null_j_9 -> (
    input_j_183 = input);
flatten_fun_j_186 = fun expr_b_6 -> (
    var_j_185 = expr_b_6);
record_j_187 = {checker = flatten_fun_j_182, generator = flatten_fun_j_184, wrapper = flatten_fun_j_186};
proj_j_188 = record_j_187.generator;
int_j_189 = 0;
appl_j_190 = proj_j_188 int_j_189;
x_b_31 = appl_j_190;
bool_j_191 = false;
fail_b_14 = bool_j_191;
flatten_fun_j_200 = fun expr_b_13 -> (
    var_j_192 = expr_b_13;
    m_match_bool_j_194 = var_j_192 ~ any;
    m_match_bool_j_197 = var_j_192 ~ int;
    m_match_cond_j_198 = m_match_bool_j_197 ? (
            bool_j_199 = true
        ) : (
            m_match_cond_j_195 = m_match_bool_j_194 ? (
                    var_j_196 = fail_b_14
                ) : (
                    void_j_193 = {}
                )
        ));
flatten_fun_j_202 = fun bj_null_j_10 -> (
    input_j_201 = input);
flatten_fun_j_204 = fun expr_b_15 -> (
    var_j_203 = expr_b_15);
record_j_205 = {checker = flatten_fun_j_200, generator = flatten_fun_j_202, wrapper = flatten_fun_j_204};
proj_j_206 = record_j_205.checker;
appl_j_209 = appl_j_167 x_b_31;
appl_j_210 = proj_j_206 appl_j_209;
check_res_b_30 = appl_j_210;
if_j_265 = check_res_b_30 ? (
        bool_j_212 = false;
        fail_b_17 = bool_j_212;
        flatten_fun_j_221 = fun expr_b_16 -> (
            var_j_213 = expr_b_16;
            m_match_bool_j_215 = var_j_213 ~ any;
            m_match_bool_j_218 = var_j_213 ~ int;
            m_match_cond_j_219 = m_match_bool_j_218 ? (
                    bool_j_220 = true
                ) : (
                    m_match_cond_j_216 = m_match_bool_j_215 ? (
                            var_j_217 = fail_b_17
                        ) : (
                            void_j_214 = {}
                        )
                ));
        flatten_fun_j_223 = fun bj_null_j_11 -> (
            input_j_222 = input);
        flatten_fun_j_225 = fun expr_b_18 -> (
            var_j_224 = expr_b_18);
        record_j_226 = {checker = flatten_fun_j_221, generator = flatten_fun_j_223, wrapper = flatten_fun_j_225};
        proj_j_227 = record_j_226.generator;
        int_j_228 = 0;
        appl_j_229 = proj_j_227 int_j_228;
        y_b_29 = appl_j_229;
        bool_j_230 = false;
        fail_b_26 = bool_j_230;
        flatten_fun_j_239 = fun expr_b_25 -> (
            var_j_231 = expr_b_25;
            m_match_bool_j_233 = var_j_231 ~ any;
            m_match_bool_j_236 = var_j_231 ~ int;
            m_match_cond_j_237 = m_match_bool_j_236 ? (
                    bool_j_238 = true
                ) : (
                    m_match_cond_j_234 = m_match_bool_j_233 ? (
                            var_j_235 = fail_b_26
                        ) : (
                            void_j_232 = {}
                        )
                ));
        flatten_fun_j_241 = fun bj_null_j_12 -> (
            input_j_240 = input);
        flatten_fun_j_243 = fun expr_b_27 -> (
            var_j_242 = expr_b_27);
        record_j_244 = {checker = flatten_fun_j_239, generator = flatten_fun_j_241, wrapper = flatten_fun_j_243};
        proj_j_245 = record_j_244.checker;
        var_j_246 = appl_j_172;
        var_j_247 = y_b_29;
        appl_j_248 = var_j_246 var_j_247;
        appl_j_249 = proj_j_245 appl_j_248;
        check_res_b_28 = appl_j_249;
        var_j_250 = check_res_b_28;
        if_j_259 = var_j_250 ? (
                var_j_251 = appl_j_167;
                int_j_252 = 1;
                m_i_320 = var_j_251 ~ fun;
                appl_j_253 = m_i_320 ? (
                        c_appl_i_321 = var_j_251 int_j_252
                    ) : (
                        ab_i_322 = abort
                    )
            ) : (
                error_var_j_254 = check_res_b_28;
                assert_pred_j_255 = error_var_j_254;
                assert_res_j_256 = assert_pred_j_255 ? (
                        assert_res_true_j_257 = {}
                    ) : (
                        ab_j_258 = abort
                    )
            )
    ) : (
        error_var_j_260 = check_res_b_30;
        assert_pred_j_261 = error_var_j_260;
        assert_res_j_262 = assert_pred_j_261 ? (
                assert_res_true_j_263 = {}
            ) : (
                ab_j_264 = abort
            )
    );
i_result = if_j_265